//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5420
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ts_mz_tjbb {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private 收费项目DataTable table收费项目;
        
        private 作废发票DataTable table作废发票;
        
        private 交款表DataTable table交款表;
        
        private 收费项目金额DataTable table收费项目金额;
        
        private 医保信息DataTable table医保信息;
        
        private 其它信息DataTable table其它信息;
        
        private 预收款DataTable table预收款;
        
        private pos明细DataTable tablepos明细;
        
        private 合同单位汇总DataTable table合同单位汇总;
        
        private 医保日统计_明细DataTable table医保日统计_明细;
        
        private 门诊收费员工作量DataTable table门诊收费员工作量;
        
        private 门诊医生接诊量DataTable table门诊医生接诊量;
        
        private 收费明细DataTable table收费明细;
        
        private 收费物价明细DataTable table收费物价明细;
        
        private 收费项目1DataTable table收费项目1;
        
        private 收费项目金额1DataTable table收费项目金额1;
        
        private 银医办卡统计DataTable table银医办卡统计;
        
        private 银医支付方式统计DataTable table银医支付方式统计;
        
        private 银医退卡明细DataTable table银医退卡明细;
        
        private 工商银行自助机对账统计DataTable table工商银行自助机对账统计;
        
        private _工商银行自助机对账明细统计_银行端_DataTable _table工商银行自助机对账明细统计_银行端_;
        
        private _工商银行自助机对账明细统计_医院端_DataTable _table工商银行自助机对账明细统计_医院端_;
        
        private 门诊预交金消费对账DataTable table门诊预交金消费对账;
        
        private 诊疗卡办卡明细DataTable table诊疗卡办卡明细;
        
        private 小票明细DataTable table小票明细;
        
        private TB_mzyjjDataTable tableTB_mzyjj;
        
        private 科室医保收入统计表DataTable table科室医保收入统计表;
        
        private 交款票据统计DataTable table交款票据统计;
        
        private 收费员个人交款发票统计DataTable table收费员个人交款发票统计;
        
        private 交款表优惠金额DataTable table交款表优惠金额;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["收费项目"] != null)) {
                    base.Tables.Add(new 收费项目DataTable(ds.Tables["收费项目"]));
                }
                if ((ds.Tables["作废发票"] != null)) {
                    base.Tables.Add(new 作废发票DataTable(ds.Tables["作废发票"]));
                }
                if ((ds.Tables["交款表"] != null)) {
                    base.Tables.Add(new 交款表DataTable(ds.Tables["交款表"]));
                }
                if ((ds.Tables["收费项目金额"] != null)) {
                    base.Tables.Add(new 收费项目金额DataTable(ds.Tables["收费项目金额"]));
                }
                if ((ds.Tables["医保信息"] != null)) {
                    base.Tables.Add(new 医保信息DataTable(ds.Tables["医保信息"]));
                }
                if ((ds.Tables["其它信息"] != null)) {
                    base.Tables.Add(new 其它信息DataTable(ds.Tables["其它信息"]));
                }
                if ((ds.Tables["预收款"] != null)) {
                    base.Tables.Add(new 预收款DataTable(ds.Tables["预收款"]));
                }
                if ((ds.Tables["pos明细"] != null)) {
                    base.Tables.Add(new pos明细DataTable(ds.Tables["pos明细"]));
                }
                if ((ds.Tables["合同单位汇总"] != null)) {
                    base.Tables.Add(new 合同单位汇总DataTable(ds.Tables["合同单位汇总"]));
                }
                if ((ds.Tables["医保日统计_明细"] != null)) {
                    base.Tables.Add(new 医保日统计_明细DataTable(ds.Tables["医保日统计_明细"]));
                }
                if ((ds.Tables["门诊收费员工作量"] != null)) {
                    base.Tables.Add(new 门诊收费员工作量DataTable(ds.Tables["门诊收费员工作量"]));
                }
                if ((ds.Tables["门诊医生接诊量"] != null)) {
                    base.Tables.Add(new 门诊医生接诊量DataTable(ds.Tables["门诊医生接诊量"]));
                }
                if ((ds.Tables["收费明细"] != null)) {
                    base.Tables.Add(new 收费明细DataTable(ds.Tables["收费明细"]));
                }
                if ((ds.Tables["收费物价明细"] != null)) {
                    base.Tables.Add(new 收费物价明细DataTable(ds.Tables["收费物价明细"]));
                }
                if ((ds.Tables["收费项目1"] != null)) {
                    base.Tables.Add(new 收费项目1DataTable(ds.Tables["收费项目1"]));
                }
                if ((ds.Tables["收费项目金额1"] != null)) {
                    base.Tables.Add(new 收费项目金额1DataTable(ds.Tables["收费项目金额1"]));
                }
                if ((ds.Tables["银医办卡统计"] != null)) {
                    base.Tables.Add(new 银医办卡统计DataTable(ds.Tables["银医办卡统计"]));
                }
                if ((ds.Tables["银医支付方式统计"] != null)) {
                    base.Tables.Add(new 银医支付方式统计DataTable(ds.Tables["银医支付方式统计"]));
                }
                if ((ds.Tables["银医退卡明细"] != null)) {
                    base.Tables.Add(new 银医退卡明细DataTable(ds.Tables["银医退卡明细"]));
                }
                if ((ds.Tables["工商银行自助机对账统计"] != null)) {
                    base.Tables.Add(new 工商银行自助机对账统计DataTable(ds.Tables["工商银行自助机对账统计"]));
                }
                if ((ds.Tables["工商银行自助机对账明细统计(银行端)"] != null)) {
                    base.Tables.Add(new _工商银行自助机对账明细统计_银行端_DataTable(ds.Tables["工商银行自助机对账明细统计(银行端)"]));
                }
                if ((ds.Tables["工商银行自助机对账明细统计(医院端)"] != null)) {
                    base.Tables.Add(new _工商银行自助机对账明细统计_医院端_DataTable(ds.Tables["工商银行自助机对账明细统计(医院端)"]));
                }
                if ((ds.Tables["门诊预交金消费对账"] != null)) {
                    base.Tables.Add(new 门诊预交金消费对账DataTable(ds.Tables["门诊预交金消费对账"]));
                }
                if ((ds.Tables["诊疗卡办卡明细"] != null)) {
                    base.Tables.Add(new 诊疗卡办卡明细DataTable(ds.Tables["诊疗卡办卡明细"]));
                }
                if ((ds.Tables["小票明细"] != null)) {
                    base.Tables.Add(new 小票明细DataTable(ds.Tables["小票明细"]));
                }
                if ((ds.Tables["TB_mzyjj"] != null)) {
                    base.Tables.Add(new TB_mzyjjDataTable(ds.Tables["TB_mzyjj"]));
                }
                if ((ds.Tables["科室医保收入统计表"] != null)) {
                    base.Tables.Add(new 科室医保收入统计表DataTable(ds.Tables["科室医保收入统计表"]));
                }
                if ((ds.Tables["交款票据统计"] != null)) {
                    base.Tables.Add(new 交款票据统计DataTable(ds.Tables["交款票据统计"]));
                }
                if ((ds.Tables["收费员个人交款发票统计"] != null)) {
                    base.Tables.Add(new 收费员个人交款发票统计DataTable(ds.Tables["收费员个人交款发票统计"]));
                }
                if ((ds.Tables["交款表优惠金额"] != null)) {
                    base.Tables.Add(new 交款表优惠金额DataTable(ds.Tables["交款表优惠金额"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 收费项目DataTable 收费项目 {
            get {
                return this.table收费项目;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 作废发票DataTable 作废发票 {
            get {
                return this.table作废发票;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 交款表DataTable 交款表 {
            get {
                return this.table交款表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 收费项目金额DataTable 收费项目金额 {
            get {
                return this.table收费项目金额;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 医保信息DataTable 医保信息 {
            get {
                return this.table医保信息;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 其它信息DataTable 其它信息 {
            get {
                return this.table其它信息;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 预收款DataTable 预收款 {
            get {
                return this.table预收款;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public pos明细DataTable pos明细 {
            get {
                return this.tablepos明细;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 合同单位汇总DataTable 合同单位汇总 {
            get {
                return this.table合同单位汇总;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 医保日统计_明细DataTable 医保日统计_明细 {
            get {
                return this.table医保日统计_明细;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 门诊收费员工作量DataTable 门诊收费员工作量 {
            get {
                return this.table门诊收费员工作量;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 门诊医生接诊量DataTable 门诊医生接诊量 {
            get {
                return this.table门诊医生接诊量;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 收费明细DataTable 收费明细 {
            get {
                return this.table收费明细;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 收费物价明细DataTable 收费物价明细 {
            get {
                return this.table收费物价明细;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 收费项目1DataTable 收费项目1 {
            get {
                return this.table收费项目1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 收费项目金额1DataTable 收费项目金额1 {
            get {
                return this.table收费项目金额1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 银医办卡统计DataTable 银医办卡统计 {
            get {
                return this.table银医办卡统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 银医支付方式统计DataTable 银医支付方式统计 {
            get {
                return this.table银医支付方式统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 银医退卡明细DataTable 银医退卡明细 {
            get {
                return this.table银医退卡明细;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 工商银行自助机对账统计DataTable 工商银行自助机对账统计 {
            get {
                return this.table工商银行自助机对账统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _工商银行自助机对账明细统计_银行端_DataTable _工商银行自助机对账明细统计_银行端_ {
            get {
                return this._table工商银行自助机对账明细统计_银行端_;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _工商银行自助机对账明细统计_医院端_DataTable _工商银行自助机对账明细统计_医院端_ {
            get {
                return this._table工商银行自助机对账明细统计_医院端_;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 门诊预交金消费对账DataTable 门诊预交金消费对账 {
            get {
                return this.table门诊预交金消费对账;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 诊疗卡办卡明细DataTable 诊疗卡办卡明细 {
            get {
                return this.table诊疗卡办卡明细;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 小票明细DataTable 小票明细 {
            get {
                return this.table小票明细;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TB_mzyjjDataTable TB_mzyjj {
            get {
                return this.tableTB_mzyjj;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 科室医保收入统计表DataTable 科室医保收入统计表 {
            get {
                return this.table科室医保收入统计表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 交款票据统计DataTable 交款票据统计 {
            get {
                return this.table交款票据统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 收费员个人交款发票统计DataTable 收费员个人交款发票统计 {
            get {
                return this.table收费员个人交款发票统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 交款表优惠金额DataTable 交款表优惠金额 {
            get {
                return this.table交款表优惠金额;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["收费项目"] != null)) {
                    base.Tables.Add(new 收费项目DataTable(ds.Tables["收费项目"]));
                }
                if ((ds.Tables["作废发票"] != null)) {
                    base.Tables.Add(new 作废发票DataTable(ds.Tables["作废发票"]));
                }
                if ((ds.Tables["交款表"] != null)) {
                    base.Tables.Add(new 交款表DataTable(ds.Tables["交款表"]));
                }
                if ((ds.Tables["收费项目金额"] != null)) {
                    base.Tables.Add(new 收费项目金额DataTable(ds.Tables["收费项目金额"]));
                }
                if ((ds.Tables["医保信息"] != null)) {
                    base.Tables.Add(new 医保信息DataTable(ds.Tables["医保信息"]));
                }
                if ((ds.Tables["其它信息"] != null)) {
                    base.Tables.Add(new 其它信息DataTable(ds.Tables["其它信息"]));
                }
                if ((ds.Tables["预收款"] != null)) {
                    base.Tables.Add(new 预收款DataTable(ds.Tables["预收款"]));
                }
                if ((ds.Tables["pos明细"] != null)) {
                    base.Tables.Add(new pos明细DataTable(ds.Tables["pos明细"]));
                }
                if ((ds.Tables["合同单位汇总"] != null)) {
                    base.Tables.Add(new 合同单位汇总DataTable(ds.Tables["合同单位汇总"]));
                }
                if ((ds.Tables["医保日统计_明细"] != null)) {
                    base.Tables.Add(new 医保日统计_明细DataTable(ds.Tables["医保日统计_明细"]));
                }
                if ((ds.Tables["门诊收费员工作量"] != null)) {
                    base.Tables.Add(new 门诊收费员工作量DataTable(ds.Tables["门诊收费员工作量"]));
                }
                if ((ds.Tables["门诊医生接诊量"] != null)) {
                    base.Tables.Add(new 门诊医生接诊量DataTable(ds.Tables["门诊医生接诊量"]));
                }
                if ((ds.Tables["收费明细"] != null)) {
                    base.Tables.Add(new 收费明细DataTable(ds.Tables["收费明细"]));
                }
                if ((ds.Tables["收费物价明细"] != null)) {
                    base.Tables.Add(new 收费物价明细DataTable(ds.Tables["收费物价明细"]));
                }
                if ((ds.Tables["收费项目1"] != null)) {
                    base.Tables.Add(new 收费项目1DataTable(ds.Tables["收费项目1"]));
                }
                if ((ds.Tables["收费项目金额1"] != null)) {
                    base.Tables.Add(new 收费项目金额1DataTable(ds.Tables["收费项目金额1"]));
                }
                if ((ds.Tables["银医办卡统计"] != null)) {
                    base.Tables.Add(new 银医办卡统计DataTable(ds.Tables["银医办卡统计"]));
                }
                if ((ds.Tables["银医支付方式统计"] != null)) {
                    base.Tables.Add(new 银医支付方式统计DataTable(ds.Tables["银医支付方式统计"]));
                }
                if ((ds.Tables["银医退卡明细"] != null)) {
                    base.Tables.Add(new 银医退卡明细DataTable(ds.Tables["银医退卡明细"]));
                }
                if ((ds.Tables["工商银行自助机对账统计"] != null)) {
                    base.Tables.Add(new 工商银行自助机对账统计DataTable(ds.Tables["工商银行自助机对账统计"]));
                }
                if ((ds.Tables["工商银行自助机对账明细统计(银行端)"] != null)) {
                    base.Tables.Add(new _工商银行自助机对账明细统计_银行端_DataTable(ds.Tables["工商银行自助机对账明细统计(银行端)"]));
                }
                if ((ds.Tables["工商银行自助机对账明细统计(医院端)"] != null)) {
                    base.Tables.Add(new _工商银行自助机对账明细统计_医院端_DataTable(ds.Tables["工商银行自助机对账明细统计(医院端)"]));
                }
                if ((ds.Tables["门诊预交金消费对账"] != null)) {
                    base.Tables.Add(new 门诊预交金消费对账DataTable(ds.Tables["门诊预交金消费对账"]));
                }
                if ((ds.Tables["诊疗卡办卡明细"] != null)) {
                    base.Tables.Add(new 诊疗卡办卡明细DataTable(ds.Tables["诊疗卡办卡明细"]));
                }
                if ((ds.Tables["小票明细"] != null)) {
                    base.Tables.Add(new 小票明细DataTable(ds.Tables["小票明细"]));
                }
                if ((ds.Tables["TB_mzyjj"] != null)) {
                    base.Tables.Add(new TB_mzyjjDataTable(ds.Tables["TB_mzyjj"]));
                }
                if ((ds.Tables["科室医保收入统计表"] != null)) {
                    base.Tables.Add(new 科室医保收入统计表DataTable(ds.Tables["科室医保收入统计表"]));
                }
                if ((ds.Tables["交款票据统计"] != null)) {
                    base.Tables.Add(new 交款票据统计DataTable(ds.Tables["交款票据统计"]));
                }
                if ((ds.Tables["收费员个人交款发票统计"] != null)) {
                    base.Tables.Add(new 收费员个人交款发票统计DataTable(ds.Tables["收费员个人交款发票统计"]));
                }
                if ((ds.Tables["交款表优惠金额"] != null)) {
                    base.Tables.Add(new 交款表优惠金额DataTable(ds.Tables["交款表优惠金额"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table收费项目 = ((收费项目DataTable)(base.Tables["收费项目"]));
            if ((initTable == true)) {
                if ((this.table收费项目 != null)) {
                    this.table收费项目.InitVars();
                }
            }
            this.table作废发票 = ((作废发票DataTable)(base.Tables["作废发票"]));
            if ((initTable == true)) {
                if ((this.table作废发票 != null)) {
                    this.table作废发票.InitVars();
                }
            }
            this.table交款表 = ((交款表DataTable)(base.Tables["交款表"]));
            if ((initTable == true)) {
                if ((this.table交款表 != null)) {
                    this.table交款表.InitVars();
                }
            }
            this.table收费项目金额 = ((收费项目金额DataTable)(base.Tables["收费项目金额"]));
            if ((initTable == true)) {
                if ((this.table收费项目金额 != null)) {
                    this.table收费项目金额.InitVars();
                }
            }
            this.table医保信息 = ((医保信息DataTable)(base.Tables["医保信息"]));
            if ((initTable == true)) {
                if ((this.table医保信息 != null)) {
                    this.table医保信息.InitVars();
                }
            }
            this.table其它信息 = ((其它信息DataTable)(base.Tables["其它信息"]));
            if ((initTable == true)) {
                if ((this.table其它信息 != null)) {
                    this.table其它信息.InitVars();
                }
            }
            this.table预收款 = ((预收款DataTable)(base.Tables["预收款"]));
            if ((initTable == true)) {
                if ((this.table预收款 != null)) {
                    this.table预收款.InitVars();
                }
            }
            this.tablepos明细 = ((pos明细DataTable)(base.Tables["pos明细"]));
            if ((initTable == true)) {
                if ((this.tablepos明细 != null)) {
                    this.tablepos明细.InitVars();
                }
            }
            this.table合同单位汇总 = ((合同单位汇总DataTable)(base.Tables["合同单位汇总"]));
            if ((initTable == true)) {
                if ((this.table合同单位汇总 != null)) {
                    this.table合同单位汇总.InitVars();
                }
            }
            this.table医保日统计_明细 = ((医保日统计_明细DataTable)(base.Tables["医保日统计_明细"]));
            if ((initTable == true)) {
                if ((this.table医保日统计_明细 != null)) {
                    this.table医保日统计_明细.InitVars();
                }
            }
            this.table门诊收费员工作量 = ((门诊收费员工作量DataTable)(base.Tables["门诊收费员工作量"]));
            if ((initTable == true)) {
                if ((this.table门诊收费员工作量 != null)) {
                    this.table门诊收费员工作量.InitVars();
                }
            }
            this.table门诊医生接诊量 = ((门诊医生接诊量DataTable)(base.Tables["门诊医生接诊量"]));
            if ((initTable == true)) {
                if ((this.table门诊医生接诊量 != null)) {
                    this.table门诊医生接诊量.InitVars();
                }
            }
            this.table收费明细 = ((收费明细DataTable)(base.Tables["收费明细"]));
            if ((initTable == true)) {
                if ((this.table收费明细 != null)) {
                    this.table收费明细.InitVars();
                }
            }
            this.table收费物价明细 = ((收费物价明细DataTable)(base.Tables["收费物价明细"]));
            if ((initTable == true)) {
                if ((this.table收费物价明细 != null)) {
                    this.table收费物价明细.InitVars();
                }
            }
            this.table收费项目1 = ((收费项目1DataTable)(base.Tables["收费项目1"]));
            if ((initTable == true)) {
                if ((this.table收费项目1 != null)) {
                    this.table收费项目1.InitVars();
                }
            }
            this.table收费项目金额1 = ((收费项目金额1DataTable)(base.Tables["收费项目金额1"]));
            if ((initTable == true)) {
                if ((this.table收费项目金额1 != null)) {
                    this.table收费项目金额1.InitVars();
                }
            }
            this.table银医办卡统计 = ((银医办卡统计DataTable)(base.Tables["银医办卡统计"]));
            if ((initTable == true)) {
                if ((this.table银医办卡统计 != null)) {
                    this.table银医办卡统计.InitVars();
                }
            }
            this.table银医支付方式统计 = ((银医支付方式统计DataTable)(base.Tables["银医支付方式统计"]));
            if ((initTable == true)) {
                if ((this.table银医支付方式统计 != null)) {
                    this.table银医支付方式统计.InitVars();
                }
            }
            this.table银医退卡明细 = ((银医退卡明细DataTable)(base.Tables["银医退卡明细"]));
            if ((initTable == true)) {
                if ((this.table银医退卡明细 != null)) {
                    this.table银医退卡明细.InitVars();
                }
            }
            this.table工商银行自助机对账统计 = ((工商银行自助机对账统计DataTable)(base.Tables["工商银行自助机对账统计"]));
            if ((initTable == true)) {
                if ((this.table工商银行自助机对账统计 != null)) {
                    this.table工商银行自助机对账统计.InitVars();
                }
            }
            this._table工商银行自助机对账明细统计_银行端_ = ((_工商银行自助机对账明细统计_银行端_DataTable)(base.Tables["工商银行自助机对账明细统计(银行端)"]));
            if ((initTable == true)) {
                if ((this._table工商银行自助机对账明细统计_银行端_ != null)) {
                    this._table工商银行自助机对账明细统计_银行端_.InitVars();
                }
            }
            this._table工商银行自助机对账明细统计_医院端_ = ((_工商银行自助机对账明细统计_医院端_DataTable)(base.Tables["工商银行自助机对账明细统计(医院端)"]));
            if ((initTable == true)) {
                if ((this._table工商银行自助机对账明细统计_医院端_ != null)) {
                    this._table工商银行自助机对账明细统计_医院端_.InitVars();
                }
            }
            this.table门诊预交金消费对账 = ((门诊预交金消费对账DataTable)(base.Tables["门诊预交金消费对账"]));
            if ((initTable == true)) {
                if ((this.table门诊预交金消费对账 != null)) {
                    this.table门诊预交金消费对账.InitVars();
                }
            }
            this.table诊疗卡办卡明细 = ((诊疗卡办卡明细DataTable)(base.Tables["诊疗卡办卡明细"]));
            if ((initTable == true)) {
                if ((this.table诊疗卡办卡明细 != null)) {
                    this.table诊疗卡办卡明细.InitVars();
                }
            }
            this.table小票明细 = ((小票明细DataTable)(base.Tables["小票明细"]));
            if ((initTable == true)) {
                if ((this.table小票明细 != null)) {
                    this.table小票明细.InitVars();
                }
            }
            this.tableTB_mzyjj = ((TB_mzyjjDataTable)(base.Tables["TB_mzyjj"]));
            if ((initTable == true)) {
                if ((this.tableTB_mzyjj != null)) {
                    this.tableTB_mzyjj.InitVars();
                }
            }
            this.table科室医保收入统计表 = ((科室医保收入统计表DataTable)(base.Tables["科室医保收入统计表"]));
            if ((initTable == true)) {
                if ((this.table科室医保收入统计表 != null)) {
                    this.table科室医保收入统计表.InitVars();
                }
            }
            this.table交款票据统计 = ((交款票据统计DataTable)(base.Tables["交款票据统计"]));
            if ((initTable == true)) {
                if ((this.table交款票据统计 != null)) {
                    this.table交款票据统计.InitVars();
                }
            }
            this.table收费员个人交款发票统计 = ((收费员个人交款发票统计DataTable)(base.Tables["收费员个人交款发票统计"]));
            if ((initTable == true)) {
                if ((this.table收费员个人交款发票统计 != null)) {
                    this.table收费员个人交款发票统计.InitVars();
                }
            }
            this.table交款表优惠金额 = ((交款表优惠金额DataTable)(base.Tables["交款表优惠金额"]));
            if ((initTable == true)) {
                if ((this.table交款表优惠金额 != null)) {
                    this.table交款表优惠金额.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table收费项目 = new 收费项目DataTable();
            base.Tables.Add(this.table收费项目);
            this.table作废发票 = new 作废发票DataTable();
            base.Tables.Add(this.table作废发票);
            this.table交款表 = new 交款表DataTable();
            base.Tables.Add(this.table交款表);
            this.table收费项目金额 = new 收费项目金额DataTable();
            base.Tables.Add(this.table收费项目金额);
            this.table医保信息 = new 医保信息DataTable();
            base.Tables.Add(this.table医保信息);
            this.table其它信息 = new 其它信息DataTable();
            base.Tables.Add(this.table其它信息);
            this.table预收款 = new 预收款DataTable();
            base.Tables.Add(this.table预收款);
            this.tablepos明细 = new pos明细DataTable();
            base.Tables.Add(this.tablepos明细);
            this.table合同单位汇总 = new 合同单位汇总DataTable();
            base.Tables.Add(this.table合同单位汇总);
            this.table医保日统计_明细 = new 医保日统计_明细DataTable();
            base.Tables.Add(this.table医保日统计_明细);
            this.table门诊收费员工作量 = new 门诊收费员工作量DataTable();
            base.Tables.Add(this.table门诊收费员工作量);
            this.table门诊医生接诊量 = new 门诊医生接诊量DataTable();
            base.Tables.Add(this.table门诊医生接诊量);
            this.table收费明细 = new 收费明细DataTable();
            base.Tables.Add(this.table收费明细);
            this.table收费物价明细 = new 收费物价明细DataTable();
            base.Tables.Add(this.table收费物价明细);
            this.table收费项目1 = new 收费项目1DataTable();
            base.Tables.Add(this.table收费项目1);
            this.table收费项目金额1 = new 收费项目金额1DataTable();
            base.Tables.Add(this.table收费项目金额1);
            this.table银医办卡统计 = new 银医办卡统计DataTable();
            base.Tables.Add(this.table银医办卡统计);
            this.table银医支付方式统计 = new 银医支付方式统计DataTable();
            base.Tables.Add(this.table银医支付方式统计);
            this.table银医退卡明细 = new 银医退卡明细DataTable();
            base.Tables.Add(this.table银医退卡明细);
            this.table工商银行自助机对账统计 = new 工商银行自助机对账统计DataTable();
            base.Tables.Add(this.table工商银行自助机对账统计);
            this._table工商银行自助机对账明细统计_银行端_ = new _工商银行自助机对账明细统计_银行端_DataTable();
            base.Tables.Add(this._table工商银行自助机对账明细统计_银行端_);
            this._table工商银行自助机对账明细统计_医院端_ = new _工商银行自助机对账明细统计_医院端_DataTable();
            base.Tables.Add(this._table工商银行自助机对账明细统计_医院端_);
            this.table门诊预交金消费对账 = new 门诊预交金消费对账DataTable();
            base.Tables.Add(this.table门诊预交金消费对账);
            this.table诊疗卡办卡明细 = new 诊疗卡办卡明细DataTable();
            base.Tables.Add(this.table诊疗卡办卡明细);
            this.table小票明细 = new 小票明细DataTable();
            base.Tables.Add(this.table小票明细);
            this.tableTB_mzyjj = new TB_mzyjjDataTable();
            base.Tables.Add(this.tableTB_mzyjj);
            this.table科室医保收入统计表 = new 科室医保收入统计表DataTable();
            base.Tables.Add(this.table科室医保收入统计表);
            this.table交款票据统计 = new 交款票据统计DataTable();
            base.Tables.Add(this.table交款票据统计);
            this.table收费员个人交款发票统计 = new 收费员个人交款发票统计DataTable();
            base.Tables.Add(this.table收费员个人交款发票统计);
            this.table交款表优惠金额 = new 交款表优惠金额DataTable();
            base.Tables.Add(this.table交款表优惠金额);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize收费项目() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize作废发票() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize交款表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize收费项目金额() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize医保信息() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize其它信息() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize预收款() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepos明细() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize合同单位汇总() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize医保日统计_明细() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize门诊收费员工作量() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize门诊医生接诊量() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize收费明细() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize收费物价明细() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize收费项目1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize收费项目金额1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize银医办卡统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize银医支付方式统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize银医退卡明细() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize工商银行自助机对账统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_工商银行自助机对账明细统计_银行端_() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_工商银行自助机对账明细统计_医院端_() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize门诊预交金消费对账() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize诊疗卡办卡明细() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize小票明细() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTB_mzyjj() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize科室医保收入统计表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize交款票据统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize收费员个人交款发票统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize交款表优惠金额() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void 收费项目RowChangeEventHandler(object sender, 收费项目RowChangeEvent e);
        
        public delegate void 作废发票RowChangeEventHandler(object sender, 作废发票RowChangeEvent e);
        
        public delegate void 交款表RowChangeEventHandler(object sender, 交款表RowChangeEvent e);
        
        public delegate void 收费项目金额RowChangeEventHandler(object sender, 收费项目金额RowChangeEvent e);
        
        public delegate void 医保信息RowChangeEventHandler(object sender, 医保信息RowChangeEvent e);
        
        public delegate void 其它信息RowChangeEventHandler(object sender, 其它信息RowChangeEvent e);
        
        public delegate void 预收款RowChangeEventHandler(object sender, 预收款RowChangeEvent e);
        
        public delegate void pos明细RowChangeEventHandler(object sender, pos明细RowChangeEvent e);
        
        public delegate void 合同单位汇总RowChangeEventHandler(object sender, 合同单位汇总RowChangeEvent e);
        
        public delegate void 医保日统计_明细RowChangeEventHandler(object sender, 医保日统计_明细RowChangeEvent e);
        
        public delegate void 门诊收费员工作量RowChangeEventHandler(object sender, 门诊收费员工作量RowChangeEvent e);
        
        public delegate void 门诊医生接诊量RowChangeEventHandler(object sender, 门诊医生接诊量RowChangeEvent e);
        
        public delegate void 收费明细RowChangeEventHandler(object sender, 收费明细RowChangeEvent e);
        
        public delegate void 收费物价明细RowChangeEventHandler(object sender, 收费物价明细RowChangeEvent e);
        
        public delegate void 收费项目1RowChangeEventHandler(object sender, 收费项目1RowChangeEvent e);
        
        public delegate void 收费项目金额1RowChangeEventHandler(object sender, 收费项目金额1RowChangeEvent e);
        
        public delegate void 银医办卡统计RowChangeEventHandler(object sender, 银医办卡统计RowChangeEvent e);
        
        public delegate void 银医支付方式统计RowChangeEventHandler(object sender, 银医支付方式统计RowChangeEvent e);
        
        public delegate void 银医退卡明细RowChangeEventHandler(object sender, 银医退卡明细RowChangeEvent e);
        
        public delegate void 工商银行自助机对账统计RowChangeEventHandler(object sender, 工商银行自助机对账统计RowChangeEvent e);
        
        public delegate void _工商银行自助机对账明细统计_银行端_RowChangeEventHandler(object sender, _工商银行自助机对账明细统计_银行端_RowChangeEvent e);
        
        public delegate void _工商银行自助机对账明细统计_医院端_RowChangeEventHandler(object sender, _工商银行自助机对账明细统计_医院端_RowChangeEvent e);
        
        public delegate void 门诊预交金消费对账RowChangeEventHandler(object sender, 门诊预交金消费对账RowChangeEvent e);
        
        public delegate void 诊疗卡办卡明细RowChangeEventHandler(object sender, 诊疗卡办卡明细RowChangeEvent e);
        
        public delegate void 小票明细RowChangeEventHandler(object sender, 小票明细RowChangeEvent e);
        
        public delegate void TB_mzyjjRowChangeEventHandler(object sender, TB_mzyjjRowChangeEvent e);
        
        public delegate void 科室医保收入统计表RowChangeEventHandler(object sender, 科室医保收入统计表RowChangeEvent e);
        
        public delegate void 交款票据统计RowChangeEventHandler(object sender, 交款票据统计RowChangeEvent e);
        
        public delegate void 收费员个人交款发票统计RowChangeEventHandler(object sender, 收费员个人交款发票统计RowChangeEvent e);
        
        public delegate void 交款表优惠金额RowChangeEventHandler(object sender, 交款表优惠金额RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 收费项目DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnT24;
            
            private global::System.Data.DataColumn columnT23;
            
            private global::System.Data.DataColumn columnT22;
            
            private global::System.Data.DataColumn columnT21;
            
            private global::System.Data.DataColumn columnT20;
            
            private global::System.Data.DataColumn columnT19;
            
            private global::System.Data.DataColumn columnT18;
            
            private global::System.Data.DataColumn columnT17;
            
            private global::System.Data.DataColumn columnT16;
            
            private global::System.Data.DataColumn columnT15;
            
            private global::System.Data.DataColumn columnT14;
            
            private global::System.Data.DataColumn columnT13;
            
            private global::System.Data.DataColumn columnT12;
            
            private global::System.Data.DataColumn columnT11;
            
            private global::System.Data.DataColumn columnT10;
            
            private global::System.Data.DataColumn columnT9;
            
            private global::System.Data.DataColumn columnT8;
            
            private global::System.Data.DataColumn columnT7;
            
            private global::System.Data.DataColumn columnT6;
            
            private global::System.Data.DataColumn columnT5;
            
            private global::System.Data.DataColumn columnT1;
            
            private global::System.Data.DataColumn columnT2;
            
            private global::System.Data.DataColumn columnT3;
            
            private global::System.Data.DataColumn columnT4;
            
            private global::System.Data.DataColumn columnT33;
            
            private global::System.Data.DataColumn columnT34;
            
            private global::System.Data.DataColumn columnT35;
            
            private global::System.Data.DataColumn columnT36;
            
            private global::System.Data.DataColumn columnT37;
            
            private global::System.Data.DataColumn columnT38;
            
            private global::System.Data.DataColumn columnT39;
            
            private global::System.Data.DataColumn columnT40;
            
            private global::System.Data.DataColumn columnT25;
            
            private global::System.Data.DataColumn columnT26;
            
            private global::System.Data.DataColumn columnT27;
            
            private global::System.Data.DataColumn columnT28;
            
            private global::System.Data.DataColumn columnT29;
            
            private global::System.Data.DataColumn columnT30;
            
            private global::System.Data.DataColumn columnT31;
            
            private global::System.Data.DataColumn columnT32;
            
            private global::System.Data.DataColumn columnT41;
            
            private global::System.Data.DataColumn columnT42;
            
            private global::System.Data.DataColumn columnT43;
            
            private global::System.Data.DataColumn columnT44;
            
            private global::System.Data.DataColumn columnT45;
            
            private global::System.Data.DataColumn columnT46;
            
            private global::System.Data.DataColumn columnT47;
            
            private global::System.Data.DataColumn columnT48;
            
            private global::System.Data.DataColumn columnT49;
            
            private global::System.Data.DataColumn columnT50;
            
            private global::System.Data.DataColumn columnT51;
            
            private global::System.Data.DataColumn columnT52;
            
            private global::System.Data.DataColumn columnT53;
            
            private global::System.Data.DataColumn columnT54;
            
            private global::System.Data.DataColumn columnT55;
            
            private global::System.Data.DataColumn columnT56;
            
            private global::System.Data.DataColumn columnT57;
            
            private global::System.Data.DataColumn columnT58;
            
            private global::System.Data.DataColumn columnT59;
            
            private global::System.Data.DataColumn columnT60;
            
            private global::System.Data.DataColumn columnT61;
            
            private global::System.Data.DataColumn columnT62;
            
            private global::System.Data.DataColumn columnT63;
            
            private global::System.Data.DataColumn columnT64;
            
            private global::System.Data.DataColumn columnT65;
            
            private global::System.Data.DataColumn columnT66;
            
            private global::System.Data.DataColumn columnT67;
            
            private global::System.Data.DataColumn columnT68;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目DataTable() {
                this.TableName = "收费项目";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费项目DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 收费项目DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T24Column {
                get {
                    return this.columnT24;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T23Column {
                get {
                    return this.columnT23;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T22Column {
                get {
                    return this.columnT22;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T21Column {
                get {
                    return this.columnT21;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T20Column {
                get {
                    return this.columnT20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T19Column {
                get {
                    return this.columnT19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T18Column {
                get {
                    return this.columnT18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T17Column {
                get {
                    return this.columnT17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T16Column {
                get {
                    return this.columnT16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T15Column {
                get {
                    return this.columnT15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T14Column {
                get {
                    return this.columnT14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T13Column {
                get {
                    return this.columnT13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T12Column {
                get {
                    return this.columnT12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T11Column {
                get {
                    return this.columnT11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T10Column {
                get {
                    return this.columnT10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T9Column {
                get {
                    return this.columnT9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T8Column {
                get {
                    return this.columnT8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T7Column {
                get {
                    return this.columnT7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T6Column {
                get {
                    return this.columnT6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T5Column {
                get {
                    return this.columnT5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T1Column {
                get {
                    return this.columnT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T2Column {
                get {
                    return this.columnT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T3Column {
                get {
                    return this.columnT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T4Column {
                get {
                    return this.columnT4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T33Column {
                get {
                    return this.columnT33;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T34Column {
                get {
                    return this.columnT34;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T35Column {
                get {
                    return this.columnT35;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T36Column {
                get {
                    return this.columnT36;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T37Column {
                get {
                    return this.columnT37;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T38Column {
                get {
                    return this.columnT38;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T39Column {
                get {
                    return this.columnT39;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T40Column {
                get {
                    return this.columnT40;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T25Column {
                get {
                    return this.columnT25;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T26Column {
                get {
                    return this.columnT26;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T27Column {
                get {
                    return this.columnT27;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T28Column {
                get {
                    return this.columnT28;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T29Column {
                get {
                    return this.columnT29;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T30Column {
                get {
                    return this.columnT30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T31Column {
                get {
                    return this.columnT31;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T32Column {
                get {
                    return this.columnT32;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T41Column {
                get {
                    return this.columnT41;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T42Column {
                get {
                    return this.columnT42;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T43Column {
                get {
                    return this.columnT43;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T44Column {
                get {
                    return this.columnT44;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T45Column {
                get {
                    return this.columnT45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T46Column {
                get {
                    return this.columnT46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T47Column {
                get {
                    return this.columnT47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T48Column {
                get {
                    return this.columnT48;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T49Column {
                get {
                    return this.columnT49;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T50Column {
                get {
                    return this.columnT50;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T51Column {
                get {
                    return this.columnT51;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T52Column {
                get {
                    return this.columnT52;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T53Column {
                get {
                    return this.columnT53;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T54Column {
                get {
                    return this.columnT54;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T55Column {
                get {
                    return this.columnT55;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T56Column {
                get {
                    return this.columnT56;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T57Column {
                get {
                    return this.columnT57;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T58Column {
                get {
                    return this.columnT58;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T59Column {
                get {
                    return this.columnT59;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T60Column {
                get {
                    return this.columnT60;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T61Column {
                get {
                    return this.columnT61;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T62Column {
                get {
                    return this.columnT62;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T63Column {
                get {
                    return this.columnT63;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T64Column {
                get {
                    return this.columnT64;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T65Column {
                get {
                    return this.columnT65;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T66Column {
                get {
                    return this.columnT66;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T67Column {
                get {
                    return this.columnT67;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T68Column {
                get {
                    return this.columnT68;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目Row this[int index] {
                get {
                    return ((收费项目Row)(this.Rows[index]));
                }
            }
            
            public event 收费项目RowChangeEventHandler 收费项目RowChanging;
            
            public event 收费项目RowChangeEventHandler 收费项目RowChanged;
            
            public event 收费项目RowChangeEventHandler 收费项目RowDeleting;
            
            public event 收费项目RowChangeEventHandler 收费项目RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add收费项目Row(收费项目Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目Row Add收费项目Row(
                        string T24, 
                        string T23, 
                        string T22, 
                        string T21, 
                        string T20, 
                        string T19, 
                        string T18, 
                        string T17, 
                        string T16, 
                        string T15, 
                        string T14, 
                        string T13, 
                        string T12, 
                        string T11, 
                        string T10, 
                        string T9, 
                        string T8, 
                        string T7, 
                        string T6, 
                        string T5, 
                        string T1, 
                        string T2, 
                        string T3, 
                        string T4, 
                        string T33, 
                        string T34, 
                        string T35, 
                        string T36, 
                        string T37, 
                        string T38, 
                        string T39, 
                        string T40, 
                        string T25, 
                        string T26, 
                        string T27, 
                        string T28, 
                        string T29, 
                        string T30, 
                        string T31, 
                        string T32, 
                        string T41, 
                        string T42, 
                        string T43, 
                        string T44, 
                        string T45, 
                        string T46, 
                        string T47, 
                        string T48, 
                        string T49, 
                        string T50, 
                        string T51, 
                        string T52, 
                        string T53, 
                        string T54, 
                        string T55, 
                        string T56, 
                        string T57, 
                        string T58, 
                        string T59, 
                        string T60, 
                        string T61, 
                        string T62, 
                        string T63, 
                        string T64, 
                        string T65, 
                        string T66, 
                        string T67, 
                        string T68) {
                收费项目Row row收费项目Row = ((收费项目Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        T24,
                        T23,
                        T22,
                        T21,
                        T20,
                        T19,
                        T18,
                        T17,
                        T16,
                        T15,
                        T14,
                        T13,
                        T12,
                        T11,
                        T10,
                        T9,
                        T8,
                        T7,
                        T6,
                        T5,
                        T1,
                        T2,
                        T3,
                        T4,
                        T33,
                        T34,
                        T35,
                        T36,
                        T37,
                        T38,
                        T39,
                        T40,
                        T25,
                        T26,
                        T27,
                        T28,
                        T29,
                        T30,
                        T31,
                        T32,
                        T41,
                        T42,
                        T43,
                        T44,
                        T45,
                        T46,
                        T47,
                        T48,
                        T49,
                        T50,
                        T51,
                        T52,
                        T53,
                        T54,
                        T55,
                        T56,
                        T57,
                        T58,
                        T59,
                        T60,
                        T61,
                        T62,
                        T63,
                        T64,
                        T65,
                        T66,
                        T67,
                        T68};
                row收费项目Row.ItemArray = columnValuesArray;
                this.Rows.Add(row收费项目Row);
                return row收费项目Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                收费项目DataTable cln = ((收费项目DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 收费项目DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnT24 = base.Columns["T24"];
                this.columnT23 = base.Columns["T23"];
                this.columnT22 = base.Columns["T22"];
                this.columnT21 = base.Columns["T21"];
                this.columnT20 = base.Columns["T20"];
                this.columnT19 = base.Columns["T19"];
                this.columnT18 = base.Columns["T18"];
                this.columnT17 = base.Columns["T17"];
                this.columnT16 = base.Columns["T16"];
                this.columnT15 = base.Columns["T15"];
                this.columnT14 = base.Columns["T14"];
                this.columnT13 = base.Columns["T13"];
                this.columnT12 = base.Columns["T12"];
                this.columnT11 = base.Columns["T11"];
                this.columnT10 = base.Columns["T10"];
                this.columnT9 = base.Columns["T9"];
                this.columnT8 = base.Columns["T8"];
                this.columnT7 = base.Columns["T7"];
                this.columnT6 = base.Columns["T6"];
                this.columnT5 = base.Columns["T5"];
                this.columnT1 = base.Columns["T1"];
                this.columnT2 = base.Columns["T2"];
                this.columnT3 = base.Columns["T3"];
                this.columnT4 = base.Columns["T4"];
                this.columnT33 = base.Columns["T33"];
                this.columnT34 = base.Columns["T34"];
                this.columnT35 = base.Columns["T35"];
                this.columnT36 = base.Columns["T36"];
                this.columnT37 = base.Columns["T37"];
                this.columnT38 = base.Columns["T38"];
                this.columnT39 = base.Columns["T39"];
                this.columnT40 = base.Columns["T40"];
                this.columnT25 = base.Columns["T25"];
                this.columnT26 = base.Columns["T26"];
                this.columnT27 = base.Columns["T27"];
                this.columnT28 = base.Columns["T28"];
                this.columnT29 = base.Columns["T29"];
                this.columnT30 = base.Columns["T30"];
                this.columnT31 = base.Columns["T31"];
                this.columnT32 = base.Columns["T32"];
                this.columnT41 = base.Columns["T41"];
                this.columnT42 = base.Columns["T42"];
                this.columnT43 = base.Columns["T43"];
                this.columnT44 = base.Columns["T44"];
                this.columnT45 = base.Columns["T45"];
                this.columnT46 = base.Columns["T46"];
                this.columnT47 = base.Columns["T47"];
                this.columnT48 = base.Columns["T48"];
                this.columnT49 = base.Columns["T49"];
                this.columnT50 = base.Columns["T50"];
                this.columnT51 = base.Columns["T51"];
                this.columnT52 = base.Columns["T52"];
                this.columnT53 = base.Columns["T53"];
                this.columnT54 = base.Columns["T54"];
                this.columnT55 = base.Columns["T55"];
                this.columnT56 = base.Columns["T56"];
                this.columnT57 = base.Columns["T57"];
                this.columnT58 = base.Columns["T58"];
                this.columnT59 = base.Columns["T59"];
                this.columnT60 = base.Columns["T60"];
                this.columnT61 = base.Columns["T61"];
                this.columnT62 = base.Columns["T62"];
                this.columnT63 = base.Columns["T63"];
                this.columnT64 = base.Columns["T64"];
                this.columnT65 = base.Columns["T65"];
                this.columnT66 = base.Columns["T66"];
                this.columnT67 = base.Columns["T67"];
                this.columnT68 = base.Columns["T68"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnT24 = new global::System.Data.DataColumn("T24", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT24);
                this.columnT23 = new global::System.Data.DataColumn("T23", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT23);
                this.columnT22 = new global::System.Data.DataColumn("T22", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT22);
                this.columnT21 = new global::System.Data.DataColumn("T21", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT21);
                this.columnT20 = new global::System.Data.DataColumn("T20", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT20);
                this.columnT19 = new global::System.Data.DataColumn("T19", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT19);
                this.columnT18 = new global::System.Data.DataColumn("T18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT18);
                this.columnT17 = new global::System.Data.DataColumn("T17", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT17);
                this.columnT16 = new global::System.Data.DataColumn("T16", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT16);
                this.columnT15 = new global::System.Data.DataColumn("T15", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT15);
                this.columnT14 = new global::System.Data.DataColumn("T14", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT14);
                this.columnT13 = new global::System.Data.DataColumn("T13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT13);
                this.columnT12 = new global::System.Data.DataColumn("T12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT12);
                this.columnT11 = new global::System.Data.DataColumn("T11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT11);
                this.columnT10 = new global::System.Data.DataColumn("T10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT10);
                this.columnT9 = new global::System.Data.DataColumn("T9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT9);
                this.columnT8 = new global::System.Data.DataColumn("T8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT8);
                this.columnT7 = new global::System.Data.DataColumn("T7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT7);
                this.columnT6 = new global::System.Data.DataColumn("T6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT6);
                this.columnT5 = new global::System.Data.DataColumn("T5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT5);
                this.columnT1 = new global::System.Data.DataColumn("T1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT1);
                this.columnT2 = new global::System.Data.DataColumn("T2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT2);
                this.columnT3 = new global::System.Data.DataColumn("T3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT3);
                this.columnT4 = new global::System.Data.DataColumn("T4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT4);
                this.columnT33 = new global::System.Data.DataColumn("T33", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT33);
                this.columnT34 = new global::System.Data.DataColumn("T34", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT34);
                this.columnT35 = new global::System.Data.DataColumn("T35", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT35);
                this.columnT36 = new global::System.Data.DataColumn("T36", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT36);
                this.columnT37 = new global::System.Data.DataColumn("T37", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT37);
                this.columnT38 = new global::System.Data.DataColumn("T38", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT38);
                this.columnT39 = new global::System.Data.DataColumn("T39", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT39);
                this.columnT40 = new global::System.Data.DataColumn("T40", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT40);
                this.columnT25 = new global::System.Data.DataColumn("T25", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT25);
                this.columnT26 = new global::System.Data.DataColumn("T26", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT26);
                this.columnT27 = new global::System.Data.DataColumn("T27", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT27);
                this.columnT28 = new global::System.Data.DataColumn("T28", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT28);
                this.columnT29 = new global::System.Data.DataColumn("T29", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT29);
                this.columnT30 = new global::System.Data.DataColumn("T30", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT30);
                this.columnT31 = new global::System.Data.DataColumn("T31", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT31);
                this.columnT32 = new global::System.Data.DataColumn("T32", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT32);
                this.columnT41 = new global::System.Data.DataColumn("T41", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT41);
                this.columnT42 = new global::System.Data.DataColumn("T42", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT42);
                this.columnT43 = new global::System.Data.DataColumn("T43", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT43);
                this.columnT44 = new global::System.Data.DataColumn("T44", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT44);
                this.columnT45 = new global::System.Data.DataColumn("T45", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT45);
                this.columnT46 = new global::System.Data.DataColumn("T46", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT46);
                this.columnT47 = new global::System.Data.DataColumn("T47", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT47);
                this.columnT48 = new global::System.Data.DataColumn("T48", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT48);
                this.columnT49 = new global::System.Data.DataColumn("T49", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT49);
                this.columnT50 = new global::System.Data.DataColumn("T50", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT50);
                this.columnT51 = new global::System.Data.DataColumn("T51", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT51);
                this.columnT52 = new global::System.Data.DataColumn("T52", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT52);
                this.columnT53 = new global::System.Data.DataColumn("T53", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT53);
                this.columnT54 = new global::System.Data.DataColumn("T54", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT54);
                this.columnT55 = new global::System.Data.DataColumn("T55", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT55);
                this.columnT56 = new global::System.Data.DataColumn("T56", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT56);
                this.columnT57 = new global::System.Data.DataColumn("T57", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT57);
                this.columnT58 = new global::System.Data.DataColumn("T58", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT58);
                this.columnT59 = new global::System.Data.DataColumn("T59", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT59);
                this.columnT60 = new global::System.Data.DataColumn("T60", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT60);
                this.columnT61 = new global::System.Data.DataColumn("T61", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT61);
                this.columnT62 = new global::System.Data.DataColumn("T62", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT62);
                this.columnT63 = new global::System.Data.DataColumn("T63", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT63);
                this.columnT64 = new global::System.Data.DataColumn("T64", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT64);
                this.columnT65 = new global::System.Data.DataColumn("T65", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT65);
                this.columnT66 = new global::System.Data.DataColumn("T66", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT66);
                this.columnT67 = new global::System.Data.DataColumn("T67", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT67);
                this.columnT68 = new global::System.Data.DataColumn("T68", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT68);
                this.columnT24.Caption = "T1";
                this.columnT23.Caption = "T2";
                this.columnT22.Caption = "T3";
                this.columnT21.Caption = "T4";
                this.columnT20.Caption = "T1";
                this.columnT19.Caption = "T2";
                this.columnT18.Caption = "T3";
                this.columnT17.Caption = "T4";
                this.columnT16.Caption = "T1";
                this.columnT15.Caption = "T2";
                this.columnT14.Caption = "T3";
                this.columnT13.Caption = "T4";
                this.columnT12.Caption = "T1";
                this.columnT11.Caption = "T2";
                this.columnT10.Caption = "T3";
                this.columnT9.Caption = "T4";
                this.columnT8.Caption = "T1";
                this.columnT7.Caption = "T2";
                this.columnT6.Caption = "T3";
                this.columnT5.Caption = "T4";
                this.columnT33.Caption = "Column1";
                this.columnT34.Caption = "Column2";
                this.columnT35.Caption = "Column1";
                this.columnT36.Caption = "Column2";
                this.columnT37.Caption = "Column1";
                this.columnT38.Caption = "Column2";
                this.columnT39.Caption = "T31";
                this.columnT40.Caption = "T32";
                this.columnT25.Caption = "Column1";
                this.columnT26.Caption = "Column2";
                this.columnT27.Caption = "Column1";
                this.columnT28.Caption = "Column2";
                this.columnT29.Caption = "Column1";
                this.columnT30.Caption = "Column2";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目Row New收费项目Row() {
                return ((收费项目Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 收费项目Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(收费项目Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.收费项目RowChanged != null)) {
                    this.收费项目RowChanged(this, new 收费项目RowChangeEvent(((收费项目Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.收费项目RowChanging != null)) {
                    this.收费项目RowChanging(this, new 收费项目RowChangeEvent(((收费项目Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.收费项目RowDeleted != null)) {
                    this.收费项目RowDeleted(this, new 收费项目RowChangeEvent(((收费项目Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.收费项目RowDeleting != null)) {
                    this.收费项目RowDeleting(this, new 收费项目RowChangeEvent(((收费项目Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove收费项目Row(收费项目Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "收费项目DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 作废发票DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column类型;
            
            private global::System.Data.DataColumn column发票号;
            
            private global::System.Data.DataColumn column姓名;
            
            private global::System.Data.DataColumn column退费日期;
            
            private global::System.Data.DataColumn column退费员;
            
            private global::System.Data.DataColumn column发票金额;
            
            private global::System.Data.DataColumn column序号;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 作废发票DataTable() {
                this.TableName = "作废发票";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 作废发票DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 作废发票DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 类型Column {
                get {
                    return this.column类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发票号Column {
                get {
                    return this.column发票号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退费日期Column {
                get {
                    return this.column退费日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退费员Column {
                get {
                    return this.column退费员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发票金额Column {
                get {
                    return this.column发票金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 作废发票Row this[int index] {
                get {
                    return ((作废发票Row)(this.Rows[index]));
                }
            }
            
            public event 作废发票RowChangeEventHandler 作废发票RowChanging;
            
            public event 作废发票RowChangeEventHandler 作废发票RowChanged;
            
            public event 作废发票RowChangeEventHandler 作废发票RowDeleting;
            
            public event 作废发票RowChangeEventHandler 作废发票RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add作废发票Row(作废发票Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 作废发票Row Add作废发票Row(string 类型, string 发票号, string 姓名, string 退费日期, string 退费员, decimal 发票金额, short 序号) {
                作废发票Row row作废发票Row = ((作废发票Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        类型,
                        发票号,
                        姓名,
                        退费日期,
                        退费员,
                        发票金额,
                        序号};
                row作废发票Row.ItemArray = columnValuesArray;
                this.Rows.Add(row作废发票Row);
                return row作废发票Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                作废发票DataTable cln = ((作废发票DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 作废发票DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column类型 = base.Columns["类型"];
                this.column发票号 = base.Columns["发票号"];
                this.column姓名 = base.Columns["姓名"];
                this.column退费日期 = base.Columns["退费日期"];
                this.column退费员 = base.Columns["退费员"];
                this.column发票金额 = base.Columns["发票金额"];
                this.column序号 = base.Columns["序号"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column类型 = new global::System.Data.DataColumn("类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column类型);
                this.column发票号 = new global::System.Data.DataColumn("发票号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发票号);
                this.column姓名 = new global::System.Data.DataColumn("姓名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column姓名);
                this.column退费日期 = new global::System.Data.DataColumn("退费日期", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退费日期);
                this.column退费员 = new global::System.Data.DataColumn("退费员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退费员);
                this.column发票金额 = new global::System.Data.DataColumn("发票金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发票金额);
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 作废发票Row New作废发票Row() {
                return ((作废发票Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 作废发票Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(作废发票Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.作废发票RowChanged != null)) {
                    this.作废发票RowChanged(this, new 作废发票RowChangeEvent(((作废发票Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.作废发票RowChanging != null)) {
                    this.作废发票RowChanging(this, new 作废发票RowChangeEvent(((作废发票Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.作废发票RowDeleted != null)) {
                    this.作废发票RowDeleted(this, new 作废发票RowChangeEvent(((作废发票Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.作废发票RowDeleting != null)) {
                    this.作废发票RowDeleting(this, new 作废发票RowChangeEvent(((作废发票Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove作废发票Row(作废发票Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "作废发票DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 交款表DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column类型;
            
            private global::System.Data.DataColumn column发票段;
            
            private global::System.Data.DataColumn column发票金额;
            
            private global::System.Data.DataColumn column有效张数;
            
            private global::System.Data.DataColumn column废票张数;
            
            private global::System.Data.DataColumn column支票支付;
            
            private global::System.Data.DataColumn column现金支付;
            
            private global::System.Data.DataColumn column银联支付;
            
            private global::System.Data.DataColumn column医保支付;
            
            private global::System.Data.DataColumn column财务记账;
            
            private global::System.Data.DataColumn column欠费挂账;
            
            private global::System.Data.DataColumn column优惠金额;
            
            private global::System.Data.DataColumn column舍入金额;
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column交款时间;
            
            private global::System.Data.DataColumn column收费员;
            
            private global::System.Data.DataColumn column作废票号;
            
            private global::System.Data.DataColumn column支票;
            
            private global::System.Data.DataColumn column单据号;
            
            private global::System.Data.DataColumn column作废金额;
            
            private global::System.Data.DataColumn column缴款科室;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款表DataTable() {
                this.TableName = "交款表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 交款表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 交款表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 类型Column {
                get {
                    return this.column类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发票段Column {
                get {
                    return this.column发票段;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发票金额Column {
                get {
                    return this.column发票金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 有效张数Column {
                get {
                    return this.column有效张数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 废票张数Column {
                get {
                    return this.column废票张数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 支票支付Column {
                get {
                    return this.column支票支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 现金支付Column {
                get {
                    return this.column现金支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 银联支付Column {
                get {
                    return this.column银联支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 医保支付Column {
                get {
                    return this.column医保支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 财务记账Column {
                get {
                    return this.column财务记账;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 欠费挂账Column {
                get {
                    return this.column欠费挂账;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 优惠金额Column {
                get {
                    return this.column优惠金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 舍入金额Column {
                get {
                    return this.column舍入金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 交款时间Column {
                get {
                    return this.column交款时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 收费员Column {
                get {
                    return this.column收费员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 作废票号Column {
                get {
                    return this.column作废票号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 支票Column {
                get {
                    return this.column支票;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单据号Column {
                get {
                    return this.column单据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 作废金额Column {
                get {
                    return this.column作废金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 缴款科室Column {
                get {
                    return this.column缴款科室;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款表Row this[int index] {
                get {
                    return ((交款表Row)(this.Rows[index]));
                }
            }
            
            public event 交款表RowChangeEventHandler 交款表RowChanging;
            
            public event 交款表RowChangeEventHandler 交款表RowChanged;
            
            public event 交款表RowChangeEventHandler 交款表RowDeleting;
            
            public event 交款表RowChangeEventHandler 交款表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add交款表Row(交款表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款表Row Add交款表Row(
                        string 类型, 
                        string 发票段, 
                        decimal 发票金额, 
                        decimal 有效张数, 
                        decimal 废票张数, 
                        decimal 支票支付, 
                        decimal 现金支付, 
                        decimal 银联支付, 
                        decimal 医保支付, 
                        decimal 财务记账, 
                        decimal 欠费挂账, 
                        decimal 优惠金额, 
                        decimal 舍入金额, 
                        string 序号, 
                        string 交款时间, 
                        string 收费员, 
                        string 作废票号, 
                        decimal 支票, 
                        string 单据号, 
                        decimal 作废金额, 
                        string 缴款科室) {
                交款表Row row交款表Row = ((交款表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        类型,
                        发票段,
                        发票金额,
                        有效张数,
                        废票张数,
                        支票支付,
                        现金支付,
                        银联支付,
                        医保支付,
                        财务记账,
                        欠费挂账,
                        优惠金额,
                        舍入金额,
                        序号,
                        交款时间,
                        收费员,
                        作废票号,
                        支票,
                        单据号,
                        作废金额,
                        缴款科室};
                row交款表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row交款表Row);
                return row交款表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                交款表DataTable cln = ((交款表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 交款表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column类型 = base.Columns["类型"];
                this.column发票段 = base.Columns["发票段"];
                this.column发票金额 = base.Columns["发票金额"];
                this.column有效张数 = base.Columns["有效张数"];
                this.column废票张数 = base.Columns["废票张数"];
                this.column支票支付 = base.Columns["支票支付"];
                this.column现金支付 = base.Columns["现金支付"];
                this.column银联支付 = base.Columns["银联支付"];
                this.column医保支付 = base.Columns["医保支付"];
                this.column财务记账 = base.Columns["财务记账"];
                this.column欠费挂账 = base.Columns["欠费挂账"];
                this.column优惠金额 = base.Columns["优惠金额"];
                this.column舍入金额 = base.Columns["舍入金额"];
                this.column序号 = base.Columns["序号"];
                this.column交款时间 = base.Columns["交款时间"];
                this.column收费员 = base.Columns["收费员"];
                this.column作废票号 = base.Columns["作废票号"];
                this.column支票 = base.Columns["支票"];
                this.column单据号 = base.Columns["单据号"];
                this.column作废金额 = base.Columns["作废金额"];
                this.column缴款科室 = base.Columns["缴款科室"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column类型 = new global::System.Data.DataColumn("类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column类型);
                this.column发票段 = new global::System.Data.DataColumn("发票段", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发票段);
                this.column发票金额 = new global::System.Data.DataColumn("发票金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发票金额);
                this.column有效张数 = new global::System.Data.DataColumn("有效张数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column有效张数);
                this.column废票张数 = new global::System.Data.DataColumn("废票张数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column废票张数);
                this.column支票支付 = new global::System.Data.DataColumn("支票支付", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支票支付);
                this.column现金支付 = new global::System.Data.DataColumn("现金支付", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column现金支付);
                this.column银联支付 = new global::System.Data.DataColumn("银联支付", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column银联支付);
                this.column医保支付 = new global::System.Data.DataColumn("医保支付", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column医保支付);
                this.column财务记账 = new global::System.Data.DataColumn("财务记账", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column财务记账);
                this.column欠费挂账 = new global::System.Data.DataColumn("欠费挂账", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column欠费挂账);
                this.column优惠金额 = new global::System.Data.DataColumn("优惠金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column优惠金额);
                this.column舍入金额 = new global::System.Data.DataColumn("舍入金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column舍入金额);
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column交款时间 = new global::System.Data.DataColumn("交款时间", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交款时间);
                this.column收费员 = new global::System.Data.DataColumn("收费员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column收费员);
                this.column作废票号 = new global::System.Data.DataColumn("作废票号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column作废票号);
                this.column支票 = new global::System.Data.DataColumn("支票", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支票);
                this.column单据号 = new global::System.Data.DataColumn("单据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单据号);
                this.column作废金额 = new global::System.Data.DataColumn("作废金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column作废金额);
                this.column缴款科室 = new global::System.Data.DataColumn("缴款科室", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column缴款科室);
                this.column类型.Caption = "Column1";
                this.column发票段.Caption = "Column2";
                this.column发票金额.Caption = "Column1";
                this.column有效张数.Caption = "Column2";
                this.column废票张数.Caption = "Column1";
                this.column现金支付.Caption = "Column2";
                this.column银联支付.Caption = "Column1";
                this.column医保支付.Caption = "Column2";
                this.column财务记账.Caption = "Column1";
                this.column欠费挂账.Caption = "Column2";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款表Row New交款表Row() {
                return ((交款表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 交款表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(交款表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.交款表RowChanged != null)) {
                    this.交款表RowChanged(this, new 交款表RowChangeEvent(((交款表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.交款表RowChanging != null)) {
                    this.交款表RowChanging(this, new 交款表RowChangeEvent(((交款表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.交款表RowDeleted != null)) {
                    this.交款表RowDeleted(this, new 交款表RowChangeEvent(((交款表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.交款表RowDeleting != null)) {
                    this.交款表RowDeleting(this, new 交款表RowChangeEvent(((交款表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove交款表Row(交款表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "交款表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 收费项目金额DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJE24;
            
            private global::System.Data.DataColumn columnJE23;
            
            private global::System.Data.DataColumn columnJE22;
            
            private global::System.Data.DataColumn columnJE21;
            
            private global::System.Data.DataColumn columnJE20;
            
            private global::System.Data.DataColumn columnJE19;
            
            private global::System.Data.DataColumn columnJE18;
            
            private global::System.Data.DataColumn columnJE17;
            
            private global::System.Data.DataColumn columnJE16;
            
            private global::System.Data.DataColumn columnJE15;
            
            private global::System.Data.DataColumn columnJE14;
            
            private global::System.Data.DataColumn columnJE13;
            
            private global::System.Data.DataColumn columnJE12;
            
            private global::System.Data.DataColumn columnJE11;
            
            private global::System.Data.DataColumn columnJE10;
            
            private global::System.Data.DataColumn columnJE9;
            
            private global::System.Data.DataColumn columnJE8;
            
            private global::System.Data.DataColumn columnJE7;
            
            private global::System.Data.DataColumn columnJE6;
            
            private global::System.Data.DataColumn columnJE5;
            
            private global::System.Data.DataColumn columnJE1;
            
            private global::System.Data.DataColumn columnJE2;
            
            private global::System.Data.DataColumn columnJE3;
            
            private global::System.Data.DataColumn columnJE4;
            
            private global::System.Data.DataColumn columnJE33;
            
            private global::System.Data.DataColumn columnJE34;
            
            private global::System.Data.DataColumn columnJE35;
            
            private global::System.Data.DataColumn columnJE36;
            
            private global::System.Data.DataColumn columnJE37;
            
            private global::System.Data.DataColumn columnJE38;
            
            private global::System.Data.DataColumn columnJE39;
            
            private global::System.Data.DataColumn columnJE40;
            
            private global::System.Data.DataColumn columnJE25;
            
            private global::System.Data.DataColumn columnJE26;
            
            private global::System.Data.DataColumn columnJE27;
            
            private global::System.Data.DataColumn columnJE28;
            
            private global::System.Data.DataColumn columnJE29;
            
            private global::System.Data.DataColumn columnJE30;
            
            private global::System.Data.DataColumn columnJE31;
            
            private global::System.Data.DataColumn columnJE32;
            
            private global::System.Data.DataColumn columnJE41;
            
            private global::System.Data.DataColumn columnJE42;
            
            private global::System.Data.DataColumn columnJE43;
            
            private global::System.Data.DataColumn columnJE44;
            
            private global::System.Data.DataColumn columnJE45;
            
            private global::System.Data.DataColumn columnJE46;
            
            private global::System.Data.DataColumn columnJE47;
            
            private global::System.Data.DataColumn columnJE48;
            
            private global::System.Data.DataColumn columnJE49;
            
            private global::System.Data.DataColumn columnJE50;
            
            private global::System.Data.DataColumn columnJE51;
            
            private global::System.Data.DataColumn columnJE52;
            
            private global::System.Data.DataColumn columnJE53;
            
            private global::System.Data.DataColumn columnJE54;
            
            private global::System.Data.DataColumn columnJE55;
            
            private global::System.Data.DataColumn columnJE56;
            
            private global::System.Data.DataColumn columnJE57;
            
            private global::System.Data.DataColumn columnJE58;
            
            private global::System.Data.DataColumn columnJE59;
            
            private global::System.Data.DataColumn columnJE60;
            
            private global::System.Data.DataColumn columnJE61;
            
            private global::System.Data.DataColumn columnJE62;
            
            private global::System.Data.DataColumn columnJE63;
            
            private global::System.Data.DataColumn columnJE64;
            
            private global::System.Data.DataColumn columnJE65;
            
            private global::System.Data.DataColumn columnJE66;
            
            private global::System.Data.DataColumn columnJE67;
            
            private global::System.Data.DataColumn columnJE68;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目金额DataTable() {
                this.TableName = "收费项目金额";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费项目金额DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 收费项目金额DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE24Column {
                get {
                    return this.columnJE24;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE23Column {
                get {
                    return this.columnJE23;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE22Column {
                get {
                    return this.columnJE22;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE21Column {
                get {
                    return this.columnJE21;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE20Column {
                get {
                    return this.columnJE20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE19Column {
                get {
                    return this.columnJE19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE18Column {
                get {
                    return this.columnJE18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE17Column {
                get {
                    return this.columnJE17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE16Column {
                get {
                    return this.columnJE16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE15Column {
                get {
                    return this.columnJE15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE14Column {
                get {
                    return this.columnJE14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE13Column {
                get {
                    return this.columnJE13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE12Column {
                get {
                    return this.columnJE12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE11Column {
                get {
                    return this.columnJE11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE10Column {
                get {
                    return this.columnJE10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE9Column {
                get {
                    return this.columnJE9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE8Column {
                get {
                    return this.columnJE8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE7Column {
                get {
                    return this.columnJE7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE6Column {
                get {
                    return this.columnJE6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE5Column {
                get {
                    return this.columnJE5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE1Column {
                get {
                    return this.columnJE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE2Column {
                get {
                    return this.columnJE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE3Column {
                get {
                    return this.columnJE3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE4Column {
                get {
                    return this.columnJE4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE33Column {
                get {
                    return this.columnJE33;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE34Column {
                get {
                    return this.columnJE34;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE35Column {
                get {
                    return this.columnJE35;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE36Column {
                get {
                    return this.columnJE36;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE37Column {
                get {
                    return this.columnJE37;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE38Column {
                get {
                    return this.columnJE38;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE39Column {
                get {
                    return this.columnJE39;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE40Column {
                get {
                    return this.columnJE40;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE25Column {
                get {
                    return this.columnJE25;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE26Column {
                get {
                    return this.columnJE26;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE27Column {
                get {
                    return this.columnJE27;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE28Column {
                get {
                    return this.columnJE28;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE29Column {
                get {
                    return this.columnJE29;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE30Column {
                get {
                    return this.columnJE30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE31Column {
                get {
                    return this.columnJE31;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE32Column {
                get {
                    return this.columnJE32;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE41Column {
                get {
                    return this.columnJE41;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE42Column {
                get {
                    return this.columnJE42;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE43Column {
                get {
                    return this.columnJE43;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE44Column {
                get {
                    return this.columnJE44;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE45Column {
                get {
                    return this.columnJE45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE46Column {
                get {
                    return this.columnJE46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE47Column {
                get {
                    return this.columnJE47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE48Column {
                get {
                    return this.columnJE48;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE49Column {
                get {
                    return this.columnJE49;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE50Column {
                get {
                    return this.columnJE50;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE51Column {
                get {
                    return this.columnJE51;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE52Column {
                get {
                    return this.columnJE52;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE53Column {
                get {
                    return this.columnJE53;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE54Column {
                get {
                    return this.columnJE54;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE55Column {
                get {
                    return this.columnJE55;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE56Column {
                get {
                    return this.columnJE56;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE57Column {
                get {
                    return this.columnJE57;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE58Column {
                get {
                    return this.columnJE58;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE59Column {
                get {
                    return this.columnJE59;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE60Column {
                get {
                    return this.columnJE60;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE61Column {
                get {
                    return this.columnJE61;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE62Column {
                get {
                    return this.columnJE62;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE63Column {
                get {
                    return this.columnJE63;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE64Column {
                get {
                    return this.columnJE64;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE65Column {
                get {
                    return this.columnJE65;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE66Column {
                get {
                    return this.columnJE66;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE67Column {
                get {
                    return this.columnJE67;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE68Column {
                get {
                    return this.columnJE68;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目金额Row this[int index] {
                get {
                    return ((收费项目金额Row)(this.Rows[index]));
                }
            }
            
            public event 收费项目金额RowChangeEventHandler 收费项目金额RowChanging;
            
            public event 收费项目金额RowChangeEventHandler 收费项目金额RowChanged;
            
            public event 收费项目金额RowChangeEventHandler 收费项目金额RowDeleting;
            
            public event 收费项目金额RowChangeEventHandler 收费项目金额RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add收费项目金额Row(收费项目金额Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目金额Row Add收费项目金额Row(
                        string JE24, 
                        string JE23, 
                        string JE22, 
                        string JE21, 
                        string JE20, 
                        string JE19, 
                        string JE18, 
                        string JE17, 
                        string JE16, 
                        string JE15, 
                        string JE14, 
                        string JE13, 
                        string JE12, 
                        string JE11, 
                        string JE10, 
                        string JE9, 
                        string JE8, 
                        string JE7, 
                        string JE6, 
                        string JE5, 
                        string JE1, 
                        string JE2, 
                        string JE3, 
                        string JE4, 
                        string JE33, 
                        string JE34, 
                        string JE35, 
                        string JE36, 
                        string JE37, 
                        string JE38, 
                        string JE39, 
                        string JE40, 
                        string JE25, 
                        string JE26, 
                        string JE27, 
                        string JE28, 
                        string JE29, 
                        string JE30, 
                        string JE31, 
                        string JE32, 
                        string JE41, 
                        string JE42, 
                        string JE43, 
                        string JE44, 
                        string JE45, 
                        string JE46, 
                        string JE47, 
                        string JE48, 
                        string JE49, 
                        string JE50, 
                        string JE51, 
                        string JE52, 
                        string JE53, 
                        string JE54, 
                        string JE55, 
                        string JE56, 
                        string JE57, 
                        string JE58, 
                        string JE59, 
                        string JE60, 
                        string JE61, 
                        string JE62, 
                        string JE63, 
                        string JE64, 
                        string JE65, 
                        string JE66, 
                        string JE67, 
                        string JE68) {
                收费项目金额Row row收费项目金额Row = ((收费项目金额Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JE24,
                        JE23,
                        JE22,
                        JE21,
                        JE20,
                        JE19,
                        JE18,
                        JE17,
                        JE16,
                        JE15,
                        JE14,
                        JE13,
                        JE12,
                        JE11,
                        JE10,
                        JE9,
                        JE8,
                        JE7,
                        JE6,
                        JE5,
                        JE1,
                        JE2,
                        JE3,
                        JE4,
                        JE33,
                        JE34,
                        JE35,
                        JE36,
                        JE37,
                        JE38,
                        JE39,
                        JE40,
                        JE25,
                        JE26,
                        JE27,
                        JE28,
                        JE29,
                        JE30,
                        JE31,
                        JE32,
                        JE41,
                        JE42,
                        JE43,
                        JE44,
                        JE45,
                        JE46,
                        JE47,
                        JE48,
                        JE49,
                        JE50,
                        JE51,
                        JE52,
                        JE53,
                        JE54,
                        JE55,
                        JE56,
                        JE57,
                        JE58,
                        JE59,
                        JE60,
                        JE61,
                        JE62,
                        JE63,
                        JE64,
                        JE65,
                        JE66,
                        JE67,
                        JE68};
                row收费项目金额Row.ItemArray = columnValuesArray;
                this.Rows.Add(row收费项目金额Row);
                return row收费项目金额Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                收费项目金额DataTable cln = ((收费项目金额DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 收费项目金额DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJE24 = base.Columns["JE24"];
                this.columnJE23 = base.Columns["JE23"];
                this.columnJE22 = base.Columns["JE22"];
                this.columnJE21 = base.Columns["JE21"];
                this.columnJE20 = base.Columns["JE20"];
                this.columnJE19 = base.Columns["JE19"];
                this.columnJE18 = base.Columns["JE18"];
                this.columnJE17 = base.Columns["JE17"];
                this.columnJE16 = base.Columns["JE16"];
                this.columnJE15 = base.Columns["JE15"];
                this.columnJE14 = base.Columns["JE14"];
                this.columnJE13 = base.Columns["JE13"];
                this.columnJE12 = base.Columns["JE12"];
                this.columnJE11 = base.Columns["JE11"];
                this.columnJE10 = base.Columns["JE10"];
                this.columnJE9 = base.Columns["JE9"];
                this.columnJE8 = base.Columns["JE8"];
                this.columnJE7 = base.Columns["JE7"];
                this.columnJE6 = base.Columns["JE6"];
                this.columnJE5 = base.Columns["JE5"];
                this.columnJE1 = base.Columns["JE1"];
                this.columnJE2 = base.Columns["JE2"];
                this.columnJE3 = base.Columns["JE3"];
                this.columnJE4 = base.Columns["JE4"];
                this.columnJE33 = base.Columns["JE33"];
                this.columnJE34 = base.Columns["JE34"];
                this.columnJE35 = base.Columns["JE35"];
                this.columnJE36 = base.Columns["JE36"];
                this.columnJE37 = base.Columns["JE37"];
                this.columnJE38 = base.Columns["JE38"];
                this.columnJE39 = base.Columns["JE39"];
                this.columnJE40 = base.Columns["JE40"];
                this.columnJE25 = base.Columns["JE25"];
                this.columnJE26 = base.Columns["JE26"];
                this.columnJE27 = base.Columns["JE27"];
                this.columnJE28 = base.Columns["JE28"];
                this.columnJE29 = base.Columns["JE29"];
                this.columnJE30 = base.Columns["JE30"];
                this.columnJE31 = base.Columns["JE31"];
                this.columnJE32 = base.Columns["JE32"];
                this.columnJE41 = base.Columns["JE41"];
                this.columnJE42 = base.Columns["JE42"];
                this.columnJE43 = base.Columns["JE43"];
                this.columnJE44 = base.Columns["JE44"];
                this.columnJE45 = base.Columns["JE45"];
                this.columnJE46 = base.Columns["JE46"];
                this.columnJE47 = base.Columns["JE47"];
                this.columnJE48 = base.Columns["JE48"];
                this.columnJE49 = base.Columns["JE49"];
                this.columnJE50 = base.Columns["JE50"];
                this.columnJE51 = base.Columns["JE51"];
                this.columnJE52 = base.Columns["JE52"];
                this.columnJE53 = base.Columns["JE53"];
                this.columnJE54 = base.Columns["JE54"];
                this.columnJE55 = base.Columns["JE55"];
                this.columnJE56 = base.Columns["JE56"];
                this.columnJE57 = base.Columns["JE57"];
                this.columnJE58 = base.Columns["JE58"];
                this.columnJE59 = base.Columns["JE59"];
                this.columnJE60 = base.Columns["JE60"];
                this.columnJE61 = base.Columns["JE61"];
                this.columnJE62 = base.Columns["JE62"];
                this.columnJE63 = base.Columns["JE63"];
                this.columnJE64 = base.Columns["JE64"];
                this.columnJE65 = base.Columns["JE65"];
                this.columnJE66 = base.Columns["JE66"];
                this.columnJE67 = base.Columns["JE67"];
                this.columnJE68 = base.Columns["JE68"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJE24 = new global::System.Data.DataColumn("JE24", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE24);
                this.columnJE23 = new global::System.Data.DataColumn("JE23", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE23);
                this.columnJE22 = new global::System.Data.DataColumn("JE22", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE22);
                this.columnJE21 = new global::System.Data.DataColumn("JE21", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE21);
                this.columnJE20 = new global::System.Data.DataColumn("JE20", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE20);
                this.columnJE19 = new global::System.Data.DataColumn("JE19", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE19);
                this.columnJE18 = new global::System.Data.DataColumn("JE18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE18);
                this.columnJE17 = new global::System.Data.DataColumn("JE17", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE17);
                this.columnJE16 = new global::System.Data.DataColumn("JE16", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE16);
                this.columnJE15 = new global::System.Data.DataColumn("JE15", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE15);
                this.columnJE14 = new global::System.Data.DataColumn("JE14", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE14);
                this.columnJE13 = new global::System.Data.DataColumn("JE13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE13);
                this.columnJE12 = new global::System.Data.DataColumn("JE12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE12);
                this.columnJE11 = new global::System.Data.DataColumn("JE11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE11);
                this.columnJE10 = new global::System.Data.DataColumn("JE10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE10);
                this.columnJE9 = new global::System.Data.DataColumn("JE9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE9);
                this.columnJE8 = new global::System.Data.DataColumn("JE8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE8);
                this.columnJE7 = new global::System.Data.DataColumn("JE7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE7);
                this.columnJE6 = new global::System.Data.DataColumn("JE6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE6);
                this.columnJE5 = new global::System.Data.DataColumn("JE5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE5);
                this.columnJE1 = new global::System.Data.DataColumn("JE1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE1);
                this.columnJE2 = new global::System.Data.DataColumn("JE2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE2);
                this.columnJE3 = new global::System.Data.DataColumn("JE3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE3);
                this.columnJE4 = new global::System.Data.DataColumn("JE4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE4);
                this.columnJE33 = new global::System.Data.DataColumn("JE33", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE33);
                this.columnJE34 = new global::System.Data.DataColumn("JE34", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE34);
                this.columnJE35 = new global::System.Data.DataColumn("JE35", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE35);
                this.columnJE36 = new global::System.Data.DataColumn("JE36", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE36);
                this.columnJE37 = new global::System.Data.DataColumn("JE37", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE37);
                this.columnJE38 = new global::System.Data.DataColumn("JE38", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE38);
                this.columnJE39 = new global::System.Data.DataColumn("JE39", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE39);
                this.columnJE40 = new global::System.Data.DataColumn("JE40", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE40);
                this.columnJE25 = new global::System.Data.DataColumn("JE25", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE25);
                this.columnJE26 = new global::System.Data.DataColumn("JE26", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE26);
                this.columnJE27 = new global::System.Data.DataColumn("JE27", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE27);
                this.columnJE28 = new global::System.Data.DataColumn("JE28", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE28);
                this.columnJE29 = new global::System.Data.DataColumn("JE29", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE29);
                this.columnJE30 = new global::System.Data.DataColumn("JE30", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE30);
                this.columnJE31 = new global::System.Data.DataColumn("JE31", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE31);
                this.columnJE32 = new global::System.Data.DataColumn("JE32", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE32);
                this.columnJE41 = new global::System.Data.DataColumn("JE41", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE41);
                this.columnJE42 = new global::System.Data.DataColumn("JE42", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE42);
                this.columnJE43 = new global::System.Data.DataColumn("JE43", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE43);
                this.columnJE44 = new global::System.Data.DataColumn("JE44", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE44);
                this.columnJE45 = new global::System.Data.DataColumn("JE45", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE45);
                this.columnJE46 = new global::System.Data.DataColumn("JE46", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE46);
                this.columnJE47 = new global::System.Data.DataColumn("JE47", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE47);
                this.columnJE48 = new global::System.Data.DataColumn("JE48", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE48);
                this.columnJE49 = new global::System.Data.DataColumn("JE49", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE49);
                this.columnJE50 = new global::System.Data.DataColumn("JE50", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE50);
                this.columnJE51 = new global::System.Data.DataColumn("JE51", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE51);
                this.columnJE52 = new global::System.Data.DataColumn("JE52", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE52);
                this.columnJE53 = new global::System.Data.DataColumn("JE53", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE53);
                this.columnJE54 = new global::System.Data.DataColumn("JE54", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE54);
                this.columnJE55 = new global::System.Data.DataColumn("JE55", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE55);
                this.columnJE56 = new global::System.Data.DataColumn("JE56", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE56);
                this.columnJE57 = new global::System.Data.DataColumn("JE57", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE57);
                this.columnJE58 = new global::System.Data.DataColumn("JE58", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE58);
                this.columnJE59 = new global::System.Data.DataColumn("JE59", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE59);
                this.columnJE60 = new global::System.Data.DataColumn("JE60", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE60);
                this.columnJE61 = new global::System.Data.DataColumn("JE61", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE61);
                this.columnJE62 = new global::System.Data.DataColumn("JE62", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE62);
                this.columnJE63 = new global::System.Data.DataColumn("JE63", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE63);
                this.columnJE64 = new global::System.Data.DataColumn("JE64", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE64);
                this.columnJE65 = new global::System.Data.DataColumn("JE65", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE65);
                this.columnJE66 = new global::System.Data.DataColumn("JE66", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE66);
                this.columnJE67 = new global::System.Data.DataColumn("JE67", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE67);
                this.columnJE68 = new global::System.Data.DataColumn("JE68", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE68);
                this.columnJE24.Caption = "T1";
                this.columnJE23.Caption = "T2";
                this.columnJE22.Caption = "T3";
                this.columnJE21.Caption = "T4";
                this.columnJE20.Caption = "T1";
                this.columnJE19.Caption = "T2";
                this.columnJE18.Caption = "T3";
                this.columnJE17.Caption = "T4";
                this.columnJE16.Caption = "T1";
                this.columnJE15.Caption = "T2";
                this.columnJE14.Caption = "T3";
                this.columnJE13.Caption = "T4";
                this.columnJE12.Caption = "T1";
                this.columnJE11.Caption = "T2";
                this.columnJE10.Caption = "T3";
                this.columnJE9.Caption = "T4";
                this.columnJE8.Caption = "T1";
                this.columnJE7.Caption = "T2";
                this.columnJE6.Caption = "T3";
                this.columnJE5.Caption = "T4";
                this.columnJE33.Caption = "Column1";
                this.columnJE34.Caption = "Column2";
                this.columnJE35.Caption = "Column1";
                this.columnJE36.Caption = "Column2";
                this.columnJE37.Caption = "Column1";
                this.columnJE38.Caption = "Column2";
                this.columnJE39.Caption = "T31";
                this.columnJE40.Caption = "T32";
                this.columnJE25.Caption = "Column1";
                this.columnJE26.Caption = "Column2";
                this.columnJE27.Caption = "Column1";
                this.columnJE28.Caption = "Column2";
                this.columnJE29.Caption = "Column1";
                this.columnJE30.Caption = "Column2";
                this.columnJE48.Caption = "JE44";
                this.columnJE49.Caption = "JE45";
                this.columnJE50.Caption = "JE46";
                this.columnJE51.Caption = "JE47";
                this.columnJE52.Caption = "JE44";
                this.columnJE53.Caption = "JE45";
                this.columnJE54.Caption = "JE46";
                this.columnJE55.Caption = "JE47";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目金额Row New收费项目金额Row() {
                return ((收费项目金额Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 收费项目金额Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(收费项目金额Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.收费项目金额RowChanged != null)) {
                    this.收费项目金额RowChanged(this, new 收费项目金额RowChangeEvent(((收费项目金额Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.收费项目金额RowChanging != null)) {
                    this.收费项目金额RowChanging(this, new 收费项目金额RowChangeEvent(((收费项目金额Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.收费项目金额RowDeleted != null)) {
                    this.收费项目金额RowDeleted(this, new 收费项目金额RowChangeEvent(((收费项目金额Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.收费项目金额RowDeleting != null)) {
                    this.收费项目金额RowDeleting(this, new 收费项目金额RowChangeEvent(((收费项目金额Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove收费项目金额Row(收费项目金额Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "收费项目金额DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 医保信息DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column基本医保统筹支付;
            
            private global::System.Data.DataColumn column补充医保统筹支付;
            
            private global::System.Data.DataColumn column商业医保统筹支付;
            
            private global::System.Data.DataColumn column大病互助统筹支付;
            
            private global::System.Data.DataColumn column个人帐户支付;
            
            private global::System.Data.DataColumn column个人自付;
            
            private global::System.Data.DataColumn column个人自费;
            
            private global::System.Data.DataColumn column起付金额;
            
            private global::System.Data.DataColumn column超封顶线自付;
            
            private global::System.Data.DataColumn column现金支付;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医保信息DataTable() {
                this.TableName = "医保信息";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 医保信息DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 医保信息DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 基本医保统筹支付Column {
                get {
                    return this.column基本医保统筹支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 补充医保统筹支付Column {
                get {
                    return this.column补充医保统筹支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 商业医保统筹支付Column {
                get {
                    return this.column商业医保统筹支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 大病互助统筹支付Column {
                get {
                    return this.column大病互助统筹支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 个人帐户支付Column {
                get {
                    return this.column个人帐户支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 个人自付Column {
                get {
                    return this.column个人自付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 个人自费Column {
                get {
                    return this.column个人自费;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 起付金额Column {
                get {
                    return this.column起付金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 超封顶线自付Column {
                get {
                    return this.column超封顶线自付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 现金支付Column {
                get {
                    return this.column现金支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医保信息Row this[int index] {
                get {
                    return ((医保信息Row)(this.Rows[index]));
                }
            }
            
            public event 医保信息RowChangeEventHandler 医保信息RowChanging;
            
            public event 医保信息RowChangeEventHandler 医保信息RowChanged;
            
            public event 医保信息RowChangeEventHandler 医保信息RowDeleting;
            
            public event 医保信息RowChangeEventHandler 医保信息RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add医保信息Row(医保信息Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医保信息Row Add医保信息Row(decimal 基本医保统筹支付, decimal 补充医保统筹支付, decimal 商业医保统筹支付, decimal 大病互助统筹支付, decimal 个人帐户支付, decimal 个人自付, decimal 个人自费, decimal 起付金额, decimal 超封顶线自付, decimal 现金支付) {
                医保信息Row row医保信息Row = ((医保信息Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        基本医保统筹支付,
                        补充医保统筹支付,
                        商业医保统筹支付,
                        大病互助统筹支付,
                        个人帐户支付,
                        个人自付,
                        个人自费,
                        起付金额,
                        超封顶线自付,
                        现金支付};
                row医保信息Row.ItemArray = columnValuesArray;
                this.Rows.Add(row医保信息Row);
                return row医保信息Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                医保信息DataTable cln = ((医保信息DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 医保信息DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column基本医保统筹支付 = base.Columns["基本医保统筹支付"];
                this.column补充医保统筹支付 = base.Columns["补充医保统筹支付"];
                this.column商业医保统筹支付 = base.Columns["商业医保统筹支付"];
                this.column大病互助统筹支付 = base.Columns["大病互助统筹支付"];
                this.column个人帐户支付 = base.Columns["个人帐户支付"];
                this.column个人自付 = base.Columns["个人自付"];
                this.column个人自费 = base.Columns["个人自费"];
                this.column起付金额 = base.Columns["起付金额"];
                this.column超封顶线自付 = base.Columns["超封顶线自付"];
                this.column现金支付 = base.Columns["现金支付"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column基本医保统筹支付 = new global::System.Data.DataColumn("基本医保统筹支付", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column基本医保统筹支付);
                this.column补充医保统筹支付 = new global::System.Data.DataColumn("补充医保统筹支付", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column补充医保统筹支付);
                this.column商业医保统筹支付 = new global::System.Data.DataColumn("商业医保统筹支付", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商业医保统筹支付);
                this.column大病互助统筹支付 = new global::System.Data.DataColumn("大病互助统筹支付", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column大病互助统筹支付);
                this.column个人帐户支付 = new global::System.Data.DataColumn("个人帐户支付", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column个人帐户支付);
                this.column个人自付 = new global::System.Data.DataColumn("个人自付", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column个人自付);
                this.column个人自费 = new global::System.Data.DataColumn("个人自费", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column个人自费);
                this.column起付金额 = new global::System.Data.DataColumn("起付金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column起付金额);
                this.column超封顶线自付 = new global::System.Data.DataColumn("超封顶线自付", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column超封顶线自付);
                this.column现金支付 = new global::System.Data.DataColumn("现金支付", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column现金支付);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医保信息Row New医保信息Row() {
                return ((医保信息Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 医保信息Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(医保信息Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.医保信息RowChanged != null)) {
                    this.医保信息RowChanged(this, new 医保信息RowChangeEvent(((医保信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.医保信息RowChanging != null)) {
                    this.医保信息RowChanging(this, new 医保信息RowChangeEvent(((医保信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.医保信息RowDeleted != null)) {
                    this.医保信息RowDeleted(this, new 医保信息RowChangeEvent(((医保信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.医保信息RowDeleting != null)) {
                    this.医保信息RowDeleting(this, new 医保信息RowChangeEvent(((医保信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove医保信息Row(医保信息Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "医保信息DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 其它信息DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column病历本费;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 其它信息DataTable() {
                this.TableName = "其它信息";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 其它信息DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 其它信息DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 病历本费Column {
                get {
                    return this.column病历本费;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 其它信息Row this[int index] {
                get {
                    return ((其它信息Row)(this.Rows[index]));
                }
            }
            
            public event 其它信息RowChangeEventHandler 其它信息RowChanging;
            
            public event 其它信息RowChangeEventHandler 其它信息RowChanged;
            
            public event 其它信息RowChangeEventHandler 其它信息RowDeleting;
            
            public event 其它信息RowChangeEventHandler 其它信息RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add其它信息Row(其它信息Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 其它信息Row Add其它信息Row(decimal 病历本费) {
                其它信息Row row其它信息Row = ((其它信息Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        病历本费};
                row其它信息Row.ItemArray = columnValuesArray;
                this.Rows.Add(row其它信息Row);
                return row其它信息Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                其它信息DataTable cln = ((其它信息DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 其它信息DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column病历本费 = base.Columns["病历本费"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column病历本费 = new global::System.Data.DataColumn("病历本费", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column病历本费);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 其它信息Row New其它信息Row() {
                return ((其它信息Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 其它信息Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(其它信息Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.其它信息RowChanged != null)) {
                    this.其它信息RowChanged(this, new 其它信息RowChangeEvent(((其它信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.其它信息RowChanging != null)) {
                    this.其它信息RowChanging(this, new 其它信息RowChangeEvent(((其它信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.其它信息RowDeleted != null)) {
                    this.其它信息RowDeleted(this, new 其它信息RowChangeEvent(((其它信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.其它信息RowDeleting != null)) {
                    this.其它信息RowDeleting(this, new 其它信息RowChangeEvent(((其它信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove其它信息Row(其它信息Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "其它信息DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 预收款DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column类型;
            
            private global::System.Data.DataColumn column票据号;
            
            private global::System.Data.DataColumn column金额;
            
            private global::System.Data.DataColumn column收款日期;
            
            private global::System.Data.DataColumn column收款员;
            
            private global::System.Data.DataColumn column大写金额;
            
            private global::System.Data.DataColumn column银行;
            
            private global::System.Data.DataColumn column单位;
            
            private global::System.Data.DataColumn column姓名;
            
            private global::System.Data.DataColumn column门诊号;
            
            private global::System.Data.DataColumn column支票号;
            
            private global::System.Data.DataColumn column卡号;
            
            private global::System.Data.DataColumn column年龄;
            
            private global::System.Data.DataColumn column性别;
            
            private global::System.Data.DataColumn column联系方式;
            
            private global::System.Data.DataColumn column备注;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 预收款DataTable() {
                this.TableName = "预收款";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 预收款DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 预收款DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 类型Column {
                get {
                    return this.column类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 票据号Column {
                get {
                    return this.column票据号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 金额Column {
                get {
                    return this.column金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 收款日期Column {
                get {
                    return this.column收款日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 收款员Column {
                get {
                    return this.column收款员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 大写金额Column {
                get {
                    return this.column大写金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 银行Column {
                get {
                    return this.column银行;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 门诊号Column {
                get {
                    return this.column门诊号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 支票号Column {
                get {
                    return this.column支票号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 卡号Column {
                get {
                    return this.column卡号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 年龄Column {
                get {
                    return this.column年龄;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 性别Column {
                get {
                    return this.column性别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 联系方式Column {
                get {
                    return this.column联系方式;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 预收款Row this[int index] {
                get {
                    return ((预收款Row)(this.Rows[index]));
                }
            }
            
            public event 预收款RowChangeEventHandler 预收款RowChanging;
            
            public event 预收款RowChangeEventHandler 预收款RowChanged;
            
            public event 预收款RowChangeEventHandler 预收款RowDeleting;
            
            public event 预收款RowChangeEventHandler 预收款RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add预收款Row(预收款Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 预收款Row Add预收款Row(
                        string 类型, 
                        string 票据号, 
                        string 金额, 
                        string 收款日期, 
                        string 收款员, 
                        string 大写金额, 
                        string 银行, 
                        string 单位, 
                        string 姓名, 
                        string 门诊号, 
                        string 支票号, 
                        string 卡号, 
                        string 年龄, 
                        string 性别, 
                        string 联系方式, 
                        string 备注) {
                预收款Row row预收款Row = ((预收款Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        类型,
                        票据号,
                        金额,
                        收款日期,
                        收款员,
                        大写金额,
                        银行,
                        单位,
                        姓名,
                        门诊号,
                        支票号,
                        卡号,
                        年龄,
                        性别,
                        联系方式,
                        备注};
                row预收款Row.ItemArray = columnValuesArray;
                this.Rows.Add(row预收款Row);
                return row预收款Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                预收款DataTable cln = ((预收款DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 预收款DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column类型 = base.Columns["类型"];
                this.column票据号 = base.Columns["票据号"];
                this.column金额 = base.Columns["金额"];
                this.column收款日期 = base.Columns["收款日期"];
                this.column收款员 = base.Columns["收款员"];
                this.column大写金额 = base.Columns["大写金额"];
                this.column银行 = base.Columns["银行"];
                this.column单位 = base.Columns["单位"];
                this.column姓名 = base.Columns["姓名"];
                this.column门诊号 = base.Columns["门诊号"];
                this.column支票号 = base.Columns["支票号"];
                this.column卡号 = base.Columns["卡号"];
                this.column年龄 = base.Columns["年龄"];
                this.column性别 = base.Columns["性别"];
                this.column联系方式 = base.Columns["联系方式"];
                this.column备注 = base.Columns["备注"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column类型 = new global::System.Data.DataColumn("类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column类型);
                this.column票据号 = new global::System.Data.DataColumn("票据号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column票据号);
                this.column金额 = new global::System.Data.DataColumn("金额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column金额);
                this.column收款日期 = new global::System.Data.DataColumn("收款日期", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column收款日期);
                this.column收款员 = new global::System.Data.DataColumn("收款员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column收款员);
                this.column大写金额 = new global::System.Data.DataColumn("大写金额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column大写金额);
                this.column银行 = new global::System.Data.DataColumn("银行", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column银行);
                this.column单位 = new global::System.Data.DataColumn("单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位);
                this.column姓名 = new global::System.Data.DataColumn("姓名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column姓名);
                this.column门诊号 = new global::System.Data.DataColumn("门诊号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column门诊号);
                this.column支票号 = new global::System.Data.DataColumn("支票号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支票号);
                this.column卡号 = new global::System.Data.DataColumn("卡号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卡号);
                this.column年龄 = new global::System.Data.DataColumn("年龄", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column年龄);
                this.column性别 = new global::System.Data.DataColumn("性别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column性别);
                this.column联系方式 = new global::System.Data.DataColumn("联系方式", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column联系方式);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column类型.Caption = "Column1";
                this.column票据号.Caption = "Column2";
                this.column金额.Caption = "Column1";
                this.column收款日期.Caption = "Column2";
                this.column收款员.Caption = "Column1";
                this.column大写金额.Caption = "Column2";
                this.column银行.Caption = "Column1";
                this.column单位.Caption = "Column2";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 预收款Row New预收款Row() {
                return ((预收款Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 预收款Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(预收款Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.预收款RowChanged != null)) {
                    this.预收款RowChanged(this, new 预收款RowChangeEvent(((预收款Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.预收款RowChanging != null)) {
                    this.预收款RowChanging(this, new 预收款RowChangeEvent(((预收款Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.预收款RowDeleted != null)) {
                    this.预收款RowDeleted(this, new 预收款RowChangeEvent(((预收款Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.预收款RowDeleting != null)) {
                    this.预收款RowDeleting(this, new 预收款RowChangeEvent(((预收款Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove预收款Row(预收款Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "预收款DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class pos明细DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column姓名;
            
            private global::System.Data.DataColumn column收款日期;
            
            private global::System.Data.DataColumn column收费员;
            
            private global::System.Data.DataColumn column金额;
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column门诊号;
            
            private global::System.Data.DataColumn column卡号;
            
            private global::System.Data.DataColumn column发票号;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pos明细DataTable() {
                this.TableName = "pos明细";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal pos明细DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected pos明细DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 收款日期Column {
                get {
                    return this.column收款日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 收费员Column {
                get {
                    return this.column收费员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 金额Column {
                get {
                    return this.column金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 门诊号Column {
                get {
                    return this.column门诊号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 卡号Column {
                get {
                    return this.column卡号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发票号Column {
                get {
                    return this.column发票号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pos明细Row this[int index] {
                get {
                    return ((pos明细Row)(this.Rows[index]));
                }
            }
            
            public event pos明细RowChangeEventHandler pos明细RowChanging;
            
            public event pos明细RowChangeEventHandler pos明细RowChanged;
            
            public event pos明细RowChangeEventHandler pos明细RowDeleting;
            
            public event pos明细RowChangeEventHandler pos明细RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addpos明细Row(pos明细Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pos明细Row Addpos明细Row(string 姓名, string 收款日期, string 收费员, decimal 金额, short 序号, string 门诊号, string 卡号, string 发票号) {
                pos明细Row rowpos明细Row = ((pos明细Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        姓名,
                        收款日期,
                        收费员,
                        金额,
                        序号,
                        门诊号,
                        卡号,
                        发票号};
                rowpos明细Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowpos明细Row);
                return rowpos明细Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                pos明细DataTable cln = ((pos明细DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new pos明细DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column姓名 = base.Columns["姓名"];
                this.column收款日期 = base.Columns["收款日期"];
                this.column收费员 = base.Columns["收费员"];
                this.column金额 = base.Columns["金额"];
                this.column序号 = base.Columns["序号"];
                this.column门诊号 = base.Columns["门诊号"];
                this.column卡号 = base.Columns["卡号"];
                this.column发票号 = base.Columns["发票号"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column姓名 = new global::System.Data.DataColumn("姓名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column姓名);
                this.column收款日期 = new global::System.Data.DataColumn("收款日期", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column收款日期);
                this.column收费员 = new global::System.Data.DataColumn("收费员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column收费员);
                this.column金额 = new global::System.Data.DataColumn("金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column金额);
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column门诊号 = new global::System.Data.DataColumn("门诊号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column门诊号);
                this.column卡号 = new global::System.Data.DataColumn("卡号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卡号);
                this.column发票号 = new global::System.Data.DataColumn("发票号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发票号);
                this.column收款日期.Caption = "退费日期";
                this.column收费员.Caption = "退费员";
                this.column金额.Caption = "发票金额";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pos明细Row Newpos明细Row() {
                return ((pos明细Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new pos明细Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(pos明细Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.pos明细RowChanged != null)) {
                    this.pos明细RowChanged(this, new pos明细RowChangeEvent(((pos明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.pos明细RowChanging != null)) {
                    this.pos明细RowChanging(this, new pos明细RowChangeEvent(((pos明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.pos明细RowDeleted != null)) {
                    this.pos明细RowDeleted(this, new pos明细RowChangeEvent(((pos明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.pos明细RowDeleting != null)) {
                    this.pos明细RowDeleting(this, new pos明细RowChangeEvent(((pos明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removepos明细Row(pos明细Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "pos明细DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 合同单位汇总DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column单位类型;
            
            private global::System.Data.DataColumn column合同单位名称;
            
            private global::System.Data.DataColumn column应收;
            
            private global::System.Data.DataColumn column优惠;
            
            private global::System.Data.DataColumn column实收;
            
            private global::System.Data.DataColumn columndwmc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 合同单位汇总DataTable() {
                this.TableName = "合同单位汇总";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 合同单位汇总DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 合同单位汇总DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 单位类型Column {
                get {
                    return this.column单位类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 合同单位名称Column {
                get {
                    return this.column合同单位名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 应收Column {
                get {
                    return this.column应收;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 优惠Column {
                get {
                    return this.column优惠;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 实收Column {
                get {
                    return this.column实收;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dwmcColumn {
                get {
                    return this.columndwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 合同单位汇总Row this[int index] {
                get {
                    return ((合同单位汇总Row)(this.Rows[index]));
                }
            }
            
            public event 合同单位汇总RowChangeEventHandler 合同单位汇总RowChanging;
            
            public event 合同单位汇总RowChangeEventHandler 合同单位汇总RowChanged;
            
            public event 合同单位汇总RowChangeEventHandler 合同单位汇总RowDeleting;
            
            public event 合同单位汇总RowChangeEventHandler 合同单位汇总RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add合同单位汇总Row(合同单位汇总Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 合同单位汇总Row Add合同单位汇总Row(string 单位类型, string 合同单位名称, decimal 应收, decimal 优惠, decimal 实收, string dwmc) {
                合同单位汇总Row row合同单位汇总Row = ((合同单位汇总Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        单位类型,
                        合同单位名称,
                        应收,
                        优惠,
                        实收,
                        dwmc};
                row合同单位汇总Row.ItemArray = columnValuesArray;
                this.Rows.Add(row合同单位汇总Row);
                return row合同单位汇总Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                合同单位汇总DataTable cln = ((合同单位汇总DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 合同单位汇总DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column单位类型 = base.Columns["单位类型"];
                this.column合同单位名称 = base.Columns["合同单位名称"];
                this.column应收 = base.Columns["应收"];
                this.column优惠 = base.Columns["优惠"];
                this.column实收 = base.Columns["实收"];
                this.columndwmc = base.Columns["dwmc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column单位类型 = new global::System.Data.DataColumn("单位类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位类型);
                this.column合同单位名称 = new global::System.Data.DataColumn("合同单位名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column合同单位名称);
                this.column应收 = new global::System.Data.DataColumn("应收", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column应收);
                this.column优惠 = new global::System.Data.DataColumn("优惠", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column优惠);
                this.column实收 = new global::System.Data.DataColumn("实收", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column实收);
                this.columndwmc = new global::System.Data.DataColumn("dwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndwmc);
                this.column单位类型.Caption = "姓名";
                this.column合同单位名称.Caption = "退费日期";
                this.column应收.Caption = "退费员";
                this.column优惠.Caption = "发票金额";
                this.column实收.Caption = "序号";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 合同单位汇总Row New合同单位汇总Row() {
                return ((合同单位汇总Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 合同单位汇总Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(合同单位汇总Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.合同单位汇总RowChanged != null)) {
                    this.合同单位汇总RowChanged(this, new 合同单位汇总RowChangeEvent(((合同单位汇总Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.合同单位汇总RowChanging != null)) {
                    this.合同单位汇总RowChanging(this, new 合同单位汇总RowChangeEvent(((合同单位汇总Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.合同单位汇总RowDeleted != null)) {
                    this.合同单位汇总RowDeleted(this, new 合同单位汇总RowChangeEvent(((合同单位汇总Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.合同单位汇总RowDeleting != null)) {
                    this.合同单位汇总RowDeleting(this, new 合同单位汇总RowChangeEvent(((合同单位汇总Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove合同单位汇总Row(合同单位汇总Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "合同单位汇总DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 医保日统计_明细DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnyblx;
            
            private global::System.Data.DataColumn columnybll;
            
            private global::System.Data.DataColumn columnrq;
            
            private global::System.Data.DataColumn columnybzf;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医保日统计_明细DataTable() {
                this.TableName = "医保日统计_明细";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 医保日统计_明细DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 医保日统计_明细DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yblxColumn {
                get {
                    return this.columnyblx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ybllColumn {
                get {
                    return this.columnybll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rqColumn {
                get {
                    return this.columnrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ybzfColumn {
                get {
                    return this.columnybzf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医保日统计_明细Row this[int index] {
                get {
                    return ((医保日统计_明细Row)(this.Rows[index]));
                }
            }
            
            public event 医保日统计_明细RowChangeEventHandler 医保日统计_明细RowChanging;
            
            public event 医保日统计_明细RowChangeEventHandler 医保日统计_明细RowChanged;
            
            public event 医保日统计_明细RowChangeEventHandler 医保日统计_明细RowDeleting;
            
            public event 医保日统计_明细RowChangeEventHandler 医保日统计_明细RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add医保日统计_明细Row(医保日统计_明细Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医保日统计_明细Row Add医保日统计_明细Row(string yblx, string ybll, string rq, decimal ybzf) {
                医保日统计_明细Row row医保日统计_明细Row = ((医保日统计_明细Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        yblx,
                        ybll,
                        rq,
                        ybzf};
                row医保日统计_明细Row.ItemArray = columnValuesArray;
                this.Rows.Add(row医保日统计_明细Row);
                return row医保日统计_明细Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                医保日统计_明细DataTable cln = ((医保日统计_明细DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 医保日统计_明细DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnyblx = base.Columns["yblx"];
                this.columnybll = base.Columns["ybll"];
                this.columnrq = base.Columns["rq"];
                this.columnybzf = base.Columns["ybzf"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnyblx = new global::System.Data.DataColumn("yblx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyblx);
                this.columnybll = new global::System.Data.DataColumn("ybll", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnybll);
                this.columnrq = new global::System.Data.DataColumn("rq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrq);
                this.columnybzf = new global::System.Data.DataColumn("ybzf", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnybzf);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医保日统计_明细Row New医保日统计_明细Row() {
                return ((医保日统计_明细Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 医保日统计_明细Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(医保日统计_明细Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.医保日统计_明细RowChanged != null)) {
                    this.医保日统计_明细RowChanged(this, new 医保日统计_明细RowChangeEvent(((医保日统计_明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.医保日统计_明细RowChanging != null)) {
                    this.医保日统计_明细RowChanging(this, new 医保日统计_明细RowChangeEvent(((医保日统计_明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.医保日统计_明细RowDeleted != null)) {
                    this.医保日统计_明细RowDeleted(this, new 医保日统计_明细RowChangeEvent(((医保日统计_明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.医保日统计_明细RowDeleting != null)) {
                    this.医保日统计_明细RowDeleting(this, new 医保日统计_明细RowChangeEvent(((医保日统计_明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove医保日统计_明细Row(医保日统计_明细Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "医保日统计_明细DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 门诊收费员工作量DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnsfy;
            
            private global::System.Data.DataColumn columnghzs;
            
            private global::System.Data.DataColumn columnghzfzs;
            
            private global::System.Data.DataColumn columnghyxzs;
            
            private global::System.Data.DataColumn columnsfzs;
            
            private global::System.Data.DataColumn columnsfzfzs;
            
            private global::System.Data.DataColumn columnsfyxzs;
            
            private global::System.Data.DataColumn columnsfcs;
            
            private global::System.Data.DataColumn columnsftfcs;
            
            private global::System.Data.DataColumn columnrycs;
            
            private global::System.Data.DataColumn columnyjks;
            
            private global::System.Data.DataColumn columnjscs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊收费员工作量DataTable() {
                this.TableName = "门诊收费员工作量";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 门诊收费员工作量DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 门诊收费员工作量DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sfyColumn {
                get {
                    return this.columnsfy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ghzsColumn {
                get {
                    return this.columnghzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ghzfzsColumn {
                get {
                    return this.columnghzfzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ghyxzsColumn {
                get {
                    return this.columnghyxzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sfzsColumn {
                get {
                    return this.columnsfzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sfzfzsColumn {
                get {
                    return this.columnsfzfzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sfyxzsColumn {
                get {
                    return this.columnsfyxzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sfcsColumn {
                get {
                    return this.columnsfcs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sftfcsColumn {
                get {
                    return this.columnsftfcs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rycsColumn {
                get {
                    return this.columnrycs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yjksColumn {
                get {
                    return this.columnyjks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jscsColumn {
                get {
                    return this.columnjscs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊收费员工作量Row this[int index] {
                get {
                    return ((门诊收费员工作量Row)(this.Rows[index]));
                }
            }
            
            public event 门诊收费员工作量RowChangeEventHandler 门诊收费员工作量RowChanging;
            
            public event 门诊收费员工作量RowChangeEventHandler 门诊收费员工作量RowChanged;
            
            public event 门诊收费员工作量RowChangeEventHandler 门诊收费员工作量RowDeleting;
            
            public event 门诊收费员工作量RowChangeEventHandler 门诊收费员工作量RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add门诊收费员工作量Row(门诊收费员工作量Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊收费员工作量Row Add门诊收费员工作量Row(int xh, string sfy, int ghzs, int ghzfzs, int ghyxzs, int sfzs, int sfzfzs, int sfyxzs, int sfcs, int sftfcs, int rycs, int yjks, int jscs) {
                门诊收费员工作量Row row门诊收费员工作量Row = ((门诊收费员工作量Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        sfy,
                        ghzs,
                        ghzfzs,
                        ghyxzs,
                        sfzs,
                        sfzfzs,
                        sfyxzs,
                        sfcs,
                        sftfcs,
                        rycs,
                        yjks,
                        jscs};
                row门诊收费员工作量Row.ItemArray = columnValuesArray;
                this.Rows.Add(row门诊收费员工作量Row);
                return row门诊收费员工作量Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                门诊收费员工作量DataTable cln = ((门诊收费员工作量DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 门诊收费员工作量DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnsfy = base.Columns["sfy"];
                this.columnghzs = base.Columns["ghzs"];
                this.columnghzfzs = base.Columns["ghzfzs"];
                this.columnghyxzs = base.Columns["ghyxzs"];
                this.columnsfzs = base.Columns["sfzs"];
                this.columnsfzfzs = base.Columns["sfzfzs"];
                this.columnsfyxzs = base.Columns["sfyxzs"];
                this.columnsfcs = base.Columns["sfcs"];
                this.columnsftfcs = base.Columns["sftfcs"];
                this.columnrycs = base.Columns["rycs"];
                this.columnyjks = base.Columns["yjks"];
                this.columnjscs = base.Columns["jscs"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnsfy = new global::System.Data.DataColumn("sfy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsfy);
                this.columnghzs = new global::System.Data.DataColumn("ghzs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnghzs);
                this.columnghzfzs = new global::System.Data.DataColumn("ghzfzs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnghzfzs);
                this.columnghyxzs = new global::System.Data.DataColumn("ghyxzs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnghyxzs);
                this.columnsfzs = new global::System.Data.DataColumn("sfzs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsfzs);
                this.columnsfzfzs = new global::System.Data.DataColumn("sfzfzs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsfzfzs);
                this.columnsfyxzs = new global::System.Data.DataColumn("sfyxzs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsfyxzs);
                this.columnsfcs = new global::System.Data.DataColumn("sfcs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsfcs);
                this.columnsftfcs = new global::System.Data.DataColumn("sftfcs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsftfcs);
                this.columnrycs = new global::System.Data.DataColumn("rycs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrycs);
                this.columnyjks = new global::System.Data.DataColumn("yjks", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyjks);
                this.columnjscs = new global::System.Data.DataColumn("jscs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjscs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊收费员工作量Row New门诊收费员工作量Row() {
                return ((门诊收费员工作量Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 门诊收费员工作量Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(门诊收费员工作量Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.门诊收费员工作量RowChanged != null)) {
                    this.门诊收费员工作量RowChanged(this, new 门诊收费员工作量RowChangeEvent(((门诊收费员工作量Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.门诊收费员工作量RowChanging != null)) {
                    this.门诊收费员工作量RowChanging(this, new 门诊收费员工作量RowChangeEvent(((门诊收费员工作量Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.门诊收费员工作量RowDeleted != null)) {
                    this.门诊收费员工作量RowDeleted(this, new 门诊收费员工作量RowChangeEvent(((门诊收费员工作量Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.门诊收费员工作量RowDeleting != null)) {
                    this.门诊收费员工作量RowDeleting(this, new 门诊收费员工作量RowChangeEvent(((门诊收费员工作量Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove门诊收费员工作量Row(门诊收费员工作量Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "门诊收费员工作量DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 门诊医生接诊量DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnXH;
            
            private global::System.Data.DataColumn columnKSMC;
            
            private global::System.Data.DataColumn columnYSMC;
            
            private global::System.Data.DataColumn columnZRC;
            
            private global::System.Data.DataColumn columnYHRC;
            
            private global::System.Data.DataColumn columnGHJE;
            
            private global::System.Data.DataColumn columnWHRC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊医生接诊量DataTable() {
                this.TableName = "门诊医生接诊量";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 门诊医生接诊量DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 门诊医生接诊量DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XHColumn {
                get {
                    return this.columnXH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KSMCColumn {
                get {
                    return this.columnKSMC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YSMCColumn {
                get {
                    return this.columnYSMC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZRCColumn {
                get {
                    return this.columnZRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YHRCColumn {
                get {
                    return this.columnYHRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GHJEColumn {
                get {
                    return this.columnGHJE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WHRCColumn {
                get {
                    return this.columnWHRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊医生接诊量Row this[int index] {
                get {
                    return ((门诊医生接诊量Row)(this.Rows[index]));
                }
            }
            
            public event 门诊医生接诊量RowChangeEventHandler 门诊医生接诊量RowChanging;
            
            public event 门诊医生接诊量RowChangeEventHandler 门诊医生接诊量RowChanged;
            
            public event 门诊医生接诊量RowChangeEventHandler 门诊医生接诊量RowDeleting;
            
            public event 门诊医生接诊量RowChangeEventHandler 门诊医生接诊量RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add门诊医生接诊量Row(门诊医生接诊量Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊医生接诊量Row Add门诊医生接诊量Row(int XH, string KSMC, string YSMC, int ZRC, int YHRC, decimal GHJE, int WHRC) {
                门诊医生接诊量Row row门诊医生接诊量Row = ((门诊医生接诊量Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        XH,
                        KSMC,
                        YSMC,
                        ZRC,
                        YHRC,
                        GHJE,
                        WHRC};
                row门诊医生接诊量Row.ItemArray = columnValuesArray;
                this.Rows.Add(row门诊医生接诊量Row);
                return row门诊医生接诊量Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                门诊医生接诊量DataTable cln = ((门诊医生接诊量DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 门诊医生接诊量DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnXH = base.Columns["XH"];
                this.columnKSMC = base.Columns["KSMC"];
                this.columnYSMC = base.Columns["YSMC"];
                this.columnZRC = base.Columns["ZRC"];
                this.columnYHRC = base.Columns["YHRC"];
                this.columnGHJE = base.Columns["GHJE"];
                this.columnWHRC = base.Columns["WHRC"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnXH = new global::System.Data.DataColumn("XH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXH);
                this.columnKSMC = new global::System.Data.DataColumn("KSMC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKSMC);
                this.columnYSMC = new global::System.Data.DataColumn("YSMC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYSMC);
                this.columnZRC = new global::System.Data.DataColumn("ZRC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZRC);
                this.columnYHRC = new global::System.Data.DataColumn("YHRC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYHRC);
                this.columnGHJE = new global::System.Data.DataColumn("GHJE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGHJE);
                this.columnWHRC = new global::System.Data.DataColumn("WHRC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHRC);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊医生接诊量Row New门诊医生接诊量Row() {
                return ((门诊医生接诊量Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 门诊医生接诊量Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(门诊医生接诊量Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.门诊医生接诊量RowChanged != null)) {
                    this.门诊医生接诊量RowChanged(this, new 门诊医生接诊量RowChangeEvent(((门诊医生接诊量Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.门诊医生接诊量RowChanging != null)) {
                    this.门诊医生接诊量RowChanging(this, new 门诊医生接诊量RowChangeEvent(((门诊医生接诊量Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.门诊医生接诊量RowDeleted != null)) {
                    this.门诊医生接诊量RowDeleted(this, new 门诊医生接诊量RowChangeEvent(((门诊医生接诊量Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.门诊医生接诊量RowDeleting != null)) {
                    this.门诊医生接诊量RowDeleting(this, new 门诊医生接诊量RowChangeEvent(((门诊医生接诊量Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove门诊医生接诊量Row(门诊医生接诊量Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "门诊医生接诊量DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 收费明细DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnitem_name;
            
            private global::System.Data.DataColumn columnje;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费明细DataTable() {
                this.TableName = "收费明细";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费明细DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 收费明细DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn item_nameColumn {
                get {
                    return this.columnitem_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jeColumn {
                get {
                    return this.columnje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费明细Row this[int index] {
                get {
                    return ((收费明细Row)(this.Rows[index]));
                }
            }
            
            public event 收费明细RowChangeEventHandler 收费明细RowChanging;
            
            public event 收费明细RowChangeEventHandler 收费明细RowChanged;
            
            public event 收费明细RowChangeEventHandler 收费明细RowDeleting;
            
            public event 收费明细RowChangeEventHandler 收费明细RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add收费明细Row(收费明细Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费明细Row Add收费明细Row(string item_name, decimal je) {
                收费明细Row row收费明细Row = ((收费明细Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        item_name,
                        je};
                row收费明细Row.ItemArray = columnValuesArray;
                this.Rows.Add(row收费明细Row);
                return row收费明细Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                收费明细DataTable cln = ((收费明细DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 收费明细DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnitem_name = base.Columns["item_name"];
                this.columnje = base.Columns["je"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnitem_name = new global::System.Data.DataColumn("item_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitem_name);
                this.columnje = new global::System.Data.DataColumn("je", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnje);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费明细Row New收费明细Row() {
                return ((收费明细Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 收费明细Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(收费明细Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.收费明细RowChanged != null)) {
                    this.收费明细RowChanged(this, new 收费明细RowChangeEvent(((收费明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.收费明细RowChanging != null)) {
                    this.收费明细RowChanging(this, new 收费明细RowChangeEvent(((收费明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.收费明细RowDeleted != null)) {
                    this.收费明细RowDeleted(this, new 收费明细RowChangeEvent(((收费明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.收费明细RowDeleting != null)) {
                    this.收费明细RowDeleting(this, new 收费明细RowChangeEvent(((收费明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove收费明细Row(收费明细Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "收费明细DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 收费物价明细DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnpm;
            
            private global::System.Data.DataColumn columndw;
            
            private global::System.Data.DataColumn columngg;
            
            private global::System.Data.DataColumn columnjs;
            
            private global::System.Data.DataColumn columnsl;
            
            private global::System.Data.DataColumn columnje;
            
            private global::System.Data.DataColumn columndj;
            
            private global::System.Data.DataColumn columnjx;
            
            private global::System.Data.DataColumn columnhjid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费物价明细DataTable() {
                this.TableName = "收费物价明细";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费物价明细DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 收费物价明细DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pmColumn {
                get {
                    return this.columnpm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dwColumn {
                get {
                    return this.columndw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ggColumn {
                get {
                    return this.columngg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jsColumn {
                get {
                    return this.columnjs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn slColumn {
                get {
                    return this.columnsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jeColumn {
                get {
                    return this.columnje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djColumn {
                get {
                    return this.columndj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jxColumn {
                get {
                    return this.columnjx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hjidColumn {
                get {
                    return this.columnhjid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费物价明细Row this[int index] {
                get {
                    return ((收费物价明细Row)(this.Rows[index]));
                }
            }
            
            public event 收费物价明细RowChangeEventHandler 收费物价明细RowChanging;
            
            public event 收费物价明细RowChangeEventHandler 收费物价明细RowChanged;
            
            public event 收费物价明细RowChangeEventHandler 收费物价明细RowDeleting;
            
            public event 收费物价明细RowChangeEventHandler 收费物价明细RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add收费物价明细Row(收费物价明细Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费物价明细Row Add收费物价明细Row(string pm, decimal dw, string gg, string js, string sl, string je, string dj, string jx, string hjid) {
                收费物价明细Row row收费物价明细Row = ((收费物价明细Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        pm,
                        dw,
                        gg,
                        js,
                        sl,
                        je,
                        dj,
                        jx,
                        hjid};
                row收费物价明细Row.ItemArray = columnValuesArray;
                this.Rows.Add(row收费物价明细Row);
                return row收费物价明细Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                收费物价明细DataTable cln = ((收费物价明细DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 收费物价明细DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnpm = base.Columns["pm"];
                this.columndw = base.Columns["dw"];
                this.columngg = base.Columns["gg"];
                this.columnjs = base.Columns["js"];
                this.columnsl = base.Columns["sl"];
                this.columnje = base.Columns["je"];
                this.columndj = base.Columns["dj"];
                this.columnjx = base.Columns["jx"];
                this.columnhjid = base.Columns["hjid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnpm = new global::System.Data.DataColumn("pm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpm);
                this.columndw = new global::System.Data.DataColumn("dw", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndw);
                this.columngg = new global::System.Data.DataColumn("gg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngg);
                this.columnjs = new global::System.Data.DataColumn("js", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjs);
                this.columnsl = new global::System.Data.DataColumn("sl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsl);
                this.columnje = new global::System.Data.DataColumn("je", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnje);
                this.columndj = new global::System.Data.DataColumn("dj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndj);
                this.columnjx = new global::System.Data.DataColumn("jx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjx);
                this.columnhjid = new global::System.Data.DataColumn("hjid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhjid);
                this.columnpm.Caption = "item_name";
                this.columndw.Caption = "je";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费物价明细Row New收费物价明细Row() {
                return ((收费物价明细Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 收费物价明细Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(收费物价明细Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.收费物价明细RowChanged != null)) {
                    this.收费物价明细RowChanged(this, new 收费物价明细RowChangeEvent(((收费物价明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.收费物价明细RowChanging != null)) {
                    this.收费物价明细RowChanging(this, new 收费物价明细RowChangeEvent(((收费物价明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.收费物价明细RowDeleted != null)) {
                    this.收费物价明细RowDeleted(this, new 收费物价明细RowChangeEvent(((收费物价明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.收费物价明细RowDeleting != null)) {
                    this.收费物价明细RowDeleting(this, new 收费物价明细RowChangeEvent(((收费物价明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove收费物价明细Row(收费物价明细Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "收费物价明细DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 收费项目1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnT24;
            
            private global::System.Data.DataColumn columnT23;
            
            private global::System.Data.DataColumn columnT22;
            
            private global::System.Data.DataColumn columnT21;
            
            private global::System.Data.DataColumn columnT20;
            
            private global::System.Data.DataColumn columnT19;
            
            private global::System.Data.DataColumn columnT18;
            
            private global::System.Data.DataColumn columnT17;
            
            private global::System.Data.DataColumn columnT16;
            
            private global::System.Data.DataColumn columnT15;
            
            private global::System.Data.DataColumn columnT14;
            
            private global::System.Data.DataColumn columnT13;
            
            private global::System.Data.DataColumn columnT12;
            
            private global::System.Data.DataColumn columnT11;
            
            private global::System.Data.DataColumn columnT10;
            
            private global::System.Data.DataColumn columnT9;
            
            private global::System.Data.DataColumn columnT8;
            
            private global::System.Data.DataColumn columnT7;
            
            private global::System.Data.DataColumn columnT6;
            
            private global::System.Data.DataColumn columnT5;
            
            private global::System.Data.DataColumn columnT1;
            
            private global::System.Data.DataColumn columnT2;
            
            private global::System.Data.DataColumn columnT3;
            
            private global::System.Data.DataColumn columnT4;
            
            private global::System.Data.DataColumn columnT33;
            
            private global::System.Data.DataColumn columnT34;
            
            private global::System.Data.DataColumn columnT35;
            
            private global::System.Data.DataColumn columnT36;
            
            private global::System.Data.DataColumn columnT37;
            
            private global::System.Data.DataColumn columnT38;
            
            private global::System.Data.DataColumn columnT39;
            
            private global::System.Data.DataColumn columnT40;
            
            private global::System.Data.DataColumn columnT25;
            
            private global::System.Data.DataColumn columnT26;
            
            private global::System.Data.DataColumn columnT27;
            
            private global::System.Data.DataColumn columnT28;
            
            private global::System.Data.DataColumn columnT29;
            
            private global::System.Data.DataColumn columnT30;
            
            private global::System.Data.DataColumn columnT31;
            
            private global::System.Data.DataColumn columnT32;
            
            private global::System.Data.DataColumn columnT41;
            
            private global::System.Data.DataColumn columnT42;
            
            private global::System.Data.DataColumn columnT43;
            
            private global::System.Data.DataColumn columnT44;
            
            private global::System.Data.DataColumn columnT45;
            
            private global::System.Data.DataColumn columnT46;
            
            private global::System.Data.DataColumn columnT47;
            
            private global::System.Data.DataColumn columnT48;
            
            private global::System.Data.DataColumn columnT49;
            
            private global::System.Data.DataColumn columnT50;
            
            private global::System.Data.DataColumn columnT51;
            
            private global::System.Data.DataColumn columnT52;
            
            private global::System.Data.DataColumn columnT53;
            
            private global::System.Data.DataColumn columnT54;
            
            private global::System.Data.DataColumn columnT55;
            
            private global::System.Data.DataColumn columnT56;
            
            private global::System.Data.DataColumn columnT57;
            
            private global::System.Data.DataColumn columnT58;
            
            private global::System.Data.DataColumn columnT59;
            
            private global::System.Data.DataColumn columnT60;
            
            private global::System.Data.DataColumn columnT61;
            
            private global::System.Data.DataColumn columnT62;
            
            private global::System.Data.DataColumn columnT63;
            
            private global::System.Data.DataColumn columnT64;
            
            private global::System.Data.DataColumn columnT65;
            
            private global::System.Data.DataColumn columnT66;
            
            private global::System.Data.DataColumn columnT67;
            
            private global::System.Data.DataColumn columnT68;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目1DataTable() {
                this.TableName = "收费项目1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费项目1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 收费项目1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T24Column {
                get {
                    return this.columnT24;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T23Column {
                get {
                    return this.columnT23;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T22Column {
                get {
                    return this.columnT22;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T21Column {
                get {
                    return this.columnT21;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T20Column {
                get {
                    return this.columnT20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T19Column {
                get {
                    return this.columnT19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T18Column {
                get {
                    return this.columnT18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T17Column {
                get {
                    return this.columnT17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T16Column {
                get {
                    return this.columnT16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T15Column {
                get {
                    return this.columnT15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T14Column {
                get {
                    return this.columnT14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T13Column {
                get {
                    return this.columnT13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T12Column {
                get {
                    return this.columnT12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T11Column {
                get {
                    return this.columnT11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T10Column {
                get {
                    return this.columnT10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T9Column {
                get {
                    return this.columnT9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T8Column {
                get {
                    return this.columnT8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T7Column {
                get {
                    return this.columnT7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T6Column {
                get {
                    return this.columnT6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T5Column {
                get {
                    return this.columnT5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T1Column {
                get {
                    return this.columnT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T2Column {
                get {
                    return this.columnT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T3Column {
                get {
                    return this.columnT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T4Column {
                get {
                    return this.columnT4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T33Column {
                get {
                    return this.columnT33;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T34Column {
                get {
                    return this.columnT34;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T35Column {
                get {
                    return this.columnT35;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T36Column {
                get {
                    return this.columnT36;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T37Column {
                get {
                    return this.columnT37;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T38Column {
                get {
                    return this.columnT38;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T39Column {
                get {
                    return this.columnT39;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T40Column {
                get {
                    return this.columnT40;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T25Column {
                get {
                    return this.columnT25;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T26Column {
                get {
                    return this.columnT26;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T27Column {
                get {
                    return this.columnT27;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T28Column {
                get {
                    return this.columnT28;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T29Column {
                get {
                    return this.columnT29;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T30Column {
                get {
                    return this.columnT30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T31Column {
                get {
                    return this.columnT31;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T32Column {
                get {
                    return this.columnT32;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T41Column {
                get {
                    return this.columnT41;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T42Column {
                get {
                    return this.columnT42;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T43Column {
                get {
                    return this.columnT43;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T44Column {
                get {
                    return this.columnT44;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T45Column {
                get {
                    return this.columnT45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T46Column {
                get {
                    return this.columnT46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T47Column {
                get {
                    return this.columnT47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T48Column {
                get {
                    return this.columnT48;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T49Column {
                get {
                    return this.columnT49;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T50Column {
                get {
                    return this.columnT50;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T51Column {
                get {
                    return this.columnT51;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T52Column {
                get {
                    return this.columnT52;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T53Column {
                get {
                    return this.columnT53;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T54Column {
                get {
                    return this.columnT54;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T55Column {
                get {
                    return this.columnT55;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T56Column {
                get {
                    return this.columnT56;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T57Column {
                get {
                    return this.columnT57;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T58Column {
                get {
                    return this.columnT58;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T59Column {
                get {
                    return this.columnT59;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T60Column {
                get {
                    return this.columnT60;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T61Column {
                get {
                    return this.columnT61;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T62Column {
                get {
                    return this.columnT62;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T63Column {
                get {
                    return this.columnT63;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T64Column {
                get {
                    return this.columnT64;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T65Column {
                get {
                    return this.columnT65;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T66Column {
                get {
                    return this.columnT66;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T67Column {
                get {
                    return this.columnT67;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T68Column {
                get {
                    return this.columnT68;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目1Row this[int index] {
                get {
                    return ((收费项目1Row)(this.Rows[index]));
                }
            }
            
            public event 收费项目1RowChangeEventHandler 收费项目1RowChanging;
            
            public event 收费项目1RowChangeEventHandler 收费项目1RowChanged;
            
            public event 收费项目1RowChangeEventHandler 收费项目1RowDeleting;
            
            public event 收费项目1RowChangeEventHandler 收费项目1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add收费项目1Row(收费项目1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目1Row Add收费项目1Row(
                        string T24, 
                        string T23, 
                        string T22, 
                        string T21, 
                        string T20, 
                        string T19, 
                        string T18, 
                        string T17, 
                        string T16, 
                        string T15, 
                        string T14, 
                        string T13, 
                        string T12, 
                        string T11, 
                        string T10, 
                        string T9, 
                        string T8, 
                        string T7, 
                        string T6, 
                        string T5, 
                        string T1, 
                        string T2, 
                        string T3, 
                        string T4, 
                        string T33, 
                        string T34, 
                        string T35, 
                        string T36, 
                        string T37, 
                        string T38, 
                        string T39, 
                        string T40, 
                        string T25, 
                        string T26, 
                        string T27, 
                        string T28, 
                        string T29, 
                        string T30, 
                        string T31, 
                        string T32, 
                        string T41, 
                        string T42, 
                        string T43, 
                        string T44, 
                        string T45, 
                        string T46, 
                        string T47, 
                        string T48, 
                        string T49, 
                        string T50, 
                        string T51, 
                        string T52, 
                        string T53, 
                        string T54, 
                        string T55, 
                        string T56, 
                        string T57, 
                        string T58, 
                        string T59, 
                        string T60, 
                        string T61, 
                        string T62, 
                        string T63, 
                        string T64, 
                        string T65, 
                        string T66, 
                        string T67, 
                        string T68) {
                收费项目1Row row收费项目1Row = ((收费项目1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        T24,
                        T23,
                        T22,
                        T21,
                        T20,
                        T19,
                        T18,
                        T17,
                        T16,
                        T15,
                        T14,
                        T13,
                        T12,
                        T11,
                        T10,
                        T9,
                        T8,
                        T7,
                        T6,
                        T5,
                        T1,
                        T2,
                        T3,
                        T4,
                        T33,
                        T34,
                        T35,
                        T36,
                        T37,
                        T38,
                        T39,
                        T40,
                        T25,
                        T26,
                        T27,
                        T28,
                        T29,
                        T30,
                        T31,
                        T32,
                        T41,
                        T42,
                        T43,
                        T44,
                        T45,
                        T46,
                        T47,
                        T48,
                        T49,
                        T50,
                        T51,
                        T52,
                        T53,
                        T54,
                        T55,
                        T56,
                        T57,
                        T58,
                        T59,
                        T60,
                        T61,
                        T62,
                        T63,
                        T64,
                        T65,
                        T66,
                        T67,
                        T68};
                row收费项目1Row.ItemArray = columnValuesArray;
                this.Rows.Add(row收费项目1Row);
                return row收费项目1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                收费项目1DataTable cln = ((收费项目1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 收费项目1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnT24 = base.Columns["T24"];
                this.columnT23 = base.Columns["T23"];
                this.columnT22 = base.Columns["T22"];
                this.columnT21 = base.Columns["T21"];
                this.columnT20 = base.Columns["T20"];
                this.columnT19 = base.Columns["T19"];
                this.columnT18 = base.Columns["T18"];
                this.columnT17 = base.Columns["T17"];
                this.columnT16 = base.Columns["T16"];
                this.columnT15 = base.Columns["T15"];
                this.columnT14 = base.Columns["T14"];
                this.columnT13 = base.Columns["T13"];
                this.columnT12 = base.Columns["T12"];
                this.columnT11 = base.Columns["T11"];
                this.columnT10 = base.Columns["T10"];
                this.columnT9 = base.Columns["T9"];
                this.columnT8 = base.Columns["T8"];
                this.columnT7 = base.Columns["T7"];
                this.columnT6 = base.Columns["T6"];
                this.columnT5 = base.Columns["T5"];
                this.columnT1 = base.Columns["T1"];
                this.columnT2 = base.Columns["T2"];
                this.columnT3 = base.Columns["T3"];
                this.columnT4 = base.Columns["T4"];
                this.columnT33 = base.Columns["T33"];
                this.columnT34 = base.Columns["T34"];
                this.columnT35 = base.Columns["T35"];
                this.columnT36 = base.Columns["T36"];
                this.columnT37 = base.Columns["T37"];
                this.columnT38 = base.Columns["T38"];
                this.columnT39 = base.Columns["T39"];
                this.columnT40 = base.Columns["T40"];
                this.columnT25 = base.Columns["T25"];
                this.columnT26 = base.Columns["T26"];
                this.columnT27 = base.Columns["T27"];
                this.columnT28 = base.Columns["T28"];
                this.columnT29 = base.Columns["T29"];
                this.columnT30 = base.Columns["T30"];
                this.columnT31 = base.Columns["T31"];
                this.columnT32 = base.Columns["T32"];
                this.columnT41 = base.Columns["T41"];
                this.columnT42 = base.Columns["T42"];
                this.columnT43 = base.Columns["T43"];
                this.columnT44 = base.Columns["T44"];
                this.columnT45 = base.Columns["T45"];
                this.columnT46 = base.Columns["T46"];
                this.columnT47 = base.Columns["T47"];
                this.columnT48 = base.Columns["T48"];
                this.columnT49 = base.Columns["T49"];
                this.columnT50 = base.Columns["T50"];
                this.columnT51 = base.Columns["T51"];
                this.columnT52 = base.Columns["T52"];
                this.columnT53 = base.Columns["T53"];
                this.columnT54 = base.Columns["T54"];
                this.columnT55 = base.Columns["T55"];
                this.columnT56 = base.Columns["T56"];
                this.columnT57 = base.Columns["T57"];
                this.columnT58 = base.Columns["T58"];
                this.columnT59 = base.Columns["T59"];
                this.columnT60 = base.Columns["T60"];
                this.columnT61 = base.Columns["T61"];
                this.columnT62 = base.Columns["T62"];
                this.columnT63 = base.Columns["T63"];
                this.columnT64 = base.Columns["T64"];
                this.columnT65 = base.Columns["T65"];
                this.columnT66 = base.Columns["T66"];
                this.columnT67 = base.Columns["T67"];
                this.columnT68 = base.Columns["T68"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnT24 = new global::System.Data.DataColumn("T24", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT24);
                this.columnT23 = new global::System.Data.DataColumn("T23", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT23);
                this.columnT22 = new global::System.Data.DataColumn("T22", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT22);
                this.columnT21 = new global::System.Data.DataColumn("T21", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT21);
                this.columnT20 = new global::System.Data.DataColumn("T20", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT20);
                this.columnT19 = new global::System.Data.DataColumn("T19", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT19);
                this.columnT18 = new global::System.Data.DataColumn("T18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT18);
                this.columnT17 = new global::System.Data.DataColumn("T17", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT17);
                this.columnT16 = new global::System.Data.DataColumn("T16", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT16);
                this.columnT15 = new global::System.Data.DataColumn("T15", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT15);
                this.columnT14 = new global::System.Data.DataColumn("T14", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT14);
                this.columnT13 = new global::System.Data.DataColumn("T13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT13);
                this.columnT12 = new global::System.Data.DataColumn("T12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT12);
                this.columnT11 = new global::System.Data.DataColumn("T11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT11);
                this.columnT10 = new global::System.Data.DataColumn("T10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT10);
                this.columnT9 = new global::System.Data.DataColumn("T9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT9);
                this.columnT8 = new global::System.Data.DataColumn("T8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT8);
                this.columnT7 = new global::System.Data.DataColumn("T7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT7);
                this.columnT6 = new global::System.Data.DataColumn("T6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT6);
                this.columnT5 = new global::System.Data.DataColumn("T5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT5);
                this.columnT1 = new global::System.Data.DataColumn("T1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT1);
                this.columnT2 = new global::System.Data.DataColumn("T2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT2);
                this.columnT3 = new global::System.Data.DataColumn("T3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT3);
                this.columnT4 = new global::System.Data.DataColumn("T4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT4);
                this.columnT33 = new global::System.Data.DataColumn("T33", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT33);
                this.columnT34 = new global::System.Data.DataColumn("T34", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT34);
                this.columnT35 = new global::System.Data.DataColumn("T35", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT35);
                this.columnT36 = new global::System.Data.DataColumn("T36", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT36);
                this.columnT37 = new global::System.Data.DataColumn("T37", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT37);
                this.columnT38 = new global::System.Data.DataColumn("T38", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT38);
                this.columnT39 = new global::System.Data.DataColumn("T39", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT39);
                this.columnT40 = new global::System.Data.DataColumn("T40", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT40);
                this.columnT25 = new global::System.Data.DataColumn("T25", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT25);
                this.columnT26 = new global::System.Data.DataColumn("T26", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT26);
                this.columnT27 = new global::System.Data.DataColumn("T27", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT27);
                this.columnT28 = new global::System.Data.DataColumn("T28", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT28);
                this.columnT29 = new global::System.Data.DataColumn("T29", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT29);
                this.columnT30 = new global::System.Data.DataColumn("T30", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT30);
                this.columnT31 = new global::System.Data.DataColumn("T31", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT31);
                this.columnT32 = new global::System.Data.DataColumn("T32", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT32);
                this.columnT41 = new global::System.Data.DataColumn("T41", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT41);
                this.columnT42 = new global::System.Data.DataColumn("T42", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT42);
                this.columnT43 = new global::System.Data.DataColumn("T43", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT43);
                this.columnT44 = new global::System.Data.DataColumn("T44", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT44);
                this.columnT45 = new global::System.Data.DataColumn("T45", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT45);
                this.columnT46 = new global::System.Data.DataColumn("T46", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT46);
                this.columnT47 = new global::System.Data.DataColumn("T47", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT47);
                this.columnT48 = new global::System.Data.DataColumn("T48", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT48);
                this.columnT49 = new global::System.Data.DataColumn("T49", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT49);
                this.columnT50 = new global::System.Data.DataColumn("T50", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT50);
                this.columnT51 = new global::System.Data.DataColumn("T51", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT51);
                this.columnT52 = new global::System.Data.DataColumn("T52", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT52);
                this.columnT53 = new global::System.Data.DataColumn("T53", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT53);
                this.columnT54 = new global::System.Data.DataColumn("T54", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT54);
                this.columnT55 = new global::System.Data.DataColumn("T55", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT55);
                this.columnT56 = new global::System.Data.DataColumn("T56", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT56);
                this.columnT57 = new global::System.Data.DataColumn("T57", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT57);
                this.columnT58 = new global::System.Data.DataColumn("T58", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT58);
                this.columnT59 = new global::System.Data.DataColumn("T59", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT59);
                this.columnT60 = new global::System.Data.DataColumn("T60", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT60);
                this.columnT61 = new global::System.Data.DataColumn("T61", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT61);
                this.columnT62 = new global::System.Data.DataColumn("T62", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT62);
                this.columnT63 = new global::System.Data.DataColumn("T63", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT63);
                this.columnT64 = new global::System.Data.DataColumn("T64", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT64);
                this.columnT65 = new global::System.Data.DataColumn("T65", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT65);
                this.columnT66 = new global::System.Data.DataColumn("T66", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT66);
                this.columnT67 = new global::System.Data.DataColumn("T67", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT67);
                this.columnT68 = new global::System.Data.DataColumn("T68", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT68);
                this.columnT24.Caption = "T1";
                this.columnT23.Caption = "T2";
                this.columnT22.Caption = "T3";
                this.columnT21.Caption = "T4";
                this.columnT20.Caption = "T1";
                this.columnT19.Caption = "T2";
                this.columnT18.Caption = "T3";
                this.columnT17.Caption = "T4";
                this.columnT16.Caption = "T1";
                this.columnT15.Caption = "T2";
                this.columnT14.Caption = "T3";
                this.columnT13.Caption = "T4";
                this.columnT12.Caption = "T1";
                this.columnT11.Caption = "T2";
                this.columnT10.Caption = "T3";
                this.columnT9.Caption = "T4";
                this.columnT8.Caption = "T1";
                this.columnT7.Caption = "T2";
                this.columnT6.Caption = "T3";
                this.columnT5.Caption = "T4";
                this.columnT33.Caption = "Column1";
                this.columnT34.Caption = "Column2";
                this.columnT35.Caption = "Column1";
                this.columnT36.Caption = "Column2";
                this.columnT37.Caption = "Column1";
                this.columnT38.Caption = "Column2";
                this.columnT39.Caption = "T31";
                this.columnT40.Caption = "T32";
                this.columnT25.Caption = "Column1";
                this.columnT26.Caption = "Column2";
                this.columnT27.Caption = "Column1";
                this.columnT28.Caption = "Column2";
                this.columnT29.Caption = "Column1";
                this.columnT30.Caption = "Column2";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目1Row New收费项目1Row() {
                return ((收费项目1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 收费项目1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(收费项目1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.收费项目1RowChanged != null)) {
                    this.收费项目1RowChanged(this, new 收费项目1RowChangeEvent(((收费项目1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.收费项目1RowChanging != null)) {
                    this.收费项目1RowChanging(this, new 收费项目1RowChangeEvent(((收费项目1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.收费项目1RowDeleted != null)) {
                    this.收费项目1RowDeleted(this, new 收费项目1RowChangeEvent(((收费项目1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.收费项目1RowDeleting != null)) {
                    this.收费项目1RowDeleting(this, new 收费项目1RowChangeEvent(((收费项目1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove收费项目1Row(收费项目1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "收费项目1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 收费项目金额1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJE24;
            
            private global::System.Data.DataColumn columnJE23;
            
            private global::System.Data.DataColumn columnJE22;
            
            private global::System.Data.DataColumn columnJE21;
            
            private global::System.Data.DataColumn columnJE20;
            
            private global::System.Data.DataColumn columnJE19;
            
            private global::System.Data.DataColumn columnJE18;
            
            private global::System.Data.DataColumn columnJE17;
            
            private global::System.Data.DataColumn columnJE16;
            
            private global::System.Data.DataColumn columnJE15;
            
            private global::System.Data.DataColumn columnJE14;
            
            private global::System.Data.DataColumn columnJE13;
            
            private global::System.Data.DataColumn columnJE12;
            
            private global::System.Data.DataColumn columnJE11;
            
            private global::System.Data.DataColumn columnJE10;
            
            private global::System.Data.DataColumn columnJE9;
            
            private global::System.Data.DataColumn columnJE8;
            
            private global::System.Data.DataColumn columnJE7;
            
            private global::System.Data.DataColumn columnJE6;
            
            private global::System.Data.DataColumn columnJE5;
            
            private global::System.Data.DataColumn columnJE1;
            
            private global::System.Data.DataColumn columnJE2;
            
            private global::System.Data.DataColumn columnJE3;
            
            private global::System.Data.DataColumn columnJE4;
            
            private global::System.Data.DataColumn columnJE33;
            
            private global::System.Data.DataColumn columnJE34;
            
            private global::System.Data.DataColumn columnJE35;
            
            private global::System.Data.DataColumn columnJE36;
            
            private global::System.Data.DataColumn columnJE37;
            
            private global::System.Data.DataColumn columnJE38;
            
            private global::System.Data.DataColumn columnJE39;
            
            private global::System.Data.DataColumn columnJE40;
            
            private global::System.Data.DataColumn columnJE25;
            
            private global::System.Data.DataColumn columnJE26;
            
            private global::System.Data.DataColumn columnJE27;
            
            private global::System.Data.DataColumn columnJE28;
            
            private global::System.Data.DataColumn columnJE29;
            
            private global::System.Data.DataColumn columnJE30;
            
            private global::System.Data.DataColumn columnJE31;
            
            private global::System.Data.DataColumn columnJE32;
            
            private global::System.Data.DataColumn columnJE41;
            
            private global::System.Data.DataColumn columnJE42;
            
            private global::System.Data.DataColumn columnJE43;
            
            private global::System.Data.DataColumn columnJE44;
            
            private global::System.Data.DataColumn columnJE45;
            
            private global::System.Data.DataColumn columnJE46;
            
            private global::System.Data.DataColumn columnJE47;
            
            private global::System.Data.DataColumn columnJE48;
            
            private global::System.Data.DataColumn columnJE49;
            
            private global::System.Data.DataColumn columnJE50;
            
            private global::System.Data.DataColumn columnJE51;
            
            private global::System.Data.DataColumn columnJE52;
            
            private global::System.Data.DataColumn columnJE53;
            
            private global::System.Data.DataColumn columnJE54;
            
            private global::System.Data.DataColumn columnJE55;
            
            private global::System.Data.DataColumn columnJE56;
            
            private global::System.Data.DataColumn columnJE57;
            
            private global::System.Data.DataColumn columnJE58;
            
            private global::System.Data.DataColumn columnJE59;
            
            private global::System.Data.DataColumn columnJE60;
            
            private global::System.Data.DataColumn columnJE61;
            
            private global::System.Data.DataColumn columnJE62;
            
            private global::System.Data.DataColumn columnJE63;
            
            private global::System.Data.DataColumn columnJE64;
            
            private global::System.Data.DataColumn columnJE65;
            
            private global::System.Data.DataColumn columnJE66;
            
            private global::System.Data.DataColumn columnJE67;
            
            private global::System.Data.DataColumn columnJE68;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目金额1DataTable() {
                this.TableName = "收费项目金额1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费项目金额1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 收费项目金额1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE24Column {
                get {
                    return this.columnJE24;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE23Column {
                get {
                    return this.columnJE23;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE22Column {
                get {
                    return this.columnJE22;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE21Column {
                get {
                    return this.columnJE21;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE20Column {
                get {
                    return this.columnJE20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE19Column {
                get {
                    return this.columnJE19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE18Column {
                get {
                    return this.columnJE18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE17Column {
                get {
                    return this.columnJE17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE16Column {
                get {
                    return this.columnJE16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE15Column {
                get {
                    return this.columnJE15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE14Column {
                get {
                    return this.columnJE14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE13Column {
                get {
                    return this.columnJE13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE12Column {
                get {
                    return this.columnJE12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE11Column {
                get {
                    return this.columnJE11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE10Column {
                get {
                    return this.columnJE10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE9Column {
                get {
                    return this.columnJE9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE8Column {
                get {
                    return this.columnJE8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE7Column {
                get {
                    return this.columnJE7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE6Column {
                get {
                    return this.columnJE6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE5Column {
                get {
                    return this.columnJE5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE1Column {
                get {
                    return this.columnJE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE2Column {
                get {
                    return this.columnJE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE3Column {
                get {
                    return this.columnJE3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE4Column {
                get {
                    return this.columnJE4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE33Column {
                get {
                    return this.columnJE33;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE34Column {
                get {
                    return this.columnJE34;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE35Column {
                get {
                    return this.columnJE35;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE36Column {
                get {
                    return this.columnJE36;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE37Column {
                get {
                    return this.columnJE37;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE38Column {
                get {
                    return this.columnJE38;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE39Column {
                get {
                    return this.columnJE39;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE40Column {
                get {
                    return this.columnJE40;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE25Column {
                get {
                    return this.columnJE25;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE26Column {
                get {
                    return this.columnJE26;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE27Column {
                get {
                    return this.columnJE27;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE28Column {
                get {
                    return this.columnJE28;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE29Column {
                get {
                    return this.columnJE29;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE30Column {
                get {
                    return this.columnJE30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE31Column {
                get {
                    return this.columnJE31;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE32Column {
                get {
                    return this.columnJE32;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE41Column {
                get {
                    return this.columnJE41;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE42Column {
                get {
                    return this.columnJE42;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE43Column {
                get {
                    return this.columnJE43;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE44Column {
                get {
                    return this.columnJE44;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE45Column {
                get {
                    return this.columnJE45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE46Column {
                get {
                    return this.columnJE46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE47Column {
                get {
                    return this.columnJE47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE48Column {
                get {
                    return this.columnJE48;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE49Column {
                get {
                    return this.columnJE49;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE50Column {
                get {
                    return this.columnJE50;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE51Column {
                get {
                    return this.columnJE51;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE52Column {
                get {
                    return this.columnJE52;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE53Column {
                get {
                    return this.columnJE53;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE54Column {
                get {
                    return this.columnJE54;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE55Column {
                get {
                    return this.columnJE55;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE56Column {
                get {
                    return this.columnJE56;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE57Column {
                get {
                    return this.columnJE57;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE58Column {
                get {
                    return this.columnJE58;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE59Column {
                get {
                    return this.columnJE59;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE60Column {
                get {
                    return this.columnJE60;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE61Column {
                get {
                    return this.columnJE61;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE62Column {
                get {
                    return this.columnJE62;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE63Column {
                get {
                    return this.columnJE63;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE64Column {
                get {
                    return this.columnJE64;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE65Column {
                get {
                    return this.columnJE65;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE66Column {
                get {
                    return this.columnJE66;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE67Column {
                get {
                    return this.columnJE67;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JE68Column {
                get {
                    return this.columnJE68;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目金额1Row this[int index] {
                get {
                    return ((收费项目金额1Row)(this.Rows[index]));
                }
            }
            
            public event 收费项目金额1RowChangeEventHandler 收费项目金额1RowChanging;
            
            public event 收费项目金额1RowChangeEventHandler 收费项目金额1RowChanged;
            
            public event 收费项目金额1RowChangeEventHandler 收费项目金额1RowDeleting;
            
            public event 收费项目金额1RowChangeEventHandler 收费项目金额1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add收费项目金额1Row(收费项目金额1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目金额1Row Add收费项目金额1Row(
                        string JE24, 
                        string JE23, 
                        string JE22, 
                        string JE21, 
                        string JE20, 
                        string JE19, 
                        string JE18, 
                        string JE17, 
                        string JE16, 
                        string JE15, 
                        string JE14, 
                        string JE13, 
                        string JE12, 
                        string JE11, 
                        string JE10, 
                        string JE9, 
                        string JE8, 
                        string JE7, 
                        string JE6, 
                        string JE5, 
                        string JE1, 
                        string JE2, 
                        string JE3, 
                        string JE4, 
                        string JE33, 
                        string JE34, 
                        string JE35, 
                        string JE36, 
                        string JE37, 
                        string JE38, 
                        string JE39, 
                        string JE40, 
                        string JE25, 
                        string JE26, 
                        string JE27, 
                        string JE28, 
                        string JE29, 
                        string JE30, 
                        string JE31, 
                        string JE32, 
                        string JE41, 
                        string JE42, 
                        string JE43, 
                        string JE44, 
                        string JE45, 
                        string JE46, 
                        string JE47, 
                        string JE48, 
                        string JE49, 
                        string JE50, 
                        string JE51, 
                        string JE52, 
                        string JE53, 
                        string JE54, 
                        string JE55, 
                        string JE56, 
                        string JE57, 
                        string JE58, 
                        string JE59, 
                        string JE60, 
                        string JE61, 
                        string JE62, 
                        string JE63, 
                        string JE64, 
                        string JE65, 
                        string JE66, 
                        string JE67, 
                        string JE68) {
                收费项目金额1Row row收费项目金额1Row = ((收费项目金额1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JE24,
                        JE23,
                        JE22,
                        JE21,
                        JE20,
                        JE19,
                        JE18,
                        JE17,
                        JE16,
                        JE15,
                        JE14,
                        JE13,
                        JE12,
                        JE11,
                        JE10,
                        JE9,
                        JE8,
                        JE7,
                        JE6,
                        JE5,
                        JE1,
                        JE2,
                        JE3,
                        JE4,
                        JE33,
                        JE34,
                        JE35,
                        JE36,
                        JE37,
                        JE38,
                        JE39,
                        JE40,
                        JE25,
                        JE26,
                        JE27,
                        JE28,
                        JE29,
                        JE30,
                        JE31,
                        JE32,
                        JE41,
                        JE42,
                        JE43,
                        JE44,
                        JE45,
                        JE46,
                        JE47,
                        JE48,
                        JE49,
                        JE50,
                        JE51,
                        JE52,
                        JE53,
                        JE54,
                        JE55,
                        JE56,
                        JE57,
                        JE58,
                        JE59,
                        JE60,
                        JE61,
                        JE62,
                        JE63,
                        JE64,
                        JE65,
                        JE66,
                        JE67,
                        JE68};
                row收费项目金额1Row.ItemArray = columnValuesArray;
                this.Rows.Add(row收费项目金额1Row);
                return row收费项目金额1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                收费项目金额1DataTable cln = ((收费项目金额1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 收费项目金额1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJE24 = base.Columns["JE24"];
                this.columnJE23 = base.Columns["JE23"];
                this.columnJE22 = base.Columns["JE22"];
                this.columnJE21 = base.Columns["JE21"];
                this.columnJE20 = base.Columns["JE20"];
                this.columnJE19 = base.Columns["JE19"];
                this.columnJE18 = base.Columns["JE18"];
                this.columnJE17 = base.Columns["JE17"];
                this.columnJE16 = base.Columns["JE16"];
                this.columnJE15 = base.Columns["JE15"];
                this.columnJE14 = base.Columns["JE14"];
                this.columnJE13 = base.Columns["JE13"];
                this.columnJE12 = base.Columns["JE12"];
                this.columnJE11 = base.Columns["JE11"];
                this.columnJE10 = base.Columns["JE10"];
                this.columnJE9 = base.Columns["JE9"];
                this.columnJE8 = base.Columns["JE8"];
                this.columnJE7 = base.Columns["JE7"];
                this.columnJE6 = base.Columns["JE6"];
                this.columnJE5 = base.Columns["JE5"];
                this.columnJE1 = base.Columns["JE1"];
                this.columnJE2 = base.Columns["JE2"];
                this.columnJE3 = base.Columns["JE3"];
                this.columnJE4 = base.Columns["JE4"];
                this.columnJE33 = base.Columns["JE33"];
                this.columnJE34 = base.Columns["JE34"];
                this.columnJE35 = base.Columns["JE35"];
                this.columnJE36 = base.Columns["JE36"];
                this.columnJE37 = base.Columns["JE37"];
                this.columnJE38 = base.Columns["JE38"];
                this.columnJE39 = base.Columns["JE39"];
                this.columnJE40 = base.Columns["JE40"];
                this.columnJE25 = base.Columns["JE25"];
                this.columnJE26 = base.Columns["JE26"];
                this.columnJE27 = base.Columns["JE27"];
                this.columnJE28 = base.Columns["JE28"];
                this.columnJE29 = base.Columns["JE29"];
                this.columnJE30 = base.Columns["JE30"];
                this.columnJE31 = base.Columns["JE31"];
                this.columnJE32 = base.Columns["JE32"];
                this.columnJE41 = base.Columns["JE41"];
                this.columnJE42 = base.Columns["JE42"];
                this.columnJE43 = base.Columns["JE43"];
                this.columnJE44 = base.Columns["JE44"];
                this.columnJE45 = base.Columns["JE45"];
                this.columnJE46 = base.Columns["JE46"];
                this.columnJE47 = base.Columns["JE47"];
                this.columnJE48 = base.Columns["JE48"];
                this.columnJE49 = base.Columns["JE49"];
                this.columnJE50 = base.Columns["JE50"];
                this.columnJE51 = base.Columns["JE51"];
                this.columnJE52 = base.Columns["JE52"];
                this.columnJE53 = base.Columns["JE53"];
                this.columnJE54 = base.Columns["JE54"];
                this.columnJE55 = base.Columns["JE55"];
                this.columnJE56 = base.Columns["JE56"];
                this.columnJE57 = base.Columns["JE57"];
                this.columnJE58 = base.Columns["JE58"];
                this.columnJE59 = base.Columns["JE59"];
                this.columnJE60 = base.Columns["JE60"];
                this.columnJE61 = base.Columns["JE61"];
                this.columnJE62 = base.Columns["JE62"];
                this.columnJE63 = base.Columns["JE63"];
                this.columnJE64 = base.Columns["JE64"];
                this.columnJE65 = base.Columns["JE65"];
                this.columnJE66 = base.Columns["JE66"];
                this.columnJE67 = base.Columns["JE67"];
                this.columnJE68 = base.Columns["JE68"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJE24 = new global::System.Data.DataColumn("JE24", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE24);
                this.columnJE23 = new global::System.Data.DataColumn("JE23", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE23);
                this.columnJE22 = new global::System.Data.DataColumn("JE22", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE22);
                this.columnJE21 = new global::System.Data.DataColumn("JE21", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE21);
                this.columnJE20 = new global::System.Data.DataColumn("JE20", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE20);
                this.columnJE19 = new global::System.Data.DataColumn("JE19", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE19);
                this.columnJE18 = new global::System.Data.DataColumn("JE18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE18);
                this.columnJE17 = new global::System.Data.DataColumn("JE17", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE17);
                this.columnJE16 = new global::System.Data.DataColumn("JE16", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE16);
                this.columnJE15 = new global::System.Data.DataColumn("JE15", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE15);
                this.columnJE14 = new global::System.Data.DataColumn("JE14", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE14);
                this.columnJE13 = new global::System.Data.DataColumn("JE13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE13);
                this.columnJE12 = new global::System.Data.DataColumn("JE12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE12);
                this.columnJE11 = new global::System.Data.DataColumn("JE11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE11);
                this.columnJE10 = new global::System.Data.DataColumn("JE10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE10);
                this.columnJE9 = new global::System.Data.DataColumn("JE9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE9);
                this.columnJE8 = new global::System.Data.DataColumn("JE8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE8);
                this.columnJE7 = new global::System.Data.DataColumn("JE7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE7);
                this.columnJE6 = new global::System.Data.DataColumn("JE6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE6);
                this.columnJE5 = new global::System.Data.DataColumn("JE5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE5);
                this.columnJE1 = new global::System.Data.DataColumn("JE1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE1);
                this.columnJE2 = new global::System.Data.DataColumn("JE2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE2);
                this.columnJE3 = new global::System.Data.DataColumn("JE3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE3);
                this.columnJE4 = new global::System.Data.DataColumn("JE4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE4);
                this.columnJE33 = new global::System.Data.DataColumn("JE33", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE33);
                this.columnJE34 = new global::System.Data.DataColumn("JE34", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE34);
                this.columnJE35 = new global::System.Data.DataColumn("JE35", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE35);
                this.columnJE36 = new global::System.Data.DataColumn("JE36", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE36);
                this.columnJE37 = new global::System.Data.DataColumn("JE37", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE37);
                this.columnJE38 = new global::System.Data.DataColumn("JE38", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE38);
                this.columnJE39 = new global::System.Data.DataColumn("JE39", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE39);
                this.columnJE40 = new global::System.Data.DataColumn("JE40", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE40);
                this.columnJE25 = new global::System.Data.DataColumn("JE25", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE25);
                this.columnJE26 = new global::System.Data.DataColumn("JE26", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE26);
                this.columnJE27 = new global::System.Data.DataColumn("JE27", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE27);
                this.columnJE28 = new global::System.Data.DataColumn("JE28", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE28);
                this.columnJE29 = new global::System.Data.DataColumn("JE29", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE29);
                this.columnJE30 = new global::System.Data.DataColumn("JE30", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE30);
                this.columnJE31 = new global::System.Data.DataColumn("JE31", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE31);
                this.columnJE32 = new global::System.Data.DataColumn("JE32", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE32);
                this.columnJE41 = new global::System.Data.DataColumn("JE41", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE41);
                this.columnJE42 = new global::System.Data.DataColumn("JE42", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE42);
                this.columnJE43 = new global::System.Data.DataColumn("JE43", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE43);
                this.columnJE44 = new global::System.Data.DataColumn("JE44", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE44);
                this.columnJE45 = new global::System.Data.DataColumn("JE45", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE45);
                this.columnJE46 = new global::System.Data.DataColumn("JE46", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE46);
                this.columnJE47 = new global::System.Data.DataColumn("JE47", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE47);
                this.columnJE48 = new global::System.Data.DataColumn("JE48", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE48);
                this.columnJE49 = new global::System.Data.DataColumn("JE49", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE49);
                this.columnJE50 = new global::System.Data.DataColumn("JE50", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE50);
                this.columnJE51 = new global::System.Data.DataColumn("JE51", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE51);
                this.columnJE52 = new global::System.Data.DataColumn("JE52", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE52);
                this.columnJE53 = new global::System.Data.DataColumn("JE53", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE53);
                this.columnJE54 = new global::System.Data.DataColumn("JE54", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE54);
                this.columnJE55 = new global::System.Data.DataColumn("JE55", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE55);
                this.columnJE56 = new global::System.Data.DataColumn("JE56", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE56);
                this.columnJE57 = new global::System.Data.DataColumn("JE57", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE57);
                this.columnJE58 = new global::System.Data.DataColumn("JE58", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE58);
                this.columnJE59 = new global::System.Data.DataColumn("JE59", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE59);
                this.columnJE60 = new global::System.Data.DataColumn("JE60", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE60);
                this.columnJE61 = new global::System.Data.DataColumn("JE61", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE61);
                this.columnJE62 = new global::System.Data.DataColumn("JE62", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE62);
                this.columnJE63 = new global::System.Data.DataColumn("JE63", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE63);
                this.columnJE64 = new global::System.Data.DataColumn("JE64", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE64);
                this.columnJE65 = new global::System.Data.DataColumn("JE65", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE65);
                this.columnJE66 = new global::System.Data.DataColumn("JE66", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE66);
                this.columnJE67 = new global::System.Data.DataColumn("JE67", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE67);
                this.columnJE68 = new global::System.Data.DataColumn("JE68", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE68);
                this.columnJE24.Caption = "T1";
                this.columnJE23.Caption = "T2";
                this.columnJE22.Caption = "T3";
                this.columnJE21.Caption = "T4";
                this.columnJE20.Caption = "T1";
                this.columnJE19.Caption = "T2";
                this.columnJE18.Caption = "T3";
                this.columnJE17.Caption = "T4";
                this.columnJE16.Caption = "T1";
                this.columnJE15.Caption = "T2";
                this.columnJE14.Caption = "T3";
                this.columnJE13.Caption = "T4";
                this.columnJE12.Caption = "T1";
                this.columnJE11.Caption = "T2";
                this.columnJE10.Caption = "T3";
                this.columnJE9.Caption = "T4";
                this.columnJE8.Caption = "T1";
                this.columnJE7.Caption = "T2";
                this.columnJE6.Caption = "T3";
                this.columnJE5.Caption = "T4";
                this.columnJE33.Caption = "Column1";
                this.columnJE34.Caption = "Column2";
                this.columnJE35.Caption = "Column1";
                this.columnJE36.Caption = "Column2";
                this.columnJE37.Caption = "Column1";
                this.columnJE38.Caption = "Column2";
                this.columnJE39.Caption = "T31";
                this.columnJE40.Caption = "T32";
                this.columnJE25.Caption = "Column1";
                this.columnJE26.Caption = "Column2";
                this.columnJE27.Caption = "Column1";
                this.columnJE28.Caption = "Column2";
                this.columnJE29.Caption = "Column1";
                this.columnJE30.Caption = "Column2";
                this.columnJE48.Caption = "JE44";
                this.columnJE49.Caption = "JE45";
                this.columnJE50.Caption = "JE46";
                this.columnJE51.Caption = "JE47";
                this.columnJE52.Caption = "JE44";
                this.columnJE53.Caption = "JE45";
                this.columnJE54.Caption = "JE46";
                this.columnJE55.Caption = "JE47";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目金额1Row New收费项目金额1Row() {
                return ((收费项目金额1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 收费项目金额1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(收费项目金额1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.收费项目金额1RowChanged != null)) {
                    this.收费项目金额1RowChanged(this, new 收费项目金额1RowChangeEvent(((收费项目金额1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.收费项目金额1RowChanging != null)) {
                    this.收费项目金额1RowChanging(this, new 收费项目金额1RowChangeEvent(((收费项目金额1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.收费项目金额1RowDeleted != null)) {
                    this.收费项目金额1RowDeleted(this, new 收费项目金额1RowChangeEvent(((收费项目金额1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.收费项目金额1RowDeleting != null)) {
                    this.收费项目金额1RowDeleting(this, new 收费项目金额1RowChangeEvent(((收费项目金额1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove收费项目金额1Row(收费项目金额1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "收费项目金额1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 银医办卡统计DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column卡类型;
            
            private global::System.Data.DataColumn column办卡数;
            
            private global::System.Data.DataColumn column有效数;
            
            private global::System.Data.DataColumn column退卡数;
            
            private global::System.Data.DataColumn column冻结数;
            
            private global::System.Data.DataColumn column挂失数;
            
            private global::System.Data.DataColumn column预交金;
            
            private global::System.Data.DataColumn column办卡金额;
            
            private global::System.Data.DataColumn column退办卡金额;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医办卡统计DataTable() {
                this.TableName = "银医办卡统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 银医办卡统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 银医办卡统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 卡类型Column {
                get {
                    return this.column卡类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 办卡数Column {
                get {
                    return this.column办卡数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 有效数Column {
                get {
                    return this.column有效数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退卡数Column {
                get {
                    return this.column退卡数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 冻结数Column {
                get {
                    return this.column冻结数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 挂失数Column {
                get {
                    return this.column挂失数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 预交金Column {
                get {
                    return this.column预交金;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 办卡金额Column {
                get {
                    return this.column办卡金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退办卡金额Column {
                get {
                    return this.column退办卡金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医办卡统计Row this[int index] {
                get {
                    return ((银医办卡统计Row)(this.Rows[index]));
                }
            }
            
            public event 银医办卡统计RowChangeEventHandler 银医办卡统计RowChanging;
            
            public event 银医办卡统计RowChangeEventHandler 银医办卡统计RowChanged;
            
            public event 银医办卡统计RowChangeEventHandler 银医办卡统计RowDeleting;
            
            public event 银医办卡统计RowChangeEventHandler 银医办卡统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add银医办卡统计Row(银医办卡统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医办卡统计Row Add银医办卡统计Row(string 序号, string 卡类型, string 办卡数, string 有效数, string 退卡数, string 冻结数, string 挂失数, string 预交金, decimal 办卡金额, decimal 退办卡金额) {
                银医办卡统计Row row银医办卡统计Row = ((银医办卡统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        卡类型,
                        办卡数,
                        有效数,
                        退卡数,
                        冻结数,
                        挂失数,
                        预交金,
                        办卡金额,
                        退办卡金额};
                row银医办卡统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row银医办卡统计Row);
                return row银医办卡统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                银医办卡统计DataTable cln = ((银医办卡统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 银医办卡统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column卡类型 = base.Columns["卡类型"];
                this.column办卡数 = base.Columns["办卡数"];
                this.column有效数 = base.Columns["有效数"];
                this.column退卡数 = base.Columns["退卡数"];
                this.column冻结数 = base.Columns["冻结数"];
                this.column挂失数 = base.Columns["挂失数"];
                this.column预交金 = base.Columns["预交金"];
                this.column办卡金额 = base.Columns["办卡金额"];
                this.column退办卡金额 = base.Columns["退办卡金额"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column卡类型 = new global::System.Data.DataColumn("卡类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卡类型);
                this.column办卡数 = new global::System.Data.DataColumn("办卡数", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column办卡数);
                this.column有效数 = new global::System.Data.DataColumn("有效数", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column有效数);
                this.column退卡数 = new global::System.Data.DataColumn("退卡数", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退卡数);
                this.column冻结数 = new global::System.Data.DataColumn("冻结数", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column冻结数);
                this.column挂失数 = new global::System.Data.DataColumn("挂失数", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column挂失数);
                this.column预交金 = new global::System.Data.DataColumn("预交金", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column预交金);
                this.column办卡金额 = new global::System.Data.DataColumn("办卡金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column办卡金额);
                this.column退办卡金额 = new global::System.Data.DataColumn("退办卡金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退办卡金额);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医办卡统计Row New银医办卡统计Row() {
                return ((银医办卡统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 银医办卡统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(银医办卡统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.银医办卡统计RowChanged != null)) {
                    this.银医办卡统计RowChanged(this, new 银医办卡统计RowChangeEvent(((银医办卡统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.银医办卡统计RowChanging != null)) {
                    this.银医办卡统计RowChanging(this, new 银医办卡统计RowChangeEvent(((银医办卡统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.银医办卡统计RowDeleted != null)) {
                    this.银医办卡统计RowDeleted(this, new 银医办卡统计RowChangeEvent(((银医办卡统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.银医办卡统计RowDeleting != null)) {
                    this.银医办卡统计RowDeleting(this, new 银医办卡统计RowChangeEvent(((银医办卡统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove银医办卡统计Row(银医办卡统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "银医办卡统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 银医支付方式统计DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column卡号;
            
            private global::System.Data.DataColumn column卡类型;
            
            private global::System.Data.DataColumn column病人姓名;
            
            private global::System.Data.DataColumn column身份证号;
            
            private global::System.Data.DataColumn column预交金;
            
            private global::System.Data.DataColumn column现金支付;
            
            private global::System.Data.DataColumn column银联支付;
            
            private global::System.Data.DataColumn column财务记账;
            
            private global::System.Data.DataColumn column医保支付;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医支付方式统计DataTable() {
                this.TableName = "银医支付方式统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 银医支付方式统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 银医支付方式统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 卡号Column {
                get {
                    return this.column卡号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 卡类型Column {
                get {
                    return this.column卡类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 病人姓名Column {
                get {
                    return this.column病人姓名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 身份证号Column {
                get {
                    return this.column身份证号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 预交金Column {
                get {
                    return this.column预交金;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 现金支付Column {
                get {
                    return this.column现金支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 银联支付Column {
                get {
                    return this.column银联支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 财务记账Column {
                get {
                    return this.column财务记账;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 医保支付Column {
                get {
                    return this.column医保支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医支付方式统计Row this[int index] {
                get {
                    return ((银医支付方式统计Row)(this.Rows[index]));
                }
            }
            
            public event 银医支付方式统计RowChangeEventHandler 银医支付方式统计RowChanging;
            
            public event 银医支付方式统计RowChangeEventHandler 银医支付方式统计RowChanged;
            
            public event 银医支付方式统计RowChangeEventHandler 银医支付方式统计RowDeleting;
            
            public event 银医支付方式统计RowChangeEventHandler 银医支付方式统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add银医支付方式统计Row(银医支付方式统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医支付方式统计Row Add银医支付方式统计Row(string 序号, string 卡号, string 卡类型, string 病人姓名, string 身份证号, string 预交金, string 现金支付, string 银联支付, string 财务记账, string 医保支付) {
                银医支付方式统计Row row银医支付方式统计Row = ((银医支付方式统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        卡号,
                        卡类型,
                        病人姓名,
                        身份证号,
                        预交金,
                        现金支付,
                        银联支付,
                        财务记账,
                        医保支付};
                row银医支付方式统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row银医支付方式统计Row);
                return row银医支付方式统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                银医支付方式统计DataTable cln = ((银医支付方式统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 银医支付方式统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column卡号 = base.Columns["卡号"];
                this.column卡类型 = base.Columns["卡类型"];
                this.column病人姓名 = base.Columns["病人姓名"];
                this.column身份证号 = base.Columns["身份证号"];
                this.column预交金 = base.Columns["预交金"];
                this.column现金支付 = base.Columns["现金支付"];
                this.column银联支付 = base.Columns["银联支付"];
                this.column财务记账 = base.Columns["财务记账"];
                this.column医保支付 = base.Columns["医保支付"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column卡号 = new global::System.Data.DataColumn("卡号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卡号);
                this.column卡类型 = new global::System.Data.DataColumn("卡类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卡类型);
                this.column病人姓名 = new global::System.Data.DataColumn("病人姓名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column病人姓名);
                this.column身份证号 = new global::System.Data.DataColumn("身份证号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column身份证号);
                this.column预交金 = new global::System.Data.DataColumn("预交金", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column预交金);
                this.column现金支付 = new global::System.Data.DataColumn("现金支付", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column现金支付);
                this.column银联支付 = new global::System.Data.DataColumn("银联支付", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column银联支付);
                this.column财务记账 = new global::System.Data.DataColumn("财务记账", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column财务记账);
                this.column医保支付 = new global::System.Data.DataColumn("医保支付", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column医保支付);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医支付方式统计Row New银医支付方式统计Row() {
                return ((银医支付方式统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 银医支付方式统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(银医支付方式统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.银医支付方式统计RowChanged != null)) {
                    this.银医支付方式统计RowChanged(this, new 银医支付方式统计RowChangeEvent(((银医支付方式统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.银医支付方式统计RowChanging != null)) {
                    this.银医支付方式统计RowChanging(this, new 银医支付方式统计RowChangeEvent(((银医支付方式统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.银医支付方式统计RowDeleted != null)) {
                    this.银医支付方式统计RowDeleted(this, new 银医支付方式统计RowChangeEvent(((银医支付方式统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.银医支付方式统计RowDeleting != null)) {
                    this.银医支付方式统计RowDeleting(this, new 银医支付方式统计RowChangeEvent(((银医支付方式统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove银医支付方式统计Row(银医支付方式统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "银医支付方式统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 银医退卡明细DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column卡号;
            
            private global::System.Data.DataColumn column卡类型;
            
            private global::System.Data.DataColumn column病人姓名;
            
            private global::System.Data.DataColumn column身份证号;
            
            private global::System.Data.DataColumn column退卡金额;
            
            private global::System.Data.DataColumn column日期;
            
            private global::System.Data.DataColumn column操作员;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医退卡明细DataTable() {
                this.TableName = "银医退卡明细";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 银医退卡明细DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 银医退卡明细DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 卡号Column {
                get {
                    return this.column卡号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 卡类型Column {
                get {
                    return this.column卡类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 病人姓名Column {
                get {
                    return this.column病人姓名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 身份证号Column {
                get {
                    return this.column身份证号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退卡金额Column {
                get {
                    return this.column退卡金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 日期Column {
                get {
                    return this.column日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 操作员Column {
                get {
                    return this.column操作员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医退卡明细Row this[int index] {
                get {
                    return ((银医退卡明细Row)(this.Rows[index]));
                }
            }
            
            public event 银医退卡明细RowChangeEventHandler 银医退卡明细RowChanging;
            
            public event 银医退卡明细RowChangeEventHandler 银医退卡明细RowChanged;
            
            public event 银医退卡明细RowChangeEventHandler 银医退卡明细RowDeleting;
            
            public event 银医退卡明细RowChangeEventHandler 银医退卡明细RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add银医退卡明细Row(银医退卡明细Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医退卡明细Row Add银医退卡明细Row(string 序号, string 卡号, string 卡类型, string 病人姓名, string 身份证号, string 退卡金额, string 日期, string 操作员) {
                银医退卡明细Row row银医退卡明细Row = ((银医退卡明细Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        卡号,
                        卡类型,
                        病人姓名,
                        身份证号,
                        退卡金额,
                        日期,
                        操作员};
                row银医退卡明细Row.ItemArray = columnValuesArray;
                this.Rows.Add(row银医退卡明细Row);
                return row银医退卡明细Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                银医退卡明细DataTable cln = ((银医退卡明细DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 银医退卡明细DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column卡号 = base.Columns["卡号"];
                this.column卡类型 = base.Columns["卡类型"];
                this.column病人姓名 = base.Columns["病人姓名"];
                this.column身份证号 = base.Columns["身份证号"];
                this.column退卡金额 = base.Columns["退卡金额"];
                this.column日期 = base.Columns["日期"];
                this.column操作员 = base.Columns["操作员"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column卡号 = new global::System.Data.DataColumn("卡号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卡号);
                this.column卡类型 = new global::System.Data.DataColumn("卡类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卡类型);
                this.column病人姓名 = new global::System.Data.DataColumn("病人姓名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column病人姓名);
                this.column身份证号 = new global::System.Data.DataColumn("身份证号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column身份证号);
                this.column退卡金额 = new global::System.Data.DataColumn("退卡金额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退卡金额);
                this.column日期 = new global::System.Data.DataColumn("日期", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column日期);
                this.column操作员 = new global::System.Data.DataColumn("操作员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column操作员);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医退卡明细Row New银医退卡明细Row() {
                return ((银医退卡明细Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 银医退卡明细Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(银医退卡明细Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.银医退卡明细RowChanged != null)) {
                    this.银医退卡明细RowChanged(this, new 银医退卡明细RowChangeEvent(((银医退卡明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.银医退卡明细RowChanging != null)) {
                    this.银医退卡明细RowChanging(this, new 银医退卡明细RowChangeEvent(((银医退卡明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.银医退卡明细RowDeleted != null)) {
                    this.银医退卡明细RowDeleted(this, new 银医退卡明细RowChangeEvent(((银医退卡明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.银医退卡明细RowDeleting != null)) {
                    this.银医退卡明细RowDeleting(this, new 银医退卡明细RowChangeEvent(((银医退卡明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove银医退卡明细Row(银医退卡明细Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "银医退卡明细DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 工商银行自助机对账统计DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column类型;
            
            private global::System.Data.DataColumn column交易总金额;
            
            private global::System.Data.DataColumn column交易笔数;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 工商银行自助机对账统计DataTable() {
                this.TableName = "工商银行自助机对账统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 工商银行自助机对账统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 工商银行自助机对账统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 类型Column {
                get {
                    return this.column类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 交易总金额Column {
                get {
                    return this.column交易总金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 交易笔数Column {
                get {
                    return this.column交易笔数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 工商银行自助机对账统计Row this[int index] {
                get {
                    return ((工商银行自助机对账统计Row)(this.Rows[index]));
                }
            }
            
            public event 工商银行自助机对账统计RowChangeEventHandler 工商银行自助机对账统计RowChanging;
            
            public event 工商银行自助机对账统计RowChangeEventHandler 工商银行自助机对账统计RowChanged;
            
            public event 工商银行自助机对账统计RowChangeEventHandler 工商银行自助机对账统计RowDeleting;
            
            public event 工商银行自助机对账统计RowChangeEventHandler 工商银行自助机对账统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add工商银行自助机对账统计Row(工商银行自助机对账统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 工商银行自助机对账统计Row Add工商银行自助机对账统计Row(string 序号, string 类型, string 交易总金额, string 交易笔数) {
                工商银行自助机对账统计Row row工商银行自助机对账统计Row = ((工商银行自助机对账统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        类型,
                        交易总金额,
                        交易笔数};
                row工商银行自助机对账统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row工商银行自助机对账统计Row);
                return row工商银行自助机对账统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                工商银行自助机对账统计DataTable cln = ((工商银行自助机对账统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 工商银行自助机对账统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column类型 = base.Columns["类型"];
                this.column交易总金额 = base.Columns["交易总金额"];
                this.column交易笔数 = base.Columns["交易笔数"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column类型 = new global::System.Data.DataColumn("类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column类型);
                this.column交易总金额 = new global::System.Data.DataColumn("交易总金额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易总金额);
                this.column交易笔数 = new global::System.Data.DataColumn("交易笔数", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易笔数);
                this.column类型.Caption = "卡号";
                this.column交易总金额.Caption = "卡类型";
                this.column交易笔数.Caption = "病人姓名";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 工商银行自助机对账统计Row New工商银行自助机对账统计Row() {
                return ((工商银行自助机对账统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 工商银行自助机对账统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(工商银行自助机对账统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.工商银行自助机对账统计RowChanged != null)) {
                    this.工商银行自助机对账统计RowChanged(this, new 工商银行自助机对账统计RowChangeEvent(((工商银行自助机对账统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.工商银行自助机对账统计RowChanging != null)) {
                    this.工商银行自助机对账统计RowChanging(this, new 工商银行自助机对账统计RowChangeEvent(((工商银行自助机对账统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.工商银行自助机对账统计RowDeleted != null)) {
                    this.工商银行自助机对账统计RowDeleted(this, new 工商银行自助机对账统计RowChangeEvent(((工商银行自助机对账统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.工商银行自助机对账统计RowDeleting != null)) {
                    this.工商银行自助机对账统计RowDeleting(this, new 工商银行自助机对账统计RowChangeEvent(((工商银行自助机对账统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove工商银行自助机对账统计Row(工商银行自助机对账统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "工商银行自助机对账统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _工商银行自助机对账明细统计_银行端_DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column卡号;
            
            private global::System.Data.DataColumn column金额;
            
            private global::System.Data.DataColumn column银行流水号;
            
            private global::System.Data.DataColumn column交易日期;
            
            private global::System.Data.DataColumn column时间;
            
            private global::System.Data.DataColumn column银行终端;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _工商银行自助机对账明细统计_银行端_DataTable() {
                this.TableName = "工商银行自助机对账明细统计(银行端)";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _工商银行自助机对账明细统计_银行端_DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _工商银行自助机对账明细统计_银行端_DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 卡号Column {
                get {
                    return this.column卡号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 金额Column {
                get {
                    return this.column金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 银行流水号Column {
                get {
                    return this.column银行流水号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 交易日期Column {
                get {
                    return this.column交易日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 时间Column {
                get {
                    return this.column时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 银行终端Column {
                get {
                    return this.column银行终端;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _工商银行自助机对账明细统计_银行端_Row this[int index] {
                get {
                    return ((_工商银行自助机对账明细统计_银行端_Row)(this.Rows[index]));
                }
            }
            
            public event _工商银行自助机对账明细统计_银行端_RowChangeEventHandler _工商银行自助机对账明细统计_银行端_RowChanging;
            
            public event _工商银行自助机对账明细统计_银行端_RowChangeEventHandler _工商银行自助机对账明细统计_银行端_RowChanged;
            
            public event _工商银行自助机对账明细统计_银行端_RowChangeEventHandler _工商银行自助机对账明细统计_银行端_RowDeleting;
            
            public event _工商银行自助机对账明细统计_银行端_RowChangeEventHandler _工商银行自助机对账明细统计_银行端_RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_工商银行自助机对账明细统计_银行端_Row(_工商银行自助机对账明细统计_银行端_Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _工商银行自助机对账明细统计_银行端_Row Add_工商银行自助机对账明细统计_银行端_Row(string 序号, string 卡号, string 金额, string 银行流水号, string 交易日期, string 时间, string 银行终端) {
                _工商银行自助机对账明细统计_银行端_Row row_工商银行自助机对账明细统计_银行端_Row = ((_工商银行自助机对账明细统计_银行端_Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        卡号,
                        金额,
                        银行流水号,
                        交易日期,
                        时间,
                        银行终端};
                row_工商银行自助机对账明细统计_银行端_Row.ItemArray = columnValuesArray;
                this.Rows.Add(row_工商银行自助机对账明细统计_银行端_Row);
                return row_工商银行自助机对账明细统计_银行端_Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _工商银行自助机对账明细统计_银行端_DataTable cln = ((_工商银行自助机对账明细统计_银行端_DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _工商银行自助机对账明细统计_银行端_DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column卡号 = base.Columns["卡号"];
                this.column金额 = base.Columns["金额"];
                this.column银行流水号 = base.Columns["银行流水号"];
                this.column交易日期 = base.Columns["交易日期"];
                this.column时间 = base.Columns["时间"];
                this.column银行终端 = base.Columns["银行终端"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column卡号 = new global::System.Data.DataColumn("卡号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卡号);
                this.column金额 = new global::System.Data.DataColumn("金额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column金额);
                this.column银行流水号 = new global::System.Data.DataColumn("银行流水号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column银行流水号);
                this.column交易日期 = new global::System.Data.DataColumn("交易日期", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易日期);
                this.column时间 = new global::System.Data.DataColumn("时间", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column时间);
                this.column银行终端 = new global::System.Data.DataColumn("银行终端", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column银行终端);
                this.column金额.Caption = "卡类型";
                this.column银行流水号.Caption = "病人姓名";
                this.column交易日期.Caption = "身份证号";
                this.column时间.Caption = "退卡金额";
                this.column银行终端.Caption = "日期";
                this.ExtendedProperties.Add("Generator_TableVarName", "_table工商银行自助机对账明细统计_银行端_");
                this.ExtendedProperties.Add("Generator_UserTableName", "工商银行自助机对账明细统计(银行端)");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _工商银行自助机对账明细统计_银行端_Row New_工商银行自助机对账明细统计_银行端_Row() {
                return ((_工商银行自助机对账明细统计_银行端_Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _工商银行自助机对账明细统计_银行端_Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_工商银行自助机对账明细统计_银行端_Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._工商银行自助机对账明细统计_银行端_RowChanged != null)) {
                    this._工商银行自助机对账明细统计_银行端_RowChanged(this, new _工商银行自助机对账明细统计_银行端_RowChangeEvent(((_工商银行自助机对账明细统计_银行端_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._工商银行自助机对账明细统计_银行端_RowChanging != null)) {
                    this._工商银行自助机对账明细统计_银行端_RowChanging(this, new _工商银行自助机对账明细统计_银行端_RowChangeEvent(((_工商银行自助机对账明细统计_银行端_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._工商银行自助机对账明细统计_银行端_RowDeleted != null)) {
                    this._工商银行自助机对账明细统计_银行端_RowDeleted(this, new _工商银行自助机对账明细统计_银行端_RowChangeEvent(((_工商银行自助机对账明细统计_银行端_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._工商银行自助机对账明细统计_银行端_RowDeleting != null)) {
                    this._工商银行自助机对账明细统计_银行端_RowDeleting(this, new _工商银行自助机对账明细统计_银行端_RowChangeEvent(((_工商银行自助机对账明细统计_银行端_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_工商银行自助机对账明细统计_银行端_Row(_工商银行自助机对账明细统计_银行端_Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_工商银行自助机对账明细统计_银行端_DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _工商银行自助机对账明细统计_医院端_DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn columnHIS_卡号;
            
            private global::System.Data.DataColumn columnHIS_金额;
            
            private global::System.Data.DataColumn column银行流水号;
            
            private global::System.Data.DataColumn columnHIS_交易日期;
            
            private global::System.Data.DataColumn columnHIS_时间;
            
            private global::System.Data.DataColumn column银行终端;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _工商银行自助机对账明细统计_医院端_DataTable() {
                this.TableName = "工商银行自助机对账明细统计(医院端)";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _工商银行自助机对账明细统计_医院端_DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _工商银行自助机对账明细统计_医院端_DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIS_卡号Column {
                get {
                    return this.columnHIS_卡号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIS_金额Column {
                get {
                    return this.columnHIS_金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 银行流水号Column {
                get {
                    return this.column银行流水号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIS_交易日期Column {
                get {
                    return this.columnHIS_交易日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIS_时间Column {
                get {
                    return this.columnHIS_时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 银行终端Column {
                get {
                    return this.column银行终端;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _工商银行自助机对账明细统计_医院端_Row this[int index] {
                get {
                    return ((_工商银行自助机对账明细统计_医院端_Row)(this.Rows[index]));
                }
            }
            
            public event _工商银行自助机对账明细统计_医院端_RowChangeEventHandler _工商银行自助机对账明细统计_医院端_RowChanging;
            
            public event _工商银行自助机对账明细统计_医院端_RowChangeEventHandler _工商银行自助机对账明细统计_医院端_RowChanged;
            
            public event _工商银行自助机对账明细统计_医院端_RowChangeEventHandler _工商银行自助机对账明细统计_医院端_RowDeleting;
            
            public event _工商银行自助机对账明细统计_医院端_RowChangeEventHandler _工商银行自助机对账明细统计_医院端_RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_工商银行自助机对账明细统计_医院端_Row(_工商银行自助机对账明细统计_医院端_Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _工商银行自助机对账明细统计_医院端_Row Add_工商银行自助机对账明细统计_医院端_Row(string 序号, string HIS_卡号, string HIS_金额, string 银行流水号, string HIS_交易日期, string HIS_时间, string 银行终端) {
                _工商银行自助机对账明细统计_医院端_Row row_工商银行自助机对账明细统计_医院端_Row = ((_工商银行自助机对账明细统计_医院端_Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        HIS_卡号,
                        HIS_金额,
                        银行流水号,
                        HIS_交易日期,
                        HIS_时间,
                        银行终端};
                row_工商银行自助机对账明细统计_医院端_Row.ItemArray = columnValuesArray;
                this.Rows.Add(row_工商银行自助机对账明细统计_医院端_Row);
                return row_工商银行自助机对账明细统计_医院端_Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _工商银行自助机对账明细统计_医院端_DataTable cln = ((_工商银行自助机对账明细统计_医院端_DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _工商银行自助机对账明细统计_医院端_DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.columnHIS_卡号 = base.Columns["HIS_卡号"];
                this.columnHIS_金额 = base.Columns["HIS_金额"];
                this.column银行流水号 = base.Columns["银行流水号"];
                this.columnHIS_交易日期 = base.Columns["HIS_交易日期"];
                this.columnHIS_时间 = base.Columns["HIS_时间"];
                this.column银行终端 = base.Columns["银行终端"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.columnHIS_卡号 = new global::System.Data.DataColumn("HIS_卡号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIS_卡号);
                this.columnHIS_金额 = new global::System.Data.DataColumn("HIS_金额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIS_金额);
                this.column银行流水号 = new global::System.Data.DataColumn("银行流水号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column银行流水号);
                this.columnHIS_交易日期 = new global::System.Data.DataColumn("HIS_交易日期", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIS_交易日期);
                this.columnHIS_时间 = new global::System.Data.DataColumn("HIS_时间", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIS_时间);
                this.column银行终端 = new global::System.Data.DataColumn("银行终端", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column银行终端);
                this.columnHIS_卡号.Caption = "卡号";
                this.columnHIS_金额.Caption = "卡类型";
                this.column银行流水号.Caption = "病人姓名";
                this.columnHIS_交易日期.Caption = "身份证号";
                this.columnHIS_时间.Caption = "退卡金额";
                this.column银行终端.Caption = "日期";
                this.ExtendedProperties.Add("Generator_TableVarName", "_table工商银行自助机对账明细统计_医院端_");
                this.ExtendedProperties.Add("Generator_UserTableName", "工商银行自助机对账明细统计(医院端)");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _工商银行自助机对账明细统计_医院端_Row New_工商银行自助机对账明细统计_医院端_Row() {
                return ((_工商银行自助机对账明细统计_医院端_Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _工商银行自助机对账明细统计_医院端_Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_工商银行自助机对账明细统计_医院端_Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._工商银行自助机对账明细统计_医院端_RowChanged != null)) {
                    this._工商银行自助机对账明细统计_医院端_RowChanged(this, new _工商银行自助机对账明细统计_医院端_RowChangeEvent(((_工商银行自助机对账明细统计_医院端_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._工商银行自助机对账明细统计_医院端_RowChanging != null)) {
                    this._工商银行自助机对账明细统计_医院端_RowChanging(this, new _工商银行自助机对账明细统计_医院端_RowChangeEvent(((_工商银行自助机对账明细统计_医院端_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._工商银行自助机对账明细统计_医院端_RowDeleted != null)) {
                    this._工商银行自助机对账明细统计_医院端_RowDeleted(this, new _工商银行自助机对账明细统计_医院端_RowChangeEvent(((_工商银行自助机对账明细统计_医院端_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._工商银行自助机对账明细统计_医院端_RowDeleting != null)) {
                    this._工商银行自助机对账明细统计_医院端_RowDeleting(this, new _工商银行自助机对账明细统计_医院端_RowChangeEvent(((_工商银行自助机对账明细统计_医院端_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_工商银行自助机对账明细统计_医院端_Row(_工商银行自助机对账明细统计_医院端_Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_工商银行自助机对账明细统计_医院端_DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 门诊预交金消费对账DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column姓名;
            
            private global::System.Data.DataColumn column卡号;
            
            private global::System.Data.DataColumn column现金存入;
            
            private global::System.Data.DataColumn column发生日期1;
            
            private global::System.Data.DataColumn column银行转账;
            
            private global::System.Data.DataColumn column发生日期2;
            
            private global::System.Data.DataColumn column支出;
            
            private global::System.Data.DataColumn column发生日期3;
            
            private global::System.Data.DataColumn column卡余额;
            
            private global::System.Data.DataColumn column收款员;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊预交金消费对账DataTable() {
                this.TableName = "门诊预交金消费对账";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 门诊预交金消费对账DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 门诊预交金消费对账DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 卡号Column {
                get {
                    return this.column卡号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 现金存入Column {
                get {
                    return this.column现金存入;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发生日期1Column {
                get {
                    return this.column发生日期1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 银行转账Column {
                get {
                    return this.column银行转账;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发生日期2Column {
                get {
                    return this.column发生日期2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 支出Column {
                get {
                    return this.column支出;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 发生日期3Column {
                get {
                    return this.column发生日期3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 卡余额Column {
                get {
                    return this.column卡余额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 收款员Column {
                get {
                    return this.column收款员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊预交金消费对账Row this[int index] {
                get {
                    return ((门诊预交金消费对账Row)(this.Rows[index]));
                }
            }
            
            public event 门诊预交金消费对账RowChangeEventHandler 门诊预交金消费对账RowChanging;
            
            public event 门诊预交金消费对账RowChangeEventHandler 门诊预交金消费对账RowChanged;
            
            public event 门诊预交金消费对账RowChangeEventHandler 门诊预交金消费对账RowDeleting;
            
            public event 门诊预交金消费对账RowChangeEventHandler 门诊预交金消费对账RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add门诊预交金消费对账Row(门诊预交金消费对账Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊预交金消费对账Row Add门诊预交金消费对账Row(string 序号, string 姓名, string 卡号, decimal 现金存入, string 发生日期1, decimal 银行转账, string 发生日期2, decimal 支出, string 发生日期3, decimal 卡余额, string 收款员) {
                门诊预交金消费对账Row row门诊预交金消费对账Row = ((门诊预交金消费对账Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        姓名,
                        卡号,
                        现金存入,
                        发生日期1,
                        银行转账,
                        发生日期2,
                        支出,
                        发生日期3,
                        卡余额,
                        收款员};
                row门诊预交金消费对账Row.ItemArray = columnValuesArray;
                this.Rows.Add(row门诊预交金消费对账Row);
                return row门诊预交金消费对账Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                门诊预交金消费对账DataTable cln = ((门诊预交金消费对账DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 门诊预交金消费对账DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column姓名 = base.Columns["姓名"];
                this.column卡号 = base.Columns["卡号"];
                this.column现金存入 = base.Columns["现金存入"];
                this.column发生日期1 = base.Columns["发生日期1"];
                this.column银行转账 = base.Columns["银行转账"];
                this.column发生日期2 = base.Columns["发生日期2"];
                this.column支出 = base.Columns["支出"];
                this.column发生日期3 = base.Columns["发生日期3"];
                this.column卡余额 = base.Columns["卡余额"];
                this.column收款员 = base.Columns["收款员"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column姓名 = new global::System.Data.DataColumn("姓名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column姓名);
                this.column卡号 = new global::System.Data.DataColumn("卡号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卡号);
                this.column现金存入 = new global::System.Data.DataColumn("现金存入", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column现金存入);
                this.column发生日期1 = new global::System.Data.DataColumn("发生日期1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发生日期1);
                this.column银行转账 = new global::System.Data.DataColumn("银行转账", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column银行转账);
                this.column发生日期2 = new global::System.Data.DataColumn("发生日期2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发生日期2);
                this.column支出 = new global::System.Data.DataColumn("支出", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支出);
                this.column发生日期3 = new global::System.Data.DataColumn("发生日期3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column发生日期3);
                this.column卡余额 = new global::System.Data.DataColumn("卡余额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卡余额);
                this.column收款员 = new global::System.Data.DataColumn("收款员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column收款员);
                this.column序号.Caption = "Column1";
                this.column姓名.Caption = "Column2";
                this.column卡号.Caption = "Column1";
                this.column现金存入.Caption = "Column2";
                this.column发生日期1.Caption = "Column1";
                this.column银行转账.Caption = "支票支付";
                this.column发生日期2.Caption = "Column2";
                this.column支出.Caption = "Column1";
                this.column发生日期3.Caption = "Column2";
                this.column卡余额.Caption = "Column1";
                this.column收款员.Caption = "Column2";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊预交金消费对账Row New门诊预交金消费对账Row() {
                return ((门诊预交金消费对账Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 门诊预交金消费对账Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(门诊预交金消费对账Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.门诊预交金消费对账RowChanged != null)) {
                    this.门诊预交金消费对账RowChanged(this, new 门诊预交金消费对账RowChangeEvent(((门诊预交金消费对账Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.门诊预交金消费对账RowChanging != null)) {
                    this.门诊预交金消费对账RowChanging(this, new 门诊预交金消费对账RowChangeEvent(((门诊预交金消费对账Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.门诊预交金消费对账RowDeleted != null)) {
                    this.门诊预交金消费对账RowDeleted(this, new 门诊预交金消费对账RowChangeEvent(((门诊预交金消费对账Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.门诊预交金消费对账RowDeleting != null)) {
                    this.门诊预交金消费对账RowDeleting(this, new 门诊预交金消费对账RowChangeEvent(((门诊预交金消费对账Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove门诊预交金消费对账Row(门诊预交金消费对账Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "门诊预交金消费对账DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 诊疗卡办卡明细DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column姓名;
            
            private global::System.Data.DataColumn column卡号;
            
            private global::System.Data.DataColumn column预交金;
            
            private global::System.Data.DataColumn column身份证号;
            
            private global::System.Data.DataColumn column办卡金额;
            
            private global::System.Data.DataColumn column退卡金额;
            
            private global::System.Data.DataColumn column办卡操作员;
            
            private global::System.Data.DataColumn column退卡操作员;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 诊疗卡办卡明细DataTable() {
                this.TableName = "诊疗卡办卡明细";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 诊疗卡办卡明细DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 诊疗卡办卡明细DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 卡号Column {
                get {
                    return this.column卡号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 预交金Column {
                get {
                    return this.column预交金;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 身份证号Column {
                get {
                    return this.column身份证号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 办卡金额Column {
                get {
                    return this.column办卡金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退卡金额Column {
                get {
                    return this.column退卡金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 办卡操作员Column {
                get {
                    return this.column办卡操作员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 退卡操作员Column {
                get {
                    return this.column退卡操作员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 诊疗卡办卡明细Row this[int index] {
                get {
                    return ((诊疗卡办卡明细Row)(this.Rows[index]));
                }
            }
            
            public event 诊疗卡办卡明细RowChangeEventHandler 诊疗卡办卡明细RowChanging;
            
            public event 诊疗卡办卡明细RowChangeEventHandler 诊疗卡办卡明细RowChanged;
            
            public event 诊疗卡办卡明细RowChangeEventHandler 诊疗卡办卡明细RowDeleting;
            
            public event 诊疗卡办卡明细RowChangeEventHandler 诊疗卡办卡明细RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add诊疗卡办卡明细Row(诊疗卡办卡明细Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 诊疗卡办卡明细Row Add诊疗卡办卡明细Row(string 序号, string 姓名, string 卡号, decimal 预交金, string 身份证号, decimal 办卡金额, decimal 退卡金额, string 办卡操作员, string 退卡操作员) {
                诊疗卡办卡明细Row row诊疗卡办卡明细Row = ((诊疗卡办卡明细Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        序号,
                        姓名,
                        卡号,
                        预交金,
                        身份证号,
                        办卡金额,
                        退卡金额,
                        办卡操作员,
                        退卡操作员};
                row诊疗卡办卡明细Row.ItemArray = columnValuesArray;
                this.Rows.Add(row诊疗卡办卡明细Row);
                return row诊疗卡办卡明细Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                诊疗卡办卡明细DataTable cln = ((诊疗卡办卡明细DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 诊疗卡办卡明细DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column序号 = base.Columns["序号"];
                this.column姓名 = base.Columns["姓名"];
                this.column卡号 = base.Columns["卡号"];
                this.column预交金 = base.Columns["预交金"];
                this.column身份证号 = base.Columns["身份证号"];
                this.column办卡金额 = base.Columns["办卡金额"];
                this.column退卡金额 = base.Columns["退卡金额"];
                this.column办卡操作员 = base.Columns["办卡操作员"];
                this.column退卡操作员 = base.Columns["退卡操作员"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column姓名 = new global::System.Data.DataColumn("姓名", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column姓名);
                this.column卡号 = new global::System.Data.DataColumn("卡号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column卡号);
                this.column预交金 = new global::System.Data.DataColumn("预交金", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column预交金);
                this.column身份证号 = new global::System.Data.DataColumn("身份证号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column身份证号);
                this.column办卡金额 = new global::System.Data.DataColumn("办卡金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column办卡金额);
                this.column退卡金额 = new global::System.Data.DataColumn("退卡金额", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退卡金额);
                this.column办卡操作员 = new global::System.Data.DataColumn("办卡操作员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column办卡操作员);
                this.column退卡操作员 = new global::System.Data.DataColumn("退卡操作员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退卡操作员);
                this.column预交金.DefaultValue = ((decimal)(0.00m));
                this.column办卡金额.DefaultValue = ((decimal)(0.00m));
                this.column退卡金额.DefaultValue = ((decimal)(0.00m));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 诊疗卡办卡明细Row New诊疗卡办卡明细Row() {
                return ((诊疗卡办卡明细Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 诊疗卡办卡明细Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(诊疗卡办卡明细Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.诊疗卡办卡明细RowChanged != null)) {
                    this.诊疗卡办卡明细RowChanged(this, new 诊疗卡办卡明细RowChangeEvent(((诊疗卡办卡明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.诊疗卡办卡明细RowChanging != null)) {
                    this.诊疗卡办卡明细RowChanging(this, new 诊疗卡办卡明细RowChangeEvent(((诊疗卡办卡明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.诊疗卡办卡明细RowDeleted != null)) {
                    this.诊疗卡办卡明细RowDeleted(this, new 诊疗卡办卡明细RowChangeEvent(((诊疗卡办卡明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.诊疗卡办卡明细RowDeleting != null)) {
                    this.诊疗卡办卡明细RowDeleting(this, new 诊疗卡办卡明细RowChangeEvent(((诊疗卡办卡明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove诊疗卡办卡明细Row(诊疗卡办卡明细Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "诊疗卡办卡明细DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 小票明细DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnksmc;
            
            private global::System.Data.DataColumn columnZXKS;
            
            private global::System.Data.DataColumn columnJE;
            
            private global::System.Data.DataColumn columnyhje;
            
            private global::System.Data.DataColumn columnitem_name;
            
            private global::System.Data.DataColumn columncode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 小票明细DataTable() {
                this.TableName = "小票明细";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 小票明细DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 小票明细DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ksmcColumn {
                get {
                    return this.columnksmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZXKSColumn {
                get {
                    return this.columnZXKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JEColumn {
                get {
                    return this.columnJE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yhjeColumn {
                get {
                    return this.columnyhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn item_nameColumn {
                get {
                    return this.columnitem_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 小票明细Row this[int index] {
                get {
                    return ((小票明细Row)(this.Rows[index]));
                }
            }
            
            public event 小票明细RowChangeEventHandler 小票明细RowChanging;
            
            public event 小票明细RowChangeEventHandler 小票明细RowChanged;
            
            public event 小票明细RowChangeEventHandler 小票明细RowDeleting;
            
            public event 小票明细RowChangeEventHandler 小票明细RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add小票明细Row(小票明细Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 小票明细Row Add小票明细Row(string ksmc, string ZXKS, string JE, string yhje, string item_name, string code) {
                小票明细Row row小票明细Row = ((小票明细Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ksmc,
                        ZXKS,
                        JE,
                        yhje,
                        item_name,
                        code};
                row小票明细Row.ItemArray = columnValuesArray;
                this.Rows.Add(row小票明细Row);
                return row小票明细Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                小票明细DataTable cln = ((小票明细DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 小票明细DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnksmc = base.Columns["ksmc"];
                this.columnZXKS = base.Columns["ZXKS"];
                this.columnJE = base.Columns["JE"];
                this.columnyhje = base.Columns["yhje"];
                this.columnitem_name = base.Columns["item_name"];
                this.columncode = base.Columns["code"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnksmc = new global::System.Data.DataColumn("ksmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnksmc);
                this.columnZXKS = new global::System.Data.DataColumn("ZXKS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZXKS);
                this.columnJE = new global::System.Data.DataColumn("JE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE);
                this.columnyhje = new global::System.Data.DataColumn("yhje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyhje);
                this.columnitem_name = new global::System.Data.DataColumn("item_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitem_name);
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 小票明细Row New小票明细Row() {
                return ((小票明细Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 小票明细Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(小票明细Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.小票明细RowChanged != null)) {
                    this.小票明细RowChanged(this, new 小票明细RowChangeEvent(((小票明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.小票明细RowChanging != null)) {
                    this.小票明细RowChanging(this, new 小票明细RowChangeEvent(((小票明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.小票明细RowDeleted != null)) {
                    this.小票明细RowDeleted(this, new 小票明细RowChangeEvent(((小票明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.小票明细RowDeleting != null)) {
                    this.小票明细RowDeleting(this, new 小票明细RowChangeEvent(((小票明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove小票明细Row(小票明细Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "小票明细DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TB_mzyjjDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column支付方式;
            
            private global::System.Data.DataColumn column金额;
            
            private global::System.Data.DataColumn column登记时间;
            
            private global::System.Data.DataColumn column登记员;
            
            private global::System.Data.DataColumn column到帐日期;
            
            private global::System.Data.DataColumn column到帐员;
            
            private global::System.Data.DataColumn column支票号;
            
            private global::System.Data.DataColumn column开户银行;
            
            private global::System.Data.DataColumn column开户单位;
            
            private global::System.Data.DataColumn columnbz1;
            
            private global::System.Data.DataColumn columnbz2;
            
            private global::System.Data.DataColumn columnbz3;
            
            private global::System.Data.DataColumn columnbz4;
            
            private global::System.Data.DataColumn columnbz5;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_mzyjjDataTable() {
                this.TableName = "TB_mzyjj";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_mzyjjDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TB_mzyjjDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 支付方式Column {
                get {
                    return this.column支付方式;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 金额Column {
                get {
                    return this.column金额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 登记时间Column {
                get {
                    return this.column登记时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 登记员Column {
                get {
                    return this.column登记员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 到帐日期Column {
                get {
                    return this.column到帐日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 到帐员Column {
                get {
                    return this.column到帐员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 支票号Column {
                get {
                    return this.column支票号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 开户银行Column {
                get {
                    return this.column开户银行;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 开户单位Column {
                get {
                    return this.column开户单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bz1Column {
                get {
                    return this.columnbz1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bz2Column {
                get {
                    return this.columnbz2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bz3Column {
                get {
                    return this.columnbz3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bz4Column {
                get {
                    return this.columnbz4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bz5Column {
                get {
                    return this.columnbz5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_mzyjjRow this[int index] {
                get {
                    return ((TB_mzyjjRow)(this.Rows[index]));
                }
            }
            
            public event TB_mzyjjRowChangeEventHandler TB_mzyjjRowChanging;
            
            public event TB_mzyjjRowChangeEventHandler TB_mzyjjRowChanged;
            
            public event TB_mzyjjRowChangeEventHandler TB_mzyjjRowDeleting;
            
            public event TB_mzyjjRowChangeEventHandler TB_mzyjjRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTB_mzyjjRow(TB_mzyjjRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_mzyjjRow AddTB_mzyjjRow(string 支付方式, string 金额, string 登记时间, string 登记员, string 到帐日期, string 到帐员, string 支票号, string 开户银行, string 开户单位, string bz1, string bz2, string bz3, string bz4, string bz5) {
                TB_mzyjjRow rowTB_mzyjjRow = ((TB_mzyjjRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        支付方式,
                        金额,
                        登记时间,
                        登记员,
                        到帐日期,
                        到帐员,
                        支票号,
                        开户银行,
                        开户单位,
                        bz1,
                        bz2,
                        bz3,
                        bz4,
                        bz5};
                rowTB_mzyjjRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTB_mzyjjRow);
                return rowTB_mzyjjRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TB_mzyjjDataTable cln = ((TB_mzyjjDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TB_mzyjjDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column支付方式 = base.Columns["支付方式"];
                this.column金额 = base.Columns["金额"];
                this.column登记时间 = base.Columns["登记时间"];
                this.column登记员 = base.Columns["登记员"];
                this.column到帐日期 = base.Columns["到帐日期"];
                this.column到帐员 = base.Columns["到帐员"];
                this.column支票号 = base.Columns["支票号"];
                this.column开户银行 = base.Columns["开户银行"];
                this.column开户单位 = base.Columns["开户单位"];
                this.columnbz1 = base.Columns["bz1"];
                this.columnbz2 = base.Columns["bz2"];
                this.columnbz3 = base.Columns["bz3"];
                this.columnbz4 = base.Columns["bz4"];
                this.columnbz5 = base.Columns["bz5"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column支付方式 = new global::System.Data.DataColumn("支付方式", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支付方式);
                this.column金额 = new global::System.Data.DataColumn("金额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column金额);
                this.column登记时间 = new global::System.Data.DataColumn("登记时间", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column登记时间);
                this.column登记员 = new global::System.Data.DataColumn("登记员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column登记员);
                this.column到帐日期 = new global::System.Data.DataColumn("到帐日期", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column到帐日期);
                this.column到帐员 = new global::System.Data.DataColumn("到帐员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column到帐员);
                this.column支票号 = new global::System.Data.DataColumn("支票号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支票号);
                this.column开户银行 = new global::System.Data.DataColumn("开户银行", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column开户银行);
                this.column开户单位 = new global::System.Data.DataColumn("开户单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column开户单位);
                this.columnbz1 = new global::System.Data.DataColumn("bz1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbz1);
                this.columnbz2 = new global::System.Data.DataColumn("bz2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbz2);
                this.columnbz3 = new global::System.Data.DataColumn("bz3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbz3);
                this.columnbz4 = new global::System.Data.DataColumn("bz4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbz4);
                this.columnbz5 = new global::System.Data.DataColumn("bz5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbz5);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_mzyjjRow NewTB_mzyjjRow() {
                return ((TB_mzyjjRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TB_mzyjjRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TB_mzyjjRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TB_mzyjjRowChanged != null)) {
                    this.TB_mzyjjRowChanged(this, new TB_mzyjjRowChangeEvent(((TB_mzyjjRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TB_mzyjjRowChanging != null)) {
                    this.TB_mzyjjRowChanging(this, new TB_mzyjjRowChangeEvent(((TB_mzyjjRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TB_mzyjjRowDeleted != null)) {
                    this.TB_mzyjjRowDeleted(this, new TB_mzyjjRowChangeEvent(((TB_mzyjjRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TB_mzyjjRowDeleting != null)) {
                    this.TB_mzyjjRowDeleting(this, new TB_mzyjjRowChangeEvent(((TB_mzyjjRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTB_mzyjjRow(TB_mzyjjRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TB_mzyjjDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 科室医保收入统计表DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column科室名称;
            
            private global::System.Data.DataColumn column医保类型;
            
            private global::System.Data.DataColumn column统筹总额;
            
            private global::System.Data.DataColumn column医疗总费用;
            
            private global::System.Data.DataColumn column次均费用;
            
            private global::System.Data.DataColumn column门诊人次药品总额;
            
            private global::System.Data.DataColumn _column药品费占比___;
            
            private global::System.Data.DataColumn column检查费;
            
            private global::System.Data.DataColumn _column检查费占比___;
            
            private global::System.Data.DataColumn column材料费;
            
            private global::System.Data.DataColumn _column材料费占比___;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 科室医保收入统计表DataTable() {
                this.TableName = "科室医保收入统计表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 科室医保收入统计表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 科室医保收入统计表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 科室名称Column {
                get {
                    return this.column科室名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 医保类型Column {
                get {
                    return this.column医保类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 统筹总额Column {
                get {
                    return this.column统筹总额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 医疗总费用Column {
                get {
                    return this.column医疗总费用;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 次均费用Column {
                get {
                    return this.column次均费用;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 门诊人次药品总额Column {
                get {
                    return this.column门诊人次药品总额;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _药品费占比___Column {
                get {
                    return this._column药品费占比___;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 检查费Column {
                get {
                    return this.column检查费;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _检查费占比___Column {
                get {
                    return this._column检查费占比___;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 材料费Column {
                get {
                    return this.column材料费;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _材料费占比___Column {
                get {
                    return this._column材料费占比___;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 科室医保收入统计表Row this[int index] {
                get {
                    return ((科室医保收入统计表Row)(this.Rows[index]));
                }
            }
            
            public event 科室医保收入统计表RowChangeEventHandler 科室医保收入统计表RowChanging;
            
            public event 科室医保收入统计表RowChangeEventHandler 科室医保收入统计表RowChanged;
            
            public event 科室医保收入统计表RowChangeEventHandler 科室医保收入统计表RowDeleting;
            
            public event 科室医保收入统计表RowChangeEventHandler 科室医保收入统计表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add科室医保收入统计表Row(科室医保收入统计表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 科室医保收入统计表Row Add科室医保收入统计表Row(string 科室名称, string 医保类型, string 统筹总额, string 医疗总费用, string 次均费用, string 门诊人次药品总额, string _药品费占比___, string 检查费, string _检查费占比___, string 材料费, string _材料费占比___) {
                科室医保收入统计表Row row科室医保收入统计表Row = ((科室医保收入统计表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        科室名称,
                        医保类型,
                        统筹总额,
                        医疗总费用,
                        次均费用,
                        门诊人次药品总额,
                        _药品费占比___,
                        检查费,
                        _检查费占比___,
                        材料费,
                        _材料费占比___};
                row科室医保收入统计表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row科室医保收入统计表Row);
                return row科室医保收入统计表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                科室医保收入统计表DataTable cln = ((科室医保收入统计表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 科室医保收入统计表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column科室名称 = base.Columns["科室名称"];
                this.column医保类型 = base.Columns["医保类型"];
                this.column统筹总额 = base.Columns["统筹总额"];
                this.column医疗总费用 = base.Columns["医疗总费用"];
                this.column次均费用 = base.Columns["次均费用"];
                this.column门诊人次药品总额 = base.Columns["门诊人次药品总额"];
                this._column药品费占比___ = base.Columns["药品费占比(%)"];
                this.column检查费 = base.Columns["检查费"];
                this._column检查费占比___ = base.Columns["检查费占比(%)"];
                this.column材料费 = base.Columns["材料费"];
                this._column材料费占比___ = base.Columns["材料费占比(%)"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column科室名称 = new global::System.Data.DataColumn("科室名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column科室名称);
                this.column医保类型 = new global::System.Data.DataColumn("医保类型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column医保类型);
                this.column统筹总额 = new global::System.Data.DataColumn("统筹总额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column统筹总额);
                this.column医疗总费用 = new global::System.Data.DataColumn("医疗总费用", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column医疗总费用);
                this.column次均费用 = new global::System.Data.DataColumn("次均费用", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column次均费用);
                this.column门诊人次药品总额 = new global::System.Data.DataColumn("门诊人次药品总额", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column门诊人次药品总额);
                this._column药品费占比___ = new global::System.Data.DataColumn("药品费占比(%)", typeof(string), null, global::System.Data.MappingType.Element);
                this._column药品费占比___.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column药品费占比___");
                this._column药品费占比___.ExtendedProperties.Add("Generator_UserColumnName", "药品费占比(%)");
                base.Columns.Add(this._column药品费占比___);
                this.column检查费 = new global::System.Data.DataColumn("检查费", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column检查费);
                this._column检查费占比___ = new global::System.Data.DataColumn("检查费占比(%)", typeof(string), null, global::System.Data.MappingType.Element);
                this._column检查费占比___.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column检查费占比___");
                this._column检查费占比___.ExtendedProperties.Add("Generator_UserColumnName", "检查费占比(%)");
                base.Columns.Add(this._column检查费占比___);
                this.column材料费 = new global::System.Data.DataColumn("材料费", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column材料费);
                this._column材料费占比___ = new global::System.Data.DataColumn("材料费占比(%)", typeof(string), null, global::System.Data.MappingType.Element);
                this._column材料费占比___.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column材料费占比___");
                this._column材料费占比___.ExtendedProperties.Add("Generator_UserColumnName", "材料费占比(%)");
                base.Columns.Add(this._column材料费占比___);
                this._column药品费占比___.Caption = "占比(%)";
                this._column检查费占比___.Caption = "占比(%)";
                this._column材料费占比___.Caption = "占比(%)";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 科室医保收入统计表Row New科室医保收入统计表Row() {
                return ((科室医保收入统计表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 科室医保收入统计表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(科室医保收入统计表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.科室医保收入统计表RowChanged != null)) {
                    this.科室医保收入统计表RowChanged(this, new 科室医保收入统计表RowChangeEvent(((科室医保收入统计表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.科室医保收入统计表RowChanging != null)) {
                    this.科室医保收入统计表RowChanging(this, new 科室医保收入统计表RowChangeEvent(((科室医保收入统计表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.科室医保收入统计表RowDeleted != null)) {
                    this.科室医保收入统计表RowDeleted(this, new 科室医保收入统计表RowChangeEvent(((科室医保收入统计表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.科室医保收入统计表RowDeleting != null)) {
                    this.科室医保收入统计表RowDeleting(this, new 科室医保收入统计表RowChangeEvent(((科室医保收入统计表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove科室医保收入统计表Row(科室医保收入统计表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "科室医保收入统计表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 交款票据统计DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column来源;
            
            private global::System.Data.DataColumn column总份数;
            
            private global::System.Data.DataColumn column有效份数;
            
            private global::System.Data.DataColumn column作废份数;
            
            private global::System.Data.DataColumn column作废号码;
            
            private global::System.Data.DataColumn column现金支付;
            
            private global::System.Data.DataColumn column医保支付;
            
            private global::System.Data.DataColumn column银行支付;
            
            private global::System.Data.DataColumn column交款员;
            
            private global::System.Data.DataColumn column字轨份数;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款票据统计DataTable() {
                this.TableName = "交款票据统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 交款票据统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 交款票据统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 来源Column {
                get {
                    return this.column来源;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 总份数Column {
                get {
                    return this.column总份数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 有效份数Column {
                get {
                    return this.column有效份数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 作废份数Column {
                get {
                    return this.column作废份数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 作废号码Column {
                get {
                    return this.column作废号码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 现金支付Column {
                get {
                    return this.column现金支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 医保支付Column {
                get {
                    return this.column医保支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 银行支付Column {
                get {
                    return this.column银行支付;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 交款员Column {
                get {
                    return this.column交款员;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 字轨份数Column {
                get {
                    return this.column字轨份数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款票据统计Row this[int index] {
                get {
                    return ((交款票据统计Row)(this.Rows[index]));
                }
            }
            
            public event 交款票据统计RowChangeEventHandler 交款票据统计RowChanging;
            
            public event 交款票据统计RowChangeEventHandler 交款票据统计RowChanged;
            
            public event 交款票据统计RowChangeEventHandler 交款票据统计RowDeleting;
            
            public event 交款票据统计RowChangeEventHandler 交款票据统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add交款票据统计Row(交款票据统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款票据统计Row Add交款票据统计Row(string 来源, string 总份数, string 有效份数, string 作废份数, string 作废号码, string 现金支付, string 医保支付, string 银行支付, string 交款员, string 字轨份数) {
                交款票据统计Row row交款票据统计Row = ((交款票据统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        来源,
                        总份数,
                        有效份数,
                        作废份数,
                        作废号码,
                        现金支付,
                        医保支付,
                        银行支付,
                        交款员,
                        字轨份数};
                row交款票据统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row交款票据统计Row);
                return row交款票据统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                交款票据统计DataTable cln = ((交款票据统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 交款票据统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column来源 = base.Columns["来源"];
                this.column总份数 = base.Columns["总份数"];
                this.column有效份数 = base.Columns["有效份数"];
                this.column作废份数 = base.Columns["作废份数"];
                this.column作废号码 = base.Columns["作废号码"];
                this.column现金支付 = base.Columns["现金支付"];
                this.column医保支付 = base.Columns["医保支付"];
                this.column银行支付 = base.Columns["银行支付"];
                this.column交款员 = base.Columns["交款员"];
                this.column字轨份数 = base.Columns["字轨份数"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column来源 = new global::System.Data.DataColumn("来源", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column来源);
                this.column总份数 = new global::System.Data.DataColumn("总份数", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column总份数);
                this.column有效份数 = new global::System.Data.DataColumn("有效份数", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column有效份数);
                this.column作废份数 = new global::System.Data.DataColumn("作废份数", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column作废份数);
                this.column作废号码 = new global::System.Data.DataColumn("作废号码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column作废号码);
                this.column现金支付 = new global::System.Data.DataColumn("现金支付", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column现金支付);
                this.column医保支付 = new global::System.Data.DataColumn("医保支付", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column医保支付);
                this.column银行支付 = new global::System.Data.DataColumn("银行支付", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column银行支付);
                this.column交款员 = new global::System.Data.DataColumn("交款员", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交款员);
                this.column字轨份数 = new global::System.Data.DataColumn("字轨份数", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column字轨份数);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款票据统计Row New交款票据统计Row() {
                return ((交款票据统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 交款票据统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(交款票据统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.交款票据统计RowChanged != null)) {
                    this.交款票据统计RowChanged(this, new 交款票据统计RowChangeEvent(((交款票据统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.交款票据统计RowChanging != null)) {
                    this.交款票据统计RowChanging(this, new 交款票据统计RowChangeEvent(((交款票据统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.交款票据统计RowDeleted != null)) {
                    this.交款票据统计RowDeleted(this, new 交款票据统计RowChangeEvent(((交款票据统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.交款票据统计RowDeleting != null)) {
                    this.交款票据统计RowDeleting(this, new 交款票据统计RowChangeEvent(((交款票据统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove交款票据统计Row(交款票据统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "交款票据统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 收费员个人交款发票统计DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnsfyxm;
            
            private global::System.Data.DataColumn columnxmmc;
            
            private global::System.Data.DataColumn columnxmbm;
            
            private global::System.Data.DataColumn columnje;
            
            private global::System.Data.DataColumn columnzje;
            
            private global::System.Data.DataColumn columndxje;
            
            private global::System.Data.DataColumn columnfpd;
            
            private global::System.Data.DataColumn columnfeipiaoxx;
            
            private global::System.Data.DataColumn columnxjzf;
            
            private global::System.Data.DataColumn columnybzf;
            
            private global::System.Data.DataColumn columnylzf;
            
            private global::System.Data.DataColumn columnqfgz;
            
            private global::System.Data.DataColumn columncwjz;
            
            private global::System.Data.DataColumn columnzpzf;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费员个人交款发票统计DataTable() {
                this.TableName = "收费员个人交款发票统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费员个人交款发票统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 收费员个人交款发票统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sfyxmColumn {
                get {
                    return this.columnsfyxm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xmmcColumn {
                get {
                    return this.columnxmmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xmbmColumn {
                get {
                    return this.columnxmbm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jeColumn {
                get {
                    return this.columnje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zjeColumn {
                get {
                    return this.columnzje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dxjeColumn {
                get {
                    return this.columndxje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fpdColumn {
                get {
                    return this.columnfpd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn feipiaoxxColumn {
                get {
                    return this.columnfeipiaoxx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xjzfColumn {
                get {
                    return this.columnxjzf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ybzfColumn {
                get {
                    return this.columnybzf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ylzfColumn {
                get {
                    return this.columnylzf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qfgzColumn {
                get {
                    return this.columnqfgz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cwjzColumn {
                get {
                    return this.columncwjz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zpzfColumn {
                get {
                    return this.columnzpzf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费员个人交款发票统计Row this[int index] {
                get {
                    return ((收费员个人交款发票统计Row)(this.Rows[index]));
                }
            }
            
            public event 收费员个人交款发票统计RowChangeEventHandler 收费员个人交款发票统计RowChanging;
            
            public event 收费员个人交款发票统计RowChangeEventHandler 收费员个人交款发票统计RowChanged;
            
            public event 收费员个人交款发票统计RowChangeEventHandler 收费员个人交款发票统计RowDeleting;
            
            public event 收费员个人交款发票统计RowChangeEventHandler 收费员个人交款发票统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add收费员个人交款发票统计Row(收费员个人交款发票统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费员个人交款发票统计Row Add收费员个人交款发票统计Row(string sfyxm, string xmmc, string xmbm, string je, string zje, string dxje, string fpd, string feipiaoxx, string xjzf, string ybzf, string ylzf, string qfgz, string cwjz, string zpzf) {
                收费员个人交款发票统计Row row收费员个人交款发票统计Row = ((收费员个人交款发票统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        sfyxm,
                        xmmc,
                        xmbm,
                        je,
                        zje,
                        dxje,
                        fpd,
                        feipiaoxx,
                        xjzf,
                        ybzf,
                        ylzf,
                        qfgz,
                        cwjz,
                        zpzf};
                row收费员个人交款发票统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row收费员个人交款发票统计Row);
                return row收费员个人交款发票统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                收费员个人交款发票统计DataTable cln = ((收费员个人交款发票统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 收费员个人交款发票统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsfyxm = base.Columns["sfyxm"];
                this.columnxmmc = base.Columns["xmmc"];
                this.columnxmbm = base.Columns["xmbm"];
                this.columnje = base.Columns["je"];
                this.columnzje = base.Columns["zje"];
                this.columndxje = base.Columns["dxje"];
                this.columnfpd = base.Columns["fpd"];
                this.columnfeipiaoxx = base.Columns["feipiaoxx"];
                this.columnxjzf = base.Columns["xjzf"];
                this.columnybzf = base.Columns["ybzf"];
                this.columnylzf = base.Columns["ylzf"];
                this.columnqfgz = base.Columns["qfgz"];
                this.columncwjz = base.Columns["cwjz"];
                this.columnzpzf = base.Columns["zpzf"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsfyxm = new global::System.Data.DataColumn("sfyxm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsfyxm);
                this.columnxmmc = new global::System.Data.DataColumn("xmmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxmmc);
                this.columnxmbm = new global::System.Data.DataColumn("xmbm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxmbm);
                this.columnje = new global::System.Data.DataColumn("je", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnje);
                this.columnzje = new global::System.Data.DataColumn("zje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzje);
                this.columndxje = new global::System.Data.DataColumn("dxje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndxje);
                this.columnfpd = new global::System.Data.DataColumn("fpd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfpd);
                this.columnfeipiaoxx = new global::System.Data.DataColumn("feipiaoxx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfeipiaoxx);
                this.columnxjzf = new global::System.Data.DataColumn("xjzf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxjzf);
                this.columnybzf = new global::System.Data.DataColumn("ybzf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnybzf);
                this.columnylzf = new global::System.Data.DataColumn("ylzf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnylzf);
                this.columnqfgz = new global::System.Data.DataColumn("qfgz", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqfgz);
                this.columncwjz = new global::System.Data.DataColumn("cwjz", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncwjz);
                this.columnzpzf = new global::System.Data.DataColumn("zpzf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzpzf);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费员个人交款发票统计Row New收费员个人交款发票统计Row() {
                return ((收费员个人交款发票统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 收费员个人交款发票统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(收费员个人交款发票统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.收费员个人交款发票统计RowChanged != null)) {
                    this.收费员个人交款发票统计RowChanged(this, new 收费员个人交款发票统计RowChangeEvent(((收费员个人交款发票统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.收费员个人交款发票统计RowChanging != null)) {
                    this.收费员个人交款发票统计RowChanging(this, new 收费员个人交款发票统计RowChangeEvent(((收费员个人交款发票统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.收费员个人交款发票统计RowDeleted != null)) {
                    this.收费员个人交款发票统计RowDeleted(this, new 收费员个人交款发票统计RowChangeEvent(((收费员个人交款发票统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.收费员个人交款发票统计RowDeleting != null)) {
                    this.收费员个人交款发票统计RowDeleting(this, new 收费员个人交款发票统计RowChangeEvent(((收费员个人交款发票统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove收费员个人交款发票统计Row(收费员个人交款发票统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "收费员个人交款发票统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 交款表优惠金额DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBRXM;
            
            private global::System.Data.DataColumn columnFPH;
            
            private global::System.Data.DataColumn columnZJE;
            
            private global::System.Data.DataColumn columnYHJE;
            
            private global::System.Data.DataColumn columnYHLXMC;
            
            private global::System.Data.DataColumn columnSFRQ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款表优惠金额DataTable() {
                this.TableName = "交款表优惠金额";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 交款表优惠金额DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 交款表优惠金额DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRXMColumn {
                get {
                    return this.columnBRXM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FPHColumn {
                get {
                    return this.columnFPH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZJEColumn {
                get {
                    return this.columnZJE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YHJEColumn {
                get {
                    return this.columnYHJE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YHLXMCColumn {
                get {
                    return this.columnYHLXMC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SFRQColumn {
                get {
                    return this.columnSFRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款表优惠金额Row this[int index] {
                get {
                    return ((交款表优惠金额Row)(this.Rows[index]));
                }
            }
            
            public event 交款表优惠金额RowChangeEventHandler 交款表优惠金额RowChanging;
            
            public event 交款表优惠金额RowChangeEventHandler 交款表优惠金额RowChanged;
            
            public event 交款表优惠金额RowChangeEventHandler 交款表优惠金额RowDeleting;
            
            public event 交款表优惠金额RowChangeEventHandler 交款表优惠金额RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add交款表优惠金额Row(交款表优惠金额Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款表优惠金额Row Add交款表优惠金额Row(string BRXM, string FPH, decimal ZJE, decimal YHJE, string YHLXMC, string SFRQ) {
                交款表优惠金额Row row交款表优惠金额Row = ((交款表优惠金额Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BRXM,
                        FPH,
                        ZJE,
                        YHJE,
                        YHLXMC,
                        SFRQ};
                row交款表优惠金额Row.ItemArray = columnValuesArray;
                this.Rows.Add(row交款表优惠金额Row);
                return row交款表优惠金额Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                交款表优惠金额DataTable cln = ((交款表优惠金额DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 交款表优惠金额DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBRXM = base.Columns["BRXM"];
                this.columnFPH = base.Columns["FPH"];
                this.columnZJE = base.Columns["ZJE"];
                this.columnYHJE = base.Columns["YHJE"];
                this.columnYHLXMC = base.Columns["YHLXMC"];
                this.columnSFRQ = base.Columns["SFRQ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBRXM = new global::System.Data.DataColumn("BRXM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRXM);
                this.columnFPH = new global::System.Data.DataColumn("FPH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFPH);
                this.columnZJE = new global::System.Data.DataColumn("ZJE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZJE);
                this.columnYHJE = new global::System.Data.DataColumn("YHJE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYHJE);
                this.columnYHLXMC = new global::System.Data.DataColumn("YHLXMC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYHLXMC);
                this.columnSFRQ = new global::System.Data.DataColumn("SFRQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSFRQ);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款表优惠金额Row New交款表优惠金额Row() {
                return ((交款表优惠金额Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 交款表优惠金额Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(交款表优惠金额Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.交款表优惠金额RowChanged != null)) {
                    this.交款表优惠金额RowChanged(this, new 交款表优惠金额RowChangeEvent(((交款表优惠金额Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.交款表优惠金额RowChanging != null)) {
                    this.交款表优惠金额RowChanging(this, new 交款表优惠金额RowChangeEvent(((交款表优惠金额Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.交款表优惠金额RowDeleted != null)) {
                    this.交款表优惠金额RowDeleted(this, new 交款表优惠金额RowChangeEvent(((交款表优惠金额Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.交款表优惠金额RowDeleting != null)) {
                    this.交款表优惠金额RowDeleting(this, new 交款表优惠金额RowChangeEvent(((交款表优惠金额Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove交款表优惠金额Row(交款表优惠金额Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "交款表优惠金额DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 收费项目Row : global::System.Data.DataRow {
            
            private 收费项目DataTable table收费项目;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费项目Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table收费项目 = ((收费项目DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T24 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T24Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T24”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T24Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T23 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T23Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T23”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T23Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T22 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T22Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T22”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T22Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T21 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T21Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T21”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T21Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T20 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T20”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T19 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T19”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T18 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T18”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T17 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T17”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T16 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T16”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T15 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T15”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T14 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T14”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T13 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T13”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T12 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T12”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T11 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T11”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T10 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T10”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T9 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T9”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T8 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T8”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T7 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T7”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T6 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T6”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T5 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T1 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T2 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T3 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T4 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T33 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T33Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T33”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T33Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T34 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T34Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T34”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T34Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T35 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T35Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T35”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T35Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T36 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T36Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T36”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T36Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T37 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T37Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T37”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T37Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T38 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T38Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T38”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T38Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T39 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T39Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T39”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T39Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T40 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T40Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T40”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T40Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T25 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T25Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T25”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T25Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T26 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T26Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T26”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T26Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T27 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T27Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T27”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T27Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T28 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T28Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T28”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T28Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T29 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T29Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T29”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T29Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T30 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T30”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T31 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T31Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T31”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T31Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T32 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T32Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T32”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T32Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T41 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T41Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T41”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T41Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T42 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T42Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T42”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T42Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T43 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T43Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T43”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T43Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T44 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T44Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T44”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T44Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T45 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T45”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T46 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T46”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T47 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T47”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T48 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T48Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T48”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T48Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T49 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T49Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T49”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T49Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T50 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T50Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T50”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T50Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T51 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T51Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T51”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T51Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T52 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T52Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T52”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T52Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T53 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T53Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T53”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T53Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T54 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T54Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T54”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T54Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T55 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T55Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T55”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T55Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T56 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T56Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T56”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T56Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T57 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T57Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T57”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T57Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T58 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T58Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T58”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T58Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T59 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T59Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T59”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T59Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T60 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T60Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T60”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T60Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T61 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T61Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T61”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T61Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T62 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T62Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T62”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T62Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T63 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T63Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T63”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T63Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T64 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T64Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T64”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T64Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T65 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T65Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T65”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T65Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T66 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T66Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T66”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T66Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T67 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T67Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T67”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T67Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T68 {
                get {
                    try {
                        return ((string)(this[this.table收费项目.T68Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目”中列“T68”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目.T68Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT24Null() {
                return this.IsNull(this.table收费项目.T24Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT24Null() {
                this[this.table收费项目.T24Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT23Null() {
                return this.IsNull(this.table收费项目.T23Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT23Null() {
                this[this.table收费项目.T23Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT22Null() {
                return this.IsNull(this.table收费项目.T22Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT22Null() {
                this[this.table收费项目.T22Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT21Null() {
                return this.IsNull(this.table收费项目.T21Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT21Null() {
                this[this.table收费项目.T21Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT20Null() {
                return this.IsNull(this.table收费项目.T20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT20Null() {
                this[this.table收费项目.T20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT19Null() {
                return this.IsNull(this.table收费项目.T19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT19Null() {
                this[this.table收费项目.T19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT18Null() {
                return this.IsNull(this.table收费项目.T18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT18Null() {
                this[this.table收费项目.T18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT17Null() {
                return this.IsNull(this.table收费项目.T17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT17Null() {
                this[this.table收费项目.T17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT16Null() {
                return this.IsNull(this.table收费项目.T16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT16Null() {
                this[this.table收费项目.T16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT15Null() {
                return this.IsNull(this.table收费项目.T15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT15Null() {
                this[this.table收费项目.T15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT14Null() {
                return this.IsNull(this.table收费项目.T14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT14Null() {
                this[this.table收费项目.T14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT13Null() {
                return this.IsNull(this.table收费项目.T13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT13Null() {
                this[this.table收费项目.T13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT12Null() {
                return this.IsNull(this.table收费项目.T12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT12Null() {
                this[this.table收费项目.T12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT11Null() {
                return this.IsNull(this.table收费项目.T11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT11Null() {
                this[this.table收费项目.T11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT10Null() {
                return this.IsNull(this.table收费项目.T10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT10Null() {
                this[this.table收费项目.T10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT9Null() {
                return this.IsNull(this.table收费项目.T9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT9Null() {
                this[this.table收费项目.T9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT8Null() {
                return this.IsNull(this.table收费项目.T8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT8Null() {
                this[this.table收费项目.T8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT7Null() {
                return this.IsNull(this.table收费项目.T7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT7Null() {
                this[this.table收费项目.T7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT6Null() {
                return this.IsNull(this.table收费项目.T6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT6Null() {
                this[this.table收费项目.T6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT5Null() {
                return this.IsNull(this.table收费项目.T5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT5Null() {
                this[this.table收费项目.T5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT1Null() {
                return this.IsNull(this.table收费项目.T1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT1Null() {
                this[this.table收费项目.T1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT2Null() {
                return this.IsNull(this.table收费项目.T2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT2Null() {
                this[this.table收费项目.T2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT3Null() {
                return this.IsNull(this.table收费项目.T3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT3Null() {
                this[this.table收费项目.T3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT4Null() {
                return this.IsNull(this.table收费项目.T4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT4Null() {
                this[this.table收费项目.T4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT33Null() {
                return this.IsNull(this.table收费项目.T33Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT33Null() {
                this[this.table收费项目.T33Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT34Null() {
                return this.IsNull(this.table收费项目.T34Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT34Null() {
                this[this.table收费项目.T34Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT35Null() {
                return this.IsNull(this.table收费项目.T35Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT35Null() {
                this[this.table收费项目.T35Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT36Null() {
                return this.IsNull(this.table收费项目.T36Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT36Null() {
                this[this.table收费项目.T36Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT37Null() {
                return this.IsNull(this.table收费项目.T37Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT37Null() {
                this[this.table收费项目.T37Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT38Null() {
                return this.IsNull(this.table收费项目.T38Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT38Null() {
                this[this.table收费项目.T38Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT39Null() {
                return this.IsNull(this.table收费项目.T39Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT39Null() {
                this[this.table收费项目.T39Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT40Null() {
                return this.IsNull(this.table收费项目.T40Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT40Null() {
                this[this.table收费项目.T40Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT25Null() {
                return this.IsNull(this.table收费项目.T25Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT25Null() {
                this[this.table收费项目.T25Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT26Null() {
                return this.IsNull(this.table收费项目.T26Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT26Null() {
                this[this.table收费项目.T26Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT27Null() {
                return this.IsNull(this.table收费项目.T27Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT27Null() {
                this[this.table收费项目.T27Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT28Null() {
                return this.IsNull(this.table收费项目.T28Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT28Null() {
                this[this.table收费项目.T28Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT29Null() {
                return this.IsNull(this.table收费项目.T29Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT29Null() {
                this[this.table收费项目.T29Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT30Null() {
                return this.IsNull(this.table收费项目.T30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT30Null() {
                this[this.table收费项目.T30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT31Null() {
                return this.IsNull(this.table收费项目.T31Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT31Null() {
                this[this.table收费项目.T31Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT32Null() {
                return this.IsNull(this.table收费项目.T32Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT32Null() {
                this[this.table收费项目.T32Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT41Null() {
                return this.IsNull(this.table收费项目.T41Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT41Null() {
                this[this.table收费项目.T41Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT42Null() {
                return this.IsNull(this.table收费项目.T42Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT42Null() {
                this[this.table收费项目.T42Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT43Null() {
                return this.IsNull(this.table收费项目.T43Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT43Null() {
                this[this.table收费项目.T43Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT44Null() {
                return this.IsNull(this.table收费项目.T44Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT44Null() {
                this[this.table收费项目.T44Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT45Null() {
                return this.IsNull(this.table收费项目.T45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT45Null() {
                this[this.table收费项目.T45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT46Null() {
                return this.IsNull(this.table收费项目.T46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT46Null() {
                this[this.table收费项目.T46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT47Null() {
                return this.IsNull(this.table收费项目.T47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT47Null() {
                this[this.table收费项目.T47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT48Null() {
                return this.IsNull(this.table收费项目.T48Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT48Null() {
                this[this.table收费项目.T48Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT49Null() {
                return this.IsNull(this.table收费项目.T49Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT49Null() {
                this[this.table收费项目.T49Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT50Null() {
                return this.IsNull(this.table收费项目.T50Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT50Null() {
                this[this.table收费项目.T50Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT51Null() {
                return this.IsNull(this.table收费项目.T51Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT51Null() {
                this[this.table收费项目.T51Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT52Null() {
                return this.IsNull(this.table收费项目.T52Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT52Null() {
                this[this.table收费项目.T52Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT53Null() {
                return this.IsNull(this.table收费项目.T53Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT53Null() {
                this[this.table收费项目.T53Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT54Null() {
                return this.IsNull(this.table收费项目.T54Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT54Null() {
                this[this.table收费项目.T54Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT55Null() {
                return this.IsNull(this.table收费项目.T55Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT55Null() {
                this[this.table收费项目.T55Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT56Null() {
                return this.IsNull(this.table收费项目.T56Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT56Null() {
                this[this.table收费项目.T56Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT57Null() {
                return this.IsNull(this.table收费项目.T57Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT57Null() {
                this[this.table收费项目.T57Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT58Null() {
                return this.IsNull(this.table收费项目.T58Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT58Null() {
                this[this.table收费项目.T58Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT59Null() {
                return this.IsNull(this.table收费项目.T59Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT59Null() {
                this[this.table收费项目.T59Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT60Null() {
                return this.IsNull(this.table收费项目.T60Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT60Null() {
                this[this.table收费项目.T60Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT61Null() {
                return this.IsNull(this.table收费项目.T61Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT61Null() {
                this[this.table收费项目.T61Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT62Null() {
                return this.IsNull(this.table收费项目.T62Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT62Null() {
                this[this.table收费项目.T62Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT63Null() {
                return this.IsNull(this.table收费项目.T63Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT63Null() {
                this[this.table收费项目.T63Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT64Null() {
                return this.IsNull(this.table收费项目.T64Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT64Null() {
                this[this.table收费项目.T64Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT65Null() {
                return this.IsNull(this.table收费项目.T65Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT65Null() {
                this[this.table收费项目.T65Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT66Null() {
                return this.IsNull(this.table收费项目.T66Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT66Null() {
                this[this.table收费项目.T66Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT67Null() {
                return this.IsNull(this.table收费项目.T67Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT67Null() {
                this[this.table收费项目.T67Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT68Null() {
                return this.IsNull(this.table收费项目.T68Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT68Null() {
                this[this.table收费项目.T68Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 作废发票Row : global::System.Data.DataRow {
            
            private 作废发票DataTable table作废发票;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 作废发票Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table作废发票 = ((作废发票DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 类型 {
                get {
                    try {
                        return ((string)(this[this.table作废发票.类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废发票”中列“类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废发票.类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 发票号 {
                get {
                    try {
                        return ((string)(this[this.table作废发票.发票号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废发票”中列“发票号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废发票.发票号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.table作废发票.姓名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废发票”中列“姓名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废发票.姓名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退费日期 {
                get {
                    try {
                        return ((string)(this[this.table作废发票.退费日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废发票”中列“退费日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废发票.退费日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退费员 {
                get {
                    try {
                        return ((string)(this[this.table作废发票.退费员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废发票”中列“退费员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废发票.退费员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 发票金额 {
                get {
                    try {
                        return ((decimal)(this[this.table作废发票.发票金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废发票”中列“发票金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废发票.发票金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short 序号 {
                get {
                    try {
                        return ((short)(this[this.table作废发票.序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废发票”中列“序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废发票.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is类型Null() {
                return this.IsNull(this.table作废发票.类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set类型Null() {
                this[this.table作废发票.类型Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发票号Null() {
                return this.IsNull(this.table作废发票.发票号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发票号Null() {
                this[this.table作废发票.发票号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is姓名Null() {
                return this.IsNull(this.table作废发票.姓名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set姓名Null() {
                this[this.table作废发票.姓名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退费日期Null() {
                return this.IsNull(this.table作废发票.退费日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退费日期Null() {
                this[this.table作废发票.退费日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退费员Null() {
                return this.IsNull(this.table作废发票.退费员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退费员Null() {
                this[this.table作废发票.退费员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发票金额Null() {
                return this.IsNull(this.table作废发票.发票金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发票金额Null() {
                this[this.table作废发票.发票金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is序号Null() {
                return this.IsNull(this.table作废发票.序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set序号Null() {
                this[this.table作废发票.序号Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 交款表Row : global::System.Data.DataRow {
            
            private 交款表DataTable table交款表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 交款表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table交款表 = ((交款表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 类型 {
                get {
                    try {
                        return ((string)(this[this.table交款表.类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 发票段 {
                get {
                    try {
                        return ((string)(this[this.table交款表.发票段Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“发票段”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.发票段Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 发票金额 {
                get {
                    try {
                        return ((decimal)(this[this.table交款表.发票金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“发票金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.发票金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 有效张数 {
                get {
                    try {
                        return ((decimal)(this[this.table交款表.有效张数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“有效张数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.有效张数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 废票张数 {
                get {
                    try {
                        return ((decimal)(this[this.table交款表.废票张数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“废票张数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.废票张数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 支票支付 {
                get {
                    try {
                        return ((decimal)(this[this.table交款表.支票支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“支票支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.支票支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 现金支付 {
                get {
                    try {
                        return ((decimal)(this[this.table交款表.现金支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“现金支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.现金支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 银联支付 {
                get {
                    try {
                        return ((decimal)(this[this.table交款表.银联支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“银联支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.银联支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 医保支付 {
                get {
                    try {
                        return ((decimal)(this[this.table交款表.医保支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“医保支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.医保支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 财务记账 {
                get {
                    try {
                        return ((decimal)(this[this.table交款表.财务记账Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“财务记账”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.财务记账Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 欠费挂账 {
                get {
                    try {
                        return ((decimal)(this[this.table交款表.欠费挂账Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“欠费挂账”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.欠费挂账Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 优惠金额 {
                get {
                    try {
                        return ((decimal)(this[this.table交款表.优惠金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“优惠金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.优惠金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 舍入金额 {
                get {
                    try {
                        return ((decimal)(this[this.table交款表.舍入金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“舍入金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.舍入金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 序号 {
                get {
                    try {
                        return ((string)(this[this.table交款表.序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 交款时间 {
                get {
                    try {
                        return ((string)(this[this.table交款表.交款时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“交款时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.交款时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 收费员 {
                get {
                    try {
                        return ((string)(this[this.table交款表.收费员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“收费员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.收费员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 作废票号 {
                get {
                    try {
                        return ((string)(this[this.table交款表.作废票号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“作废票号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.作废票号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 支票 {
                get {
                    try {
                        return ((decimal)(this[this.table交款表.支票Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“支票”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.支票Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据号 {
                get {
                    try {
                        return ((string)(this[this.table交款表.单据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“单据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.单据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 作废金额 {
                get {
                    try {
                        return ((decimal)(this[this.table交款表.作废金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“作废金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.作废金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 缴款科室 {
                get {
                    try {
                        return ((string)(this[this.table交款表.缴款科室Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表”中列“缴款科室”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表.缴款科室Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is类型Null() {
                return this.IsNull(this.table交款表.类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set类型Null() {
                this[this.table交款表.类型Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发票段Null() {
                return this.IsNull(this.table交款表.发票段Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发票段Null() {
                this[this.table交款表.发票段Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发票金额Null() {
                return this.IsNull(this.table交款表.发票金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发票金额Null() {
                this[this.table交款表.发票金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is有效张数Null() {
                return this.IsNull(this.table交款表.有效张数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set有效张数Null() {
                this[this.table交款表.有效张数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is废票张数Null() {
                return this.IsNull(this.table交款表.废票张数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set废票张数Null() {
                this[this.table交款表.废票张数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is支票支付Null() {
                return this.IsNull(this.table交款表.支票支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set支票支付Null() {
                this[this.table交款表.支票支付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is现金支付Null() {
                return this.IsNull(this.table交款表.现金支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set现金支付Null() {
                this[this.table交款表.现金支付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is银联支付Null() {
                return this.IsNull(this.table交款表.银联支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set银联支付Null() {
                this[this.table交款表.银联支付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is医保支付Null() {
                return this.IsNull(this.table交款表.医保支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set医保支付Null() {
                this[this.table交款表.医保支付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is财务记账Null() {
                return this.IsNull(this.table交款表.财务记账Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set财务记账Null() {
                this[this.table交款表.财务记账Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is欠费挂账Null() {
                return this.IsNull(this.table交款表.欠费挂账Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set欠费挂账Null() {
                this[this.table交款表.欠费挂账Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is优惠金额Null() {
                return this.IsNull(this.table交款表.优惠金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set优惠金额Null() {
                this[this.table交款表.优惠金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is舍入金额Null() {
                return this.IsNull(this.table交款表.舍入金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set舍入金额Null() {
                this[this.table交款表.舍入金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is序号Null() {
                return this.IsNull(this.table交款表.序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set序号Null() {
                this[this.table交款表.序号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is交款时间Null() {
                return this.IsNull(this.table交款表.交款时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set交款时间Null() {
                this[this.table交款表.交款时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is收费员Null() {
                return this.IsNull(this.table交款表.收费员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set收费员Null() {
                this[this.table交款表.收费员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is作废票号Null() {
                return this.IsNull(this.table交款表.作废票号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set作废票号Null() {
                this[this.table交款表.作废票号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is支票Null() {
                return this.IsNull(this.table交款表.支票Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set支票Null() {
                this[this.table交款表.支票Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据号Null() {
                return this.IsNull(this.table交款表.单据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据号Null() {
                this[this.table交款表.单据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is作废金额Null() {
                return this.IsNull(this.table交款表.作废金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set作废金额Null() {
                this[this.table交款表.作废金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is缴款科室Null() {
                return this.IsNull(this.table交款表.缴款科室Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set缴款科室Null() {
                this[this.table交款表.缴款科室Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 收费项目金额Row : global::System.Data.DataRow {
            
            private 收费项目金额DataTable table收费项目金额;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费项目金额Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table收费项目金额 = ((收费项目金额DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE24 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE24Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE24”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE24Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE23 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE23Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE23”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE23Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE22 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE22Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE22”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE22Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE21 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE21Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE21”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE21Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE20 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE20”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE19 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE19”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE18 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE18”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE17 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE17”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE16 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE16”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE15 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE15”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE14 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE14”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE13 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE13”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE12 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE12”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE11 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE11”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE10 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE10”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE9 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE9”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE8 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE8”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE7 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE7”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE6 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE6”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE5 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE1 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE2 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE3 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE4 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE33 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE33Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE33”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE33Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE34 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE34Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE34”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE34Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE35 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE35Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE35”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE35Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE36 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE36Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE36”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE36Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE37 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE37Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE37”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE37Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE38 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE38Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE38”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE38Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE39 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE39Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE39”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE39Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE40 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE40Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE40”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE40Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE25 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE25Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE25”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE25Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE26 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE26Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE26”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE26Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE27 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE27Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE27”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE27Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE28 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE28Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE28”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE28Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE29 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE29Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE29”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE29Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE30 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE30”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE31 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE31Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE31”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE31Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE32 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE32Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE32”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE32Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE41 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE41Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE41”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE41Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE42 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE42Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE42”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE42Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE43 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE43Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE43”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE43Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE44 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE44Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE44”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE44Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE45 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE45”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE46 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE46”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE47 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE47”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE48 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE48Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE48”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE48Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE49 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE49Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE49”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE49Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE50 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE50Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE50”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE50Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE51 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE51Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE51”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE51Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE52 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE52Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE52”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE52Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE53 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE53Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE53”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE53Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE54 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE54Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE54”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE54Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE55 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE55Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE55”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE55Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE56 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE56Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE56”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE56Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE57 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE57Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE57”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE57Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE58 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE58Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE58”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE58Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE59 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE59Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE59”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE59Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE60 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE60Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE60”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE60Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE61 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE61Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE61”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE61Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE62 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE62Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE62”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE62Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE63 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE63Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE63”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE63Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE64 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE64Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE64”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE64Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE65 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE65Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE65”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE65Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE66 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE66Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE66”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE66Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE67 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE67Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE67”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE67Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE68 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额.JE68Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额”中列“JE68”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额.JE68Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE24Null() {
                return this.IsNull(this.table收费项目金额.JE24Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE24Null() {
                this[this.table收费项目金额.JE24Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE23Null() {
                return this.IsNull(this.table收费项目金额.JE23Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE23Null() {
                this[this.table收费项目金额.JE23Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE22Null() {
                return this.IsNull(this.table收费项目金额.JE22Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE22Null() {
                this[this.table收费项目金额.JE22Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE21Null() {
                return this.IsNull(this.table收费项目金额.JE21Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE21Null() {
                this[this.table收费项目金额.JE21Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE20Null() {
                return this.IsNull(this.table收费项目金额.JE20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE20Null() {
                this[this.table收费项目金额.JE20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE19Null() {
                return this.IsNull(this.table收费项目金额.JE19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE19Null() {
                this[this.table收费项目金额.JE19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE18Null() {
                return this.IsNull(this.table收费项目金额.JE18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE18Null() {
                this[this.table收费项目金额.JE18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE17Null() {
                return this.IsNull(this.table收费项目金额.JE17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE17Null() {
                this[this.table收费项目金额.JE17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE16Null() {
                return this.IsNull(this.table收费项目金额.JE16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE16Null() {
                this[this.table收费项目金额.JE16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE15Null() {
                return this.IsNull(this.table收费项目金额.JE15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE15Null() {
                this[this.table收费项目金额.JE15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE14Null() {
                return this.IsNull(this.table收费项目金额.JE14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE14Null() {
                this[this.table收费项目金额.JE14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE13Null() {
                return this.IsNull(this.table收费项目金额.JE13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE13Null() {
                this[this.table收费项目金额.JE13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE12Null() {
                return this.IsNull(this.table收费项目金额.JE12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE12Null() {
                this[this.table收费项目金额.JE12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE11Null() {
                return this.IsNull(this.table收费项目金额.JE11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE11Null() {
                this[this.table收费项目金额.JE11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE10Null() {
                return this.IsNull(this.table收费项目金额.JE10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE10Null() {
                this[this.table收费项目金额.JE10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE9Null() {
                return this.IsNull(this.table收费项目金额.JE9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE9Null() {
                this[this.table收费项目金额.JE9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE8Null() {
                return this.IsNull(this.table收费项目金额.JE8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE8Null() {
                this[this.table收费项目金额.JE8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE7Null() {
                return this.IsNull(this.table收费项目金额.JE7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE7Null() {
                this[this.table收费项目金额.JE7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE6Null() {
                return this.IsNull(this.table收费项目金额.JE6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE6Null() {
                this[this.table收费项目金额.JE6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE5Null() {
                return this.IsNull(this.table收费项目金额.JE5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE5Null() {
                this[this.table收费项目金额.JE5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE1Null() {
                return this.IsNull(this.table收费项目金额.JE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE1Null() {
                this[this.table收费项目金额.JE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE2Null() {
                return this.IsNull(this.table收费项目金额.JE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE2Null() {
                this[this.table收费项目金额.JE2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE3Null() {
                return this.IsNull(this.table收费项目金额.JE3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE3Null() {
                this[this.table收费项目金额.JE3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE4Null() {
                return this.IsNull(this.table收费项目金额.JE4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE4Null() {
                this[this.table收费项目金额.JE4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE33Null() {
                return this.IsNull(this.table收费项目金额.JE33Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE33Null() {
                this[this.table收费项目金额.JE33Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE34Null() {
                return this.IsNull(this.table收费项目金额.JE34Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE34Null() {
                this[this.table收费项目金额.JE34Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE35Null() {
                return this.IsNull(this.table收费项目金额.JE35Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE35Null() {
                this[this.table收费项目金额.JE35Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE36Null() {
                return this.IsNull(this.table收费项目金额.JE36Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE36Null() {
                this[this.table收费项目金额.JE36Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE37Null() {
                return this.IsNull(this.table收费项目金额.JE37Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE37Null() {
                this[this.table收费项目金额.JE37Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE38Null() {
                return this.IsNull(this.table收费项目金额.JE38Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE38Null() {
                this[this.table收费项目金额.JE38Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE39Null() {
                return this.IsNull(this.table收费项目金额.JE39Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE39Null() {
                this[this.table收费项目金额.JE39Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE40Null() {
                return this.IsNull(this.table收费项目金额.JE40Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE40Null() {
                this[this.table收费项目金额.JE40Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE25Null() {
                return this.IsNull(this.table收费项目金额.JE25Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE25Null() {
                this[this.table收费项目金额.JE25Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE26Null() {
                return this.IsNull(this.table收费项目金额.JE26Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE26Null() {
                this[this.table收费项目金额.JE26Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE27Null() {
                return this.IsNull(this.table收费项目金额.JE27Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE27Null() {
                this[this.table收费项目金额.JE27Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE28Null() {
                return this.IsNull(this.table收费项目金额.JE28Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE28Null() {
                this[this.table收费项目金额.JE28Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE29Null() {
                return this.IsNull(this.table收费项目金额.JE29Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE29Null() {
                this[this.table收费项目金额.JE29Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE30Null() {
                return this.IsNull(this.table收费项目金额.JE30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE30Null() {
                this[this.table收费项目金额.JE30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE31Null() {
                return this.IsNull(this.table收费项目金额.JE31Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE31Null() {
                this[this.table收费项目金额.JE31Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE32Null() {
                return this.IsNull(this.table收费项目金额.JE32Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE32Null() {
                this[this.table收费项目金额.JE32Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE41Null() {
                return this.IsNull(this.table收费项目金额.JE41Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE41Null() {
                this[this.table收费项目金额.JE41Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE42Null() {
                return this.IsNull(this.table收费项目金额.JE42Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE42Null() {
                this[this.table收费项目金额.JE42Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE43Null() {
                return this.IsNull(this.table收费项目金额.JE43Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE43Null() {
                this[this.table收费项目金额.JE43Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE44Null() {
                return this.IsNull(this.table收费项目金额.JE44Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE44Null() {
                this[this.table收费项目金额.JE44Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE45Null() {
                return this.IsNull(this.table收费项目金额.JE45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE45Null() {
                this[this.table收费项目金额.JE45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE46Null() {
                return this.IsNull(this.table收费项目金额.JE46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE46Null() {
                this[this.table收费项目金额.JE46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE47Null() {
                return this.IsNull(this.table收费项目金额.JE47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE47Null() {
                this[this.table收费项目金额.JE47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE48Null() {
                return this.IsNull(this.table收费项目金额.JE48Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE48Null() {
                this[this.table收费项目金额.JE48Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE49Null() {
                return this.IsNull(this.table收费项目金额.JE49Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE49Null() {
                this[this.table收费项目金额.JE49Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE50Null() {
                return this.IsNull(this.table收费项目金额.JE50Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE50Null() {
                this[this.table收费项目金额.JE50Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE51Null() {
                return this.IsNull(this.table收费项目金额.JE51Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE51Null() {
                this[this.table收费项目金额.JE51Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE52Null() {
                return this.IsNull(this.table收费项目金额.JE52Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE52Null() {
                this[this.table收费项目金额.JE52Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE53Null() {
                return this.IsNull(this.table收费项目金额.JE53Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE53Null() {
                this[this.table收费项目金额.JE53Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE54Null() {
                return this.IsNull(this.table收费项目金额.JE54Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE54Null() {
                this[this.table收费项目金额.JE54Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE55Null() {
                return this.IsNull(this.table收费项目金额.JE55Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE55Null() {
                this[this.table收费项目金额.JE55Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE56Null() {
                return this.IsNull(this.table收费项目金额.JE56Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE56Null() {
                this[this.table收费项目金额.JE56Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE57Null() {
                return this.IsNull(this.table收费项目金额.JE57Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE57Null() {
                this[this.table收费项目金额.JE57Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE58Null() {
                return this.IsNull(this.table收费项目金额.JE58Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE58Null() {
                this[this.table收费项目金额.JE58Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE59Null() {
                return this.IsNull(this.table收费项目金额.JE59Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE59Null() {
                this[this.table收费项目金额.JE59Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE60Null() {
                return this.IsNull(this.table收费项目金额.JE60Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE60Null() {
                this[this.table收费项目金额.JE60Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE61Null() {
                return this.IsNull(this.table收费项目金额.JE61Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE61Null() {
                this[this.table收费项目金额.JE61Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE62Null() {
                return this.IsNull(this.table收费项目金额.JE62Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE62Null() {
                this[this.table收费项目金额.JE62Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE63Null() {
                return this.IsNull(this.table收费项目金额.JE63Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE63Null() {
                this[this.table收费项目金额.JE63Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE64Null() {
                return this.IsNull(this.table收费项目金额.JE64Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE64Null() {
                this[this.table收费项目金额.JE64Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE65Null() {
                return this.IsNull(this.table收费项目金额.JE65Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE65Null() {
                this[this.table收费项目金额.JE65Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE66Null() {
                return this.IsNull(this.table收费项目金额.JE66Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE66Null() {
                this[this.table收费项目金额.JE66Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE67Null() {
                return this.IsNull(this.table收费项目金额.JE67Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE67Null() {
                this[this.table收费项目金额.JE67Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE68Null() {
                return this.IsNull(this.table收费项目金额.JE68Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE68Null() {
                this[this.table收费项目金额.JE68Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 医保信息Row : global::System.Data.DataRow {
            
            private 医保信息DataTable table医保信息;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 医保信息Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table医保信息 = ((医保信息DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 基本医保统筹支付 {
                get {
                    try {
                        return ((decimal)(this[this.table医保信息.基本医保统筹支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医保信息”中列“基本医保统筹支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医保信息.基本医保统筹支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 补充医保统筹支付 {
                get {
                    try {
                        return ((decimal)(this[this.table医保信息.补充医保统筹支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医保信息”中列“补充医保统筹支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医保信息.补充医保统筹支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 商业医保统筹支付 {
                get {
                    try {
                        return ((decimal)(this[this.table医保信息.商业医保统筹支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医保信息”中列“商业医保统筹支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医保信息.商业医保统筹支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 大病互助统筹支付 {
                get {
                    try {
                        return ((decimal)(this[this.table医保信息.大病互助统筹支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医保信息”中列“大病互助统筹支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医保信息.大病互助统筹支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 个人帐户支付 {
                get {
                    try {
                        return ((decimal)(this[this.table医保信息.个人帐户支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医保信息”中列“个人帐户支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医保信息.个人帐户支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 个人自付 {
                get {
                    try {
                        return ((decimal)(this[this.table医保信息.个人自付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医保信息”中列“个人自付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医保信息.个人自付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 个人自费 {
                get {
                    try {
                        return ((decimal)(this[this.table医保信息.个人自费Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医保信息”中列“个人自费”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医保信息.个人自费Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 起付金额 {
                get {
                    try {
                        return ((decimal)(this[this.table医保信息.起付金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医保信息”中列“起付金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医保信息.起付金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 超封顶线自付 {
                get {
                    try {
                        return ((decimal)(this[this.table医保信息.超封顶线自付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医保信息”中列“超封顶线自付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医保信息.超封顶线自付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 现金支付 {
                get {
                    try {
                        return ((decimal)(this[this.table医保信息.现金支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医保信息”中列“现金支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医保信息.现金支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is基本医保统筹支付Null() {
                return this.IsNull(this.table医保信息.基本医保统筹支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set基本医保统筹支付Null() {
                this[this.table医保信息.基本医保统筹支付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is补充医保统筹支付Null() {
                return this.IsNull(this.table医保信息.补充医保统筹支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set补充医保统筹支付Null() {
                this[this.table医保信息.补充医保统筹支付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is商业医保统筹支付Null() {
                return this.IsNull(this.table医保信息.商业医保统筹支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set商业医保统筹支付Null() {
                this[this.table医保信息.商业医保统筹支付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is大病互助统筹支付Null() {
                return this.IsNull(this.table医保信息.大病互助统筹支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set大病互助统筹支付Null() {
                this[this.table医保信息.大病互助统筹支付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is个人帐户支付Null() {
                return this.IsNull(this.table医保信息.个人帐户支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set个人帐户支付Null() {
                this[this.table医保信息.个人帐户支付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is个人自付Null() {
                return this.IsNull(this.table医保信息.个人自付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set个人自付Null() {
                this[this.table医保信息.个人自付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is个人自费Null() {
                return this.IsNull(this.table医保信息.个人自费Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set个人自费Null() {
                this[this.table医保信息.个人自费Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is起付金额Null() {
                return this.IsNull(this.table医保信息.起付金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set起付金额Null() {
                this[this.table医保信息.起付金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is超封顶线自付Null() {
                return this.IsNull(this.table医保信息.超封顶线自付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set超封顶线自付Null() {
                this[this.table医保信息.超封顶线自付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is现金支付Null() {
                return this.IsNull(this.table医保信息.现金支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set现金支付Null() {
                this[this.table医保信息.现金支付Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 其它信息Row : global::System.Data.DataRow {
            
            private 其它信息DataTable table其它信息;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 其它信息Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table其它信息 = ((其它信息DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 病历本费 {
                get {
                    try {
                        return ((decimal)(this[this.table其它信息.病历本费Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“其它信息”中列“病历本费”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table其它信息.病历本费Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is病历本费Null() {
                return this.IsNull(this.table其它信息.病历本费Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set病历本费Null() {
                this[this.table其它信息.病历本费Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 预收款Row : global::System.Data.DataRow {
            
            private 预收款DataTable table预收款;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 预收款Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table预收款 = ((预收款DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 类型 {
                get {
                    try {
                        return ((string)(this[this.table预收款.类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 票据号 {
                get {
                    try {
                        return ((string)(this[this.table预收款.票据号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“票据号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.票据号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 金额 {
                get {
                    try {
                        return ((string)(this[this.table预收款.金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 收款日期 {
                get {
                    try {
                        return ((string)(this[this.table预收款.收款日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“收款日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.收款日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 收款员 {
                get {
                    try {
                        return ((string)(this[this.table预收款.收款员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“收款员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.收款员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 大写金额 {
                get {
                    try {
                        return ((string)(this[this.table预收款.大写金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“大写金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.大写金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 银行 {
                get {
                    try {
                        return ((string)(this[this.table预收款.银行Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“银行”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.银行Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.table预收款.单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.table预收款.姓名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“姓名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.姓名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 门诊号 {
                get {
                    try {
                        return ((string)(this[this.table预收款.门诊号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“门诊号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.门诊号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 支票号 {
                get {
                    try {
                        return ((string)(this[this.table预收款.支票号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“支票号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.支票号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 卡号 {
                get {
                    try {
                        return ((string)(this[this.table预收款.卡号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“卡号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.卡号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 年龄 {
                get {
                    try {
                        return ((string)(this[this.table预收款.年龄Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“年龄”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.年龄Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 性别 {
                get {
                    try {
                        return ((string)(this[this.table预收款.性别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“性别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.性别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 联系方式 {
                get {
                    try {
                        return ((string)(this[this.table预收款.联系方式Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“联系方式”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.联系方式Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.table预收款.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预收款”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预收款.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is类型Null() {
                return this.IsNull(this.table预收款.类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set类型Null() {
                this[this.table预收款.类型Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is票据号Null() {
                return this.IsNull(this.table预收款.票据号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set票据号Null() {
                this[this.table预收款.票据号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is金额Null() {
                return this.IsNull(this.table预收款.金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set金额Null() {
                this[this.table预收款.金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is收款日期Null() {
                return this.IsNull(this.table预收款.收款日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set收款日期Null() {
                this[this.table预收款.收款日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is收款员Null() {
                return this.IsNull(this.table预收款.收款员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set收款员Null() {
                this[this.table预收款.收款员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is大写金额Null() {
                return this.IsNull(this.table预收款.大写金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set大写金额Null() {
                this[this.table预收款.大写金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is银行Null() {
                return this.IsNull(this.table预收款.银行Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set银行Null() {
                this[this.table预收款.银行Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单位Null() {
                return this.IsNull(this.table预收款.单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单位Null() {
                this[this.table预收款.单位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is姓名Null() {
                return this.IsNull(this.table预收款.姓名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set姓名Null() {
                this[this.table预收款.姓名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is门诊号Null() {
                return this.IsNull(this.table预收款.门诊号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set门诊号Null() {
                this[this.table预收款.门诊号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is支票号Null() {
                return this.IsNull(this.table预收款.支票号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set支票号Null() {
                this[this.table预收款.支票号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is卡号Null() {
                return this.IsNull(this.table预收款.卡号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set卡号Null() {
                this[this.table预收款.卡号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is年龄Null() {
                return this.IsNull(this.table预收款.年龄Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set年龄Null() {
                this[this.table预收款.年龄Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is性别Null() {
                return this.IsNull(this.table预收款.性别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set性别Null() {
                this[this.table预收款.性别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is联系方式Null() {
                return this.IsNull(this.table预收款.联系方式Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set联系方式Null() {
                this[this.table预收款.联系方式Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.table预收款.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.table预收款.备注Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class pos明细Row : global::System.Data.DataRow {
            
            private pos明细DataTable tablepos明细;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal pos明细Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepos明细 = ((pos明细DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.tablepos明细.姓名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“pos明细”中列“姓名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablepos明细.姓名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 收款日期 {
                get {
                    try {
                        return ((string)(this[this.tablepos明细.收款日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“pos明细”中列“收款日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablepos明细.收款日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 收费员 {
                get {
                    try {
                        return ((string)(this[this.tablepos明细.收费员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“pos明细”中列“收费员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablepos明细.收费员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 金额 {
                get {
                    try {
                        return ((decimal)(this[this.tablepos明细.金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“pos明细”中列“金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablepos明细.金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short 序号 {
                get {
                    try {
                        return ((short)(this[this.tablepos明细.序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“pos明细”中列“序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablepos明细.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 门诊号 {
                get {
                    try {
                        return ((string)(this[this.tablepos明细.门诊号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“pos明细”中列“门诊号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablepos明细.门诊号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 卡号 {
                get {
                    try {
                        return ((string)(this[this.tablepos明细.卡号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“pos明细”中列“卡号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablepos明细.卡号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 发票号 {
                get {
                    try {
                        return ((string)(this[this.tablepos明细.发票号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“pos明细”中列“发票号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablepos明细.发票号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is姓名Null() {
                return this.IsNull(this.tablepos明细.姓名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set姓名Null() {
                this[this.tablepos明细.姓名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is收款日期Null() {
                return this.IsNull(this.tablepos明细.收款日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set收款日期Null() {
                this[this.tablepos明细.收款日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is收费员Null() {
                return this.IsNull(this.tablepos明细.收费员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set收费员Null() {
                this[this.tablepos明细.收费员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is金额Null() {
                return this.IsNull(this.tablepos明细.金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set金额Null() {
                this[this.tablepos明细.金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is序号Null() {
                return this.IsNull(this.tablepos明细.序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set序号Null() {
                this[this.tablepos明细.序号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is门诊号Null() {
                return this.IsNull(this.tablepos明细.门诊号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set门诊号Null() {
                this[this.tablepos明细.门诊号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is卡号Null() {
                return this.IsNull(this.tablepos明细.卡号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set卡号Null() {
                this[this.tablepos明细.卡号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发票号Null() {
                return this.IsNull(this.tablepos明细.发票号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发票号Null() {
                this[this.tablepos明细.发票号Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 合同单位汇总Row : global::System.Data.DataRow {
            
            private 合同单位汇总DataTable table合同单位汇总;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 合同单位汇总Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table合同单位汇总 = ((合同单位汇总DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单位类型 {
                get {
                    try {
                        return ((string)(this[this.table合同单位汇总.单位类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“合同单位汇总”中列“单位类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table合同单位汇总.单位类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 合同单位名称 {
                get {
                    try {
                        return ((string)(this[this.table合同单位汇总.合同单位名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“合同单位汇总”中列“合同单位名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table合同单位汇总.合同单位名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 应收 {
                get {
                    try {
                        return ((decimal)(this[this.table合同单位汇总.应收Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“合同单位汇总”中列“应收”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table合同单位汇总.应收Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 优惠 {
                get {
                    try {
                        return ((decimal)(this[this.table合同单位汇总.优惠Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“合同单位汇总”中列“优惠”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table合同单位汇总.优惠Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 实收 {
                get {
                    try {
                        return ((decimal)(this[this.table合同单位汇总.实收Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“合同单位汇总”中列“实收”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table合同单位汇总.实收Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dwmc {
                get {
                    try {
                        return ((string)(this[this.table合同单位汇总.dwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“合同单位汇总”中列“dwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table合同单位汇总.dwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单位类型Null() {
                return this.IsNull(this.table合同单位汇总.单位类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单位类型Null() {
                this[this.table合同单位汇总.单位类型Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is合同单位名称Null() {
                return this.IsNull(this.table合同单位汇总.合同单位名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set合同单位名称Null() {
                this[this.table合同单位汇总.合同单位名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is应收Null() {
                return this.IsNull(this.table合同单位汇总.应收Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set应收Null() {
                this[this.table合同单位汇总.应收Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is优惠Null() {
                return this.IsNull(this.table合同单位汇总.优惠Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set优惠Null() {
                this[this.table合同单位汇总.优惠Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is实收Null() {
                return this.IsNull(this.table合同单位汇总.实收Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set实收Null() {
                this[this.table合同单位汇总.实收Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdwmcNull() {
                return this.IsNull(this.table合同单位汇总.dwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdwmcNull() {
                this[this.table合同单位汇总.dwmcColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 医保日统计_明细Row : global::System.Data.DataRow {
            
            private 医保日统计_明细DataTable table医保日统计_明细;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 医保日统计_明细Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table医保日统计_明细 = ((医保日统计_明细DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yblx {
                get {
                    try {
                        return ((string)(this[this.table医保日统计_明细.yblxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医保日统计_明细”中列“yblx”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医保日统计_明细.yblxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ybll {
                get {
                    try {
                        return ((string)(this[this.table医保日统计_明细.ybllColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医保日统计_明细”中列“ybll”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医保日统计_明细.ybllColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rq {
                get {
                    try {
                        return ((string)(this[this.table医保日统计_明细.rqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医保日统计_明细”中列“rq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医保日统计_明细.rqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ybzf {
                get {
                    try {
                        return ((decimal)(this[this.table医保日统计_明细.ybzfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医保日统计_明细”中列“ybzf”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医保日统计_明细.ybzfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyblxNull() {
                return this.IsNull(this.table医保日统计_明细.yblxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyblxNull() {
                this[this.table医保日统计_明细.yblxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsybllNull() {
                return this.IsNull(this.table医保日统计_明细.ybllColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetybllNull() {
                this[this.table医保日统计_明细.ybllColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrqNull() {
                return this.IsNull(this.table医保日统计_明细.rqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrqNull() {
                this[this.table医保日统计_明细.rqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsybzfNull() {
                return this.IsNull(this.table医保日统计_明细.ybzfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetybzfNull() {
                this[this.table医保日统计_明细.ybzfColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 门诊收费员工作量Row : global::System.Data.DataRow {
            
            private 门诊收费员工作量DataTable table门诊收费员工作量;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 门诊收费员工作量Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table门诊收费员工作量 = ((门诊收费员工作量DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table门诊收费员工作量.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊收费员工作量”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊收费员工作量.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sfy {
                get {
                    try {
                        return ((string)(this[this.table门诊收费员工作量.sfyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊收费员工作量”中列“sfy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊收费员工作量.sfyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ghzs {
                get {
                    try {
                        return ((int)(this[this.table门诊收费员工作量.ghzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊收费员工作量”中列“ghzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊收费员工作量.ghzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ghzfzs {
                get {
                    try {
                        return ((int)(this[this.table门诊收费员工作量.ghzfzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊收费员工作量”中列“ghzfzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊收费员工作量.ghzfzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ghyxzs {
                get {
                    try {
                        return ((int)(this[this.table门诊收费员工作量.ghyxzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊收费员工作量”中列“ghyxzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊收费员工作量.ghyxzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sfzs {
                get {
                    try {
                        return ((int)(this[this.table门诊收费员工作量.sfzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊收费员工作量”中列“sfzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊收费员工作量.sfzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sfzfzs {
                get {
                    try {
                        return ((int)(this[this.table门诊收费员工作量.sfzfzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊收费员工作量”中列“sfzfzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊收费员工作量.sfzfzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sfyxzs {
                get {
                    try {
                        return ((int)(this[this.table门诊收费员工作量.sfyxzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊收费员工作量”中列“sfyxzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊收费员工作量.sfyxzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sfcs {
                get {
                    try {
                        return ((int)(this[this.table门诊收费员工作量.sfcsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊收费员工作量”中列“sfcs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊收费员工作量.sfcsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sftfcs {
                get {
                    try {
                        return ((int)(this[this.table门诊收费员工作量.sftfcsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊收费员工作量”中列“sftfcs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊收费员工作量.sftfcsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int rycs {
                get {
                    try {
                        return ((int)(this[this.table门诊收费员工作量.rycsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊收费员工作量”中列“rycs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊收费员工作量.rycsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int yjks {
                get {
                    try {
                        return ((int)(this[this.table门诊收费员工作量.yjksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊收费员工作量”中列“yjks”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊收费员工作量.yjksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int jscs {
                get {
                    try {
                        return ((int)(this[this.table门诊收费员工作量.jscsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊收费员工作量”中列“jscs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊收费员工作量.jscsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table门诊收费员工作量.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table门诊收费员工作量.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssfyNull() {
                return this.IsNull(this.table门诊收费员工作量.sfyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsfyNull() {
                this[this.table门诊收费员工作量.sfyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsghzsNull() {
                return this.IsNull(this.table门诊收费员工作量.ghzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetghzsNull() {
                this[this.table门诊收费员工作量.ghzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsghzfzsNull() {
                return this.IsNull(this.table门诊收费员工作量.ghzfzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetghzfzsNull() {
                this[this.table门诊收费员工作量.ghzfzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsghyxzsNull() {
                return this.IsNull(this.table门诊收费员工作量.ghyxzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetghyxzsNull() {
                this[this.table门诊收费员工作量.ghyxzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssfzsNull() {
                return this.IsNull(this.table门诊收费员工作量.sfzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsfzsNull() {
                this[this.table门诊收费员工作量.sfzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssfzfzsNull() {
                return this.IsNull(this.table门诊收费员工作量.sfzfzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsfzfzsNull() {
                this[this.table门诊收费员工作量.sfzfzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssfyxzsNull() {
                return this.IsNull(this.table门诊收费员工作量.sfyxzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsfyxzsNull() {
                this[this.table门诊收费员工作量.sfyxzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssfcsNull() {
                return this.IsNull(this.table门诊收费员工作量.sfcsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsfcsNull() {
                this[this.table门诊收费员工作量.sfcsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssftfcsNull() {
                return this.IsNull(this.table门诊收费员工作量.sftfcsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsftfcsNull() {
                this[this.table门诊收费员工作量.sftfcsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrycsNull() {
                return this.IsNull(this.table门诊收费员工作量.rycsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrycsNull() {
                this[this.table门诊收费员工作量.rycsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyjksNull() {
                return this.IsNull(this.table门诊收费员工作量.yjksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyjksNull() {
                this[this.table门诊收费员工作量.yjksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjscsNull() {
                return this.IsNull(this.table门诊收费员工作量.jscsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjscsNull() {
                this[this.table门诊收费员工作量.jscsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 门诊医生接诊量Row : global::System.Data.DataRow {
            
            private 门诊医生接诊量DataTable table门诊医生接诊量;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 门诊医生接诊量Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table门诊医生接诊量 = ((门诊医生接诊量DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int XH {
                get {
                    try {
                        return ((int)(this[this.table门诊医生接诊量.XHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊医生接诊量”中列“XH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊医生接诊量.XHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KSMC {
                get {
                    try {
                        return ((string)(this[this.table门诊医生接诊量.KSMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊医生接诊量”中列“KSMC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊医生接诊量.KSMCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YSMC {
                get {
                    try {
                        return ((string)(this[this.table门诊医生接诊量.YSMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊医生接诊量”中列“YSMC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊医生接诊量.YSMCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ZRC {
                get {
                    try {
                        return ((int)(this[this.table门诊医生接诊量.ZRCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊医生接诊量”中列“ZRC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊医生接诊量.ZRCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YHRC {
                get {
                    try {
                        return ((int)(this[this.table门诊医生接诊量.YHRCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊医生接诊量”中列“YHRC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊医生接诊量.YHRCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GHJE {
                get {
                    try {
                        return ((decimal)(this[this.table门诊医生接诊量.GHJEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊医生接诊量”中列“GHJE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊医生接诊量.GHJEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WHRC {
                get {
                    try {
                        return ((int)(this[this.table门诊医生接诊量.WHRCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊医生接诊量”中列“WHRC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊医生接诊量.WHRCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXHNull() {
                return this.IsNull(this.table门诊医生接诊量.XHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXHNull() {
                this[this.table门诊医生接诊量.XHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKSMCNull() {
                return this.IsNull(this.table门诊医生接诊量.KSMCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKSMCNull() {
                this[this.table门诊医生接诊量.KSMCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYSMCNull() {
                return this.IsNull(this.table门诊医生接诊量.YSMCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYSMCNull() {
                this[this.table门诊医生接诊量.YSMCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZRCNull() {
                return this.IsNull(this.table门诊医生接诊量.ZRCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZRCNull() {
                this[this.table门诊医生接诊量.ZRCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYHRCNull() {
                return this.IsNull(this.table门诊医生接诊量.YHRCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYHRCNull() {
                this[this.table门诊医生接诊量.YHRCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGHJENull() {
                return this.IsNull(this.table门诊医生接诊量.GHJEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGHJENull() {
                this[this.table门诊医生接诊量.GHJEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWHRCNull() {
                return this.IsNull(this.table门诊医生接诊量.WHRCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWHRCNull() {
                this[this.table门诊医生接诊量.WHRCColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 收费明细Row : global::System.Data.DataRow {
            
            private 收费明细DataTable table收费明细;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费明细Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table收费明细 = ((收费明细DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string item_name {
                get {
                    try {
                        return ((string)(this[this.table收费明细.item_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费明细”中列“item_name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费明细.item_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal je {
                get {
                    try {
                        return ((decimal)(this[this.table收费明细.jeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费明细”中列“je”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费明细.jeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isitem_nameNull() {
                return this.IsNull(this.table收费明细.item_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setitem_nameNull() {
                this[this.table收费明细.item_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjeNull() {
                return this.IsNull(this.table收费明细.jeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjeNull() {
                this[this.table收费明细.jeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 收费物价明细Row : global::System.Data.DataRow {
            
            private 收费物价明细DataTable table收费物价明细;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费物价明细Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table收费物价明细 = ((收费物价明细DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pm {
                get {
                    try {
                        return ((string)(this[this.table收费物价明细.pmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费物价明细”中列“pm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费物价明细.pmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dw {
                get {
                    try {
                        return ((decimal)(this[this.table收费物价明细.dwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费物价明细”中列“dw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费物价明细.dwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gg {
                get {
                    try {
                        return ((string)(this[this.table收费物价明细.ggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费物价明细”中列“gg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费物价明细.ggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string js {
                get {
                    try {
                        return ((string)(this[this.table收费物价明细.jsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费物价明细”中列“js”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费物价明细.jsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sl {
                get {
                    try {
                        return ((string)(this[this.table收费物价明细.slColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费物价明细”中列“sl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费物价明细.slColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string je {
                get {
                    try {
                        return ((string)(this[this.table收费物价明细.jeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费物价明细”中列“je”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费物价明细.jeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dj {
                get {
                    try {
                        return ((string)(this[this.table收费物价明细.djColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费物价明细”中列“dj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费物价明细.djColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jx {
                get {
                    try {
                        return ((string)(this[this.table收费物价明细.jxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费物价明细”中列“jx”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费物价明细.jxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hjid {
                get {
                    try {
                        return ((string)(this[this.table收费物价明细.hjidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费物价明细”中列“hjid”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费物价明细.hjidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspmNull() {
                return this.IsNull(this.table收费物价明细.pmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpmNull() {
                this[this.table收费物价明细.pmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdwNull() {
                return this.IsNull(this.table收费物价明细.dwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdwNull() {
                this[this.table收费物价明细.dwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsggNull() {
                return this.IsNull(this.table收费物价明细.ggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetggNull() {
                this[this.table收费物价明细.ggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjsNull() {
                return this.IsNull(this.table收费物价明细.jsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjsNull() {
                this[this.table收费物价明细.jsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsslNull() {
                return this.IsNull(this.table收费物价明细.slColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetslNull() {
                this[this.table收费物价明细.slColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjeNull() {
                return this.IsNull(this.table收费物价明细.jeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjeNull() {
                this[this.table收费物价明细.jeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjNull() {
                return this.IsNull(this.table收费物价明细.djColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjNull() {
                this[this.table收费物价明细.djColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjxNull() {
                return this.IsNull(this.table收费物价明细.jxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjxNull() {
                this[this.table收费物价明细.jxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshjidNull() {
                return this.IsNull(this.table收费物价明细.hjidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethjidNull() {
                this[this.table收费物价明细.hjidColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 收费项目1Row : global::System.Data.DataRow {
            
            private 收费项目1DataTable table收费项目1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费项目1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table收费项目1 = ((收费项目1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T24 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T24Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T24”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T24Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T23 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T23Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T23”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T23Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T22 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T22Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T22”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T22Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T21 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T21Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T21”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T21Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T20 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T20”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T19 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T19”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T18 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T18”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T17 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T17”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T16 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T16”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T15 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T15”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T14 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T14”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T13 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T13”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T12 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T12”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T11 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T11”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T10 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T10”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T9 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T9”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T8 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T8”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T7 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T7”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T6 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T6”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T5 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T1 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T2 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T3 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T4 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T33 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T33Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T33”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T33Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T34 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T34Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T34”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T34Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T35 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T35Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T35”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T35Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T36 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T36Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T36”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T36Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T37 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T37Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T37”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T37Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T38 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T38Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T38”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T38Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T39 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T39Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T39”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T39Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T40 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T40Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T40”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T40Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T25 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T25Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T25”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T25Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T26 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T26Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T26”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T26Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T27 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T27Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T27”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T27Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T28 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T28Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T28”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T28Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T29 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T29Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T29”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T29Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T30 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T30”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T31 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T31Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T31”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T31Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T32 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T32Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T32”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T32Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T41 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T41Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T41”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T41Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T42 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T42Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T42”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T42Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T43 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T43Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T43”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T43Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T44 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T44Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T44”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T44Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T45 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T45”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T46 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T46”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T47 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T47”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T48 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T48Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T48”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T48Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T49 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T49Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T49”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T49Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T50 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T50Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T50”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T50Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T51 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T51Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T51”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T51Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T52 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T52Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T52”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T52Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T53 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T53Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T53”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T53Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T54 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T54Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T54”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T54Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T55 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T55Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T55”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T55Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T56 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T56Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T56”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T56Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T57 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T57Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T57”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T57Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T58 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T58Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T58”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T58Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T59 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T59Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T59”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T59Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T60 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T60Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T60”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T60Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T61 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T61Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T61”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T61Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T62 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T62Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T62”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T62Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T63 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T63Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T63”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T63Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T64 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T64Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T64”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T64Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T65 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T65Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T65”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T65Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T66 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T66Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T66”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T66Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T67 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T67Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T67”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T67Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T68 {
                get {
                    try {
                        return ((string)(this[this.table收费项目1.T68Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目1”中列“T68”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目1.T68Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT24Null() {
                return this.IsNull(this.table收费项目1.T24Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT24Null() {
                this[this.table收费项目1.T24Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT23Null() {
                return this.IsNull(this.table收费项目1.T23Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT23Null() {
                this[this.table收费项目1.T23Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT22Null() {
                return this.IsNull(this.table收费项目1.T22Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT22Null() {
                this[this.table收费项目1.T22Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT21Null() {
                return this.IsNull(this.table收费项目1.T21Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT21Null() {
                this[this.table收费项目1.T21Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT20Null() {
                return this.IsNull(this.table收费项目1.T20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT20Null() {
                this[this.table收费项目1.T20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT19Null() {
                return this.IsNull(this.table收费项目1.T19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT19Null() {
                this[this.table收费项目1.T19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT18Null() {
                return this.IsNull(this.table收费项目1.T18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT18Null() {
                this[this.table收费项目1.T18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT17Null() {
                return this.IsNull(this.table收费项目1.T17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT17Null() {
                this[this.table收费项目1.T17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT16Null() {
                return this.IsNull(this.table收费项目1.T16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT16Null() {
                this[this.table收费项目1.T16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT15Null() {
                return this.IsNull(this.table收费项目1.T15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT15Null() {
                this[this.table收费项目1.T15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT14Null() {
                return this.IsNull(this.table收费项目1.T14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT14Null() {
                this[this.table收费项目1.T14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT13Null() {
                return this.IsNull(this.table收费项目1.T13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT13Null() {
                this[this.table收费项目1.T13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT12Null() {
                return this.IsNull(this.table收费项目1.T12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT12Null() {
                this[this.table收费项目1.T12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT11Null() {
                return this.IsNull(this.table收费项目1.T11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT11Null() {
                this[this.table收费项目1.T11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT10Null() {
                return this.IsNull(this.table收费项目1.T10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT10Null() {
                this[this.table收费项目1.T10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT9Null() {
                return this.IsNull(this.table收费项目1.T9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT9Null() {
                this[this.table收费项目1.T9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT8Null() {
                return this.IsNull(this.table收费项目1.T8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT8Null() {
                this[this.table收费项目1.T8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT7Null() {
                return this.IsNull(this.table收费项目1.T7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT7Null() {
                this[this.table收费项目1.T7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT6Null() {
                return this.IsNull(this.table收费项目1.T6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT6Null() {
                this[this.table收费项目1.T6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT5Null() {
                return this.IsNull(this.table收费项目1.T5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT5Null() {
                this[this.table收费项目1.T5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT1Null() {
                return this.IsNull(this.table收费项目1.T1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT1Null() {
                this[this.table收费项目1.T1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT2Null() {
                return this.IsNull(this.table收费项目1.T2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT2Null() {
                this[this.table收费项目1.T2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT3Null() {
                return this.IsNull(this.table收费项目1.T3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT3Null() {
                this[this.table收费项目1.T3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT4Null() {
                return this.IsNull(this.table收费项目1.T4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT4Null() {
                this[this.table收费项目1.T4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT33Null() {
                return this.IsNull(this.table收费项目1.T33Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT33Null() {
                this[this.table收费项目1.T33Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT34Null() {
                return this.IsNull(this.table收费项目1.T34Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT34Null() {
                this[this.table收费项目1.T34Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT35Null() {
                return this.IsNull(this.table收费项目1.T35Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT35Null() {
                this[this.table收费项目1.T35Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT36Null() {
                return this.IsNull(this.table收费项目1.T36Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT36Null() {
                this[this.table收费项目1.T36Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT37Null() {
                return this.IsNull(this.table收费项目1.T37Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT37Null() {
                this[this.table收费项目1.T37Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT38Null() {
                return this.IsNull(this.table收费项目1.T38Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT38Null() {
                this[this.table收费项目1.T38Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT39Null() {
                return this.IsNull(this.table收费项目1.T39Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT39Null() {
                this[this.table收费项目1.T39Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT40Null() {
                return this.IsNull(this.table收费项目1.T40Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT40Null() {
                this[this.table收费项目1.T40Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT25Null() {
                return this.IsNull(this.table收费项目1.T25Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT25Null() {
                this[this.table收费项目1.T25Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT26Null() {
                return this.IsNull(this.table收费项目1.T26Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT26Null() {
                this[this.table收费项目1.T26Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT27Null() {
                return this.IsNull(this.table收费项目1.T27Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT27Null() {
                this[this.table收费项目1.T27Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT28Null() {
                return this.IsNull(this.table收费项目1.T28Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT28Null() {
                this[this.table收费项目1.T28Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT29Null() {
                return this.IsNull(this.table收费项目1.T29Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT29Null() {
                this[this.table收费项目1.T29Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT30Null() {
                return this.IsNull(this.table收费项目1.T30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT30Null() {
                this[this.table收费项目1.T30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT31Null() {
                return this.IsNull(this.table收费项目1.T31Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT31Null() {
                this[this.table收费项目1.T31Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT32Null() {
                return this.IsNull(this.table收费项目1.T32Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT32Null() {
                this[this.table收费项目1.T32Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT41Null() {
                return this.IsNull(this.table收费项目1.T41Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT41Null() {
                this[this.table收费项目1.T41Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT42Null() {
                return this.IsNull(this.table收费项目1.T42Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT42Null() {
                this[this.table收费项目1.T42Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT43Null() {
                return this.IsNull(this.table收费项目1.T43Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT43Null() {
                this[this.table收费项目1.T43Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT44Null() {
                return this.IsNull(this.table收费项目1.T44Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT44Null() {
                this[this.table收费项目1.T44Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT45Null() {
                return this.IsNull(this.table收费项目1.T45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT45Null() {
                this[this.table收费项目1.T45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT46Null() {
                return this.IsNull(this.table收费项目1.T46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT46Null() {
                this[this.table收费项目1.T46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT47Null() {
                return this.IsNull(this.table收费项目1.T47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT47Null() {
                this[this.table收费项目1.T47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT48Null() {
                return this.IsNull(this.table收费项目1.T48Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT48Null() {
                this[this.table收费项目1.T48Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT49Null() {
                return this.IsNull(this.table收费项目1.T49Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT49Null() {
                this[this.table收费项目1.T49Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT50Null() {
                return this.IsNull(this.table收费项目1.T50Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT50Null() {
                this[this.table收费项目1.T50Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT51Null() {
                return this.IsNull(this.table收费项目1.T51Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT51Null() {
                this[this.table收费项目1.T51Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT52Null() {
                return this.IsNull(this.table收费项目1.T52Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT52Null() {
                this[this.table收费项目1.T52Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT53Null() {
                return this.IsNull(this.table收费项目1.T53Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT53Null() {
                this[this.table收费项目1.T53Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT54Null() {
                return this.IsNull(this.table收费项目1.T54Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT54Null() {
                this[this.table收费项目1.T54Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT55Null() {
                return this.IsNull(this.table收费项目1.T55Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT55Null() {
                this[this.table收费项目1.T55Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT56Null() {
                return this.IsNull(this.table收费项目1.T56Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT56Null() {
                this[this.table收费项目1.T56Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT57Null() {
                return this.IsNull(this.table收费项目1.T57Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT57Null() {
                this[this.table收费项目1.T57Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT58Null() {
                return this.IsNull(this.table收费项目1.T58Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT58Null() {
                this[this.table收费项目1.T58Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT59Null() {
                return this.IsNull(this.table收费项目1.T59Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT59Null() {
                this[this.table收费项目1.T59Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT60Null() {
                return this.IsNull(this.table收费项目1.T60Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT60Null() {
                this[this.table收费项目1.T60Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT61Null() {
                return this.IsNull(this.table收费项目1.T61Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT61Null() {
                this[this.table收费项目1.T61Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT62Null() {
                return this.IsNull(this.table收费项目1.T62Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT62Null() {
                this[this.table收费项目1.T62Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT63Null() {
                return this.IsNull(this.table收费项目1.T63Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT63Null() {
                this[this.table收费项目1.T63Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT64Null() {
                return this.IsNull(this.table收费项目1.T64Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT64Null() {
                this[this.table收费项目1.T64Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT65Null() {
                return this.IsNull(this.table收费项目1.T65Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT65Null() {
                this[this.table收费项目1.T65Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT66Null() {
                return this.IsNull(this.table收费项目1.T66Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT66Null() {
                this[this.table收费项目1.T66Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT67Null() {
                return this.IsNull(this.table收费项目1.T67Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT67Null() {
                this[this.table收费项目1.T67Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT68Null() {
                return this.IsNull(this.table收费项目1.T68Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT68Null() {
                this[this.table收费项目1.T68Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 收费项目金额1Row : global::System.Data.DataRow {
            
            private 收费项目金额1DataTable table收费项目金额1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费项目金额1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table收费项目金额1 = ((收费项目金额1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE24 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE24Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE24”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE24Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE23 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE23Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE23”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE23Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE22 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE22Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE22”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE22Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE21 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE21Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE21”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE21Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE20 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE20”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE19 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE19”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE18 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE18”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE17 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE17”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE16 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE16”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE15 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE15”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE14 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE14”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE13 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE13”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE12 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE12”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE11 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE11”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE10 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE10”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE9 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE9”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE8 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE8”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE7 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE7”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE6 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE6”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE5 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE1 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE2 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE3 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE4 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE33 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE33Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE33”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE33Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE34 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE34Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE34”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE34Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE35 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE35Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE35”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE35Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE36 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE36Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE36”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE36Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE37 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE37Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE37”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE37Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE38 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE38Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE38”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE38Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE39 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE39Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE39”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE39Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE40 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE40Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE40”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE40Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE25 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE25Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE25”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE25Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE26 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE26Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE26”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE26Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE27 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE27Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE27”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE27Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE28 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE28Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE28”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE28Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE29 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE29Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE29”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE29Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE30 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE30”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE31 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE31Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE31”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE31Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE32 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE32Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE32”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE32Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE41 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE41Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE41”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE41Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE42 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE42Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE42”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE42Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE43 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE43Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE43”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE43Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE44 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE44Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE44”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE44Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE45 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE45”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE46 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE46”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE47 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE47”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE48 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE48Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE48”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE48Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE49 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE49Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE49”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE49Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE50 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE50Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE50”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE50Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE51 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE51Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE51”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE51Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE52 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE52Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE52”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE52Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE53 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE53Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE53”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE53Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE54 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE54Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE54”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE54Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE55 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE55Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE55”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE55Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE56 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE56Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE56”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE56Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE57 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE57Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE57”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE57Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE58 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE58Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE58”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE58Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE59 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE59Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE59”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE59Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE60 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE60Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE60”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE60Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE61 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE61Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE61”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE61Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE62 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE62Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE62”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE62Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE63 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE63Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE63”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE63Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE64 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE64Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE64”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE64Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE65 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE65Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE65”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE65Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE66 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE66Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE66”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE66Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE67 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE67Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE67”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE67Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE68 {
                get {
                    try {
                        return ((string)(this[this.table收费项目金额1.JE68Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费项目金额1”中列“JE68”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费项目金额1.JE68Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE24Null() {
                return this.IsNull(this.table收费项目金额1.JE24Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE24Null() {
                this[this.table收费项目金额1.JE24Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE23Null() {
                return this.IsNull(this.table收费项目金额1.JE23Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE23Null() {
                this[this.table收费项目金额1.JE23Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE22Null() {
                return this.IsNull(this.table收费项目金额1.JE22Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE22Null() {
                this[this.table收费项目金额1.JE22Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE21Null() {
                return this.IsNull(this.table收费项目金额1.JE21Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE21Null() {
                this[this.table收费项目金额1.JE21Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE20Null() {
                return this.IsNull(this.table收费项目金额1.JE20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE20Null() {
                this[this.table收费项目金额1.JE20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE19Null() {
                return this.IsNull(this.table收费项目金额1.JE19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE19Null() {
                this[this.table收费项目金额1.JE19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE18Null() {
                return this.IsNull(this.table收费项目金额1.JE18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE18Null() {
                this[this.table收费项目金额1.JE18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE17Null() {
                return this.IsNull(this.table收费项目金额1.JE17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE17Null() {
                this[this.table收费项目金额1.JE17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE16Null() {
                return this.IsNull(this.table收费项目金额1.JE16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE16Null() {
                this[this.table收费项目金额1.JE16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE15Null() {
                return this.IsNull(this.table收费项目金额1.JE15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE15Null() {
                this[this.table收费项目金额1.JE15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE14Null() {
                return this.IsNull(this.table收费项目金额1.JE14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE14Null() {
                this[this.table收费项目金额1.JE14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE13Null() {
                return this.IsNull(this.table收费项目金额1.JE13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE13Null() {
                this[this.table收费项目金额1.JE13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE12Null() {
                return this.IsNull(this.table收费项目金额1.JE12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE12Null() {
                this[this.table收费项目金额1.JE12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE11Null() {
                return this.IsNull(this.table收费项目金额1.JE11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE11Null() {
                this[this.table收费项目金额1.JE11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE10Null() {
                return this.IsNull(this.table收费项目金额1.JE10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE10Null() {
                this[this.table收费项目金额1.JE10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE9Null() {
                return this.IsNull(this.table收费项目金额1.JE9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE9Null() {
                this[this.table收费项目金额1.JE9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE8Null() {
                return this.IsNull(this.table收费项目金额1.JE8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE8Null() {
                this[this.table收费项目金额1.JE8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE7Null() {
                return this.IsNull(this.table收费项目金额1.JE7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE7Null() {
                this[this.table收费项目金额1.JE7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE6Null() {
                return this.IsNull(this.table收费项目金额1.JE6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE6Null() {
                this[this.table收费项目金额1.JE6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE5Null() {
                return this.IsNull(this.table收费项目金额1.JE5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE5Null() {
                this[this.table收费项目金额1.JE5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE1Null() {
                return this.IsNull(this.table收费项目金额1.JE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE1Null() {
                this[this.table收费项目金额1.JE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE2Null() {
                return this.IsNull(this.table收费项目金额1.JE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE2Null() {
                this[this.table收费项目金额1.JE2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE3Null() {
                return this.IsNull(this.table收费项目金额1.JE3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE3Null() {
                this[this.table收费项目金额1.JE3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE4Null() {
                return this.IsNull(this.table收费项目金额1.JE4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE4Null() {
                this[this.table收费项目金额1.JE4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE33Null() {
                return this.IsNull(this.table收费项目金额1.JE33Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE33Null() {
                this[this.table收费项目金额1.JE33Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE34Null() {
                return this.IsNull(this.table收费项目金额1.JE34Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE34Null() {
                this[this.table收费项目金额1.JE34Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE35Null() {
                return this.IsNull(this.table收费项目金额1.JE35Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE35Null() {
                this[this.table收费项目金额1.JE35Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE36Null() {
                return this.IsNull(this.table收费项目金额1.JE36Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE36Null() {
                this[this.table收费项目金额1.JE36Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE37Null() {
                return this.IsNull(this.table收费项目金额1.JE37Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE37Null() {
                this[this.table收费项目金额1.JE37Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE38Null() {
                return this.IsNull(this.table收费项目金额1.JE38Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE38Null() {
                this[this.table收费项目金额1.JE38Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE39Null() {
                return this.IsNull(this.table收费项目金额1.JE39Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE39Null() {
                this[this.table收费项目金额1.JE39Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE40Null() {
                return this.IsNull(this.table收费项目金额1.JE40Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE40Null() {
                this[this.table收费项目金额1.JE40Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE25Null() {
                return this.IsNull(this.table收费项目金额1.JE25Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE25Null() {
                this[this.table收费项目金额1.JE25Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE26Null() {
                return this.IsNull(this.table收费项目金额1.JE26Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE26Null() {
                this[this.table收费项目金额1.JE26Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE27Null() {
                return this.IsNull(this.table收费项目金额1.JE27Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE27Null() {
                this[this.table收费项目金额1.JE27Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE28Null() {
                return this.IsNull(this.table收费项目金额1.JE28Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE28Null() {
                this[this.table收费项目金额1.JE28Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE29Null() {
                return this.IsNull(this.table收费项目金额1.JE29Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE29Null() {
                this[this.table收费项目金额1.JE29Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE30Null() {
                return this.IsNull(this.table收费项目金额1.JE30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE30Null() {
                this[this.table收费项目金额1.JE30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE31Null() {
                return this.IsNull(this.table收费项目金额1.JE31Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE31Null() {
                this[this.table收费项目金额1.JE31Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE32Null() {
                return this.IsNull(this.table收费项目金额1.JE32Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE32Null() {
                this[this.table收费项目金额1.JE32Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE41Null() {
                return this.IsNull(this.table收费项目金额1.JE41Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE41Null() {
                this[this.table收费项目金额1.JE41Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE42Null() {
                return this.IsNull(this.table收费项目金额1.JE42Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE42Null() {
                this[this.table收费项目金额1.JE42Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE43Null() {
                return this.IsNull(this.table收费项目金额1.JE43Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE43Null() {
                this[this.table收费项目金额1.JE43Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE44Null() {
                return this.IsNull(this.table收费项目金额1.JE44Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE44Null() {
                this[this.table收费项目金额1.JE44Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE45Null() {
                return this.IsNull(this.table收费项目金额1.JE45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE45Null() {
                this[this.table收费项目金额1.JE45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE46Null() {
                return this.IsNull(this.table收费项目金额1.JE46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE46Null() {
                this[this.table收费项目金额1.JE46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE47Null() {
                return this.IsNull(this.table收费项目金额1.JE47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE47Null() {
                this[this.table收费项目金额1.JE47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE48Null() {
                return this.IsNull(this.table收费项目金额1.JE48Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE48Null() {
                this[this.table收费项目金额1.JE48Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE49Null() {
                return this.IsNull(this.table收费项目金额1.JE49Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE49Null() {
                this[this.table收费项目金额1.JE49Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE50Null() {
                return this.IsNull(this.table收费项目金额1.JE50Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE50Null() {
                this[this.table收费项目金额1.JE50Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE51Null() {
                return this.IsNull(this.table收费项目金额1.JE51Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE51Null() {
                this[this.table收费项目金额1.JE51Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE52Null() {
                return this.IsNull(this.table收费项目金额1.JE52Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE52Null() {
                this[this.table收费项目金额1.JE52Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE53Null() {
                return this.IsNull(this.table收费项目金额1.JE53Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE53Null() {
                this[this.table收费项目金额1.JE53Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE54Null() {
                return this.IsNull(this.table收费项目金额1.JE54Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE54Null() {
                this[this.table收费项目金额1.JE54Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE55Null() {
                return this.IsNull(this.table收费项目金额1.JE55Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE55Null() {
                this[this.table收费项目金额1.JE55Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE56Null() {
                return this.IsNull(this.table收费项目金额1.JE56Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE56Null() {
                this[this.table收费项目金额1.JE56Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE57Null() {
                return this.IsNull(this.table收费项目金额1.JE57Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE57Null() {
                this[this.table收费项目金额1.JE57Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE58Null() {
                return this.IsNull(this.table收费项目金额1.JE58Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE58Null() {
                this[this.table收费项目金额1.JE58Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE59Null() {
                return this.IsNull(this.table收费项目金额1.JE59Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE59Null() {
                this[this.table收费项目金额1.JE59Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE60Null() {
                return this.IsNull(this.table收费项目金额1.JE60Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE60Null() {
                this[this.table收费项目金额1.JE60Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE61Null() {
                return this.IsNull(this.table收费项目金额1.JE61Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE61Null() {
                this[this.table收费项目金额1.JE61Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE62Null() {
                return this.IsNull(this.table收费项目金额1.JE62Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE62Null() {
                this[this.table收费项目金额1.JE62Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE63Null() {
                return this.IsNull(this.table收费项目金额1.JE63Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE63Null() {
                this[this.table收费项目金额1.JE63Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE64Null() {
                return this.IsNull(this.table收费项目金额1.JE64Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE64Null() {
                this[this.table收费项目金额1.JE64Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE65Null() {
                return this.IsNull(this.table收费项目金额1.JE65Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE65Null() {
                this[this.table收费项目金额1.JE65Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE66Null() {
                return this.IsNull(this.table收费项目金额1.JE66Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE66Null() {
                this[this.table收费项目金额1.JE66Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE67Null() {
                return this.IsNull(this.table收费项目金额1.JE67Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE67Null() {
                this[this.table收费项目金额1.JE67Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJE68Null() {
                return this.IsNull(this.table收费项目金额1.JE68Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJE68Null() {
                this[this.table收费项目金额1.JE68Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 银医办卡统计Row : global::System.Data.DataRow {
            
            private 银医办卡统计DataTable table银医办卡统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 银医办卡统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table银医办卡统计 = ((银医办卡统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 序号 {
                get {
                    try {
                        return ((string)(this[this.table银医办卡统计.序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医办卡统计”中列“序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医办卡统计.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 卡类型 {
                get {
                    try {
                        return ((string)(this[this.table银医办卡统计.卡类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医办卡统计”中列“卡类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医办卡统计.卡类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 办卡数 {
                get {
                    try {
                        return ((string)(this[this.table银医办卡统计.办卡数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医办卡统计”中列“办卡数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医办卡统计.办卡数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 有效数 {
                get {
                    try {
                        return ((string)(this[this.table银医办卡统计.有效数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医办卡统计”中列“有效数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医办卡统计.有效数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退卡数 {
                get {
                    try {
                        return ((string)(this[this.table银医办卡统计.退卡数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医办卡统计”中列“退卡数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医办卡统计.退卡数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 冻结数 {
                get {
                    try {
                        return ((string)(this[this.table银医办卡统计.冻结数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医办卡统计”中列“冻结数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医办卡统计.冻结数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 挂失数 {
                get {
                    try {
                        return ((string)(this[this.table银医办卡统计.挂失数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医办卡统计”中列“挂失数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医办卡统计.挂失数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 预交金 {
                get {
                    try {
                        return ((string)(this[this.table银医办卡统计.预交金Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医办卡统计”中列“预交金”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医办卡统计.预交金Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 办卡金额 {
                get {
                    try {
                        return ((decimal)(this[this.table银医办卡统计.办卡金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医办卡统计”中列“办卡金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医办卡统计.办卡金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 退办卡金额 {
                get {
                    try {
                        return ((decimal)(this[this.table银医办卡统计.退办卡金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医办卡统计”中列“退办卡金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医办卡统计.退办卡金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is序号Null() {
                return this.IsNull(this.table银医办卡统计.序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set序号Null() {
                this[this.table银医办卡统计.序号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is卡类型Null() {
                return this.IsNull(this.table银医办卡统计.卡类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set卡类型Null() {
                this[this.table银医办卡统计.卡类型Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is办卡数Null() {
                return this.IsNull(this.table银医办卡统计.办卡数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set办卡数Null() {
                this[this.table银医办卡统计.办卡数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is有效数Null() {
                return this.IsNull(this.table银医办卡统计.有效数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set有效数Null() {
                this[this.table银医办卡统计.有效数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退卡数Null() {
                return this.IsNull(this.table银医办卡统计.退卡数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退卡数Null() {
                this[this.table银医办卡统计.退卡数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is冻结数Null() {
                return this.IsNull(this.table银医办卡统计.冻结数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set冻结数Null() {
                this[this.table银医办卡统计.冻结数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is挂失数Null() {
                return this.IsNull(this.table银医办卡统计.挂失数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set挂失数Null() {
                this[this.table银医办卡统计.挂失数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is预交金Null() {
                return this.IsNull(this.table银医办卡统计.预交金Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set预交金Null() {
                this[this.table银医办卡统计.预交金Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is办卡金额Null() {
                return this.IsNull(this.table银医办卡统计.办卡金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set办卡金额Null() {
                this[this.table银医办卡统计.办卡金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退办卡金额Null() {
                return this.IsNull(this.table银医办卡统计.退办卡金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退办卡金额Null() {
                this[this.table银医办卡统计.退办卡金额Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 银医支付方式统计Row : global::System.Data.DataRow {
            
            private 银医支付方式统计DataTable table银医支付方式统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 银医支付方式统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table银医支付方式统计 = ((银医支付方式统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 序号 {
                get {
                    try {
                        return ((string)(this[this.table银医支付方式统计.序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医支付方式统计”中列“序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医支付方式统计.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 卡号 {
                get {
                    try {
                        return ((string)(this[this.table银医支付方式统计.卡号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医支付方式统计”中列“卡号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医支付方式统计.卡号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 卡类型 {
                get {
                    try {
                        return ((string)(this[this.table银医支付方式统计.卡类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医支付方式统计”中列“卡类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医支付方式统计.卡类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 病人姓名 {
                get {
                    try {
                        return ((string)(this[this.table银医支付方式统计.病人姓名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医支付方式统计”中列“病人姓名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医支付方式统计.病人姓名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 身份证号 {
                get {
                    try {
                        return ((string)(this[this.table银医支付方式统计.身份证号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医支付方式统计”中列“身份证号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医支付方式统计.身份证号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 预交金 {
                get {
                    try {
                        return ((string)(this[this.table银医支付方式统计.预交金Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医支付方式统计”中列“预交金”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医支付方式统计.预交金Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 现金支付 {
                get {
                    try {
                        return ((string)(this[this.table银医支付方式统计.现金支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医支付方式统计”中列“现金支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医支付方式统计.现金支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 银联支付 {
                get {
                    try {
                        return ((string)(this[this.table银医支付方式统计.银联支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医支付方式统计”中列“银联支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医支付方式统计.银联支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 财务记账 {
                get {
                    try {
                        return ((string)(this[this.table银医支付方式统计.财务记账Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医支付方式统计”中列“财务记账”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医支付方式统计.财务记账Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 医保支付 {
                get {
                    try {
                        return ((string)(this[this.table银医支付方式统计.医保支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医支付方式统计”中列“医保支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医支付方式统计.医保支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is序号Null() {
                return this.IsNull(this.table银医支付方式统计.序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set序号Null() {
                this[this.table银医支付方式统计.序号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is卡号Null() {
                return this.IsNull(this.table银医支付方式统计.卡号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set卡号Null() {
                this[this.table银医支付方式统计.卡号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is卡类型Null() {
                return this.IsNull(this.table银医支付方式统计.卡类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set卡类型Null() {
                this[this.table银医支付方式统计.卡类型Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is病人姓名Null() {
                return this.IsNull(this.table银医支付方式统计.病人姓名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set病人姓名Null() {
                this[this.table银医支付方式统计.病人姓名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is身份证号Null() {
                return this.IsNull(this.table银医支付方式统计.身份证号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set身份证号Null() {
                this[this.table银医支付方式统计.身份证号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is预交金Null() {
                return this.IsNull(this.table银医支付方式统计.预交金Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set预交金Null() {
                this[this.table银医支付方式统计.预交金Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is现金支付Null() {
                return this.IsNull(this.table银医支付方式统计.现金支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set现金支付Null() {
                this[this.table银医支付方式统计.现金支付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is银联支付Null() {
                return this.IsNull(this.table银医支付方式统计.银联支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set银联支付Null() {
                this[this.table银医支付方式统计.银联支付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is财务记账Null() {
                return this.IsNull(this.table银医支付方式统计.财务记账Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set财务记账Null() {
                this[this.table银医支付方式统计.财务记账Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is医保支付Null() {
                return this.IsNull(this.table银医支付方式统计.医保支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set医保支付Null() {
                this[this.table银医支付方式统计.医保支付Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 银医退卡明细Row : global::System.Data.DataRow {
            
            private 银医退卡明细DataTable table银医退卡明细;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 银医退卡明细Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table银医退卡明细 = ((银医退卡明细DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 序号 {
                get {
                    try {
                        return ((string)(this[this.table银医退卡明细.序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医退卡明细”中列“序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医退卡明细.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 卡号 {
                get {
                    try {
                        return ((string)(this[this.table银医退卡明细.卡号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医退卡明细”中列“卡号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医退卡明细.卡号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 卡类型 {
                get {
                    try {
                        return ((string)(this[this.table银医退卡明细.卡类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医退卡明细”中列“卡类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医退卡明细.卡类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 病人姓名 {
                get {
                    try {
                        return ((string)(this[this.table银医退卡明细.病人姓名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医退卡明细”中列“病人姓名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医退卡明细.病人姓名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 身份证号 {
                get {
                    try {
                        return ((string)(this[this.table银医退卡明细.身份证号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医退卡明细”中列“身份证号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医退卡明细.身份证号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退卡金额 {
                get {
                    try {
                        return ((string)(this[this.table银医退卡明细.退卡金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医退卡明细”中列“退卡金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医退卡明细.退卡金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 日期 {
                get {
                    try {
                        return ((string)(this[this.table银医退卡明细.日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医退卡明细”中列“日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医退卡明细.日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 操作员 {
                get {
                    try {
                        return ((string)(this[this.table银医退卡明细.操作员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“银医退卡明细”中列“操作员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table银医退卡明细.操作员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is序号Null() {
                return this.IsNull(this.table银医退卡明细.序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set序号Null() {
                this[this.table银医退卡明细.序号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is卡号Null() {
                return this.IsNull(this.table银医退卡明细.卡号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set卡号Null() {
                this[this.table银医退卡明细.卡号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is卡类型Null() {
                return this.IsNull(this.table银医退卡明细.卡类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set卡类型Null() {
                this[this.table银医退卡明细.卡类型Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is病人姓名Null() {
                return this.IsNull(this.table银医退卡明细.病人姓名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set病人姓名Null() {
                this[this.table银医退卡明细.病人姓名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is身份证号Null() {
                return this.IsNull(this.table银医退卡明细.身份证号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set身份证号Null() {
                this[this.table银医退卡明细.身份证号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退卡金额Null() {
                return this.IsNull(this.table银医退卡明细.退卡金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退卡金额Null() {
                this[this.table银医退卡明细.退卡金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is日期Null() {
                return this.IsNull(this.table银医退卡明细.日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set日期Null() {
                this[this.table银医退卡明细.日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is操作员Null() {
                return this.IsNull(this.table银医退卡明细.操作员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set操作员Null() {
                this[this.table银医退卡明细.操作员Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 工商银行自助机对账统计Row : global::System.Data.DataRow {
            
            private 工商银行自助机对账统计DataTable table工商银行自助机对账统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 工商银行自助机对账统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table工商银行自助机对账统计 = ((工商银行自助机对账统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 序号 {
                get {
                    try {
                        return ((string)(this[this.table工商银行自助机对账统计.序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账统计”中列“序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table工商银行自助机对账统计.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 类型 {
                get {
                    try {
                        return ((string)(this[this.table工商银行自助机对账统计.类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账统计”中列“类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table工商银行自助机对账统计.类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 交易总金额 {
                get {
                    try {
                        return ((string)(this[this.table工商银行自助机对账统计.交易总金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账统计”中列“交易总金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table工商银行自助机对账统计.交易总金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 交易笔数 {
                get {
                    try {
                        return ((string)(this[this.table工商银行自助机对账统计.交易笔数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账统计”中列“交易笔数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table工商银行自助机对账统计.交易笔数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is序号Null() {
                return this.IsNull(this.table工商银行自助机对账统计.序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set序号Null() {
                this[this.table工商银行自助机对账统计.序号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is类型Null() {
                return this.IsNull(this.table工商银行自助机对账统计.类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set类型Null() {
                this[this.table工商银行自助机对账统计.类型Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is交易总金额Null() {
                return this.IsNull(this.table工商银行自助机对账统计.交易总金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set交易总金额Null() {
                this[this.table工商银行自助机对账统计.交易总金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is交易笔数Null() {
                return this.IsNull(this.table工商银行自助机对账统计.交易笔数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set交易笔数Null() {
                this[this.table工商银行自助机对账统计.交易笔数Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _工商银行自助机对账明细统计_银行端_Row : global::System.Data.DataRow {
            
            private _工商银行自助机对账明细统计_银行端_DataTable _table工商银行自助机对账明细统计_银行端_;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _工商银行自助机对账明细统计_银行端_Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this._table工商银行自助机对账明细统计_银行端_ = ((_工商银行自助机对账明细统计_银行端_DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 序号 {
                get {
                    try {
                        return ((string)(this[this._table工商银行自助机对账明细统计_银行端_.序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账明细统计(银行端)”中列“序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this._table工商银行自助机对账明细统计_银行端_.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 卡号 {
                get {
                    try {
                        return ((string)(this[this._table工商银行自助机对账明细统计_银行端_.卡号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账明细统计(银行端)”中列“卡号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this._table工商银行自助机对账明细统计_银行端_.卡号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 金额 {
                get {
                    try {
                        return ((string)(this[this._table工商银行自助机对账明细统计_银行端_.金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账明细统计(银行端)”中列“金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this._table工商银行自助机对账明细统计_银行端_.金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 银行流水号 {
                get {
                    try {
                        return ((string)(this[this._table工商银行自助机对账明细统计_银行端_.银行流水号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账明细统计(银行端)”中列“银行流水号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this._table工商银行自助机对账明细统计_银行端_.银行流水号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 交易日期 {
                get {
                    try {
                        return ((string)(this[this._table工商银行自助机对账明细统计_银行端_.交易日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账明细统计(银行端)”中列“交易日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this._table工商银行自助机对账明细统计_银行端_.交易日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 时间 {
                get {
                    try {
                        return ((string)(this[this._table工商银行自助机对账明细统计_银行端_.时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账明细统计(银行端)”中列“时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this._table工商银行自助机对账明细统计_银行端_.时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 银行终端 {
                get {
                    try {
                        return ((string)(this[this._table工商银行自助机对账明细统计_银行端_.银行终端Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账明细统计(银行端)”中列“银行终端”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this._table工商银行自助机对账明细统计_银行端_.银行终端Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is序号Null() {
                return this.IsNull(this._table工商银行自助机对账明细统计_银行端_.序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set序号Null() {
                this[this._table工商银行自助机对账明细统计_银行端_.序号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is卡号Null() {
                return this.IsNull(this._table工商银行自助机对账明细统计_银行端_.卡号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set卡号Null() {
                this[this._table工商银行自助机对账明细统计_银行端_.卡号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is金额Null() {
                return this.IsNull(this._table工商银行自助机对账明细统计_银行端_.金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set金额Null() {
                this[this._table工商银行自助机对账明细统计_银行端_.金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is银行流水号Null() {
                return this.IsNull(this._table工商银行自助机对账明细统计_银行端_.银行流水号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set银行流水号Null() {
                this[this._table工商银行自助机对账明细统计_银行端_.银行流水号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is交易日期Null() {
                return this.IsNull(this._table工商银行自助机对账明细统计_银行端_.交易日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set交易日期Null() {
                this[this._table工商银行自助机对账明细统计_银行端_.交易日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is时间Null() {
                return this.IsNull(this._table工商银行自助机对账明细统计_银行端_.时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set时间Null() {
                this[this._table工商银行自助机对账明细统计_银行端_.时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is银行终端Null() {
                return this.IsNull(this._table工商银行自助机对账明细统计_银行端_.银行终端Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set银行终端Null() {
                this[this._table工商银行自助机对账明细统计_银行端_.银行终端Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _工商银行自助机对账明细统计_医院端_Row : global::System.Data.DataRow {
            
            private _工商银行自助机对账明细统计_医院端_DataTable _table工商银行自助机对账明细统计_医院端_;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _工商银行自助机对账明细统计_医院端_Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this._table工商银行自助机对账明细统计_医院端_ = ((_工商银行自助机对账明细统计_医院端_DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 序号 {
                get {
                    try {
                        return ((string)(this[this._table工商银行自助机对账明细统计_医院端_.序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账明细统计(医院端)”中列“序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this._table工商银行自助机对账明细统计_医院端_.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HIS_卡号 {
                get {
                    try {
                        return ((string)(this[this._table工商银行自助机对账明细统计_医院端_.HIS_卡号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账明细统计(医院端)”中列“HIS_卡号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this._table工商银行自助机对账明细统计_医院端_.HIS_卡号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HIS_金额 {
                get {
                    try {
                        return ((string)(this[this._table工商银行自助机对账明细统计_医院端_.HIS_金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账明细统计(医院端)”中列“HIS_金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this._table工商银行自助机对账明细统计_医院端_.HIS_金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 银行流水号 {
                get {
                    try {
                        return ((string)(this[this._table工商银行自助机对账明细统计_医院端_.银行流水号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账明细统计(医院端)”中列“银行流水号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this._table工商银行自助机对账明细统计_医院端_.银行流水号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HIS_交易日期 {
                get {
                    try {
                        return ((string)(this[this._table工商银行自助机对账明细统计_医院端_.HIS_交易日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账明细统计(医院端)”中列“HIS_交易日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this._table工商银行自助机对账明细统计_医院端_.HIS_交易日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HIS_时间 {
                get {
                    try {
                        return ((string)(this[this._table工商银行自助机对账明细统计_医院端_.HIS_时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账明细统计(医院端)”中列“HIS_时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this._table工商银行自助机对账明细统计_医院端_.HIS_时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 银行终端 {
                get {
                    try {
                        return ((string)(this[this._table工商银行自助机对账明细统计_医院端_.银行终端Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“工商银行自助机对账明细统计(医院端)”中列“银行终端”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this._table工商银行自助机对账明细统计_医院端_.银行终端Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is序号Null() {
                return this.IsNull(this._table工商银行自助机对账明细统计_医院端_.序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set序号Null() {
                this[this._table工商银行自助机对账明细统计_医院端_.序号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIS_卡号Null() {
                return this.IsNull(this._table工商银行自助机对账明细统计_医院端_.HIS_卡号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIS_卡号Null() {
                this[this._table工商银行自助机对账明细统计_医院端_.HIS_卡号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIS_金额Null() {
                return this.IsNull(this._table工商银行自助机对账明细统计_医院端_.HIS_金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIS_金额Null() {
                this[this._table工商银行自助机对账明细统计_医院端_.HIS_金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is银行流水号Null() {
                return this.IsNull(this._table工商银行自助机对账明细统计_医院端_.银行流水号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set银行流水号Null() {
                this[this._table工商银行自助机对账明细统计_医院端_.银行流水号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIS_交易日期Null() {
                return this.IsNull(this._table工商银行自助机对账明细统计_医院端_.HIS_交易日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIS_交易日期Null() {
                this[this._table工商银行自助机对账明细统计_医院端_.HIS_交易日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIS_时间Null() {
                return this.IsNull(this._table工商银行自助机对账明细统计_医院端_.HIS_时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIS_时间Null() {
                this[this._table工商银行自助机对账明细统计_医院端_.HIS_时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is银行终端Null() {
                return this.IsNull(this._table工商银行自助机对账明细统计_医院端_.银行终端Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set银行终端Null() {
                this[this._table工商银行自助机对账明细统计_医院端_.银行终端Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 门诊预交金消费对账Row : global::System.Data.DataRow {
            
            private 门诊预交金消费对账DataTable table门诊预交金消费对账;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 门诊预交金消费对账Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table门诊预交金消费对账 = ((门诊预交金消费对账DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 序号 {
                get {
                    try {
                        return ((string)(this[this.table门诊预交金消费对账.序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊预交金消费对账”中列“序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊预交金消费对账.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.table门诊预交金消费对账.姓名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊预交金消费对账”中列“姓名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊预交金消费对账.姓名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 卡号 {
                get {
                    try {
                        return ((string)(this[this.table门诊预交金消费对账.卡号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊预交金消费对账”中列“卡号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊预交金消费对账.卡号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 现金存入 {
                get {
                    try {
                        return ((decimal)(this[this.table门诊预交金消费对账.现金存入Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊预交金消费对账”中列“现金存入”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊预交金消费对账.现金存入Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 发生日期1 {
                get {
                    try {
                        return ((string)(this[this.table门诊预交金消费对账.发生日期1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊预交金消费对账”中列“发生日期1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊预交金消费对账.发生日期1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 银行转账 {
                get {
                    try {
                        return ((decimal)(this[this.table门诊预交金消费对账.银行转账Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊预交金消费对账”中列“银行转账”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊预交金消费对账.银行转账Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 发生日期2 {
                get {
                    try {
                        return ((string)(this[this.table门诊预交金消费对账.发生日期2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊预交金消费对账”中列“发生日期2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊预交金消费对账.发生日期2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 支出 {
                get {
                    try {
                        return ((decimal)(this[this.table门诊预交金消费对账.支出Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊预交金消费对账”中列“支出”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊预交金消费对账.支出Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 发生日期3 {
                get {
                    try {
                        return ((string)(this[this.table门诊预交金消费对账.发生日期3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊预交金消费对账”中列“发生日期3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊预交金消费对账.发生日期3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 卡余额 {
                get {
                    try {
                        return ((decimal)(this[this.table门诊预交金消费对账.卡余额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊预交金消费对账”中列“卡余额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊预交金消费对账.卡余额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 收款员 {
                get {
                    try {
                        return ((string)(this[this.table门诊预交金消费对账.收款员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊预交金消费对账”中列“收款员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊预交金消费对账.收款员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is序号Null() {
                return this.IsNull(this.table门诊预交金消费对账.序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set序号Null() {
                this[this.table门诊预交金消费对账.序号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is姓名Null() {
                return this.IsNull(this.table门诊预交金消费对账.姓名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set姓名Null() {
                this[this.table门诊预交金消费对账.姓名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is卡号Null() {
                return this.IsNull(this.table门诊预交金消费对账.卡号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set卡号Null() {
                this[this.table门诊预交金消费对账.卡号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is现金存入Null() {
                return this.IsNull(this.table门诊预交金消费对账.现金存入Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set现金存入Null() {
                this[this.table门诊预交金消费对账.现金存入Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发生日期1Null() {
                return this.IsNull(this.table门诊预交金消费对账.发生日期1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发生日期1Null() {
                this[this.table门诊预交金消费对账.发生日期1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is银行转账Null() {
                return this.IsNull(this.table门诊预交金消费对账.银行转账Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set银行转账Null() {
                this[this.table门诊预交金消费对账.银行转账Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发生日期2Null() {
                return this.IsNull(this.table门诊预交金消费对账.发生日期2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发生日期2Null() {
                this[this.table门诊预交金消费对账.发生日期2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is支出Null() {
                return this.IsNull(this.table门诊预交金消费对账.支出Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set支出Null() {
                this[this.table门诊预交金消费对账.支出Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is发生日期3Null() {
                return this.IsNull(this.table门诊预交金消费对账.发生日期3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set发生日期3Null() {
                this[this.table门诊预交金消费对账.发生日期3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is卡余额Null() {
                return this.IsNull(this.table门诊预交金消费对账.卡余额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set卡余额Null() {
                this[this.table门诊预交金消费对账.卡余额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is收款员Null() {
                return this.IsNull(this.table门诊预交金消费对账.收款员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set收款员Null() {
                this[this.table门诊预交金消费对账.收款员Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 诊疗卡办卡明细Row : global::System.Data.DataRow {
            
            private 诊疗卡办卡明细DataTable table诊疗卡办卡明细;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 诊疗卡办卡明细Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table诊疗卡办卡明细 = ((诊疗卡办卡明细DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 序号 {
                get {
                    try {
                        return ((string)(this[this.table诊疗卡办卡明细.序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“诊疗卡办卡明细”中列“序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table诊疗卡办卡明细.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.table诊疗卡办卡明细.姓名Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“诊疗卡办卡明细”中列“姓名”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table诊疗卡办卡明细.姓名Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 卡号 {
                get {
                    try {
                        return ((string)(this[this.table诊疗卡办卡明细.卡号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“诊疗卡办卡明细”中列“卡号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table诊疗卡办卡明细.卡号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 预交金 {
                get {
                    try {
                        return ((decimal)(this[this.table诊疗卡办卡明细.预交金Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“诊疗卡办卡明细”中列“预交金”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table诊疗卡办卡明细.预交金Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 身份证号 {
                get {
                    try {
                        return ((string)(this[this.table诊疗卡办卡明细.身份证号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“诊疗卡办卡明细”中列“身份证号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table诊疗卡办卡明细.身份证号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 办卡金额 {
                get {
                    try {
                        return ((decimal)(this[this.table诊疗卡办卡明细.办卡金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“诊疗卡办卡明细”中列“办卡金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table诊疗卡办卡明细.办卡金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 退卡金额 {
                get {
                    try {
                        return ((decimal)(this[this.table诊疗卡办卡明细.退卡金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“诊疗卡办卡明细”中列“退卡金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table诊疗卡办卡明细.退卡金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 办卡操作员 {
                get {
                    try {
                        return ((string)(this[this.table诊疗卡办卡明细.办卡操作员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“诊疗卡办卡明细”中列“办卡操作员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table诊疗卡办卡明细.办卡操作员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 退卡操作员 {
                get {
                    try {
                        return ((string)(this[this.table诊疗卡办卡明细.退卡操作员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“诊疗卡办卡明细”中列“退卡操作员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table诊疗卡办卡明细.退卡操作员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is序号Null() {
                return this.IsNull(this.table诊疗卡办卡明细.序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set序号Null() {
                this[this.table诊疗卡办卡明细.序号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is姓名Null() {
                return this.IsNull(this.table诊疗卡办卡明细.姓名Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set姓名Null() {
                this[this.table诊疗卡办卡明细.姓名Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is卡号Null() {
                return this.IsNull(this.table诊疗卡办卡明细.卡号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set卡号Null() {
                this[this.table诊疗卡办卡明细.卡号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is预交金Null() {
                return this.IsNull(this.table诊疗卡办卡明细.预交金Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set预交金Null() {
                this[this.table诊疗卡办卡明细.预交金Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is身份证号Null() {
                return this.IsNull(this.table诊疗卡办卡明细.身份证号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set身份证号Null() {
                this[this.table诊疗卡办卡明细.身份证号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is办卡金额Null() {
                return this.IsNull(this.table诊疗卡办卡明细.办卡金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set办卡金额Null() {
                this[this.table诊疗卡办卡明细.办卡金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退卡金额Null() {
                return this.IsNull(this.table诊疗卡办卡明细.退卡金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退卡金额Null() {
                this[this.table诊疗卡办卡明细.退卡金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is办卡操作员Null() {
                return this.IsNull(this.table诊疗卡办卡明细.办卡操作员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set办卡操作员Null() {
                this[this.table诊疗卡办卡明细.办卡操作员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is退卡操作员Null() {
                return this.IsNull(this.table诊疗卡办卡明细.退卡操作员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set退卡操作员Null() {
                this[this.table诊疗卡办卡明细.退卡操作员Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 小票明细Row : global::System.Data.DataRow {
            
            private 小票明细DataTable table小票明细;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 小票明细Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table小票明细 = ((小票明细DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ksmc {
                get {
                    try {
                        return ((string)(this[this.table小票明细.ksmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“小票明细”中列“ksmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table小票明细.ksmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZXKS {
                get {
                    try {
                        return ((string)(this[this.table小票明细.ZXKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“小票明细”中列“ZXKS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table小票明细.ZXKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE {
                get {
                    try {
                        return ((string)(this[this.table小票明细.JEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“小票明细”中列“JE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table小票明细.JEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yhje {
                get {
                    try {
                        return ((string)(this[this.table小票明细.yhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“小票明细”中列“yhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table小票明细.yhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string item_name {
                get {
                    try {
                        return ((string)(this[this.table小票明细.item_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“小票明细”中列“item_name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table小票明细.item_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    try {
                        return ((string)(this[this.table小票明细.codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“小票明细”中列“code”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table小票明细.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsksmcNull() {
                return this.IsNull(this.table小票明细.ksmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetksmcNull() {
                this[this.table小票明细.ksmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZXKSNull() {
                return this.IsNull(this.table小票明细.ZXKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZXKSNull() {
                this[this.table小票明细.ZXKSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJENull() {
                return this.IsNull(this.table小票明细.JEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJENull() {
                this[this.table小票明细.JEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyhjeNull() {
                return this.IsNull(this.table小票明细.yhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyhjeNull() {
                this[this.table小票明细.yhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isitem_nameNull() {
                return this.IsNull(this.table小票明细.item_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setitem_nameNull() {
                this[this.table小票明细.item_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodeNull() {
                return this.IsNull(this.table小票明细.codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodeNull() {
                this[this.table小票明细.codeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TB_mzyjjRow : global::System.Data.DataRow {
            
            private TB_mzyjjDataTable tableTB_mzyjj;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TB_mzyjjRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTB_mzyjj = ((TB_mzyjjDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 支付方式 {
                get {
                    try {
                        return ((string)(this[this.tableTB_mzyjj.支付方式Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TB_mzyjj”中列“支付方式”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTB_mzyjj.支付方式Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 金额 {
                get {
                    try {
                        return ((string)(this[this.tableTB_mzyjj.金额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TB_mzyjj”中列“金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTB_mzyjj.金额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 登记时间 {
                get {
                    try {
                        return ((string)(this[this.tableTB_mzyjj.登记时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TB_mzyjj”中列“登记时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTB_mzyjj.登记时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 登记员 {
                get {
                    try {
                        return ((string)(this[this.tableTB_mzyjj.登记员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TB_mzyjj”中列“登记员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTB_mzyjj.登记员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 到帐日期 {
                get {
                    try {
                        return ((string)(this[this.tableTB_mzyjj.到帐日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TB_mzyjj”中列“到帐日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTB_mzyjj.到帐日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 到帐员 {
                get {
                    try {
                        return ((string)(this[this.tableTB_mzyjj.到帐员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TB_mzyjj”中列“到帐员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTB_mzyjj.到帐员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 支票号 {
                get {
                    try {
                        return ((string)(this[this.tableTB_mzyjj.支票号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TB_mzyjj”中列“支票号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTB_mzyjj.支票号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 开户银行 {
                get {
                    try {
                        return ((string)(this[this.tableTB_mzyjj.开户银行Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TB_mzyjj”中列“开户银行”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTB_mzyjj.开户银行Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 开户单位 {
                get {
                    try {
                        return ((string)(this[this.tableTB_mzyjj.开户单位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TB_mzyjj”中列“开户单位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTB_mzyjj.开户单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bz1 {
                get {
                    try {
                        return ((string)(this[this.tableTB_mzyjj.bz1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TB_mzyjj”中列“bz1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTB_mzyjj.bz1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bz2 {
                get {
                    try {
                        return ((string)(this[this.tableTB_mzyjj.bz2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TB_mzyjj”中列“bz2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTB_mzyjj.bz2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bz3 {
                get {
                    try {
                        return ((string)(this[this.tableTB_mzyjj.bz3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TB_mzyjj”中列“bz3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTB_mzyjj.bz3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bz4 {
                get {
                    try {
                        return ((string)(this[this.tableTB_mzyjj.bz4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TB_mzyjj”中列“bz4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTB_mzyjj.bz4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bz5 {
                get {
                    try {
                        return ((string)(this[this.tableTB_mzyjj.bz5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TB_mzyjj”中列“bz5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTB_mzyjj.bz5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is支付方式Null() {
                return this.IsNull(this.tableTB_mzyjj.支付方式Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set支付方式Null() {
                this[this.tableTB_mzyjj.支付方式Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is金额Null() {
                return this.IsNull(this.tableTB_mzyjj.金额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set金额Null() {
                this[this.tableTB_mzyjj.金额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is登记时间Null() {
                return this.IsNull(this.tableTB_mzyjj.登记时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set登记时间Null() {
                this[this.tableTB_mzyjj.登记时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is登记员Null() {
                return this.IsNull(this.tableTB_mzyjj.登记员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set登记员Null() {
                this[this.tableTB_mzyjj.登记员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is到帐日期Null() {
                return this.IsNull(this.tableTB_mzyjj.到帐日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set到帐日期Null() {
                this[this.tableTB_mzyjj.到帐日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is到帐员Null() {
                return this.IsNull(this.tableTB_mzyjj.到帐员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set到帐员Null() {
                this[this.tableTB_mzyjj.到帐员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is支票号Null() {
                return this.IsNull(this.tableTB_mzyjj.支票号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set支票号Null() {
                this[this.tableTB_mzyjj.支票号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is开户银行Null() {
                return this.IsNull(this.tableTB_mzyjj.开户银行Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set开户银行Null() {
                this[this.tableTB_mzyjj.开户银行Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is开户单位Null() {
                return this.IsNull(this.tableTB_mzyjj.开户单位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set开户单位Null() {
                this[this.tableTB_mzyjj.开户单位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbz1Null() {
                return this.IsNull(this.tableTB_mzyjj.bz1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbz1Null() {
                this[this.tableTB_mzyjj.bz1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbz2Null() {
                return this.IsNull(this.tableTB_mzyjj.bz2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbz2Null() {
                this[this.tableTB_mzyjj.bz2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbz3Null() {
                return this.IsNull(this.tableTB_mzyjj.bz3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbz3Null() {
                this[this.tableTB_mzyjj.bz3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbz4Null() {
                return this.IsNull(this.tableTB_mzyjj.bz4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbz4Null() {
                this[this.tableTB_mzyjj.bz4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbz5Null() {
                return this.IsNull(this.tableTB_mzyjj.bz5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbz5Null() {
                this[this.tableTB_mzyjj.bz5Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 科室医保收入统计表Row : global::System.Data.DataRow {
            
            private 科室医保收入统计表DataTable table科室医保收入统计表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 科室医保收入统计表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table科室医保收入统计表 = ((科室医保收入统计表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 科室名称 {
                get {
                    try {
                        return ((string)(this[this.table科室医保收入统计表.科室名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“科室医保收入统计表”中列“科室名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table科室医保收入统计表.科室名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 医保类型 {
                get {
                    try {
                        return ((string)(this[this.table科室医保收入统计表.医保类型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“科室医保收入统计表”中列“医保类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table科室医保收入统计表.医保类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 统筹总额 {
                get {
                    try {
                        return ((string)(this[this.table科室医保收入统计表.统筹总额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“科室医保收入统计表”中列“统筹总额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table科室医保收入统计表.统筹总额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 医疗总费用 {
                get {
                    try {
                        return ((string)(this[this.table科室医保收入统计表.医疗总费用Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“科室医保收入统计表”中列“医疗总费用”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table科室医保收入统计表.医疗总费用Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 次均费用 {
                get {
                    try {
                        return ((string)(this[this.table科室医保收入统计表.次均费用Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“科室医保收入统计表”中列“次均费用”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table科室医保收入统计表.次均费用Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 门诊人次药品总额 {
                get {
                    try {
                        return ((string)(this[this.table科室医保收入统计表.门诊人次药品总额Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“科室医保收入统计表”中列“门诊人次药品总额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table科室医保收入统计表.门诊人次药品总额Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _药品费占比___ {
                get {
                    try {
                        return ((string)(this[this.table科室医保收入统计表._药品费占比___Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“科室医保收入统计表”中列“药品费占比(%)”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table科室医保收入统计表._药品费占比___Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 检查费 {
                get {
                    try {
                        return ((string)(this[this.table科室医保收入统计表.检查费Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“科室医保收入统计表”中列“检查费”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table科室医保收入统计表.检查费Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _检查费占比___ {
                get {
                    try {
                        return ((string)(this[this.table科室医保收入统计表._检查费占比___Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“科室医保收入统计表”中列“检查费占比(%)”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table科室医保收入统计表._检查费占比___Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 材料费 {
                get {
                    try {
                        return ((string)(this[this.table科室医保收入统计表.材料费Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“科室医保收入统计表”中列“材料费”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table科室医保收入统计表.材料费Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _材料费占比___ {
                get {
                    try {
                        return ((string)(this[this.table科室医保收入统计表._材料费占比___Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“科室医保收入统计表”中列“材料费占比(%)”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table科室医保收入统计表._材料费占比___Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is科室名称Null() {
                return this.IsNull(this.table科室医保收入统计表.科室名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set科室名称Null() {
                this[this.table科室医保收入统计表.科室名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is医保类型Null() {
                return this.IsNull(this.table科室医保收入统计表.医保类型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set医保类型Null() {
                this[this.table科室医保收入统计表.医保类型Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is统筹总额Null() {
                return this.IsNull(this.table科室医保收入统计表.统筹总额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set统筹总额Null() {
                this[this.table科室医保收入统计表.统筹总额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is医疗总费用Null() {
                return this.IsNull(this.table科室医保收入统计表.医疗总费用Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set医疗总费用Null() {
                this[this.table科室医保收入统计表.医疗总费用Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is次均费用Null() {
                return this.IsNull(this.table科室医保收入统计表.次均费用Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set次均费用Null() {
                this[this.table科室医保收入统计表.次均费用Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is门诊人次药品总额Null() {
                return this.IsNull(this.table科室医保收入统计表.门诊人次药品总额Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set门诊人次药品总额Null() {
                this[this.table科室医保收入统计表.门诊人次药品总额Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_药品费占比___Null() {
                return this.IsNull(this.table科室医保收入统计表._药品费占比___Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_药品费占比___Null() {
                this[this.table科室医保收入统计表._药品费占比___Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is检查费Null() {
                return this.IsNull(this.table科室医保收入统计表.检查费Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set检查费Null() {
                this[this.table科室医保收入统计表.检查费Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_检查费占比___Null() {
                return this.IsNull(this.table科室医保收入统计表._检查费占比___Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_检查费占比___Null() {
                this[this.table科室医保收入统计表._检查费占比___Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is材料费Null() {
                return this.IsNull(this.table科室医保收入统计表.材料费Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set材料费Null() {
                this[this.table科室医保收入统计表.材料费Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_材料费占比___Null() {
                return this.IsNull(this.table科室医保收入统计表._材料费占比___Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_材料费占比___Null() {
                this[this.table科室医保收入统计表._材料费占比___Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 交款票据统计Row : global::System.Data.DataRow {
            
            private 交款票据统计DataTable table交款票据统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 交款票据统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table交款票据统计 = ((交款票据统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 来源 {
                get {
                    try {
                        return ((string)(this[this.table交款票据统计.来源Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款票据统计”中列“来源”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款票据统计.来源Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 总份数 {
                get {
                    try {
                        return ((string)(this[this.table交款票据统计.总份数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款票据统计”中列“总份数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款票据统计.总份数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 有效份数 {
                get {
                    try {
                        return ((string)(this[this.table交款票据统计.有效份数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款票据统计”中列“有效份数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款票据统计.有效份数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 作废份数 {
                get {
                    try {
                        return ((string)(this[this.table交款票据统计.作废份数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款票据统计”中列“作废份数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款票据统计.作废份数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 作废号码 {
                get {
                    try {
                        return ((string)(this[this.table交款票据统计.作废号码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款票据统计”中列“作废号码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款票据统计.作废号码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 现金支付 {
                get {
                    try {
                        return ((string)(this[this.table交款票据统计.现金支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款票据统计”中列“现金支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款票据统计.现金支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 医保支付 {
                get {
                    try {
                        return ((string)(this[this.table交款票据统计.医保支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款票据统计”中列“医保支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款票据统计.医保支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 银行支付 {
                get {
                    try {
                        return ((string)(this[this.table交款票据统计.银行支付Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款票据统计”中列“银行支付”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款票据统计.银行支付Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 交款员 {
                get {
                    try {
                        return ((string)(this[this.table交款票据统计.交款员Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款票据统计”中列“交款员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款票据统计.交款员Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 字轨份数 {
                get {
                    try {
                        return ((string)(this[this.table交款票据统计.字轨份数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款票据统计”中列“字轨份数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款票据统计.字轨份数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is来源Null() {
                return this.IsNull(this.table交款票据统计.来源Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set来源Null() {
                this[this.table交款票据统计.来源Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is总份数Null() {
                return this.IsNull(this.table交款票据统计.总份数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set总份数Null() {
                this[this.table交款票据统计.总份数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is有效份数Null() {
                return this.IsNull(this.table交款票据统计.有效份数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set有效份数Null() {
                this[this.table交款票据统计.有效份数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is作废份数Null() {
                return this.IsNull(this.table交款票据统计.作废份数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set作废份数Null() {
                this[this.table交款票据统计.作废份数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is作废号码Null() {
                return this.IsNull(this.table交款票据统计.作废号码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set作废号码Null() {
                this[this.table交款票据统计.作废号码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is现金支付Null() {
                return this.IsNull(this.table交款票据统计.现金支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set现金支付Null() {
                this[this.table交款票据统计.现金支付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is医保支付Null() {
                return this.IsNull(this.table交款票据统计.医保支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set医保支付Null() {
                this[this.table交款票据统计.医保支付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is银行支付Null() {
                return this.IsNull(this.table交款票据统计.银行支付Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set银行支付Null() {
                this[this.table交款票据统计.银行支付Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is交款员Null() {
                return this.IsNull(this.table交款票据统计.交款员Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set交款员Null() {
                this[this.table交款票据统计.交款员Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is字轨份数Null() {
                return this.IsNull(this.table交款票据统计.字轨份数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set字轨份数Null() {
                this[this.table交款票据统计.字轨份数Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 收费员个人交款发票统计Row : global::System.Data.DataRow {
            
            private 收费员个人交款发票统计DataTable table收费员个人交款发票统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费员个人交款发票统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table收费员个人交款发票统计 = ((收费员个人交款发票统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sfyxm {
                get {
                    try {
                        return ((string)(this[this.table收费员个人交款发票统计.sfyxmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费员个人交款发票统计”中列“sfyxm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费员个人交款发票统计.sfyxmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xmmc {
                get {
                    try {
                        return ((string)(this[this.table收费员个人交款发票统计.xmmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费员个人交款发票统计”中列“xmmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费员个人交款发票统计.xmmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xmbm {
                get {
                    try {
                        return ((string)(this[this.table收费员个人交款发票统计.xmbmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费员个人交款发票统计”中列“xmbm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费员个人交款发票统计.xmbmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string je {
                get {
                    try {
                        return ((string)(this[this.table收费员个人交款发票统计.jeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费员个人交款发票统计”中列“je”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费员个人交款发票统计.jeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zje {
                get {
                    try {
                        return ((string)(this[this.table收费员个人交款发票统计.zjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费员个人交款发票统计”中列“zje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费员个人交款发票统计.zjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dxje {
                get {
                    try {
                        return ((string)(this[this.table收费员个人交款发票统计.dxjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费员个人交款发票统计”中列“dxje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费员个人交款发票统计.dxjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fpd {
                get {
                    try {
                        return ((string)(this[this.table收费员个人交款发票统计.fpdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费员个人交款发票统计”中列“fpd”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费员个人交款发票统计.fpdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string feipiaoxx {
                get {
                    try {
                        return ((string)(this[this.table收费员个人交款发票统计.feipiaoxxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费员个人交款发票统计”中列“feipiaoxx”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费员个人交款发票统计.feipiaoxxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xjzf {
                get {
                    try {
                        return ((string)(this[this.table收费员个人交款发票统计.xjzfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费员个人交款发票统计”中列“xjzf”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费员个人交款发票统计.xjzfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ybzf {
                get {
                    try {
                        return ((string)(this[this.table收费员个人交款发票统计.ybzfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费员个人交款发票统计”中列“ybzf”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费员个人交款发票统计.ybzfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ylzf {
                get {
                    try {
                        return ((string)(this[this.table收费员个人交款发票统计.ylzfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费员个人交款发票统计”中列“ylzf”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费员个人交款发票统计.ylzfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string qfgz {
                get {
                    try {
                        return ((string)(this[this.table收费员个人交款发票统计.qfgzColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费员个人交款发票统计”中列“qfgz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费员个人交款发票统计.qfgzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cwjz {
                get {
                    try {
                        return ((string)(this[this.table收费员个人交款发票统计.cwjzColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费员个人交款发票统计”中列“cwjz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费员个人交款发票统计.cwjzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zpzf {
                get {
                    try {
                        return ((string)(this[this.table收费员个人交款发票统计.zpzfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费员个人交款发票统计”中列“zpzf”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费员个人交款发票统计.zpzfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssfyxmNull() {
                return this.IsNull(this.table收费员个人交款发票统计.sfyxmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsfyxmNull() {
                this[this.table收费员个人交款发票统计.sfyxmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxmmcNull() {
                return this.IsNull(this.table收费员个人交款发票统计.xmmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxmmcNull() {
                this[this.table收费员个人交款发票统计.xmmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxmbmNull() {
                return this.IsNull(this.table收费员个人交款发票统计.xmbmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxmbmNull() {
                this[this.table收费员个人交款发票统计.xmbmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjeNull() {
                return this.IsNull(this.table收费员个人交款发票统计.jeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjeNull() {
                this[this.table收费员个人交款发票统计.jeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszjeNull() {
                return this.IsNull(this.table收费员个人交款发票统计.zjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzjeNull() {
                this[this.table收费员个人交款发票统计.zjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdxjeNull() {
                return this.IsNull(this.table收费员个人交款发票统计.dxjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdxjeNull() {
                this[this.table收费员个人交款发票统计.dxjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfpdNull() {
                return this.IsNull(this.table收费员个人交款发票统计.fpdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfpdNull() {
                this[this.table收费员个人交款发票统计.fpdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfeipiaoxxNull() {
                return this.IsNull(this.table收费员个人交款发票统计.feipiaoxxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfeipiaoxxNull() {
                this[this.table收费员个人交款发票统计.feipiaoxxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxjzfNull() {
                return this.IsNull(this.table收费员个人交款发票统计.xjzfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxjzfNull() {
                this[this.table收费员个人交款发票统计.xjzfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsybzfNull() {
                return this.IsNull(this.table收费员个人交款发票统计.ybzfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetybzfNull() {
                this[this.table收费员个人交款发票统计.ybzfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsylzfNull() {
                return this.IsNull(this.table收费员个人交款发票统计.ylzfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetylzfNull() {
                this[this.table收费员个人交款发票统计.ylzfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqfgzNull() {
                return this.IsNull(this.table收费员个人交款发票统计.qfgzColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqfgzNull() {
                this[this.table收费员个人交款发票统计.qfgzColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscwjzNull() {
                return this.IsNull(this.table收费员个人交款发票统计.cwjzColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcwjzNull() {
                this[this.table收费员个人交款发票统计.cwjzColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszpzfNull() {
                return this.IsNull(this.table收费员个人交款发票统计.zpzfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzpzfNull() {
                this[this.table收费员个人交款发票统计.zpzfColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 交款表优惠金额Row : global::System.Data.DataRow {
            
            private 交款表优惠金额DataTable table交款表优惠金额;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 交款表优惠金额Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table交款表优惠金额 = ((交款表优惠金额DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRXM {
                get {
                    try {
                        return ((string)(this[this.table交款表优惠金额.BRXMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表优惠金额”中列“BRXM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表优惠金额.BRXMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FPH {
                get {
                    try {
                        return ((string)(this[this.table交款表优惠金额.FPHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表优惠金额”中列“FPH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表优惠金额.FPHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZJE {
                get {
                    try {
                        return ((decimal)(this[this.table交款表优惠金额.ZJEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表优惠金额”中列“ZJE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表优惠金额.ZJEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal YHJE {
                get {
                    try {
                        return ((decimal)(this[this.table交款表优惠金额.YHJEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表优惠金额”中列“YHJE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表优惠金额.YHJEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YHLXMC {
                get {
                    try {
                        return ((string)(this[this.table交款表优惠金额.YHLXMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表优惠金额”中列“YHLXMC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表优惠金额.YHLXMCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SFRQ {
                get {
                    try {
                        return ((string)(this[this.table交款表优惠金额.SFRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“交款表优惠金额”中列“SFRQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table交款表优惠金额.SFRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRXMNull() {
                return this.IsNull(this.table交款表优惠金额.BRXMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRXMNull() {
                this[this.table交款表优惠金额.BRXMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFPHNull() {
                return this.IsNull(this.table交款表优惠金额.FPHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFPHNull() {
                this[this.table交款表优惠金额.FPHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZJENull() {
                return this.IsNull(this.table交款表优惠金额.ZJEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZJENull() {
                this[this.table交款表优惠金额.ZJEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYHJENull() {
                return this.IsNull(this.table交款表优惠金额.YHJEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYHJENull() {
                this[this.table交款表优惠金额.YHJEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYHLXMCNull() {
                return this.IsNull(this.table交款表优惠金额.YHLXMCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYHLXMCNull() {
                this[this.table交款表优惠金额.YHLXMCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSFRQNull() {
                return this.IsNull(this.table交款表优惠金额.SFRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSFRQNull() {
                this[this.table交款表优惠金额.SFRQColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 收费项目RowChangeEvent : global::System.EventArgs {
            
            private 收费项目Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目RowChangeEvent(收费项目Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 作废发票RowChangeEvent : global::System.EventArgs {
            
            private 作废发票Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 作废发票RowChangeEvent(作废发票Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 作废发票Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 交款表RowChangeEvent : global::System.EventArgs {
            
            private 交款表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款表RowChangeEvent(交款表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 收费项目金额RowChangeEvent : global::System.EventArgs {
            
            private 收费项目金额Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目金额RowChangeEvent(收费项目金额Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目金额Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 医保信息RowChangeEvent : global::System.EventArgs {
            
            private 医保信息Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医保信息RowChangeEvent(医保信息Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医保信息Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 其它信息RowChangeEvent : global::System.EventArgs {
            
            private 其它信息Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 其它信息RowChangeEvent(其它信息Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 其它信息Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 预收款RowChangeEvent : global::System.EventArgs {
            
            private 预收款Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 预收款RowChangeEvent(预收款Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 预收款Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class pos明细RowChangeEvent : global::System.EventArgs {
            
            private pos明细Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pos明细RowChangeEvent(pos明细Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pos明细Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 合同单位汇总RowChangeEvent : global::System.EventArgs {
            
            private 合同单位汇总Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 合同单位汇总RowChangeEvent(合同单位汇总Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 合同单位汇总Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 医保日统计_明细RowChangeEvent : global::System.EventArgs {
            
            private 医保日统计_明细Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医保日统计_明细RowChangeEvent(医保日统计_明细Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医保日统计_明细Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 门诊收费员工作量RowChangeEvent : global::System.EventArgs {
            
            private 门诊收费员工作量Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊收费员工作量RowChangeEvent(门诊收费员工作量Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊收费员工作量Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 门诊医生接诊量RowChangeEvent : global::System.EventArgs {
            
            private 门诊医生接诊量Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊医生接诊量RowChangeEvent(门诊医生接诊量Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊医生接诊量Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 收费明细RowChangeEvent : global::System.EventArgs {
            
            private 收费明细Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费明细RowChangeEvent(收费明细Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费明细Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 收费物价明细RowChangeEvent : global::System.EventArgs {
            
            private 收费物价明细Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费物价明细RowChangeEvent(收费物价明细Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费物价明细Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 收费项目1RowChangeEvent : global::System.EventArgs {
            
            private 收费项目1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目1RowChangeEvent(收费项目1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 收费项目金额1RowChangeEvent : global::System.EventArgs {
            
            private 收费项目金额1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目金额1RowChangeEvent(收费项目金额1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费项目金额1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 银医办卡统计RowChangeEvent : global::System.EventArgs {
            
            private 银医办卡统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医办卡统计RowChangeEvent(银医办卡统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医办卡统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 银医支付方式统计RowChangeEvent : global::System.EventArgs {
            
            private 银医支付方式统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医支付方式统计RowChangeEvent(银医支付方式统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医支付方式统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 银医退卡明细RowChangeEvent : global::System.EventArgs {
            
            private 银医退卡明细Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医退卡明细RowChangeEvent(银医退卡明细Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 银医退卡明细Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 工商银行自助机对账统计RowChangeEvent : global::System.EventArgs {
            
            private 工商银行自助机对账统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 工商银行自助机对账统计RowChangeEvent(工商银行自助机对账统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 工商银行自助机对账统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _工商银行自助机对账明细统计_银行端_RowChangeEvent : global::System.EventArgs {
            
            private _工商银行自助机对账明细统计_银行端_Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _工商银行自助机对账明细统计_银行端_RowChangeEvent(_工商银行自助机对账明细统计_银行端_Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _工商银行自助机对账明细统计_银行端_Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _工商银行自助机对账明细统计_医院端_RowChangeEvent : global::System.EventArgs {
            
            private _工商银行自助机对账明细统计_医院端_Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _工商银行自助机对账明细统计_医院端_RowChangeEvent(_工商银行自助机对账明细统计_医院端_Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _工商银行自助机对账明细统计_医院端_Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 门诊预交金消费对账RowChangeEvent : global::System.EventArgs {
            
            private 门诊预交金消费对账Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊预交金消费对账RowChangeEvent(门诊预交金消费对账Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊预交金消费对账Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 诊疗卡办卡明细RowChangeEvent : global::System.EventArgs {
            
            private 诊疗卡办卡明细Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 诊疗卡办卡明细RowChangeEvent(诊疗卡办卡明细Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 诊疗卡办卡明细Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 小票明细RowChangeEvent : global::System.EventArgs {
            
            private 小票明细Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 小票明细RowChangeEvent(小票明细Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 小票明细Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TB_mzyjjRowChangeEvent : global::System.EventArgs {
            
            private TB_mzyjjRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_mzyjjRowChangeEvent(TB_mzyjjRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TB_mzyjjRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 科室医保收入统计表RowChangeEvent : global::System.EventArgs {
            
            private 科室医保收入统计表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 科室医保收入统计表RowChangeEvent(科室医保收入统计表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 科室医保收入统计表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 交款票据统计RowChangeEvent : global::System.EventArgs {
            
            private 交款票据统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款票据统计RowChangeEvent(交款票据统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款票据统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 收费员个人交款发票统计RowChangeEvent : global::System.EventArgs {
            
            private 收费员个人交款发票统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费员个人交款发票统计RowChangeEvent(收费员个人交款发票统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费员个人交款发票统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 交款表优惠金额RowChangeEvent : global::System.EventArgs {
            
            private 交款表优惠金额Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款表优惠金额RowChangeEvent(交款表优惠金额Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 交款表优惠金额Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591