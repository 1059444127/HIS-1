//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3655
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ts_mz_kgl {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private 作废卡DataTable table作废卡;
        
        private 冻结卡DataTable table冻结卡;
        
        private 挂失卡DataTable table挂失卡;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["作废卡"] != null)) {
                    base.Tables.Add(new 作废卡DataTable(ds.Tables["作废卡"]));
                }
                if ((ds.Tables["冻结卡"] != null)) {
                    base.Tables.Add(new 冻结卡DataTable(ds.Tables["冻结卡"]));
                }
                if ((ds.Tables["挂失卡"] != null)) {
                    base.Tables.Add(new 挂失卡DataTable(ds.Tables["挂失卡"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 作废卡DataTable 作废卡 {
            get {
                return this.table作废卡;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 冻结卡DataTable 冻结卡 {
            get {
                return this.table冻结卡;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 挂失卡DataTable 挂失卡 {
            get {
                return this.table挂失卡;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["作废卡"] != null)) {
                    base.Tables.Add(new 作废卡DataTable(ds.Tables["作废卡"]));
                }
                if ((ds.Tables["冻结卡"] != null)) {
                    base.Tables.Add(new 冻结卡DataTable(ds.Tables["冻结卡"]));
                }
                if ((ds.Tables["挂失卡"] != null)) {
                    base.Tables.Add(new 挂失卡DataTable(ds.Tables["挂失卡"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table作废卡 = ((作废卡DataTable)(base.Tables["作废卡"]));
            if ((initTable == true)) {
                if ((this.table作废卡 != null)) {
                    this.table作废卡.InitVars();
                }
            }
            this.table冻结卡 = ((冻结卡DataTable)(base.Tables["冻结卡"]));
            if ((initTable == true)) {
                if ((this.table冻结卡 != null)) {
                    this.table冻结卡.InitVars();
                }
            }
            this.table挂失卡 = ((挂失卡DataTable)(base.Tables["挂失卡"]));
            if ((initTable == true)) {
                if ((this.table挂失卡 != null)) {
                    this.table挂失卡.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table作废卡 = new 作废卡DataTable();
            base.Tables.Add(this.table作废卡);
            this.table冻结卡 = new 冻结卡DataTable();
            base.Tables.Add(this.table冻结卡);
            this.table挂失卡 = new 挂失卡DataTable();
            base.Tables.Add(this.table挂失卡);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize作废卡() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize冻结卡() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize挂失卡() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void 作废卡RowChangeEventHandler(object sender, 作废卡RowChangeEvent e);
        
        public delegate void 冻结卡RowChangeEventHandler(object sender, 冻结卡RowChangeEvent e);
        
        public delegate void 挂失卡RowChangeEventHandler(object sender, 挂失卡RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 作废卡DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnKH;
            
            private global::System.Data.DataColumn columnCKRXM;
            
            private global::System.Data.DataColumn columnXB;
            
            private global::System.Data.DataColumn columnDH;
            
            private global::System.Data.DataColumn columnSFZH;
            
            private global::System.Data.DataColumn columnBKJE;
            
            private global::System.Data.DataColumn columnZFDJY;
            
            private global::System.Data.DataColumn columnZFSJ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 作废卡DataTable() {
                this.TableName = "作废卡";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 作废卡DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 作废卡DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KHColumn {
                get {
                    return this.columnKH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CKRXMColumn {
                get {
                    return this.columnCKRXM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XBColumn {
                get {
                    return this.columnXB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DHColumn {
                get {
                    return this.columnDH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SFZHColumn {
                get {
                    return this.columnSFZH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BKJEColumn {
                get {
                    return this.columnBKJE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZFDJYColumn {
                get {
                    return this.columnZFDJY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZFSJColumn {
                get {
                    return this.columnZFSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 作废卡Row this[int index] {
                get {
                    return ((作废卡Row)(this.Rows[index]));
                }
            }
            
            public event 作废卡RowChangeEventHandler 作废卡RowChanging;
            
            public event 作废卡RowChangeEventHandler 作废卡RowChanged;
            
            public event 作废卡RowChangeEventHandler 作废卡RowDeleting;
            
            public event 作废卡RowChangeEventHandler 作废卡RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add作废卡Row(作废卡Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 作废卡Row Add作废卡Row(string KH, string CKRXM, string XB, string DH, string SFZH, string BKJE, string ZFDJY, string ZFSJ) {
                作废卡Row row作废卡Row = ((作废卡Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KH,
                        CKRXM,
                        XB,
                        DH,
                        SFZH,
                        BKJE,
                        ZFDJY,
                        ZFSJ};
                row作废卡Row.ItemArray = columnValuesArray;
                this.Rows.Add(row作废卡Row);
                return row作废卡Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                作废卡DataTable cln = ((作废卡DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 作废卡DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKH = base.Columns["KH"];
                this.columnCKRXM = base.Columns["CKRXM"];
                this.columnXB = base.Columns["XB"];
                this.columnDH = base.Columns["DH"];
                this.columnSFZH = base.Columns["SFZH"];
                this.columnBKJE = base.Columns["BKJE"];
                this.columnZFDJY = base.Columns["ZFDJY"];
                this.columnZFSJ = base.Columns["ZFSJ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKH = new global::System.Data.DataColumn("KH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKH);
                this.columnCKRXM = new global::System.Data.DataColumn("CKRXM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCKRXM);
                this.columnXB = new global::System.Data.DataColumn("XB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXB);
                this.columnDH = new global::System.Data.DataColumn("DH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDH);
                this.columnSFZH = new global::System.Data.DataColumn("SFZH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSFZH);
                this.columnBKJE = new global::System.Data.DataColumn("BKJE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBKJE);
                this.columnZFDJY = new global::System.Data.DataColumn("ZFDJY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZFDJY);
                this.columnZFSJ = new global::System.Data.DataColumn("ZFSJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZFSJ);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 作废卡Row New作废卡Row() {
                return ((作废卡Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 作废卡Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(作废卡Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.作废卡RowChanged != null)) {
                    this.作废卡RowChanged(this, new 作废卡RowChangeEvent(((作废卡Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.作废卡RowChanging != null)) {
                    this.作废卡RowChanging(this, new 作废卡RowChangeEvent(((作废卡Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.作废卡RowDeleted != null)) {
                    this.作废卡RowDeleted(this, new 作废卡RowChangeEvent(((作废卡Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.作废卡RowDeleting != null)) {
                    this.作废卡RowDeleting(this, new 作废卡RowChangeEvent(((作废卡Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove作废卡Row(作废卡Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "作废卡DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 冻结卡DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnKH;
            
            private global::System.Data.DataColumn columnCKRXM;
            
            private global::System.Data.DataColumn columnXB;
            
            private global::System.Data.DataColumn columnDH;
            
            private global::System.Data.DataColumn columnSFZH;
            
            private global::System.Data.DataColumn columnKYE;
            
            private global::System.Data.DataColumn columnDJDJY;
            
            private global::System.Data.DataColumn columnDJSJ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 冻结卡DataTable() {
                this.TableName = "冻结卡";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 冻结卡DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 冻结卡DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KHColumn {
                get {
                    return this.columnKH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CKRXMColumn {
                get {
                    return this.columnCKRXM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XBColumn {
                get {
                    return this.columnXB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DHColumn {
                get {
                    return this.columnDH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SFZHColumn {
                get {
                    return this.columnSFZH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KYEColumn {
                get {
                    return this.columnKYE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJDJYColumn {
                get {
                    return this.columnDJDJY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJSJColumn {
                get {
                    return this.columnDJSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 冻结卡Row this[int index] {
                get {
                    return ((冻结卡Row)(this.Rows[index]));
                }
            }
            
            public event 冻结卡RowChangeEventHandler 冻结卡RowChanging;
            
            public event 冻结卡RowChangeEventHandler 冻结卡RowChanged;
            
            public event 冻结卡RowChangeEventHandler 冻结卡RowDeleting;
            
            public event 冻结卡RowChangeEventHandler 冻结卡RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add冻结卡Row(冻结卡Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 冻结卡Row Add冻结卡Row(string KH, string CKRXM, string XB, string DH, string SFZH, string KYE, string DJDJY, string DJSJ) {
                冻结卡Row row冻结卡Row = ((冻结卡Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KH,
                        CKRXM,
                        XB,
                        DH,
                        SFZH,
                        KYE,
                        DJDJY,
                        DJSJ};
                row冻结卡Row.ItemArray = columnValuesArray;
                this.Rows.Add(row冻结卡Row);
                return row冻结卡Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                冻结卡DataTable cln = ((冻结卡DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 冻结卡DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKH = base.Columns["KH"];
                this.columnCKRXM = base.Columns["CKRXM"];
                this.columnXB = base.Columns["XB"];
                this.columnDH = base.Columns["DH"];
                this.columnSFZH = base.Columns["SFZH"];
                this.columnKYE = base.Columns["KYE"];
                this.columnDJDJY = base.Columns["DJDJY"];
                this.columnDJSJ = base.Columns["DJSJ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKH = new global::System.Data.DataColumn("KH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKH);
                this.columnCKRXM = new global::System.Data.DataColumn("CKRXM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCKRXM);
                this.columnXB = new global::System.Data.DataColumn("XB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXB);
                this.columnDH = new global::System.Data.DataColumn("DH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDH);
                this.columnSFZH = new global::System.Data.DataColumn("SFZH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSFZH);
                this.columnKYE = new global::System.Data.DataColumn("KYE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKYE);
                this.columnDJDJY = new global::System.Data.DataColumn("DJDJY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJDJY);
                this.columnDJSJ = new global::System.Data.DataColumn("DJSJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJSJ);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 冻结卡Row New冻结卡Row() {
                return ((冻结卡Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 冻结卡Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(冻结卡Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.冻结卡RowChanged != null)) {
                    this.冻结卡RowChanged(this, new 冻结卡RowChangeEvent(((冻结卡Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.冻结卡RowChanging != null)) {
                    this.冻结卡RowChanging(this, new 冻结卡RowChangeEvent(((冻结卡Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.冻结卡RowDeleted != null)) {
                    this.冻结卡RowDeleted(this, new 冻结卡RowChangeEvent(((冻结卡Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.冻结卡RowDeleting != null)) {
                    this.冻结卡RowDeleting(this, new 冻结卡RowChangeEvent(((冻结卡Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove冻结卡Row(冻结卡Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "冻结卡DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 挂失卡DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnKH;
            
            private global::System.Data.DataColumn columnCKRXM;
            
            private global::System.Data.DataColumn columnXB;
            
            private global::System.Data.DataColumn columnDH;
            
            private global::System.Data.DataColumn columnSFZH;
            
            private global::System.Data.DataColumn columnKYE;
            
            private global::System.Data.DataColumn columnGSDJY;
            
            private global::System.Data.DataColumn columnGSSJ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 挂失卡DataTable() {
                this.TableName = "挂失卡";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 挂失卡DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 挂失卡DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KHColumn {
                get {
                    return this.columnKH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CKRXMColumn {
                get {
                    return this.columnCKRXM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XBColumn {
                get {
                    return this.columnXB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DHColumn {
                get {
                    return this.columnDH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SFZHColumn {
                get {
                    return this.columnSFZH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KYEColumn {
                get {
                    return this.columnKYE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GSDJYColumn {
                get {
                    return this.columnGSDJY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GSSJColumn {
                get {
                    return this.columnGSSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 挂失卡Row this[int index] {
                get {
                    return ((挂失卡Row)(this.Rows[index]));
                }
            }
            
            public event 挂失卡RowChangeEventHandler 挂失卡RowChanging;
            
            public event 挂失卡RowChangeEventHandler 挂失卡RowChanged;
            
            public event 挂失卡RowChangeEventHandler 挂失卡RowDeleting;
            
            public event 挂失卡RowChangeEventHandler 挂失卡RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add挂失卡Row(挂失卡Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 挂失卡Row Add挂失卡Row(string KH, string CKRXM, string XB, string DH, string SFZH, string KYE, string GSDJY, string GSSJ) {
                挂失卡Row row挂失卡Row = ((挂失卡Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KH,
                        CKRXM,
                        XB,
                        DH,
                        SFZH,
                        KYE,
                        GSDJY,
                        GSSJ};
                row挂失卡Row.ItemArray = columnValuesArray;
                this.Rows.Add(row挂失卡Row);
                return row挂失卡Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                挂失卡DataTable cln = ((挂失卡DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 挂失卡DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKH = base.Columns["KH"];
                this.columnCKRXM = base.Columns["CKRXM"];
                this.columnXB = base.Columns["XB"];
                this.columnDH = base.Columns["DH"];
                this.columnSFZH = base.Columns["SFZH"];
                this.columnKYE = base.Columns["KYE"];
                this.columnGSDJY = base.Columns["GSDJY"];
                this.columnGSSJ = base.Columns["GSSJ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKH = new global::System.Data.DataColumn("KH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKH);
                this.columnCKRXM = new global::System.Data.DataColumn("CKRXM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCKRXM);
                this.columnXB = new global::System.Data.DataColumn("XB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXB);
                this.columnDH = new global::System.Data.DataColumn("DH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDH);
                this.columnSFZH = new global::System.Data.DataColumn("SFZH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSFZH);
                this.columnKYE = new global::System.Data.DataColumn("KYE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKYE);
                this.columnGSDJY = new global::System.Data.DataColumn("GSDJY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGSDJY);
                this.columnGSSJ = new global::System.Data.DataColumn("GSSJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGSSJ);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 挂失卡Row New挂失卡Row() {
                return ((挂失卡Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 挂失卡Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(挂失卡Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.挂失卡RowChanged != null)) {
                    this.挂失卡RowChanged(this, new 挂失卡RowChangeEvent(((挂失卡Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.挂失卡RowChanging != null)) {
                    this.挂失卡RowChanging(this, new 挂失卡RowChangeEvent(((挂失卡Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.挂失卡RowDeleted != null)) {
                    this.挂失卡RowDeleted(this, new 挂失卡RowChangeEvent(((挂失卡Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.挂失卡RowDeleting != null)) {
                    this.挂失卡RowDeleting(this, new 挂失卡RowChangeEvent(((挂失卡Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove挂失卡Row(挂失卡Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "挂失卡DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 作废卡Row : global::System.Data.DataRow {
            
            private 作废卡DataTable table作废卡;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 作废卡Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table作废卡 = ((作废卡DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KH {
                get {
                    try {
                        return ((string)(this[this.table作废卡.KHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废卡”中列“KH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废卡.KHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CKRXM {
                get {
                    try {
                        return ((string)(this[this.table作废卡.CKRXMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废卡”中列“CKRXM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废卡.CKRXMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XB {
                get {
                    try {
                        return ((string)(this[this.table作废卡.XBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废卡”中列“XB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废卡.XBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DH {
                get {
                    try {
                        return ((string)(this[this.table作废卡.DHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废卡”中列“DH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废卡.DHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SFZH {
                get {
                    try {
                        return ((string)(this[this.table作废卡.SFZHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废卡”中列“SFZH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废卡.SFZHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BKJE {
                get {
                    try {
                        return ((string)(this[this.table作废卡.BKJEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废卡”中列“BKJE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废卡.BKJEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZFDJY {
                get {
                    try {
                        return ((string)(this[this.table作废卡.ZFDJYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废卡”中列“ZFDJY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废卡.ZFDJYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZFSJ {
                get {
                    try {
                        return ((string)(this[this.table作废卡.ZFSJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“作废卡”中列“ZFSJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table作废卡.ZFSJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKHNull() {
                return this.IsNull(this.table作废卡.KHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKHNull() {
                this[this.table作废卡.KHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCKRXMNull() {
                return this.IsNull(this.table作废卡.CKRXMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCKRXMNull() {
                this[this.table作废卡.CKRXMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXBNull() {
                return this.IsNull(this.table作废卡.XBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXBNull() {
                this[this.table作废卡.XBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDHNull() {
                return this.IsNull(this.table作废卡.DHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDHNull() {
                this[this.table作废卡.DHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSFZHNull() {
                return this.IsNull(this.table作废卡.SFZHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSFZHNull() {
                this[this.table作废卡.SFZHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBKJENull() {
                return this.IsNull(this.table作废卡.BKJEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBKJENull() {
                this[this.table作废卡.BKJEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZFDJYNull() {
                return this.IsNull(this.table作废卡.ZFDJYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZFDJYNull() {
                this[this.table作废卡.ZFDJYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZFSJNull() {
                return this.IsNull(this.table作废卡.ZFSJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZFSJNull() {
                this[this.table作废卡.ZFSJColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 冻结卡Row : global::System.Data.DataRow {
            
            private 冻结卡DataTable table冻结卡;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 冻结卡Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table冻结卡 = ((冻结卡DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KH {
                get {
                    try {
                        return ((string)(this[this.table冻结卡.KHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“冻结卡”中列“KH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table冻结卡.KHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CKRXM {
                get {
                    try {
                        return ((string)(this[this.table冻结卡.CKRXMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“冻结卡”中列“CKRXM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table冻结卡.CKRXMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XB {
                get {
                    try {
                        return ((string)(this[this.table冻结卡.XBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“冻结卡”中列“XB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table冻结卡.XBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DH {
                get {
                    try {
                        return ((string)(this[this.table冻结卡.DHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“冻结卡”中列“DH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table冻结卡.DHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SFZH {
                get {
                    try {
                        return ((string)(this[this.table冻结卡.SFZHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“冻结卡”中列“SFZH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table冻结卡.SFZHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KYE {
                get {
                    try {
                        return ((string)(this[this.table冻结卡.KYEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“冻结卡”中列“KYE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table冻结卡.KYEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJDJY {
                get {
                    try {
                        return ((string)(this[this.table冻结卡.DJDJYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“冻结卡”中列“DJDJY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table冻结卡.DJDJYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJSJ {
                get {
                    try {
                        return ((string)(this[this.table冻结卡.DJSJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“冻结卡”中列“DJSJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table冻结卡.DJSJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKHNull() {
                return this.IsNull(this.table冻结卡.KHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKHNull() {
                this[this.table冻结卡.KHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCKRXMNull() {
                return this.IsNull(this.table冻结卡.CKRXMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCKRXMNull() {
                this[this.table冻结卡.CKRXMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXBNull() {
                return this.IsNull(this.table冻结卡.XBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXBNull() {
                this[this.table冻结卡.XBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDHNull() {
                return this.IsNull(this.table冻结卡.DHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDHNull() {
                this[this.table冻结卡.DHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSFZHNull() {
                return this.IsNull(this.table冻结卡.SFZHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSFZHNull() {
                this[this.table冻结卡.SFZHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKYENull() {
                return this.IsNull(this.table冻结卡.KYEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKYENull() {
                this[this.table冻结卡.KYEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDJDJYNull() {
                return this.IsNull(this.table冻结卡.DJDJYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDJDJYNull() {
                this[this.table冻结卡.DJDJYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDJSJNull() {
                return this.IsNull(this.table冻结卡.DJSJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDJSJNull() {
                this[this.table冻结卡.DJSJColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 挂失卡Row : global::System.Data.DataRow {
            
            private 挂失卡DataTable table挂失卡;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 挂失卡Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table挂失卡 = ((挂失卡DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KH {
                get {
                    try {
                        return ((string)(this[this.table挂失卡.KHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“挂失卡”中列“KH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table挂失卡.KHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CKRXM {
                get {
                    try {
                        return ((string)(this[this.table挂失卡.CKRXMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“挂失卡”中列“CKRXM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table挂失卡.CKRXMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XB {
                get {
                    try {
                        return ((string)(this[this.table挂失卡.XBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“挂失卡”中列“XB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table挂失卡.XBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DH {
                get {
                    try {
                        return ((string)(this[this.table挂失卡.DHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“挂失卡”中列“DH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table挂失卡.DHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SFZH {
                get {
                    try {
                        return ((string)(this[this.table挂失卡.SFZHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“挂失卡”中列“SFZH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table挂失卡.SFZHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KYE {
                get {
                    try {
                        return ((string)(this[this.table挂失卡.KYEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“挂失卡”中列“KYE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table挂失卡.KYEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GSDJY {
                get {
                    try {
                        return ((string)(this[this.table挂失卡.GSDJYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“挂失卡”中列“GSDJY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table挂失卡.GSDJYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GSSJ {
                get {
                    try {
                        return ((string)(this[this.table挂失卡.GSSJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“挂失卡”中列“GSSJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table挂失卡.GSSJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKHNull() {
                return this.IsNull(this.table挂失卡.KHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKHNull() {
                this[this.table挂失卡.KHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCKRXMNull() {
                return this.IsNull(this.table挂失卡.CKRXMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCKRXMNull() {
                this[this.table挂失卡.CKRXMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXBNull() {
                return this.IsNull(this.table挂失卡.XBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXBNull() {
                this[this.table挂失卡.XBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDHNull() {
                return this.IsNull(this.table挂失卡.DHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDHNull() {
                this[this.table挂失卡.DHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSFZHNull() {
                return this.IsNull(this.table挂失卡.SFZHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSFZHNull() {
                this[this.table挂失卡.SFZHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKYENull() {
                return this.IsNull(this.table挂失卡.KYEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKYENull() {
                this[this.table挂失卡.KYEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGSDJYNull() {
                return this.IsNull(this.table挂失卡.GSDJYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGSDJYNull() {
                this[this.table挂失卡.GSDJYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGSSJNull() {
                return this.IsNull(this.table挂失卡.GSSJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGSSJNull() {
                this[this.table挂失卡.GSSJColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 作废卡RowChangeEvent : global::System.EventArgs {
            
            private 作废卡Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 作废卡RowChangeEvent(作废卡Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 作废卡Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 冻结卡RowChangeEvent : global::System.EventArgs {
            
            private 冻结卡Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 冻结卡RowChangeEvent(冻结卡Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 冻结卡Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 挂失卡RowChangeEvent : global::System.EventArgs {
            
            private 挂失卡Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 挂失卡RowChangeEvent(挂失卡Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 挂失卡Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591