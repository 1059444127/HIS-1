//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.5485 版自动生成。
// 
#pragma warning disable 1591

namespace ts_ybznsh_interface.WebReference {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AuditWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class AuditWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ClaimAudit4HospitalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClaimSave4HospitalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClaimDelete4HospitalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFullTipsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelatedDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRuleNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLimitCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPutOnRecord4HospitalOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePutOnRecord4HospitalOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDetail4HospitalOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuditCacheNotWithResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuditCacheWithResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuditGetCostsResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloworldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetbillListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillDetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCacheBillDetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPutOnRecordListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpDataHS_STATUSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpDataDetail_ZZZ_FlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDATEOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteNoAccountingRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetstdcodeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AuditWebService() {
            this.Url = global::ts_ybznsh_interface.Properties.Settings.Default.ts_ybznsh_interface_WebReference_AuditWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ClaimAudit4HospitalCompletedEventHandler ClaimAudit4HospitalCompleted;
        
        /// <remarks/>
        public event ClaimSave4HospitalCompletedEventHandler ClaimSave4HospitalCompleted;
        
        /// <remarks/>
        public event ClaimDelete4HospitalCompletedEventHandler ClaimDelete4HospitalCompleted;
        
        /// <remarks/>
        public event GetFullTipsCompletedEventHandler GetFullTipsCompleted;
        
        /// <remarks/>
        public event GetRelatedDetailCompletedEventHandler GetRelatedDetailCompleted;
        
        /// <remarks/>
        public event GetRuleNamesCompletedEventHandler GetRuleNamesCompleted;
        
        /// <remarks/>
        public event GetLimitCodesCompletedEventHandler GetLimitCodesCompleted;
        
        /// <remarks/>
        public event AddPutOnRecord4HospitalCompletedEventHandler AddPutOnRecord4HospitalCompleted;
        
        /// <remarks/>
        public event DeletePutOnRecord4HospitalCompletedEventHandler DeletePutOnRecord4HospitalCompleted;
        
        /// <remarks/>
        public event DeleteDetail4HospitalCompletedEventHandler DeleteDetail4HospitalCompleted;
        
        /// <remarks/>
        public event AuditCacheNotWithResultCompletedEventHandler AuditCacheNotWithResultCompleted;
        
        /// <remarks/>
        public event AuditCacheWithResultCompletedEventHandler AuditCacheWithResultCompleted;
        
        /// <remarks/>
        public event AuditGetCostsResultCompletedEventHandler AuditGetCostsResultCompleted;
        
        /// <remarks/>
        public event HelloworldCompletedEventHandler HelloworldCompleted;
        
        /// <remarks/>
        public event GetbillListCompletedEventHandler GetbillListCompleted;
        
        /// <remarks/>
        public event GetBillDetailListCompletedEventHandler GetBillDetailListCompleted;
        
        /// <remarks/>
        public event GetCacheBillDetailListCompletedEventHandler GetCacheBillDetailListCompleted;
        
        /// <remarks/>
        public event GetPutOnRecordListCompletedEventHandler GetPutOnRecordListCompleted;
        
        /// <remarks/>
        public event GetResultTypesCompletedEventHandler GetResultTypesCompleted;
        
        /// <remarks/>
        public event UpDataHS_STATUSCompletedEventHandler UpDataHS_STATUSCompleted;
        
        /// <remarks/>
        public event GetAppSettingsCompletedEventHandler GetAppSettingsCompleted;
        
        /// <remarks/>
        public event UpDataDetail_ZZZ_FlagCompletedEventHandler UpDataDetail_ZZZ_FlagCompleted;
        
        /// <remarks/>
        public event GetDATECompletedEventHandler GetDATECompleted;
        
        /// <remarks/>
        public event DeleteNoAccountingRecordCompletedEventHandler DeleteNoAccountingRecordCompleted;
        
        /// <remarks/>
        public event GetstdcodeCompletedEventHandler GetstdcodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClaimAudit4Hospital", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClaimAudit4Hospital(string inClaimInfo, bool inHasUpdate4Claim) {
            object[] results = this.Invoke("ClaimAudit4Hospital", new object[] {
                        inClaimInfo,
                        inHasUpdate4Claim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClaimAudit4HospitalAsync(string inClaimInfo, bool inHasUpdate4Claim) {
            this.ClaimAudit4HospitalAsync(inClaimInfo, inHasUpdate4Claim, null);
        }
        
        /// <remarks/>
        public void ClaimAudit4HospitalAsync(string inClaimInfo, bool inHasUpdate4Claim, object userState) {
            if ((this.ClaimAudit4HospitalOperationCompleted == null)) {
                this.ClaimAudit4HospitalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClaimAudit4HospitalOperationCompleted);
            }
            this.InvokeAsync("ClaimAudit4Hospital", new object[] {
                        inClaimInfo,
                        inHasUpdate4Claim}, this.ClaimAudit4HospitalOperationCompleted, userState);
        }
        
        private void OnClaimAudit4HospitalOperationCompleted(object arg) {
            if ((this.ClaimAudit4HospitalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClaimAudit4HospitalCompleted(this, new ClaimAudit4HospitalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClaimSave4Hospital", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClaimSave4Hospital(string inClaimInfo, bool inHasUpdate4Claim) {
            object[] results = this.Invoke("ClaimSave4Hospital", new object[] {
                        inClaimInfo,
                        inHasUpdate4Claim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClaimSave4HospitalAsync(string inClaimInfo, bool inHasUpdate4Claim) {
            this.ClaimSave4HospitalAsync(inClaimInfo, inHasUpdate4Claim, null);
        }
        
        /// <remarks/>
        public void ClaimSave4HospitalAsync(string inClaimInfo, bool inHasUpdate4Claim, object userState) {
            if ((this.ClaimSave4HospitalOperationCompleted == null)) {
                this.ClaimSave4HospitalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClaimSave4HospitalOperationCompleted);
            }
            this.InvokeAsync("ClaimSave4Hospital", new object[] {
                        inClaimInfo,
                        inHasUpdate4Claim}, this.ClaimSave4HospitalOperationCompleted, userState);
        }
        
        private void OnClaimSave4HospitalOperationCompleted(object arg) {
            if ((this.ClaimSave4HospitalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClaimSave4HospitalCompleted(this, new ClaimSave4HospitalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClaimDelete4Hospital", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClaimDelete4Hospital(string inClaimID) {
            object[] results = this.Invoke("ClaimDelete4Hospital", new object[] {
                        inClaimID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClaimDelete4HospitalAsync(string inClaimID) {
            this.ClaimDelete4HospitalAsync(inClaimID, null);
        }
        
        /// <remarks/>
        public void ClaimDelete4HospitalAsync(string inClaimID, object userState) {
            if ((this.ClaimDelete4HospitalOperationCompleted == null)) {
                this.ClaimDelete4HospitalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClaimDelete4HospitalOperationCompleted);
            }
            this.InvokeAsync("ClaimDelete4Hospital", new object[] {
                        inClaimID}, this.ClaimDelete4HospitalOperationCompleted, userState);
        }
        
        private void OnClaimDelete4HospitalOperationCompleted(object arg) {
            if ((this.ClaimDelete4HospitalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClaimDelete4HospitalCompleted(this, new ClaimDelete4HospitalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFullTips", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFullTips(string inTipsCode) {
            object[] results = this.Invoke("GetFullTips", new object[] {
                        inTipsCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFullTipsAsync(string inTipsCode) {
            this.GetFullTipsAsync(inTipsCode, null);
        }
        
        /// <remarks/>
        public void GetFullTipsAsync(string inTipsCode, object userState) {
            if ((this.GetFullTipsOperationCompleted == null)) {
                this.GetFullTipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFullTipsOperationCompleted);
            }
            this.InvokeAsync("GetFullTips", new object[] {
                        inTipsCode}, this.GetFullTipsOperationCompleted, userState);
        }
        
        private void OnGetFullTipsOperationCompleted(object arg) {
            if ((this.GetFullTipsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFullTipsCompleted(this, new GetFullTipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelatedDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRelatedDetail(string inPatientIDStr, string inClaimID, string inRuleCode, string inRelatedString) {
            object[] results = this.Invoke("GetRelatedDetail", new object[] {
                        inPatientIDStr,
                        inClaimID,
                        inRuleCode,
                        inRelatedString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelatedDetailAsync(string inPatientIDStr, string inClaimID, string inRuleCode, string inRelatedString) {
            this.GetRelatedDetailAsync(inPatientIDStr, inClaimID, inRuleCode, inRelatedString, null);
        }
        
        /// <remarks/>
        public void GetRelatedDetailAsync(string inPatientIDStr, string inClaimID, string inRuleCode, string inRelatedString, object userState) {
            if ((this.GetRelatedDetailOperationCompleted == null)) {
                this.GetRelatedDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelatedDetailOperationCompleted);
            }
            this.InvokeAsync("GetRelatedDetail", new object[] {
                        inPatientIDStr,
                        inClaimID,
                        inRuleCode,
                        inRelatedString}, this.GetRelatedDetailOperationCompleted, userState);
        }
        
        private void OnGetRelatedDetailOperationCompleted(object arg) {
            if ((this.GetRelatedDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelatedDetailCompleted(this, new GetRelatedDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRuleNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRuleNames() {
            object[] results = this.Invoke("GetRuleNames", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRuleNamesAsync() {
            this.GetRuleNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetRuleNamesAsync(object userState) {
            if ((this.GetRuleNamesOperationCompleted == null)) {
                this.GetRuleNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRuleNamesOperationCompleted);
            }
            this.InvokeAsync("GetRuleNames", new object[0], this.GetRuleNamesOperationCompleted, userState);
        }
        
        private void OnGetRuleNamesOperationCompleted(object arg) {
            if ((this.GetRuleNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRuleNamesCompleted(this, new GetRuleNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLimitCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLimitCodes() {
            object[] results = this.Invoke("GetLimitCodes", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLimitCodesAsync() {
            this.GetLimitCodesAsync(null);
        }
        
        /// <remarks/>
        public void GetLimitCodesAsync(object userState) {
            if ((this.GetLimitCodesOperationCompleted == null)) {
                this.GetLimitCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLimitCodesOperationCompleted);
            }
            this.InvokeAsync("GetLimitCodes", new object[0], this.GetLimitCodesOperationCompleted, userState);
        }
        
        private void OnGetLimitCodesOperationCompleted(object arg) {
            if ((this.GetLimitCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLimitCodesCompleted(this, new GetLimitCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPutOnRecord4Hospital", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPutOnRecord4Hospital(int inType, string inCode, string inName, string inPatient_IDStr, string inApprovalNumber, string inStartDT, string inEndDT) {
            object[] results = this.Invoke("AddPutOnRecord4Hospital", new object[] {
                        inType,
                        inCode,
                        inName,
                        inPatient_IDStr,
                        inApprovalNumber,
                        inStartDT,
                        inEndDT});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPutOnRecord4HospitalAsync(int inType, string inCode, string inName, string inPatient_IDStr, string inApprovalNumber, string inStartDT, string inEndDT) {
            this.AddPutOnRecord4HospitalAsync(inType, inCode, inName, inPatient_IDStr, inApprovalNumber, inStartDT, inEndDT, null);
        }
        
        /// <remarks/>
        public void AddPutOnRecord4HospitalAsync(int inType, string inCode, string inName, string inPatient_IDStr, string inApprovalNumber, string inStartDT, string inEndDT, object userState) {
            if ((this.AddPutOnRecord4HospitalOperationCompleted == null)) {
                this.AddPutOnRecord4HospitalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPutOnRecord4HospitalOperationCompleted);
            }
            this.InvokeAsync("AddPutOnRecord4Hospital", new object[] {
                        inType,
                        inCode,
                        inName,
                        inPatient_IDStr,
                        inApprovalNumber,
                        inStartDT,
                        inEndDT}, this.AddPutOnRecord4HospitalOperationCompleted, userState);
        }
        
        private void OnAddPutOnRecord4HospitalOperationCompleted(object arg) {
            if ((this.AddPutOnRecord4HospitalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPutOnRecord4HospitalCompleted(this, new AddPutOnRecord4HospitalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePutOnRecord4Hospital", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeletePutOnRecord4Hospital(int inType, string inCode, string inPatient_IDStr) {
            object[] results = this.Invoke("DeletePutOnRecord4Hospital", new object[] {
                        inType,
                        inCode,
                        inPatient_IDStr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePutOnRecord4HospitalAsync(int inType, string inCode, string inPatient_IDStr) {
            this.DeletePutOnRecord4HospitalAsync(inType, inCode, inPatient_IDStr, null);
        }
        
        /// <remarks/>
        public void DeletePutOnRecord4HospitalAsync(int inType, string inCode, string inPatient_IDStr, object userState) {
            if ((this.DeletePutOnRecord4HospitalOperationCompleted == null)) {
                this.DeletePutOnRecord4HospitalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePutOnRecord4HospitalOperationCompleted);
            }
            this.InvokeAsync("DeletePutOnRecord4Hospital", new object[] {
                        inType,
                        inCode,
                        inPatient_IDStr}, this.DeletePutOnRecord4HospitalOperationCompleted, userState);
        }
        
        private void OnDeletePutOnRecord4HospitalOperationCompleted(object arg) {
            if ((this.DeletePutOnRecord4HospitalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePutOnRecord4HospitalCompleted(this, new DeletePutOnRecord4HospitalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDetail4Hospital", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteDetail4Hospital(string inClaimID, string inDetailID) {
            object[] results = this.Invoke("DeleteDetail4Hospital", new object[] {
                        inClaimID,
                        inDetailID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDetail4HospitalAsync(string inClaimID, string inDetailID) {
            this.DeleteDetail4HospitalAsync(inClaimID, inDetailID, null);
        }
        
        /// <remarks/>
        public void DeleteDetail4HospitalAsync(string inClaimID, string inDetailID, object userState) {
            if ((this.DeleteDetail4HospitalOperationCompleted == null)) {
                this.DeleteDetail4HospitalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDetail4HospitalOperationCompleted);
            }
            this.InvokeAsync("DeleteDetail4Hospital", new object[] {
                        inClaimID,
                        inDetailID}, this.DeleteDetail4HospitalOperationCompleted, userState);
        }
        
        private void OnDeleteDetail4HospitalOperationCompleted(object arg) {
            if ((this.DeleteDetail4HospitalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDetail4HospitalCompleted(this, new DeleteDetail4HospitalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuditCacheNotWithResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuditCacheNotWithResult(string inClaimID, string inRuleType) {
            object[] results = this.Invoke("AuditCacheNotWithResult", new object[] {
                        inClaimID,
                        inRuleType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuditCacheNotWithResultAsync(string inClaimID, string inRuleType) {
            this.AuditCacheNotWithResultAsync(inClaimID, inRuleType, null);
        }
        
        /// <remarks/>
        public void AuditCacheNotWithResultAsync(string inClaimID, string inRuleType, object userState) {
            if ((this.AuditCacheNotWithResultOperationCompleted == null)) {
                this.AuditCacheNotWithResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuditCacheNotWithResultOperationCompleted);
            }
            this.InvokeAsync("AuditCacheNotWithResult", new object[] {
                        inClaimID,
                        inRuleType}, this.AuditCacheNotWithResultOperationCompleted, userState);
        }
        
        private void OnAuditCacheNotWithResultOperationCompleted(object arg) {
            if ((this.AuditCacheNotWithResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuditCacheNotWithResultCompleted(this, new AuditCacheNotWithResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuditCacheWithResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuditCacheWithResult(string inClaimID) {
            object[] results = this.Invoke("AuditCacheWithResult", new object[] {
                        inClaimID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuditCacheWithResultAsync(string inClaimID) {
            this.AuditCacheWithResultAsync(inClaimID, null);
        }
        
        /// <remarks/>
        public void AuditCacheWithResultAsync(string inClaimID, object userState) {
            if ((this.AuditCacheWithResultOperationCompleted == null)) {
                this.AuditCacheWithResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuditCacheWithResultOperationCompleted);
            }
            this.InvokeAsync("AuditCacheWithResult", new object[] {
                        inClaimID}, this.AuditCacheWithResultOperationCompleted, userState);
        }
        
        private void OnAuditCacheWithResultOperationCompleted(object arg) {
            if ((this.AuditCacheWithResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuditCacheWithResultCompleted(this, new AuditCacheWithResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuditGetCostsResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuditGetCostsResult(string inClaimID) {
            object[] results = this.Invoke("AuditGetCostsResult", new object[] {
                        inClaimID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuditGetCostsResultAsync(string inClaimID) {
            this.AuditGetCostsResultAsync(inClaimID, null);
        }
        
        /// <remarks/>
        public void AuditGetCostsResultAsync(string inClaimID, object userState) {
            if ((this.AuditGetCostsResultOperationCompleted == null)) {
                this.AuditGetCostsResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuditGetCostsResultOperationCompleted);
            }
            this.InvokeAsync("AuditGetCostsResult", new object[] {
                        inClaimID}, this.AuditGetCostsResultOperationCompleted, userState);
        }
        
        private void OnAuditGetCostsResultOperationCompleted(object arg) {
            if ((this.AuditGetCostsResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuditGetCostsResultCompleted(this, new AuditGetCostsResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Helloworld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Helloworld() {
            object[] results = this.Invoke("Helloworld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloworldAsync() {
            this.HelloworldAsync(null);
        }
        
        /// <remarks/>
        public void HelloworldAsync(object userState) {
            if ((this.HelloworldOperationCompleted == null)) {
                this.HelloworldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloworldOperationCompleted);
            }
            this.InvokeAsync("Helloworld", new object[0], this.HelloworldOperationCompleted, userState);
        }
        
        private void OnHelloworldOperationCompleted(object arg) {
            if ((this.HelloworldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloworldCompleted(this, new HelloworldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetbillList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetbillList(string s_date, string e_date, string Patient_IDStr) {
            object[] results = this.Invoke("GetbillList", new object[] {
                        s_date,
                        e_date,
                        Patient_IDStr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetbillListAsync(string s_date, string e_date, string Patient_IDStr) {
            this.GetbillListAsync(s_date, e_date, Patient_IDStr, null);
        }
        
        /// <remarks/>
        public void GetbillListAsync(string s_date, string e_date, string Patient_IDStr, object userState) {
            if ((this.GetbillListOperationCompleted == null)) {
                this.GetbillListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetbillListOperationCompleted);
            }
            this.InvokeAsync("GetbillList", new object[] {
                        s_date,
                        e_date,
                        Patient_IDStr}, this.GetbillListOperationCompleted, userState);
        }
        
        private void OnGetbillListOperationCompleted(object arg) {
            if ((this.GetbillListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetbillListCompleted(this, new GetbillListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBillDetailList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBillDetailList(string inClaimID) {
            object[] results = this.Invoke("GetBillDetailList", new object[] {
                        inClaimID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillDetailListAsync(string inClaimID) {
            this.GetBillDetailListAsync(inClaimID, null);
        }
        
        /// <remarks/>
        public void GetBillDetailListAsync(string inClaimID, object userState) {
            if ((this.GetBillDetailListOperationCompleted == null)) {
                this.GetBillDetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillDetailListOperationCompleted);
            }
            this.InvokeAsync("GetBillDetailList", new object[] {
                        inClaimID}, this.GetBillDetailListOperationCompleted, userState);
        }
        
        private void OnGetBillDetailListOperationCompleted(object arg) {
            if ((this.GetBillDetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillDetailListCompleted(this, new GetBillDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCacheBillDetailList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCacheBillDetailList(string inClaimID) {
            object[] results = this.Invoke("GetCacheBillDetailList", new object[] {
                        inClaimID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCacheBillDetailListAsync(string inClaimID) {
            this.GetCacheBillDetailListAsync(inClaimID, null);
        }
        
        /// <remarks/>
        public void GetCacheBillDetailListAsync(string inClaimID, object userState) {
            if ((this.GetCacheBillDetailListOperationCompleted == null)) {
                this.GetCacheBillDetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCacheBillDetailListOperationCompleted);
            }
            this.InvokeAsync("GetCacheBillDetailList", new object[] {
                        inClaimID}, this.GetCacheBillDetailListOperationCompleted, userState);
        }
        
        private void OnGetCacheBillDetailListOperationCompleted(object arg) {
            if ((this.GetCacheBillDetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCacheBillDetailListCompleted(this, new GetCacheBillDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPutOnRecordList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPutOnRecordList(string inPatient_IDStr) {
            object[] results = this.Invoke("GetPutOnRecordList", new object[] {
                        inPatient_IDStr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPutOnRecordListAsync(string inPatient_IDStr) {
            this.GetPutOnRecordListAsync(inPatient_IDStr, null);
        }
        
        /// <remarks/>
        public void GetPutOnRecordListAsync(string inPatient_IDStr, object userState) {
            if ((this.GetPutOnRecordListOperationCompleted == null)) {
                this.GetPutOnRecordListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPutOnRecordListOperationCompleted);
            }
            this.InvokeAsync("GetPutOnRecordList", new object[] {
                        inPatient_IDStr}, this.GetPutOnRecordListOperationCompleted, userState);
        }
        
        private void OnGetPutOnRecordListOperationCompleted(object arg) {
            if ((this.GetPutOnRecordListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPutOnRecordListCompleted(this, new GetPutOnRecordListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResultTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetResultTypes() {
            object[] results = this.Invoke("GetResultTypes", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultTypesAsync() {
            this.GetResultTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetResultTypesAsync(object userState) {
            if ((this.GetResultTypesOperationCompleted == null)) {
                this.GetResultTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultTypesOperationCompleted);
            }
            this.InvokeAsync("GetResultTypes", new object[0], this.GetResultTypesOperationCompleted, userState);
        }
        
        private void OnGetResultTypesOperationCompleted(object arg) {
            if ((this.GetResultTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultTypesCompleted(this, new GetResultTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpDataHS_STATUS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpDataHS_STATUS(string inClaimID, string inHS_STATUS) {
            object[] results = this.Invoke("UpDataHS_STATUS", new object[] {
                        inClaimID,
                        inHS_STATUS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpDataHS_STATUSAsync(string inClaimID, string inHS_STATUS) {
            this.UpDataHS_STATUSAsync(inClaimID, inHS_STATUS, null);
        }
        
        /// <remarks/>
        public void UpDataHS_STATUSAsync(string inClaimID, string inHS_STATUS, object userState) {
            if ((this.UpDataHS_STATUSOperationCompleted == null)) {
                this.UpDataHS_STATUSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpDataHS_STATUSOperationCompleted);
            }
            this.InvokeAsync("UpDataHS_STATUS", new object[] {
                        inClaimID,
                        inHS_STATUS}, this.UpDataHS_STATUSOperationCompleted, userState);
        }
        
        private void OnUpDataHS_STATUSOperationCompleted(object arg) {
            if ((this.UpDataHS_STATUSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpDataHS_STATUSCompleted(this, new UpDataHS_STATUSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAppSettings(string inKeyName) {
            object[] results = this.Invoke("GetAppSettings", new object[] {
                        inKeyName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppSettingsAsync(string inKeyName) {
            this.GetAppSettingsAsync(inKeyName, null);
        }
        
        /// <remarks/>
        public void GetAppSettingsAsync(string inKeyName, object userState) {
            if ((this.GetAppSettingsOperationCompleted == null)) {
                this.GetAppSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppSettingsOperationCompleted);
            }
            this.InvokeAsync("GetAppSettings", new object[] {
                        inKeyName}, this.GetAppSettingsOperationCompleted, userState);
        }
        
        private void OnGetAppSettingsOperationCompleted(object arg) {
            if ((this.GetAppSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppSettingsCompleted(this, new GetAppSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpDataDetail_ZZZ_Flag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpDataDetail_ZZZ_Flag(string inClaimID, string inDetailID, string inZZZ_Flag) {
            object[] results = this.Invoke("UpDataDetail_ZZZ_Flag", new object[] {
                        inClaimID,
                        inDetailID,
                        inZZZ_Flag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpDataDetail_ZZZ_FlagAsync(string inClaimID, string inDetailID, string inZZZ_Flag) {
            this.UpDataDetail_ZZZ_FlagAsync(inClaimID, inDetailID, inZZZ_Flag, null);
        }
        
        /// <remarks/>
        public void UpDataDetail_ZZZ_FlagAsync(string inClaimID, string inDetailID, string inZZZ_Flag, object userState) {
            if ((this.UpDataDetail_ZZZ_FlagOperationCompleted == null)) {
                this.UpDataDetail_ZZZ_FlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpDataDetail_ZZZ_FlagOperationCompleted);
            }
            this.InvokeAsync("UpDataDetail_ZZZ_Flag", new object[] {
                        inClaimID,
                        inDetailID,
                        inZZZ_Flag}, this.UpDataDetail_ZZZ_FlagOperationCompleted, userState);
        }
        
        private void OnUpDataDetail_ZZZ_FlagOperationCompleted(object arg) {
            if ((this.UpDataDetail_ZZZ_FlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpDataDetail_ZZZ_FlagCompleted(this, new UpDataDetail_ZZZ_FlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDATE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDATE() {
            object[] results = this.Invoke("GetDATE", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDATEAsync() {
            this.GetDATEAsync(null);
        }
        
        /// <remarks/>
        public void GetDATEAsync(object userState) {
            if ((this.GetDATEOperationCompleted == null)) {
                this.GetDATEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDATEOperationCompleted);
            }
            this.InvokeAsync("GetDATE", new object[0], this.GetDATEOperationCompleted, userState);
        }
        
        private void OnGetDATEOperationCompleted(object arg) {
            if ((this.GetDATECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDATECompleted(this, new GetDATECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteNoAccountingRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteNoAccountingRecord(string inClaimID) {
            object[] results = this.Invoke("DeleteNoAccountingRecord", new object[] {
                        inClaimID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteNoAccountingRecordAsync(string inClaimID) {
            this.DeleteNoAccountingRecordAsync(inClaimID, null);
        }
        
        /// <remarks/>
        public void DeleteNoAccountingRecordAsync(string inClaimID, object userState) {
            if ((this.DeleteNoAccountingRecordOperationCompleted == null)) {
                this.DeleteNoAccountingRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteNoAccountingRecordOperationCompleted);
            }
            this.InvokeAsync("DeleteNoAccountingRecord", new object[] {
                        inClaimID}, this.DeleteNoAccountingRecordOperationCompleted, userState);
        }
        
        private void OnDeleteNoAccountingRecordOperationCompleted(object arg) {
            if ((this.DeleteNoAccountingRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteNoAccountingRecordCompleted(this, new DeleteNoAccountingRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Getstdcode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Getstdcode(string client_code) {
            object[] results = this.Invoke("Getstdcode", new object[] {
                        client_code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetstdcodeAsync(string client_code) {
            this.GetstdcodeAsync(client_code, null);
        }
        
        /// <remarks/>
        public void GetstdcodeAsync(string client_code, object userState) {
            if ((this.GetstdcodeOperationCompleted == null)) {
                this.GetstdcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetstdcodeOperationCompleted);
            }
            this.InvokeAsync("Getstdcode", new object[] {
                        client_code}, this.GetstdcodeOperationCompleted, userState);
        }
        
        private void OnGetstdcodeOperationCompleted(object arg) {
            if ((this.GetstdcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetstdcodeCompleted(this, new GetstdcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void ClaimAudit4HospitalCompletedEventHandler(object sender, ClaimAudit4HospitalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClaimAudit4HospitalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClaimAudit4HospitalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void ClaimSave4HospitalCompletedEventHandler(object sender, ClaimSave4HospitalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClaimSave4HospitalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClaimSave4HospitalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void ClaimDelete4HospitalCompletedEventHandler(object sender, ClaimDelete4HospitalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClaimDelete4HospitalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClaimDelete4HospitalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetFullTipsCompletedEventHandler(object sender, GetFullTipsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFullTipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFullTipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetRelatedDetailCompletedEventHandler(object sender, GetRelatedDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelatedDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelatedDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetRuleNamesCompletedEventHandler(object sender, GetRuleNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRuleNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRuleNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetLimitCodesCompletedEventHandler(object sender, GetLimitCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLimitCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLimitCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void AddPutOnRecord4HospitalCompletedEventHandler(object sender, AddPutOnRecord4HospitalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPutOnRecord4HospitalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPutOnRecord4HospitalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void DeletePutOnRecord4HospitalCompletedEventHandler(object sender, DeletePutOnRecord4HospitalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePutOnRecord4HospitalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePutOnRecord4HospitalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void DeleteDetail4HospitalCompletedEventHandler(object sender, DeleteDetail4HospitalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDetail4HospitalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDetail4HospitalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void AuditCacheNotWithResultCompletedEventHandler(object sender, AuditCacheNotWithResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditCacheNotWithResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuditCacheNotWithResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void AuditCacheWithResultCompletedEventHandler(object sender, AuditCacheWithResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditCacheWithResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuditCacheWithResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void AuditGetCostsResultCompletedEventHandler(object sender, AuditGetCostsResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditGetCostsResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuditGetCostsResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void HelloworldCompletedEventHandler(object sender, HelloworldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloworldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloworldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetbillListCompletedEventHandler(object sender, GetbillListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetbillListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetbillListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetBillDetailListCompletedEventHandler(object sender, GetBillDetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillDetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillDetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetCacheBillDetailListCompletedEventHandler(object sender, GetCacheBillDetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCacheBillDetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCacheBillDetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetPutOnRecordListCompletedEventHandler(object sender, GetPutOnRecordListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPutOnRecordListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPutOnRecordListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetResultTypesCompletedEventHandler(object sender, GetResultTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void UpDataHS_STATUSCompletedEventHandler(object sender, UpDataHS_STATUSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpDataHS_STATUSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpDataHS_STATUSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetAppSettingsCompletedEventHandler(object sender, GetAppSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void UpDataDetail_ZZZ_FlagCompletedEventHandler(object sender, UpDataDetail_ZZZ_FlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpDataDetail_ZZZ_FlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpDataDetail_ZZZ_FlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetDATECompletedEventHandler(object sender, GetDATECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDATECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDATECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void DeleteNoAccountingRecordCompletedEventHandler(object sender, DeleteNoAccountingRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteNoAccountingRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteNoAccountingRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetstdcodeCompletedEventHandler(object sender, GetstdcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetstdcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetstdcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591