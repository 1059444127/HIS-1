//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4927
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ts_Yk_ReportView {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Dataset2")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Dataset2 : global::System.Data.DataSet {
        
        private 采购入库单DataTable table采购入库单;
        
        private 普通入库单DataTable table普通入库单;
        
        private 药品申请单DataTable table药品申请单;
        
        private 药品出库单DataTable table药品出库单;
        
        private 药品调价单DataTable table药品调价单;
        
        private 报损报溢单DataTable table报损报溢单;
        
        private 药品盘点单DataTable table药品盘点单;
        
        private 药品采购计划DataTable table药品采购计划;
        
        private 进销存情况表DataTable table进销存情况表;
        
        private 付款情况表DataTable table付款情况表;
        
        private 保管明细帐DataTable table保管明细帐;
        
        private 库存情况表DataTable table库存情况表;
        
        private 药品失效报警DataTable table药品失效报警;
        
        private 药品高低储报警DataTable table药品高低储报警;
        
        private 进出货排名统计DataTable table进出货排名统计;
        
        private 配发药工作量DataTable table配发药工作量;
        
        private 病人处方清单DataTable table病人处方清单;
        
        private 发药明细单DataTable table发药明细单;
        
        private 药品汇总统计DataTable table药品汇总统计;
        
        private 处方统计DataTable table处方统计;
        
        private 收费发药处方统计DataTable table收费发药处方统计;
        
        private 单据汇总统计DataTable table单据汇总统计;
        
        private 贵重药品统计DataTable table贵重药品统计;
        
        private 住院药品摆药明细DataTable table住院药品摆药明细;
        
        private 发药配药工作量统计DataTable table发药配药工作量统计;
        
        private 门诊精麻处方单DataTable table门诊精麻处方单;
        
        private 精二DataTable table精二;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Dataset2() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Dataset2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["采购入库单"] != null)) {
                    base.Tables.Add(new 采购入库单DataTable(ds.Tables["采购入库单"]));
                }
                if ((ds.Tables["普通入库单"] != null)) {
                    base.Tables.Add(new 普通入库单DataTable(ds.Tables["普通入库单"]));
                }
                if ((ds.Tables["药品申请单"] != null)) {
                    base.Tables.Add(new 药品申请单DataTable(ds.Tables["药品申请单"]));
                }
                if ((ds.Tables["药品出库单"] != null)) {
                    base.Tables.Add(new 药品出库单DataTable(ds.Tables["药品出库单"]));
                }
                if ((ds.Tables["药品调价单"] != null)) {
                    base.Tables.Add(new 药品调价单DataTable(ds.Tables["药品调价单"]));
                }
                if ((ds.Tables["报损报溢单"] != null)) {
                    base.Tables.Add(new 报损报溢单DataTable(ds.Tables["报损报溢单"]));
                }
                if ((ds.Tables["药品盘点单"] != null)) {
                    base.Tables.Add(new 药品盘点单DataTable(ds.Tables["药品盘点单"]));
                }
                if ((ds.Tables["药品采购计划"] != null)) {
                    base.Tables.Add(new 药品采购计划DataTable(ds.Tables["药品采购计划"]));
                }
                if ((ds.Tables["进销存情况表"] != null)) {
                    base.Tables.Add(new 进销存情况表DataTable(ds.Tables["进销存情况表"]));
                }
                if ((ds.Tables["付款情况表"] != null)) {
                    base.Tables.Add(new 付款情况表DataTable(ds.Tables["付款情况表"]));
                }
                if ((ds.Tables["保管明细帐"] != null)) {
                    base.Tables.Add(new 保管明细帐DataTable(ds.Tables["保管明细帐"]));
                }
                if ((ds.Tables["库存情况表"] != null)) {
                    base.Tables.Add(new 库存情况表DataTable(ds.Tables["库存情况表"]));
                }
                if ((ds.Tables["药品失效报警"] != null)) {
                    base.Tables.Add(new 药品失效报警DataTable(ds.Tables["药品失效报警"]));
                }
                if ((ds.Tables["药品高低储报警"] != null)) {
                    base.Tables.Add(new 药品高低储报警DataTable(ds.Tables["药品高低储报警"]));
                }
                if ((ds.Tables["进出货排名统计"] != null)) {
                    base.Tables.Add(new 进出货排名统计DataTable(ds.Tables["进出货排名统计"]));
                }
                if ((ds.Tables["配发药工作量"] != null)) {
                    base.Tables.Add(new 配发药工作量DataTable(ds.Tables["配发药工作量"]));
                }
                if ((ds.Tables["病人处方清单"] != null)) {
                    base.Tables.Add(new 病人处方清单DataTable(ds.Tables["病人处方清单"]));
                }
                if ((ds.Tables["发药明细单"] != null)) {
                    base.Tables.Add(new 发药明细单DataTable(ds.Tables["发药明细单"]));
                }
                if ((ds.Tables["药品汇总统计"] != null)) {
                    base.Tables.Add(new 药品汇总统计DataTable(ds.Tables["药品汇总统计"]));
                }
                if ((ds.Tables["处方统计"] != null)) {
                    base.Tables.Add(new 处方统计DataTable(ds.Tables["处方统计"]));
                }
                if ((ds.Tables["收费发药处方统计"] != null)) {
                    base.Tables.Add(new 收费发药处方统计DataTable(ds.Tables["收费发药处方统计"]));
                }
                if ((ds.Tables["单据汇总统计"] != null)) {
                    base.Tables.Add(new 单据汇总统计DataTable(ds.Tables["单据汇总统计"]));
                }
                if ((ds.Tables["贵重药品统计"] != null)) {
                    base.Tables.Add(new 贵重药品统计DataTable(ds.Tables["贵重药品统计"]));
                }
                if ((ds.Tables["住院药品摆药明细"] != null)) {
                    base.Tables.Add(new 住院药品摆药明细DataTable(ds.Tables["住院药品摆药明细"]));
                }
                if ((ds.Tables["发药配药工作量统计"] != null)) {
                    base.Tables.Add(new 发药配药工作量统计DataTable(ds.Tables["发药配药工作量统计"]));
                }
                if ((ds.Tables["门诊精麻处方单"] != null)) {
                    base.Tables.Add(new 门诊精麻处方单DataTable(ds.Tables["门诊精麻处方单"]));
                }
                if ((ds.Tables["精二"] != null)) {
                    base.Tables.Add(new 精二DataTable(ds.Tables["精二"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 采购入库单DataTable 采购入库单 {
            get {
                return this.table采购入库单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 普通入库单DataTable 普通入库单 {
            get {
                return this.table普通入库单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品申请单DataTable 药品申请单 {
            get {
                return this.table药品申请单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品出库单DataTable 药品出库单 {
            get {
                return this.table药品出库单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品调价单DataTable 药品调价单 {
            get {
                return this.table药品调价单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 报损报溢单DataTable 报损报溢单 {
            get {
                return this.table报损报溢单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品盘点单DataTable 药品盘点单 {
            get {
                return this.table药品盘点单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品采购计划DataTable 药品采购计划 {
            get {
                return this.table药品采购计划;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 进销存情况表DataTable 进销存情况表 {
            get {
                return this.table进销存情况表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 付款情况表DataTable 付款情况表 {
            get {
                return this.table付款情况表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 保管明细帐DataTable 保管明细帐 {
            get {
                return this.table保管明细帐;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 库存情况表DataTable 库存情况表 {
            get {
                return this.table库存情况表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品失效报警DataTable 药品失效报警 {
            get {
                return this.table药品失效报警;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品高低储报警DataTable 药品高低储报警 {
            get {
                return this.table药品高低储报警;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 进出货排名统计DataTable 进出货排名统计 {
            get {
                return this.table进出货排名统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 配发药工作量DataTable 配发药工作量 {
            get {
                return this.table配发药工作量;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 病人处方清单DataTable 病人处方清单 {
            get {
                return this.table病人处方清单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 发药明细单DataTable 发药明细单 {
            get {
                return this.table发药明细单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品汇总统计DataTable 药品汇总统计 {
            get {
                return this.table药品汇总统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 处方统计DataTable 处方统计 {
            get {
                return this.table处方统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 收费发药处方统计DataTable 收费发药处方统计 {
            get {
                return this.table收费发药处方统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 单据汇总统计DataTable 单据汇总统计 {
            get {
                return this.table单据汇总统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 贵重药品统计DataTable 贵重药品统计 {
            get {
                return this.table贵重药品统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 住院药品摆药明细DataTable 住院药品摆药明细 {
            get {
                return this.table住院药品摆药明细;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 发药配药工作量统计DataTable 发药配药工作量统计 {
            get {
                return this.table发药配药工作量统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 门诊精麻处方单DataTable 门诊精麻处方单 {
            get {
                return this.table门诊精麻处方单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 精二DataTable 精二 {
            get {
                return this.table精二;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Dataset2 cln = ((Dataset2)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["采购入库单"] != null)) {
                    base.Tables.Add(new 采购入库单DataTable(ds.Tables["采购入库单"]));
                }
                if ((ds.Tables["普通入库单"] != null)) {
                    base.Tables.Add(new 普通入库单DataTable(ds.Tables["普通入库单"]));
                }
                if ((ds.Tables["药品申请单"] != null)) {
                    base.Tables.Add(new 药品申请单DataTable(ds.Tables["药品申请单"]));
                }
                if ((ds.Tables["药品出库单"] != null)) {
                    base.Tables.Add(new 药品出库单DataTable(ds.Tables["药品出库单"]));
                }
                if ((ds.Tables["药品调价单"] != null)) {
                    base.Tables.Add(new 药品调价单DataTable(ds.Tables["药品调价单"]));
                }
                if ((ds.Tables["报损报溢单"] != null)) {
                    base.Tables.Add(new 报损报溢单DataTable(ds.Tables["报损报溢单"]));
                }
                if ((ds.Tables["药品盘点单"] != null)) {
                    base.Tables.Add(new 药品盘点单DataTable(ds.Tables["药品盘点单"]));
                }
                if ((ds.Tables["药品采购计划"] != null)) {
                    base.Tables.Add(new 药品采购计划DataTable(ds.Tables["药品采购计划"]));
                }
                if ((ds.Tables["进销存情况表"] != null)) {
                    base.Tables.Add(new 进销存情况表DataTable(ds.Tables["进销存情况表"]));
                }
                if ((ds.Tables["付款情况表"] != null)) {
                    base.Tables.Add(new 付款情况表DataTable(ds.Tables["付款情况表"]));
                }
                if ((ds.Tables["保管明细帐"] != null)) {
                    base.Tables.Add(new 保管明细帐DataTable(ds.Tables["保管明细帐"]));
                }
                if ((ds.Tables["库存情况表"] != null)) {
                    base.Tables.Add(new 库存情况表DataTable(ds.Tables["库存情况表"]));
                }
                if ((ds.Tables["药品失效报警"] != null)) {
                    base.Tables.Add(new 药品失效报警DataTable(ds.Tables["药品失效报警"]));
                }
                if ((ds.Tables["药品高低储报警"] != null)) {
                    base.Tables.Add(new 药品高低储报警DataTable(ds.Tables["药品高低储报警"]));
                }
                if ((ds.Tables["进出货排名统计"] != null)) {
                    base.Tables.Add(new 进出货排名统计DataTable(ds.Tables["进出货排名统计"]));
                }
                if ((ds.Tables["配发药工作量"] != null)) {
                    base.Tables.Add(new 配发药工作量DataTable(ds.Tables["配发药工作量"]));
                }
                if ((ds.Tables["病人处方清单"] != null)) {
                    base.Tables.Add(new 病人处方清单DataTable(ds.Tables["病人处方清单"]));
                }
                if ((ds.Tables["发药明细单"] != null)) {
                    base.Tables.Add(new 发药明细单DataTable(ds.Tables["发药明细单"]));
                }
                if ((ds.Tables["药品汇总统计"] != null)) {
                    base.Tables.Add(new 药品汇总统计DataTable(ds.Tables["药品汇总统计"]));
                }
                if ((ds.Tables["处方统计"] != null)) {
                    base.Tables.Add(new 处方统计DataTable(ds.Tables["处方统计"]));
                }
                if ((ds.Tables["收费发药处方统计"] != null)) {
                    base.Tables.Add(new 收费发药处方统计DataTable(ds.Tables["收费发药处方统计"]));
                }
                if ((ds.Tables["单据汇总统计"] != null)) {
                    base.Tables.Add(new 单据汇总统计DataTable(ds.Tables["单据汇总统计"]));
                }
                if ((ds.Tables["贵重药品统计"] != null)) {
                    base.Tables.Add(new 贵重药品统计DataTable(ds.Tables["贵重药品统计"]));
                }
                if ((ds.Tables["住院药品摆药明细"] != null)) {
                    base.Tables.Add(new 住院药品摆药明细DataTable(ds.Tables["住院药品摆药明细"]));
                }
                if ((ds.Tables["发药配药工作量统计"] != null)) {
                    base.Tables.Add(new 发药配药工作量统计DataTable(ds.Tables["发药配药工作量统计"]));
                }
                if ((ds.Tables["门诊精麻处方单"] != null)) {
                    base.Tables.Add(new 门诊精麻处方单DataTable(ds.Tables["门诊精麻处方单"]));
                }
                if ((ds.Tables["精二"] != null)) {
                    base.Tables.Add(new 精二DataTable(ds.Tables["精二"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table采购入库单 = ((采购入库单DataTable)(base.Tables["采购入库单"]));
            if ((initTable == true)) {
                if ((this.table采购入库单 != null)) {
                    this.table采购入库单.InitVars();
                }
            }
            this.table普通入库单 = ((普通入库单DataTable)(base.Tables["普通入库单"]));
            if ((initTable == true)) {
                if ((this.table普通入库单 != null)) {
                    this.table普通入库单.InitVars();
                }
            }
            this.table药品申请单 = ((药品申请单DataTable)(base.Tables["药品申请单"]));
            if ((initTable == true)) {
                if ((this.table药品申请单 != null)) {
                    this.table药品申请单.InitVars();
                }
            }
            this.table药品出库单 = ((药品出库单DataTable)(base.Tables["药品出库单"]));
            if ((initTable == true)) {
                if ((this.table药品出库单 != null)) {
                    this.table药品出库单.InitVars();
                }
            }
            this.table药品调价单 = ((药品调价单DataTable)(base.Tables["药品调价单"]));
            if ((initTable == true)) {
                if ((this.table药品调价单 != null)) {
                    this.table药品调价单.InitVars();
                }
            }
            this.table报损报溢单 = ((报损报溢单DataTable)(base.Tables["报损报溢单"]));
            if ((initTable == true)) {
                if ((this.table报损报溢单 != null)) {
                    this.table报损报溢单.InitVars();
                }
            }
            this.table药品盘点单 = ((药品盘点单DataTable)(base.Tables["药品盘点单"]));
            if ((initTable == true)) {
                if ((this.table药品盘点单 != null)) {
                    this.table药品盘点单.InitVars();
                }
            }
            this.table药品采购计划 = ((药品采购计划DataTable)(base.Tables["药品采购计划"]));
            if ((initTable == true)) {
                if ((this.table药品采购计划 != null)) {
                    this.table药品采购计划.InitVars();
                }
            }
            this.table进销存情况表 = ((进销存情况表DataTable)(base.Tables["进销存情况表"]));
            if ((initTable == true)) {
                if ((this.table进销存情况表 != null)) {
                    this.table进销存情况表.InitVars();
                }
            }
            this.table付款情况表 = ((付款情况表DataTable)(base.Tables["付款情况表"]));
            if ((initTable == true)) {
                if ((this.table付款情况表 != null)) {
                    this.table付款情况表.InitVars();
                }
            }
            this.table保管明细帐 = ((保管明细帐DataTable)(base.Tables["保管明细帐"]));
            if ((initTable == true)) {
                if ((this.table保管明细帐 != null)) {
                    this.table保管明细帐.InitVars();
                }
            }
            this.table库存情况表 = ((库存情况表DataTable)(base.Tables["库存情况表"]));
            if ((initTable == true)) {
                if ((this.table库存情况表 != null)) {
                    this.table库存情况表.InitVars();
                }
            }
            this.table药品失效报警 = ((药品失效报警DataTable)(base.Tables["药品失效报警"]));
            if ((initTable == true)) {
                if ((this.table药品失效报警 != null)) {
                    this.table药品失效报警.InitVars();
                }
            }
            this.table药品高低储报警 = ((药品高低储报警DataTable)(base.Tables["药品高低储报警"]));
            if ((initTable == true)) {
                if ((this.table药品高低储报警 != null)) {
                    this.table药品高低储报警.InitVars();
                }
            }
            this.table进出货排名统计 = ((进出货排名统计DataTable)(base.Tables["进出货排名统计"]));
            if ((initTable == true)) {
                if ((this.table进出货排名统计 != null)) {
                    this.table进出货排名统计.InitVars();
                }
            }
            this.table配发药工作量 = ((配发药工作量DataTable)(base.Tables["配发药工作量"]));
            if ((initTable == true)) {
                if ((this.table配发药工作量 != null)) {
                    this.table配发药工作量.InitVars();
                }
            }
            this.table病人处方清单 = ((病人处方清单DataTable)(base.Tables["病人处方清单"]));
            if ((initTable == true)) {
                if ((this.table病人处方清单 != null)) {
                    this.table病人处方清单.InitVars();
                }
            }
            this.table发药明细单 = ((发药明细单DataTable)(base.Tables["发药明细单"]));
            if ((initTable == true)) {
                if ((this.table发药明细单 != null)) {
                    this.table发药明细单.InitVars();
                }
            }
            this.table药品汇总统计 = ((药品汇总统计DataTable)(base.Tables["药品汇总统计"]));
            if ((initTable == true)) {
                if ((this.table药品汇总统计 != null)) {
                    this.table药品汇总统计.InitVars();
                }
            }
            this.table处方统计 = ((处方统计DataTable)(base.Tables["处方统计"]));
            if ((initTable == true)) {
                if ((this.table处方统计 != null)) {
                    this.table处方统计.InitVars();
                }
            }
            this.table收费发药处方统计 = ((收费发药处方统计DataTable)(base.Tables["收费发药处方统计"]));
            if ((initTable == true)) {
                if ((this.table收费发药处方统计 != null)) {
                    this.table收费发药处方统计.InitVars();
                }
            }
            this.table单据汇总统计 = ((单据汇总统计DataTable)(base.Tables["单据汇总统计"]));
            if ((initTable == true)) {
                if ((this.table单据汇总统计 != null)) {
                    this.table单据汇总统计.InitVars();
                }
            }
            this.table贵重药品统计 = ((贵重药品统计DataTable)(base.Tables["贵重药品统计"]));
            if ((initTable == true)) {
                if ((this.table贵重药品统计 != null)) {
                    this.table贵重药品统计.InitVars();
                }
            }
            this.table住院药品摆药明细 = ((住院药品摆药明细DataTable)(base.Tables["住院药品摆药明细"]));
            if ((initTable == true)) {
                if ((this.table住院药品摆药明细 != null)) {
                    this.table住院药品摆药明细.InitVars();
                }
            }
            this.table发药配药工作量统计 = ((发药配药工作量统计DataTable)(base.Tables["发药配药工作量统计"]));
            if ((initTable == true)) {
                if ((this.table发药配药工作量统计 != null)) {
                    this.table发药配药工作量统计.InitVars();
                }
            }
            this.table门诊精麻处方单 = ((门诊精麻处方单DataTable)(base.Tables["门诊精麻处方单"]));
            if ((initTable == true)) {
                if ((this.table门诊精麻处方单 != null)) {
                    this.table门诊精麻处方单.InitVars();
                }
            }
            this.table精二 = ((精二DataTable)(base.Tables["精二"]));
            if ((initTable == true)) {
                if ((this.table精二 != null)) {
                    this.table精二.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Dataset2";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Dataset2.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("en-US");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table采购入库单 = new 采购入库单DataTable();
            base.Tables.Add(this.table采购入库单);
            this.table普通入库单 = new 普通入库单DataTable();
            base.Tables.Add(this.table普通入库单);
            this.table药品申请单 = new 药品申请单DataTable();
            base.Tables.Add(this.table药品申请单);
            this.table药品出库单 = new 药品出库单DataTable();
            base.Tables.Add(this.table药品出库单);
            this.table药品调价单 = new 药品调价单DataTable();
            base.Tables.Add(this.table药品调价单);
            this.table报损报溢单 = new 报损报溢单DataTable();
            base.Tables.Add(this.table报损报溢单);
            this.table药品盘点单 = new 药品盘点单DataTable();
            base.Tables.Add(this.table药品盘点单);
            this.table药品采购计划 = new 药品采购计划DataTable();
            base.Tables.Add(this.table药品采购计划);
            this.table进销存情况表 = new 进销存情况表DataTable();
            base.Tables.Add(this.table进销存情况表);
            this.table付款情况表 = new 付款情况表DataTable();
            base.Tables.Add(this.table付款情况表);
            this.table保管明细帐 = new 保管明细帐DataTable();
            base.Tables.Add(this.table保管明细帐);
            this.table库存情况表 = new 库存情况表DataTable();
            base.Tables.Add(this.table库存情况表);
            this.table药品失效报警 = new 药品失效报警DataTable();
            base.Tables.Add(this.table药品失效报警);
            this.table药品高低储报警 = new 药品高低储报警DataTable();
            base.Tables.Add(this.table药品高低储报警);
            this.table进出货排名统计 = new 进出货排名统计DataTable();
            base.Tables.Add(this.table进出货排名统计);
            this.table配发药工作量 = new 配发药工作量DataTable();
            base.Tables.Add(this.table配发药工作量);
            this.table病人处方清单 = new 病人处方清单DataTable();
            base.Tables.Add(this.table病人处方清单);
            this.table发药明细单 = new 发药明细单DataTable();
            base.Tables.Add(this.table发药明细单);
            this.table药品汇总统计 = new 药品汇总统计DataTable();
            base.Tables.Add(this.table药品汇总统计);
            this.table处方统计 = new 处方统计DataTable();
            base.Tables.Add(this.table处方统计);
            this.table收费发药处方统计 = new 收费发药处方统计DataTable();
            base.Tables.Add(this.table收费发药处方统计);
            this.table单据汇总统计 = new 单据汇总统计DataTable();
            base.Tables.Add(this.table单据汇总统计);
            this.table贵重药品统计 = new 贵重药品统计DataTable();
            base.Tables.Add(this.table贵重药品统计);
            this.table住院药品摆药明细 = new 住院药品摆药明细DataTable();
            base.Tables.Add(this.table住院药品摆药明细);
            this.table发药配药工作量统计 = new 发药配药工作量统计DataTable();
            base.Tables.Add(this.table发药配药工作量统计);
            this.table门诊精麻处方单 = new 门诊精麻处方单DataTable();
            base.Tables.Add(this.table门诊精麻处方单);
            this.table精二 = new 精二DataTable();
            base.Tables.Add(this.table精二);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize采购入库单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize普通入库单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品申请单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品出库单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品调价单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize报损报溢单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品盘点单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品采购计划() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize进销存情况表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize付款情况表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize保管明细帐() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize库存情况表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品失效报警() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品高低储报警() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize进出货排名统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize配发药工作量() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize病人处方清单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize发药明细单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品汇总统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize处方统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize收费发药处方统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize单据汇总统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize贵重药品统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize住院药品摆药明细() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize发药配药工作量统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize门诊精麻处方单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize精二() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Dataset2 ds = new Dataset2();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void 采购入库单RowChangeEventHandler(object sender, 采购入库单RowChangeEvent e);
        
        public delegate void 普通入库单RowChangeEventHandler(object sender, 普通入库单RowChangeEvent e);
        
        public delegate void 药品申请单RowChangeEventHandler(object sender, 药品申请单RowChangeEvent e);
        
        public delegate void 药品出库单RowChangeEventHandler(object sender, 药品出库单RowChangeEvent e);
        
        public delegate void 药品调价单RowChangeEventHandler(object sender, 药品调价单RowChangeEvent e);
        
        public delegate void 报损报溢单RowChangeEventHandler(object sender, 报损报溢单RowChangeEvent e);
        
        public delegate void 药品盘点单RowChangeEventHandler(object sender, 药品盘点单RowChangeEvent e);
        
        public delegate void 药品采购计划RowChangeEventHandler(object sender, 药品采购计划RowChangeEvent e);
        
        public delegate void 进销存情况表RowChangeEventHandler(object sender, 进销存情况表RowChangeEvent e);
        
        public delegate void 付款情况表RowChangeEventHandler(object sender, 付款情况表RowChangeEvent e);
        
        public delegate void 保管明细帐RowChangeEventHandler(object sender, 保管明细帐RowChangeEvent e);
        
        public delegate void 库存情况表RowChangeEventHandler(object sender, 库存情况表RowChangeEvent e);
        
        public delegate void 药品失效报警RowChangeEventHandler(object sender, 药品失效报警RowChangeEvent e);
        
        public delegate void 药品高低储报警RowChangeEventHandler(object sender, 药品高低储报警RowChangeEvent e);
        
        public delegate void 进出货排名统计RowChangeEventHandler(object sender, 进出货排名统计RowChangeEvent e);
        
        public delegate void 配发药工作量RowChangeEventHandler(object sender, 配发药工作量RowChangeEvent e);
        
        public delegate void 病人处方清单RowChangeEventHandler(object sender, 病人处方清单RowChangeEvent e);
        
        public delegate void 发药明细单RowChangeEventHandler(object sender, 发药明细单RowChangeEvent e);
        
        public delegate void 药品汇总统计RowChangeEventHandler(object sender, 药品汇总统计RowChangeEvent e);
        
        public delegate void 处方统计RowChangeEventHandler(object sender, 处方统计RowChangeEvent e);
        
        public delegate void 收费发药处方统计RowChangeEventHandler(object sender, 收费发药处方统计RowChangeEvent e);
        
        public delegate void 单据汇总统计RowChangeEventHandler(object sender, 单据汇总统计RowChangeEvent e);
        
        public delegate void 贵重药品统计RowChangeEventHandler(object sender, 贵重药品统计RowChangeEvent e);
        
        public delegate void 住院药品摆药明细RowChangeEventHandler(object sender, 住院药品摆药明细RowChangeEvent e);
        
        public delegate void 发药配药工作量统计RowChangeEventHandler(object sender, 发药配药工作量统计RowChangeEvent e);
        
        public delegate void 门诊精麻处方单RowChangeEventHandler(object sender, 门诊精麻处方单RowChangeEvent e);
        
        public delegate void 精二RowChangeEventHandler(object sender, 精二RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 采购入库单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnypkl;
            
            private global::System.Data.DataColumn columnjhj;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnjlce;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnkwmc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 采购入库单DataTable() {
                this.TableName = "采购入库单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 采购入库单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 采购入库单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypklColumn {
                get {
                    return this.columnypkl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjColumn {
                get {
                    return this.columnjhj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 采购入库单Row this[int index] {
                get {
                    return ((采购入库单Row)(this.Rows[index]));
                }
            }
            
            public event 采购入库单RowChangeEventHandler 采购入库单RowChanging;
            
            public event 采购入库单RowChangeEventHandler 采购入库单RowChanged;
            
            public event 采购入库单RowChangeEventHandler 采购入库单RowDeleting;
            
            public event 采购入库单RowChangeEventHandler 采购入库单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add采购入库单Row(采购入库单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 采购入库单Row Add采购入库单Row(
                        int xh, 
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        decimal ypsl, 
                        string ypdw, 
                        decimal ypkl, 
                        decimal jhj, 
                        decimal jhje, 
                        decimal pfj, 
                        decimal pfje, 
                        decimal lsj, 
                        decimal lsje, 
                        decimal jlce, 
                        string ypph, 
                        string ypxq, 
                        string shh, 
                        string kwmc) {
                采购入库单Row row采购入库单Row = ((采购入库单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypsl,
                        ypdw,
                        ypkl,
                        jhj,
                        jhje,
                        pfj,
                        pfje,
                        lsj,
                        lsje,
                        jlce,
                        ypph,
                        ypxq,
                        shh,
                        kwmc};
                row采购入库单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row采购入库单Row);
                return row采购入库单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                采购入库单DataTable cln = ((采购入库单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 采购入库单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnypkl = base.Columns["ypkl"];
                this.columnjhj = base.Columns["jhj"];
                this.columnjhje = base.Columns["jhje"];
                this.columnpfj = base.Columns["pfj"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsj = base.Columns["lsj"];
                this.columnlsje = base.Columns["lsje"];
                this.columnjlce = base.Columns["jlce"];
                this.columnypph = base.Columns["ypph"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnshh = base.Columns["shh"];
                this.columnkwmc = base.Columns["kwmc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnypkl = new global::System.Data.DataColumn("ypkl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypkl);
                this.columnjhj = new global::System.Data.DataColumn("jhj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhj);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 采购入库单Row New采购入库单Row() {
                return ((采购入库单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 采购入库单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(采购入库单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.采购入库单RowChanged != null)) {
                    this.采购入库单RowChanged(this, new 采购入库单RowChangeEvent(((采购入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.采购入库单RowChanging != null)) {
                    this.采购入库单RowChanging(this, new 采购入库单RowChangeEvent(((采购入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.采购入库单RowDeleted != null)) {
                    this.采购入库单RowDeleted(this, new 采购入库单RowChangeEvent(((采购入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.采购入库单RowDeleting != null)) {
                    this.采购入库单RowDeleting(this, new 采购入库单RowChangeEvent(((采购入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove采购入库单Row(采购入库单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "采购入库单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 普通入库单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnplce;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnkwmc;
            
            private global::System.Data.DataColumn columnjhj;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnjlce;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 普通入库单DataTable() {
                this.TableName = "普通入库单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 普通入库单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 普通入库单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plceColumn {
                get {
                    return this.columnplce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjColumn {
                get {
                    return this.columnjhj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 普通入库单Row this[int index] {
                get {
                    return ((普通入库单Row)(this.Rows[index]));
                }
            }
            
            public event 普通入库单RowChangeEventHandler 普通入库单RowChanging;
            
            public event 普通入库单RowChangeEventHandler 普通入库单RowChanged;
            
            public event 普通入库单RowChangeEventHandler 普通入库单RowDeleting;
            
            public event 普通入库单RowChangeEventHandler 普通入库单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add普通入库单Row(普通入库单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 普通入库单Row Add普通入库单Row(
                        int xh, 
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        decimal ypsl, 
                        string ypdw, 
                        decimal pfj, 
                        decimal pfje, 
                        decimal lsj, 
                        decimal lsje, 
                        decimal plce, 
                        string ypph, 
                        string ypxq, 
                        string shh, 
                        string kwmc, 
                        decimal jhj, 
                        decimal jhje, 
                        decimal jlce) {
                普通入库单Row row普通入库单Row = ((普通入库单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypsl,
                        ypdw,
                        pfj,
                        pfje,
                        lsj,
                        lsje,
                        plce,
                        ypph,
                        ypxq,
                        shh,
                        kwmc,
                        jhj,
                        jhje,
                        jlce};
                row普通入库单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row普通入库单Row);
                return row普通入库单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                普通入库单DataTable cln = ((普通入库单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 普通入库单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfj = base.Columns["pfj"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsj = base.Columns["lsj"];
                this.columnlsje = base.Columns["lsje"];
                this.columnplce = base.Columns["plce"];
                this.columnypph = base.Columns["ypph"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnshh = base.Columns["shh"];
                this.columnkwmc = base.Columns["kwmc"];
                this.columnjhj = base.Columns["jhj"];
                this.columnjhje = base.Columns["jhje"];
                this.columnjlce = base.Columns["jlce"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnplce = new global::System.Data.DataColumn("plce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplce);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
                this.columnjhj = new global::System.Data.DataColumn("jhj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhj);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 普通入库单Row New普通入库单Row() {
                return ((普通入库单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 普通入库单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(普通入库单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.普通入库单RowChanged != null)) {
                    this.普通入库单RowChanged(this, new 普通入库单RowChangeEvent(((普通入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.普通入库单RowChanging != null)) {
                    this.普通入库单RowChanging(this, new 普通入库单RowChangeEvent(((普通入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.普通入库单RowDeleted != null)) {
                    this.普通入库单RowDeleted(this, new 普通入库单RowChangeEvent(((普通入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.普通入库单RowDeleting != null)) {
                    this.普通入库单RowDeleting(this, new 普通入库单RowChangeEvent(((普通入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove普通入库单Row(普通入库单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "普通入库单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品申请单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnplce;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnkwmc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品申请单DataTable() {
                this.TableName = "药品申请单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品申请单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品申请单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plceColumn {
                get {
                    return this.columnplce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品申请单Row this[int index] {
                get {
                    return ((药品申请单Row)(this.Rows[index]));
                }
            }
            
            public event 药品申请单RowChangeEventHandler 药品申请单RowChanging;
            
            public event 药品申请单RowChangeEventHandler 药品申请单RowChanged;
            
            public event 药品申请单RowChangeEventHandler 药品申请单RowDeleting;
            
            public event 药品申请单RowChangeEventHandler 药品申请单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品申请单Row(药品申请单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品申请单Row Add药品申请单Row(int xh, string ypmc, string ypgg, string sccj, decimal ypsl, string ypdw, decimal pfj, decimal pfje, decimal lsj, decimal lsje, decimal plce, string ypph, string ypxq, string shh, string kwmc) {
                药品申请单Row row药品申请单Row = ((药品申请单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypsl,
                        ypdw,
                        pfj,
                        pfje,
                        lsj,
                        lsje,
                        plce,
                        ypph,
                        ypxq,
                        shh,
                        kwmc};
                row药品申请单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品申请单Row);
                return row药品申请单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品申请单DataTable cln = ((药品申请单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品申请单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfj = base.Columns["pfj"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsj = base.Columns["lsj"];
                this.columnlsje = base.Columns["lsje"];
                this.columnplce = base.Columns["plce"];
                this.columnypph = base.Columns["ypph"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnshh = base.Columns["shh"];
                this.columnkwmc = base.Columns["kwmc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnplce = new global::System.Data.DataColumn("plce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplce);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品申请单Row New药品申请单Row() {
                return ((药品申请单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品申请单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品申请单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品申请单RowChanged != null)) {
                    this.药品申请单RowChanged(this, new 药品申请单RowChangeEvent(((药品申请单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品申请单RowChanging != null)) {
                    this.药品申请单RowChanging(this, new 药品申请单RowChangeEvent(((药品申请单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品申请单RowDeleted != null)) {
                    this.药品申请单RowDeleted(this, new 药品申请单RowChangeEvent(((药品申请单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品申请单RowDeleting != null)) {
                    this.药品申请单RowDeleting(this, new 药品申请单RowChangeEvent(((药品申请单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品申请单Row(药品申请单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品申请单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品出库单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnplce;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnkwmc;
            
            private global::System.Data.DataColumn columnjhj;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnjlce;
            
            private global::System.Data.DataColumn columnyppch;
            
            private global::System.Data.DataColumn columnkcl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品出库单DataTable() {
                this.TableName = "药品出库单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品出库单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品出库单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plceColumn {
                get {
                    return this.columnplce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjColumn {
                get {
                    return this.columnjhj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yppchColumn {
                get {
                    return this.columnyppch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kclColumn {
                get {
                    return this.columnkcl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品出库单Row this[int index] {
                get {
                    return ((药品出库单Row)(this.Rows[index]));
                }
            }
            
            public event 药品出库单RowChangeEventHandler 药品出库单RowChanging;
            
            public event 药品出库单RowChangeEventHandler 药品出库单RowChanged;
            
            public event 药品出库单RowChangeEventHandler 药品出库单RowDeleting;
            
            public event 药品出库单RowChangeEventHandler 药品出库单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品出库单Row(药品出库单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品出库单Row Add药品出库单Row(
                        int xh, 
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        decimal ypsl, 
                        string ypdw, 
                        decimal pfj, 
                        decimal pfje, 
                        decimal lsj, 
                        decimal lsje, 
                        decimal plce, 
                        string ypph, 
                        string ypxq, 
                        string shh, 
                        string kwmc, 
                        decimal jhj, 
                        decimal jhje, 
                        decimal jlce, 
                        string yppch, 
                        string kcl) {
                药品出库单Row row药品出库单Row = ((药品出库单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypsl,
                        ypdw,
                        pfj,
                        pfje,
                        lsj,
                        lsje,
                        plce,
                        ypph,
                        ypxq,
                        shh,
                        kwmc,
                        jhj,
                        jhje,
                        jlce,
                        yppch,
                        kcl};
                row药品出库单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品出库单Row);
                return row药品出库单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品出库单DataTable cln = ((药品出库单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品出库单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfj = base.Columns["pfj"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsj = base.Columns["lsj"];
                this.columnlsje = base.Columns["lsje"];
                this.columnplce = base.Columns["plce"];
                this.columnypph = base.Columns["ypph"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnshh = base.Columns["shh"];
                this.columnkwmc = base.Columns["kwmc"];
                this.columnjhj = base.Columns["jhj"];
                this.columnjhje = base.Columns["jhje"];
                this.columnjlce = base.Columns["jlce"];
                this.columnyppch = base.Columns["yppch"];
                this.columnkcl = base.Columns["kcl"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnplce = new global::System.Data.DataColumn("plce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplce);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
                this.columnjhj = new global::System.Data.DataColumn("jhj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhj);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
                this.columnyppch = new global::System.Data.DataColumn("yppch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyppch);
                this.columnkcl = new global::System.Data.DataColumn("kcl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkcl);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品出库单Row New药品出库单Row() {
                return ((药品出库单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品出库单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品出库单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品出库单RowChanged != null)) {
                    this.药品出库单RowChanged(this, new 药品出库单RowChangeEvent(((药品出库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品出库单RowChanging != null)) {
                    this.药品出库单RowChanging(this, new 药品出库单RowChangeEvent(((药品出库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品出库单RowDeleted != null)) {
                    this.药品出库单RowDeleted(this, new 药品出库单RowChangeEvent(((药品出库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品出库单RowDeleting != null)) {
                    this.药品出库单RowDeleting(this, new 药品出库单RowChangeEvent(((药品出库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品出库单Row(药品出库单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品出库单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品调价单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnypfj;
            
            private global::System.Data.DataColumn columnylsj;
            
            private global::System.Data.DataColumn columnxpfj;
            
            private global::System.Data.DataColumn columnxlsj;
            
            private global::System.Data.DataColumn columnpfjdwcj;
            
            private global::System.Data.DataColumn columnlsjdwcj;
            
            private global::System.Data.DataColumn columntpfje;
            
            private global::System.Data.DataColumn columntlsje;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columntjwh;
            
            private global::System.Data.DataColumn columnzxrq;
            
            private global::System.Data.DataColumn columnckmc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品调价单DataTable() {
                this.TableName = "药品调价单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品调价单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品调价单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypfjColumn {
                get {
                    return this.columnypfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ylsjColumn {
                get {
                    return this.columnylsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xpfjColumn {
                get {
                    return this.columnxpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xlsjColumn {
                get {
                    return this.columnxlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjdwcjColumn {
                get {
                    return this.columnpfjdwcj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjdwcjColumn {
                get {
                    return this.columnlsjdwcj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tpfjeColumn {
                get {
                    return this.columntpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tlsjeColumn {
                get {
                    return this.columntlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tjwhColumn {
                get {
                    return this.columntjwh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zxrqColumn {
                get {
                    return this.columnzxrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ckmcColumn {
                get {
                    return this.columnckmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品调价单Row this[int index] {
                get {
                    return ((药品调价单Row)(this.Rows[index]));
                }
            }
            
            public event 药品调价单RowChangeEventHandler 药品调价单RowChanging;
            
            public event 药品调价单RowChangeEventHandler 药品调价单RowChanged;
            
            public event 药品调价单RowChangeEventHandler 药品调价单RowDeleting;
            
            public event 药品调价单RowChangeEventHandler 药品调价单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品调价单Row(药品调价单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品调价单Row Add药品调价单Row(
                        int xh, 
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        decimal ypsl, 
                        string ypdw, 
                        decimal ypfj, 
                        decimal ylsj, 
                        decimal xpfj, 
                        decimal xlsj, 
                        decimal pfjdwcj, 
                        decimal lsjdwcj, 
                        decimal tpfje, 
                        decimal tlsje, 
                        string shh, 
                        string tjwh, 
                        string zxrq, 
                        string ckmc) {
                药品调价单Row row药品调价单Row = ((药品调价单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypsl,
                        ypdw,
                        ypfj,
                        ylsj,
                        xpfj,
                        xlsj,
                        pfjdwcj,
                        lsjdwcj,
                        tpfje,
                        tlsje,
                        shh,
                        tjwh,
                        zxrq,
                        ckmc};
                row药品调价单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品调价单Row);
                return row药品调价单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品调价单DataTable cln = ((药品调价单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品调价单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnypfj = base.Columns["ypfj"];
                this.columnylsj = base.Columns["ylsj"];
                this.columnxpfj = base.Columns["xpfj"];
                this.columnxlsj = base.Columns["xlsj"];
                this.columnpfjdwcj = base.Columns["pfjdwcj"];
                this.columnlsjdwcj = base.Columns["lsjdwcj"];
                this.columntpfje = base.Columns["tpfje"];
                this.columntlsje = base.Columns["tlsje"];
                this.columnshh = base.Columns["shh"];
                this.columntjwh = base.Columns["tjwh"];
                this.columnzxrq = base.Columns["zxrq"];
                this.columnckmc = base.Columns["ckmc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnypfj = new global::System.Data.DataColumn("ypfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypfj);
                this.columnylsj = new global::System.Data.DataColumn("ylsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnylsj);
                this.columnxpfj = new global::System.Data.DataColumn("xpfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxpfj);
                this.columnxlsj = new global::System.Data.DataColumn("xlsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxlsj);
                this.columnpfjdwcj = new global::System.Data.DataColumn("pfjdwcj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfjdwcj);
                this.columnlsjdwcj = new global::System.Data.DataColumn("lsjdwcj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsjdwcj);
                this.columntpfje = new global::System.Data.DataColumn("tpfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntpfje);
                this.columntlsje = new global::System.Data.DataColumn("tlsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntlsje);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columntjwh = new global::System.Data.DataColumn("tjwh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntjwh);
                this.columnzxrq = new global::System.Data.DataColumn("zxrq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzxrq);
                this.columnckmc = new global::System.Data.DataColumn("ckmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnckmc);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品调价单Row New药品调价单Row() {
                return ((药品调价单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品调价单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品调价单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品调价单RowChanged != null)) {
                    this.药品调价单RowChanged(this, new 药品调价单RowChangeEvent(((药品调价单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品调价单RowChanging != null)) {
                    this.药品调价单RowChanging(this, new 药品调价单RowChangeEvent(((药品调价单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品调价单RowDeleted != null)) {
                    this.药品调价单RowDeleted(this, new 药品调价单RowChangeEvent(((药品调价单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品调价单RowDeleting != null)) {
                    this.药品调价单RowDeleting(this, new 药品调价单RowChangeEvent(((药品调价单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品调价单Row(药品调价单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品调价单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 报损报溢单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnplce;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnkwmc;
            
            private global::System.Data.DataColumn columnjhj;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnjlce;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 报损报溢单DataTable() {
                this.TableName = "报损报溢单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 报损报溢单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 报损报溢单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plceColumn {
                get {
                    return this.columnplce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjColumn {
                get {
                    return this.columnjhj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 报损报溢单Row this[int index] {
                get {
                    return ((报损报溢单Row)(this.Rows[index]));
                }
            }
            
            public event 报损报溢单RowChangeEventHandler 报损报溢单RowChanging;
            
            public event 报损报溢单RowChangeEventHandler 报损报溢单RowChanged;
            
            public event 报损报溢单RowChangeEventHandler 报损报溢单RowDeleting;
            
            public event 报损报溢单RowChangeEventHandler 报损报溢单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add报损报溢单Row(报损报溢单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 报损报溢单Row Add报损报溢单Row(
                        int xh, 
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        decimal ypsl, 
                        string ypdw, 
                        decimal pfj, 
                        decimal pfje, 
                        decimal lsj, 
                        decimal lsje, 
                        decimal plce, 
                        string ypph, 
                        string ypxq, 
                        string shh, 
                        string kwmc, 
                        decimal jhj, 
                        decimal jhje, 
                        decimal jlce) {
                报损报溢单Row row报损报溢单Row = ((报损报溢单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypsl,
                        ypdw,
                        pfj,
                        pfje,
                        lsj,
                        lsje,
                        plce,
                        ypph,
                        ypxq,
                        shh,
                        kwmc,
                        jhj,
                        jhje,
                        jlce};
                row报损报溢单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row报损报溢单Row);
                return row报损报溢单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                报损报溢单DataTable cln = ((报损报溢单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 报损报溢单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfj = base.Columns["pfj"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsj = base.Columns["lsj"];
                this.columnlsje = base.Columns["lsje"];
                this.columnplce = base.Columns["plce"];
                this.columnypph = base.Columns["ypph"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnshh = base.Columns["shh"];
                this.columnkwmc = base.Columns["kwmc"];
                this.columnjhj = base.Columns["jhj"];
                this.columnjhje = base.Columns["jhje"];
                this.columnjlce = base.Columns["jlce"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnplce = new global::System.Data.DataColumn("plce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplce);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
                this.columnjhj = new global::System.Data.DataColumn("jhj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhj);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 报损报溢单Row New报损报溢单Row() {
                return ((报损报溢单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 报损报溢单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(报损报溢单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.报损报溢单RowChanged != null)) {
                    this.报损报溢单RowChanged(this, new 报损报溢单RowChangeEvent(((报损报溢单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.报损报溢单RowChanging != null)) {
                    this.报损报溢单RowChanging(this, new 报损报溢单RowChangeEvent(((报损报溢单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.报损报溢单RowDeleted != null)) {
                    this.报损报溢单RowDeleted(this, new 报损报溢单RowChangeEvent(((报损报溢单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.报损报溢单RowDeleting != null)) {
                    this.报损报溢单RowDeleting(this, new 报损报溢单RowChangeEvent(((报损报溢单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove报损报溢单Row(报损报溢单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "报损报溢单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品盘点单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnzcsl;
            
            private global::System.Data.DataColumn columnzcje;
            
            private global::System.Data.DataColumn columnpcsl;
            
            private global::System.Data.DataColumn columnpcje;
            
            private global::System.Data.DataColumn columnyksl;
            
            private global::System.Data.DataColumn columnykje;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnkwmc;
            
            private global::System.Data.DataColumn columnjhj;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnjlce;
            
            private global::System.Data.DataColumn columnyppch;
            
            private global::System.Data.DataColumn columnzcjhje;
            
            private global::System.Data.DataColumn columnpcjhje;
            
            private global::System.Data.DataColumn columnykjhje;
            
            private global::System.Data.DataColumn columnyplx;
            
            private global::System.Data.DataColumn columnypjx;
            
            private global::System.Data.DataColumn columnypxq;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品盘点单DataTable() {
                this.TableName = "药品盘点单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品盘点单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品盘点单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zcslColumn {
                get {
                    return this.columnzcsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zcjeColumn {
                get {
                    return this.columnzcje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pcslColumn {
                get {
                    return this.columnpcsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pcjeColumn {
                get {
                    return this.columnpcje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ykslColumn {
                get {
                    return this.columnyksl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ykjeColumn {
                get {
                    return this.columnykje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjColumn {
                get {
                    return this.columnjhj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yppchColumn {
                get {
                    return this.columnyppch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zcjhjeColumn {
                get {
                    return this.columnzcjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pcjhjeColumn {
                get {
                    return this.columnpcjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ykjhjeColumn {
                get {
                    return this.columnykjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yplxColumn {
                get {
                    return this.columnyplx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypjxColumn {
                get {
                    return this.columnypjx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品盘点单Row this[int index] {
                get {
                    return ((药品盘点单Row)(this.Rows[index]));
                }
            }
            
            public event 药品盘点单RowChangeEventHandler 药品盘点单RowChanging;
            
            public event 药品盘点单RowChangeEventHandler 药品盘点单RowChanged;
            
            public event 药品盘点单RowChangeEventHandler 药品盘点单RowDeleting;
            
            public event 药品盘点单RowChangeEventHandler 药品盘点单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品盘点单Row(药品盘点单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品盘点单Row Add药品盘点单Row(
                        int xh, 
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        string ypdw, 
                        decimal pfj, 
                        decimal lsj, 
                        decimal zcsl, 
                        decimal zcje, 
                        decimal pcsl, 
                        decimal pcje, 
                        decimal yksl, 
                        decimal ykje, 
                        string shh, 
                        string ypph, 
                        string kwmc, 
                        decimal jhj, 
                        decimal jhje, 
                        decimal jlce, 
                        string yppch, 
                        decimal zcjhje, 
                        decimal pcjhje, 
                        decimal ykjhje, 
                        string yplx, 
                        string ypjx, 
                        string ypxq) {
                药品盘点单Row row药品盘点单Row = ((药品盘点单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypdw,
                        pfj,
                        lsj,
                        zcsl,
                        zcje,
                        pcsl,
                        pcje,
                        yksl,
                        ykje,
                        shh,
                        ypph,
                        kwmc,
                        jhj,
                        jhje,
                        jlce,
                        yppch,
                        zcjhje,
                        pcjhje,
                        ykjhje,
                        yplx,
                        ypjx,
                        ypxq};
                row药品盘点单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品盘点单Row);
                return row药品盘点单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品盘点单DataTable cln = ((药品盘点单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品盘点单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfj = base.Columns["pfj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnzcsl = base.Columns["zcsl"];
                this.columnzcje = base.Columns["zcje"];
                this.columnpcsl = base.Columns["pcsl"];
                this.columnpcje = base.Columns["pcje"];
                this.columnyksl = base.Columns["yksl"];
                this.columnykje = base.Columns["ykje"];
                this.columnshh = base.Columns["shh"];
                this.columnypph = base.Columns["ypph"];
                this.columnkwmc = base.Columns["kwmc"];
                this.columnjhj = base.Columns["jhj"];
                this.columnjhje = base.Columns["jhje"];
                this.columnjlce = base.Columns["jlce"];
                this.columnyppch = base.Columns["yppch"];
                this.columnzcjhje = base.Columns["zcjhje"];
                this.columnpcjhje = base.Columns["pcjhje"];
                this.columnykjhje = base.Columns["ykjhje"];
                this.columnyplx = base.Columns["yplx"];
                this.columnypjx = base.Columns["ypjx"];
                this.columnypxq = base.Columns["ypxq"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnzcsl = new global::System.Data.DataColumn("zcsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzcsl);
                this.columnzcje = new global::System.Data.DataColumn("zcje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzcje);
                this.columnpcsl = new global::System.Data.DataColumn("pcsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpcsl);
                this.columnpcje = new global::System.Data.DataColumn("pcje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpcje);
                this.columnyksl = new global::System.Data.DataColumn("yksl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyksl);
                this.columnykje = new global::System.Data.DataColumn("ykje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnykje);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
                this.columnjhj = new global::System.Data.DataColumn("jhj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhj);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
                this.columnyppch = new global::System.Data.DataColumn("yppch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyppch);
                this.columnzcjhje = new global::System.Data.DataColumn("zcjhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzcjhje);
                this.columnpcjhje = new global::System.Data.DataColumn("pcjhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpcjhje);
                this.columnykjhje = new global::System.Data.DataColumn("ykjhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnykjhje);
                this.columnyplx = new global::System.Data.DataColumn("yplx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyplx);
                this.columnypjx = new global::System.Data.DataColumn("ypjx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypjx);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品盘点单Row New药品盘点单Row() {
                return ((药品盘点单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品盘点单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品盘点单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品盘点单RowChanged != null)) {
                    this.药品盘点单RowChanged(this, new 药品盘点单RowChangeEvent(((药品盘点单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品盘点单RowChanging != null)) {
                    this.药品盘点单RowChanging(this, new 药品盘点单RowChangeEvent(((药品盘点单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品盘点单RowDeleted != null)) {
                    this.药品盘点单RowDeleted(this, new 药品盘点单RowChangeEvent(((药品盘点单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品盘点单RowDeleting != null)) {
                    this.药品盘点单RowDeleting(this, new 药品盘点单RowChangeEvent(((药品盘点单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品盘点单Row(药品盘点单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品盘点单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品采购计划DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnxqs;
            
            private global::System.Data.DataColumn columnjhs;
            
            private global::System.Data.DataColumn columnckjj;
            
            private global::System.Data.DataColumn columnckkl;
            
            private global::System.Data.DataColumn columnghdw;
            
            private global::System.Data.DataColumn columnshh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品采购计划DataTable() {
                this.TableName = "药品采购计划";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品采购计划DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品采购计划DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xqsColumn {
                get {
                    return this.columnxqs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhsColumn {
                get {
                    return this.columnjhs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ckjjColumn {
                get {
                    return this.columnckjj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ckklColumn {
                get {
                    return this.columnckkl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ghdwColumn {
                get {
                    return this.columnghdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品采购计划Row this[int index] {
                get {
                    return ((药品采购计划Row)(this.Rows[index]));
                }
            }
            
            public event 药品采购计划RowChangeEventHandler 药品采购计划RowChanging;
            
            public event 药品采购计划RowChangeEventHandler 药品采购计划RowChanged;
            
            public event 药品采购计划RowChangeEventHandler 药品采购计划RowDeleting;
            
            public event 药品采购计划RowChangeEventHandler 药品采购计划RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品采购计划Row(药品采购计划Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品采购计划Row Add药品采购计划Row(int xh, string ypmc, string ypgg, string sccj, string ypdw, decimal pfj, decimal lsj, decimal xqs, decimal jhs, decimal ckjj, decimal ckkl, string ghdw, string shh) {
                药品采购计划Row row药品采购计划Row = ((药品采购计划Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypdw,
                        pfj,
                        lsj,
                        xqs,
                        jhs,
                        ckjj,
                        ckkl,
                        ghdw,
                        shh};
                row药品采购计划Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品采购计划Row);
                return row药品采购计划Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品采购计划DataTable cln = ((药品采购计划DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品采购计划DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfj = base.Columns["pfj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnxqs = base.Columns["xqs"];
                this.columnjhs = base.Columns["jhs"];
                this.columnckjj = base.Columns["ckjj"];
                this.columnckkl = base.Columns["ckkl"];
                this.columnghdw = base.Columns["ghdw"];
                this.columnshh = base.Columns["shh"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnxqs = new global::System.Data.DataColumn("xqs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxqs);
                this.columnjhs = new global::System.Data.DataColumn("jhs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhs);
                this.columnckjj = new global::System.Data.DataColumn("ckjj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnckjj);
                this.columnckkl = new global::System.Data.DataColumn("ckkl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnckkl);
                this.columnghdw = new global::System.Data.DataColumn("ghdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnghdw);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品采购计划Row New药品采购计划Row() {
                return ((药品采购计划Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品采购计划Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品采购计划Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品采购计划RowChanged != null)) {
                    this.药品采购计划RowChanged(this, new 药品采购计划RowChangeEvent(((药品采购计划Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品采购计划RowChanging != null)) {
                    this.药品采购计划RowChanging(this, new 药品采购计划RowChangeEvent(((药品采购计划Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品采购计划RowDeleted != null)) {
                    this.药品采购计划RowDeleted(this, new 药品采购计划RowChangeEvent(((药品采购计划Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品采购计划RowDeleting != null)) {
                    this.药品采购计划RowDeleting(this, new 药品采购计划RowChangeEvent(((药品采购计划Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品采购计划Row(药品采购计划Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品采购计划DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 进销存情况表DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxmmc;
            
            private global::System.Data.DataColumn columnje;
            
            private global::System.Data.DataColumn columnxmmc1;
            
            private global::System.Data.DataColumn columnje1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进销存情况表DataTable() {
                this.TableName = "进销存情况表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 进销存情况表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 进销存情况表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xmmcColumn {
                get {
                    return this.columnxmmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jeColumn {
                get {
                    return this.columnje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xmmc1Column {
                get {
                    return this.columnxmmc1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn je1Column {
                get {
                    return this.columnje1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进销存情况表Row this[int index] {
                get {
                    return ((进销存情况表Row)(this.Rows[index]));
                }
            }
            
            public event 进销存情况表RowChangeEventHandler 进销存情况表RowChanging;
            
            public event 进销存情况表RowChangeEventHandler 进销存情况表RowChanged;
            
            public event 进销存情况表RowChangeEventHandler 进销存情况表RowDeleting;
            
            public event 进销存情况表RowChangeEventHandler 进销存情况表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add进销存情况表Row(进销存情况表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进销存情况表Row Add进销存情况表Row(string xmmc, string je, string xmmc1, string je1) {
                进销存情况表Row row进销存情况表Row = ((进销存情况表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xmmc,
                        je,
                        xmmc1,
                        je1};
                row进销存情况表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row进销存情况表Row);
                return row进销存情况表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                进销存情况表DataTable cln = ((进销存情况表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 进销存情况表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxmmc = base.Columns["xmmc"];
                this.columnje = base.Columns["je"];
                this.columnxmmc1 = base.Columns["xmmc1"];
                this.columnje1 = base.Columns["je1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxmmc = new global::System.Data.DataColumn("xmmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxmmc);
                this.columnje = new global::System.Data.DataColumn("je", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnje);
                this.columnxmmc1 = new global::System.Data.DataColumn("xmmc1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxmmc1);
                this.columnje1 = new global::System.Data.DataColumn("je1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnje1);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进销存情况表Row New进销存情况表Row() {
                return ((进销存情况表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 进销存情况表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(进销存情况表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.进销存情况表RowChanged != null)) {
                    this.进销存情况表RowChanged(this, new 进销存情况表RowChangeEvent(((进销存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.进销存情况表RowChanging != null)) {
                    this.进销存情况表RowChanging(this, new 进销存情况表RowChangeEvent(((进销存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.进销存情况表RowDeleted != null)) {
                    this.进销存情况表RowDeleted(this, new 进销存情况表RowChangeEvent(((进销存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.进销存情况表RowDeleting != null)) {
                    this.进销存情况表RowDeleting(this, new 进销存情况表RowChangeEvent(((进销存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove进销存情况表Row(进销存情况表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "进销存情况表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 付款情况表DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columndjh;
            
            private global::System.Data.DataColumn columndjrq;
            
            private global::System.Data.DataColumn columndjlb;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnfph;
            
            private global::System.Data.DataColumn columnfprq;
            
            private global::System.Data.DataColumn columnghdw;
            
            private global::System.Data.DataColumn columnshdh;
            
            private global::System.Data.DataColumn columndjsj;
            
            private global::System.Data.DataColumn columndjy;
            
            private global::System.Data.DataColumn columnywy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表DataTable() {
                this.TableName = "付款情况表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 付款情况表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 付款情况表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djhColumn {
                get {
                    return this.columndjh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djrqColumn {
                get {
                    return this.columndjrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djlbColumn {
                get {
                    return this.columndjlb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fphColumn {
                get {
                    return this.columnfph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fprqColumn {
                get {
                    return this.columnfprq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ghdwColumn {
                get {
                    return this.columnghdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shdhColumn {
                get {
                    return this.columnshdh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djsjColumn {
                get {
                    return this.columndjsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djyColumn {
                get {
                    return this.columndjy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ywyColumn {
                get {
                    return this.columnywy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表Row this[int index] {
                get {
                    return ((付款情况表Row)(this.Rows[index]));
                }
            }
            
            public event 付款情况表RowChangeEventHandler 付款情况表RowChanging;
            
            public event 付款情况表RowChangeEventHandler 付款情况表RowChanged;
            
            public event 付款情况表RowChangeEventHandler 付款情况表RowDeleting;
            
            public event 付款情况表RowChangeEventHandler 付款情况表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add付款情况表Row(付款情况表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表Row Add付款情况表Row(int xh, string djh, string djrq, string djlb, decimal jhje, string fph, string fprq, string ghdw, string shdh, string djsj, string djy, string ywy) {
                付款情况表Row row付款情况表Row = ((付款情况表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        djh,
                        djrq,
                        djlb,
                        jhje,
                        fph,
                        fprq,
                        ghdw,
                        shdh,
                        djsj,
                        djy,
                        ywy};
                row付款情况表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row付款情况表Row);
                return row付款情况表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                付款情况表DataTable cln = ((付款情况表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 付款情况表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columndjh = base.Columns["djh"];
                this.columndjrq = base.Columns["djrq"];
                this.columndjlb = base.Columns["djlb"];
                this.columnjhje = base.Columns["jhje"];
                this.columnfph = base.Columns["fph"];
                this.columnfprq = base.Columns["fprq"];
                this.columnghdw = base.Columns["ghdw"];
                this.columnshdh = base.Columns["shdh"];
                this.columndjsj = base.Columns["djsj"];
                this.columndjy = base.Columns["djy"];
                this.columnywy = base.Columns["ywy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columndjh = new global::System.Data.DataColumn("djh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjh);
                this.columndjrq = new global::System.Data.DataColumn("djrq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjrq);
                this.columndjlb = new global::System.Data.DataColumn("djlb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjlb);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnfph = new global::System.Data.DataColumn("fph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfph);
                this.columnfprq = new global::System.Data.DataColumn("fprq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfprq);
                this.columnghdw = new global::System.Data.DataColumn("ghdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnghdw);
                this.columnshdh = new global::System.Data.DataColumn("shdh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshdh);
                this.columndjsj = new global::System.Data.DataColumn("djsj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjsj);
                this.columndjy = new global::System.Data.DataColumn("djy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjy);
                this.columnywy = new global::System.Data.DataColumn("ywy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnywy);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表Row New付款情况表Row() {
                return ((付款情况表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 付款情况表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(付款情况表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.付款情况表RowChanged != null)) {
                    this.付款情况表RowChanged(this, new 付款情况表RowChangeEvent(((付款情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.付款情况表RowChanging != null)) {
                    this.付款情况表RowChanging(this, new 付款情况表RowChangeEvent(((付款情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.付款情况表RowDeleted != null)) {
                    this.付款情况表RowDeleted(this, new 付款情况表RowChangeEvent(((付款情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.付款情况表RowDeleting != null)) {
                    this.付款情况表RowDeleting(this, new 付款情况表RowChangeEvent(((付款情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove付款情况表Row(付款情况表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "付款情况表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 保管明细帐DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnrq;
            
            private global::System.Data.DataColumn columnzy;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnjfsl;
            
            private global::System.Data.DataColumn columnjfje;
            
            private global::System.Data.DataColumn columndfsl;
            
            private global::System.Data.DataColumn columndfje;
            
            private global::System.Data.DataColumn columnjysl;
            
            private global::System.Data.DataColumn columnjyje;
            
            private global::System.Data.DataColumn columnypdw;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 保管明细帐DataTable() {
                this.TableName = "保管明细帐";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 保管明细帐DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 保管明细帐DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rqColumn {
                get {
                    return this.columnrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zyColumn {
                get {
                    return this.columnzy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jfslColumn {
                get {
                    return this.columnjfsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jfjeColumn {
                get {
                    return this.columnjfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dfslColumn {
                get {
                    return this.columndfsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dfjeColumn {
                get {
                    return this.columndfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyslColumn {
                get {
                    return this.columnjysl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyjeColumn {
                get {
                    return this.columnjyje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 保管明细帐Row this[int index] {
                get {
                    return ((保管明细帐Row)(this.Rows[index]));
                }
            }
            
            public event 保管明细帐RowChangeEventHandler 保管明细帐RowChanging;
            
            public event 保管明细帐RowChangeEventHandler 保管明细帐RowChanged;
            
            public event 保管明细帐RowChangeEventHandler 保管明细帐RowDeleting;
            
            public event 保管明细帐RowChangeEventHandler 保管明细帐RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add保管明细帐Row(保管明细帐Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 保管明细帐Row Add保管明细帐Row(int xh, string rq, string zy, string lsj, string jfsl, string jfje, string dfsl, string dfje, string jysl, string jyje, string ypdw) {
                保管明细帐Row row保管明细帐Row = ((保管明细帐Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        rq,
                        zy,
                        lsj,
                        jfsl,
                        jfje,
                        dfsl,
                        dfje,
                        jysl,
                        jyje,
                        ypdw};
                row保管明细帐Row.ItemArray = columnValuesArray;
                this.Rows.Add(row保管明细帐Row);
                return row保管明细帐Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                保管明细帐DataTable cln = ((保管明细帐DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 保管明细帐DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnrq = base.Columns["rq"];
                this.columnzy = base.Columns["zy"];
                this.columnlsj = base.Columns["lsj"];
                this.columnjfsl = base.Columns["jfsl"];
                this.columnjfje = base.Columns["jfje"];
                this.columndfsl = base.Columns["dfsl"];
                this.columndfje = base.Columns["dfje"];
                this.columnjysl = base.Columns["jysl"];
                this.columnjyje = base.Columns["jyje"];
                this.columnypdw = base.Columns["ypdw"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnrq = new global::System.Data.DataColumn("rq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrq);
                this.columnzy = new global::System.Data.DataColumn("zy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzy);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnjfsl = new global::System.Data.DataColumn("jfsl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjfsl);
                this.columnjfje = new global::System.Data.DataColumn("jfje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjfje);
                this.columndfsl = new global::System.Data.DataColumn("dfsl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndfsl);
                this.columndfje = new global::System.Data.DataColumn("dfje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndfje);
                this.columnjysl = new global::System.Data.DataColumn("jysl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjysl);
                this.columnjyje = new global::System.Data.DataColumn("jyje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyje);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 保管明细帐Row New保管明细帐Row() {
                return ((保管明细帐Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 保管明细帐Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(保管明细帐Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.保管明细帐RowChanged != null)) {
                    this.保管明细帐RowChanged(this, new 保管明细帐RowChangeEvent(((保管明细帐Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.保管明细帐RowChanging != null)) {
                    this.保管明细帐RowChanging(this, new 保管明细帐RowChangeEvent(((保管明细帐Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.保管明细帐RowDeleted != null)) {
                    this.保管明细帐RowDeleted(this, new 保管明细帐RowChangeEvent(((保管明细帐Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.保管明细帐RowDeleting != null)) {
                    this.保管明细帐RowDeleting(this, new 保管明细帐RowChangeEvent(((保管明细帐Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove保管明细帐Row(保管明细帐Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "保管明细帐DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 库存情况表DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypspm;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnkcl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnhwh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 库存情况表DataTable() {
                this.TableName = "库存情况表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 库存情况表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 库存情况表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kclColumn {
                get {
                    return this.columnkcl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hwhColumn {
                get {
                    return this.columnhwh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 库存情况表Row this[int index] {
                get {
                    return ((库存情况表Row)(this.Rows[index]));
                }
            }
            
            public event 库存情况表RowChangeEventHandler 库存情况表RowChanging;
            
            public event 库存情况表RowChangeEventHandler 库存情况表RowChanged;
            
            public event 库存情况表RowChangeEventHandler 库存情况表RowDeleting;
            
            public event 库存情况表RowChangeEventHandler 库存情况表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add库存情况表Row(库存情况表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 库存情况表Row Add库存情况表Row(int xh, string ypspm, string ypgg, string sccj, decimal pfj, decimal lsj, decimal kcl, string ypdw, decimal pfje, decimal lsje, string shh, string hwh) {
                库存情况表Row row库存情况表Row = ((库存情况表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypspm,
                        ypgg,
                        sccj,
                        pfj,
                        lsj,
                        kcl,
                        ypdw,
                        pfje,
                        lsje,
                        shh,
                        hwh};
                row库存情况表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row库存情况表Row);
                return row库存情况表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                库存情况表DataTable cln = ((库存情况表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 库存情况表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypspm = base.Columns["ypspm"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnpfj = base.Columns["pfj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnkcl = base.Columns["kcl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsje = base.Columns["lsje"];
                this.columnshh = base.Columns["shh"];
                this.columnhwh = base.Columns["hwh"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnkcl = new global::System.Data.DataColumn("kcl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkcl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnhwh = new global::System.Data.DataColumn("hwh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhwh);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 库存情况表Row New库存情况表Row() {
                return ((库存情况表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 库存情况表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(库存情况表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.库存情况表RowChanged != null)) {
                    this.库存情况表RowChanged(this, new 库存情况表RowChangeEvent(((库存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.库存情况表RowChanging != null)) {
                    this.库存情况表RowChanging(this, new 库存情况表RowChangeEvent(((库存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.库存情况表RowDeleted != null)) {
                    this.库存情况表RowDeleted(this, new 库存情况表RowChangeEvent(((库存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.库存情况表RowDeleting != null)) {
                    this.库存情况表RowDeleting(this, new 库存情况表RowChangeEvent(((库存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove库存情况表Row(库存情况表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "库存情况表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品失效报警DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypspm;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnkwmc;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnkcl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnshh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品失效报警DataTable() {
                this.TableName = "药品失效报警";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品失效报警DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品失效报警DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kclColumn {
                get {
                    return this.columnkcl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品失效报警Row this[int index] {
                get {
                    return ((药品失效报警Row)(this.Rows[index]));
                }
            }
            
            public event 药品失效报警RowChangeEventHandler 药品失效报警RowChanging;
            
            public event 药品失效报警RowChangeEventHandler 药品失效报警RowChanged;
            
            public event 药品失效报警RowChangeEventHandler 药品失效报警RowDeleting;
            
            public event 药品失效报警RowChangeEventHandler 药品失效报警RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品失效报警Row(药品失效报警Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品失效报警Row Add药品失效报警Row(int xh, string ypspm, string ypgg, string sccj, decimal pfj, decimal lsj, string kwmc, string ypph, string ypxq, decimal kcl, string ypdw, decimal pfje, decimal lsje, string shh) {
                药品失效报警Row row药品失效报警Row = ((药品失效报警Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypspm,
                        ypgg,
                        sccj,
                        pfj,
                        lsj,
                        kwmc,
                        ypph,
                        ypxq,
                        kcl,
                        ypdw,
                        pfje,
                        lsje,
                        shh};
                row药品失效报警Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品失效报警Row);
                return row药品失效报警Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品失效报警DataTable cln = ((药品失效报警DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品失效报警DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypspm = base.Columns["ypspm"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnpfj = base.Columns["pfj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnkwmc = base.Columns["kwmc"];
                this.columnypph = base.Columns["ypph"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnkcl = base.Columns["kcl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsje = base.Columns["lsje"];
                this.columnshh = base.Columns["shh"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnkcl = new global::System.Data.DataColumn("kcl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkcl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品失效报警Row New药品失效报警Row() {
                return ((药品失效报警Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品失效报警Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品失效报警Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品失效报警RowChanged != null)) {
                    this.药品失效报警RowChanged(this, new 药品失效报警RowChangeEvent(((药品失效报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品失效报警RowChanging != null)) {
                    this.药品失效报警RowChanging(this, new 药品失效报警RowChangeEvent(((药品失效报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品失效报警RowDeleted != null)) {
                    this.药品失效报警RowDeleted(this, new 药品失效报警RowChangeEvent(((药品失效报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品失效报警RowDeleting != null)) {
                    this.药品失效报警RowDeleting(this, new 药品失效报警RowChangeEvent(((药品失效报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品失效报警Row(药品失效报警Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品失效报警DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品高低储报警DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypspm;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnkcsxx;
            
            private global::System.Data.DataColumn columnkcl;
            
            private global::System.Data.DataColumn columngdc;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnshh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品高低储报警DataTable() {
                this.TableName = "药品高低储报警";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品高低储报警DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品高低储报警DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kcsxxColumn {
                get {
                    return this.columnkcsxx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kclColumn {
                get {
                    return this.columnkcl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gdcColumn {
                get {
                    return this.columngdc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品高低储报警Row this[int index] {
                get {
                    return ((药品高低储报警Row)(this.Rows[index]));
                }
            }
            
            public event 药品高低储报警RowChangeEventHandler 药品高低储报警RowChanging;
            
            public event 药品高低储报警RowChangeEventHandler 药品高低储报警RowChanged;
            
            public event 药品高低储报警RowChangeEventHandler 药品高低储报警RowDeleting;
            
            public event 药品高低储报警RowChangeEventHandler 药品高低储报警RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品高低储报警Row(药品高低储报警Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品高低储报警Row Add药品高低储报警Row(int xh, string ypspm, string ypgg, string sccj, decimal pfj, decimal lsj, decimal kcsxx, decimal kcl, decimal gdc, string ypdw, string shh) {
                药品高低储报警Row row药品高低储报警Row = ((药品高低储报警Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypspm,
                        ypgg,
                        sccj,
                        pfj,
                        lsj,
                        kcsxx,
                        kcl,
                        gdc,
                        ypdw,
                        shh};
                row药品高低储报警Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品高低储报警Row);
                return row药品高低储报警Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品高低储报警DataTable cln = ((药品高低储报警DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品高低储报警DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypspm = base.Columns["ypspm"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnpfj = base.Columns["pfj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnkcsxx = base.Columns["kcsxx"];
                this.columnkcl = base.Columns["kcl"];
                this.columngdc = base.Columns["gdc"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnshh = base.Columns["shh"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnkcsxx = new global::System.Data.DataColumn("kcsxx", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkcsxx);
                this.columnkcl = new global::System.Data.DataColumn("kcl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkcl);
                this.columngdc = new global::System.Data.DataColumn("gdc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngdc);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品高低储报警Row New药品高低储报警Row() {
                return ((药品高低储报警Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品高低储报警Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品高低储报警Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品高低储报警RowChanged != null)) {
                    this.药品高低储报警RowChanged(this, new 药品高低储报警RowChangeEvent(((药品高低储报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品高低储报警RowChanging != null)) {
                    this.药品高低储报警RowChanging(this, new 药品高低储报警RowChangeEvent(((药品高低储报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品高低储报警RowDeleted != null)) {
                    this.药品高低储报警RowDeleted(this, new 药品高低储报警RowChangeEvent(((药品高低储报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品高低储报警RowDeleting != null)) {
                    this.药品高低储报警RowDeleting(this, new 药品高低储报警RowChangeEvent(((药品高低储报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品高低储报警Row(药品高低储报警Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品高低储报警DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 进出货排名统计DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypspm;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnplce;
            
            private global::System.Data.DataColumn columnshh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进出货排名统计DataTable() {
                this.TableName = "进出货排名统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 进出货排名统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 进出货排名统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plceColumn {
                get {
                    return this.columnplce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进出货排名统计Row this[int index] {
                get {
                    return ((进出货排名统计Row)(this.Rows[index]));
                }
            }
            
            public event 进出货排名统计RowChangeEventHandler 进出货排名统计RowChanging;
            
            public event 进出货排名统计RowChangeEventHandler 进出货排名统计RowChanged;
            
            public event 进出货排名统计RowChangeEventHandler 进出货排名统计RowDeleting;
            
            public event 进出货排名统计RowChangeEventHandler 进出货排名统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add进出货排名统计Row(进出货排名统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进出货排名统计Row Add进出货排名统计Row(int xh, string ypspm, string ypgg, string sccj, decimal pfj, decimal lsj, decimal ypsl, string ypdw, decimal pfje, decimal lsje, decimal plce, string shh) {
                进出货排名统计Row row进出货排名统计Row = ((进出货排名统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypspm,
                        ypgg,
                        sccj,
                        pfj,
                        lsj,
                        ypsl,
                        ypdw,
                        pfje,
                        lsje,
                        plce,
                        shh};
                row进出货排名统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row进出货排名统计Row);
                return row进出货排名统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                进出货排名统计DataTable cln = ((进出货排名统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 进出货排名统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypspm = base.Columns["ypspm"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnpfj = base.Columns["pfj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsje = base.Columns["lsje"];
                this.columnplce = base.Columns["plce"];
                this.columnshh = base.Columns["shh"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnplce = new global::System.Data.DataColumn("plce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplce);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进出货排名统计Row New进出货排名统计Row() {
                return ((进出货排名统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 进出货排名统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(进出货排名统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.进出货排名统计RowChanged != null)) {
                    this.进出货排名统计RowChanged(this, new 进出货排名统计RowChangeEvent(((进出货排名统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.进出货排名统计RowChanging != null)) {
                    this.进出货排名统计RowChanging(this, new 进出货排名统计RowChangeEvent(((进出货排名统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.进出货排名统计RowDeleted != null)) {
                    this.进出货排名统计RowDeleted(this, new 进出货排名统计RowChangeEvent(((进出货排名统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.进出货排名统计RowDeleting != null)) {
                    this.进出货排名统计RowDeleting(this, new 进出货排名统计RowChangeEvent(((进出货排名统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove进出货排名统计Row(进出货排名统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "进出货排名统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 配发药工作量DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnyfmc;
            
            private global::System.Data.DataColumn columnxyzs;
            
            private global::System.Data.DataColumn columncyzs;
            
            private global::System.Data.DataColumn columnzyzs;
            
            private global::System.Data.DataColumn columnzyjs;
            
            private global::System.Data.DataColumn columnzzs;
            
            private global::System.Data.DataColumn columnxm;
            
            private global::System.Data.DataColumn columnje;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 配发药工作量DataTable() {
                this.TableName = "配发药工作量";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 配发药工作量DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 配发药工作量DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yfmcColumn {
                get {
                    return this.columnyfmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xyzsColumn {
                get {
                    return this.columnxyzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cyzsColumn {
                get {
                    return this.columncyzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zyzsColumn {
                get {
                    return this.columnzyzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zyjsColumn {
                get {
                    return this.columnzyjs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zzsColumn {
                get {
                    return this.columnzzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xmColumn {
                get {
                    return this.columnxm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jeColumn {
                get {
                    return this.columnje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 配发药工作量Row this[int index] {
                get {
                    return ((配发药工作量Row)(this.Rows[index]));
                }
            }
            
            public event 配发药工作量RowChangeEventHandler 配发药工作量RowChanging;
            
            public event 配发药工作量RowChangeEventHandler 配发药工作量RowChanged;
            
            public event 配发药工作量RowChangeEventHandler 配发药工作量RowDeleting;
            
            public event 配发药工作量RowChangeEventHandler 配发药工作量RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add配发药工作量Row(配发药工作量Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 配发药工作量Row Add配发药工作量Row(string yfmc, long xyzs, long cyzs, long zyzs, long zyjs, long zzs, string xm, decimal je) {
                配发药工作量Row row配发药工作量Row = ((配发药工作量Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        yfmc,
                        xyzs,
                        cyzs,
                        zyzs,
                        zyjs,
                        zzs,
                        xm,
                        je};
                row配发药工作量Row.ItemArray = columnValuesArray;
                this.Rows.Add(row配发药工作量Row);
                return row配发药工作量Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                配发药工作量DataTable cln = ((配发药工作量DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 配发药工作量DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnyfmc = base.Columns["yfmc"];
                this.columnxyzs = base.Columns["xyzs"];
                this.columncyzs = base.Columns["cyzs"];
                this.columnzyzs = base.Columns["zyzs"];
                this.columnzyjs = base.Columns["zyjs"];
                this.columnzzs = base.Columns["zzs"];
                this.columnxm = base.Columns["xm"];
                this.columnje = base.Columns["je"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnyfmc = new global::System.Data.DataColumn("yfmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyfmc);
                this.columnxyzs = new global::System.Data.DataColumn("xyzs", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxyzs);
                this.columncyzs = new global::System.Data.DataColumn("cyzs", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncyzs);
                this.columnzyzs = new global::System.Data.DataColumn("zyzs", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzyzs);
                this.columnzyjs = new global::System.Data.DataColumn("zyjs", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzyjs);
                this.columnzzs = new global::System.Data.DataColumn("zzs", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzzs);
                this.columnxm = new global::System.Data.DataColumn("xm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxm);
                this.columnje = new global::System.Data.DataColumn("je", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnje);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 配发药工作量Row New配发药工作量Row() {
                return ((配发药工作量Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 配发药工作量Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(配发药工作量Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.配发药工作量RowChanged != null)) {
                    this.配发药工作量RowChanged(this, new 配发药工作量RowChangeEvent(((配发药工作量Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.配发药工作量RowChanging != null)) {
                    this.配发药工作量RowChanging(this, new 配发药工作量RowChangeEvent(((配发药工作量Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.配发药工作量RowDeleted != null)) {
                    this.配发药工作量RowDeleted(this, new 配发药工作量RowChangeEvent(((配发药工作量Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.配发药工作量RowDeleting != null)) {
                    this.配发药工作量RowDeleting(this, new 配发药工作量RowChangeEvent(((配发药工作量Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove配发药工作量Row(配发药工作量Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "配发药工作量DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 病人处方清单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columncfts;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnyf;
            
            private global::System.Data.DataColumn columnpc;
            
            private global::System.Data.DataColumn columnsyjl;
            
            private global::System.Data.DataColumn columnzt;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnksname;
            
            private global::System.Data.DataColumn columnysname;
            
            private global::System.Data.DataColumn columnpyck;
            
            private global::System.Data.DataColumn columnfph;
            
            private global::System.Data.DataColumn columnhzxm;
            
            private global::System.Data.DataColumn columnsex;
            
            private global::System.Data.DataColumn columnage;
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnblh;
            
            private global::System.Data.DataColumn columnsfrq;
            
            private global::System.Data.DataColumn columnpszt;
            
            private global::System.Data.DataColumn columnzje;
            
            private global::System.Data.DataColumn columnpzh;
            
            private global::System.Data.DataColumn columnpyr;
            
            private global::System.Data.DataColumn columnfyr;
            
            private global::System.Data.DataColumn columnzdmc;
            
            private global::System.Data.DataColumn columnpyckdm;
            
            private global::System.Data.DataColumn columnfyckdm;
            
            private global::System.Data.DataColumn columnSYFF;
            
            private global::System.Data.DataColumn columnSYPC;
            
            private global::System.Data.DataColumn columnJL;
            
            private global::System.Data.DataColumn columnJLDW;
            
            private global::System.Data.DataColumn columnTS;
            
            private global::System.Data.DataColumn columnYZZH;
            
            private global::System.Data.DataColumn columnPXXH;
            
            private global::System.Data.DataColumn columnKH;
            
            private global::System.Data.DataColumn columnJX;
            
            private global::System.Data.DataColumn columnCFRQ;
            
            private global::System.Data.DataColumn columnFZBZ;
            
            private global::System.Data.DataColumn columnJTDZ;
            
            private global::System.Data.DataColumn columnLXDH;
            
            private global::System.Data.DataColumn columnSFZH;
            
            private global::System.Data.DataColumn columnbz1;
            
            private global::System.Data.DataColumn columnbz2;
            
            private global::System.Data.DataColumn columnbz3;
            
            private global::System.Data.DataColumn columndyr;
            
            private global::System.Data.DataColumn columnimage;
            
            private global::System.Data.DataColumn columnhwmc;
            
            private global::System.Data.DataColumn columntsyf;
            
            private global::System.Data.DataColumn columnimgfyr;
            
            private global::System.Data.DataColumn columnimgpyr;
            
            private global::System.Data.DataColumn columnypspm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 病人处方清单DataTable() {
                this.TableName = "病人处方清单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 病人处方清单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 病人处方清单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cftsColumn {
                get {
                    return this.columncfts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yfColumn {
                get {
                    return this.columnyf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pcColumn {
                get {
                    return this.columnpc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn syjlColumn {
                get {
                    return this.columnsyjl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ztColumn {
                get {
                    return this.columnzt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ksnameColumn {
                get {
                    return this.columnksname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ysnameColumn {
                get {
                    return this.columnysname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pyckColumn {
                get {
                    return this.columnpyck;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fphColumn {
                get {
                    return this.columnfph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hzxmColumn {
                get {
                    return this.columnhzxm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sexColumn {
                get {
                    return this.columnsex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ageColumn {
                get {
                    return this.columnage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn blhColumn {
                get {
                    return this.columnblh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sfrqColumn {
                get {
                    return this.columnsfrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn psztColumn {
                get {
                    return this.columnpszt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zjeColumn {
                get {
                    return this.columnzje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pzhColumn {
                get {
                    return this.columnpzh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pyrColumn {
                get {
                    return this.columnpyr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fyrColumn {
                get {
                    return this.columnfyr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zdmcColumn {
                get {
                    return this.columnzdmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pyckdmColumn {
                get {
                    return this.columnpyckdm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fyckdmColumn {
                get {
                    return this.columnfyckdm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SYFFColumn {
                get {
                    return this.columnSYFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SYPCColumn {
                get {
                    return this.columnSYPC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JLColumn {
                get {
                    return this.columnJL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JLDWColumn {
                get {
                    return this.columnJLDW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TSColumn {
                get {
                    return this.columnTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YZZHColumn {
                get {
                    return this.columnYZZH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PXXHColumn {
                get {
                    return this.columnPXXH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KHColumn {
                get {
                    return this.columnKH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JXColumn {
                get {
                    return this.columnJX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CFRQColumn {
                get {
                    return this.columnCFRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FZBZColumn {
                get {
                    return this.columnFZBZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JTDZColumn {
                get {
                    return this.columnJTDZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LXDHColumn {
                get {
                    return this.columnLXDH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SFZHColumn {
                get {
                    return this.columnSFZH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bz1Column {
                get {
                    return this.columnbz1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bz2Column {
                get {
                    return this.columnbz2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bz3Column {
                get {
                    return this.columnbz3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dyrColumn {
                get {
                    return this.columndyr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn imageColumn {
                get {
                    return this.columnimage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hwmcColumn {
                get {
                    return this.columnhwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tsyfColumn {
                get {
                    return this.columntsyf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn imgfyrColumn {
                get {
                    return this.columnimgfyr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn imgpyrColumn {
                get {
                    return this.columnimgpyr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 病人处方清单Row this[int index] {
                get {
                    return ((病人处方清单Row)(this.Rows[index]));
                }
            }
            
            public event 病人处方清单RowChangeEventHandler 病人处方清单RowChanging;
            
            public event 病人处方清单RowChangeEventHandler 病人处方清单RowChanged;
            
            public event 病人处方清单RowChangeEventHandler 病人处方清单RowDeleting;
            
            public event 病人处方清单RowChangeEventHandler 病人处方清单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add病人处方清单Row(病人处方清单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 病人处方清单Row Add病人处方清单Row(
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        decimal lsj, 
                        string ypsl, 
                        string ypdw, 
                        string cfts, 
                        decimal lsje, 
                        string yf, 
                        string pc, 
                        string syjl, 
                        string zt, 
                        string shh, 
                        string ksname, 
                        string ysname, 
                        string pyck, 
                        string fph, 
                        string hzxm, 
                        string sex, 
                        string age, 
                        int xh, 
                        string blh, 
                        string sfrq, 
                        string pszt, 
                        decimal zje, 
                        string pzh, 
                        string pyr, 
                        string fyr, 
                        string zdmc, 
                        string pyckdm, 
                        string fyckdm, 
                        string SYFF, 
                        string SYPC, 
                        string JL, 
                        string JLDW, 
                        string TS, 
                        int YZZH, 
                        int PXXH, 
                        string KH, 
                        string JX, 
                        string CFRQ, 
                        string FZBZ, 
                        string JTDZ, 
                        string LXDH, 
                        string SFZH, 
                        string bz1, 
                        string bz2, 
                        string bz3, 
                        string dyr, 
                        byte[] image, 
                        string hwmc, 
                        string tsyf, 
                        byte[] imgfyr, 
                        byte[] imgpyr, 
                        string ypspm) {
                病人处方清单Row row病人处方清单Row = ((病人处方清单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ypmc,
                        ypgg,
                        sccj,
                        lsj,
                        ypsl,
                        ypdw,
                        cfts,
                        lsje,
                        yf,
                        pc,
                        syjl,
                        zt,
                        shh,
                        ksname,
                        ysname,
                        pyck,
                        fph,
                        hzxm,
                        sex,
                        age,
                        xh,
                        blh,
                        sfrq,
                        pszt,
                        zje,
                        pzh,
                        pyr,
                        fyr,
                        zdmc,
                        pyckdm,
                        fyckdm,
                        SYFF,
                        SYPC,
                        JL,
                        JLDW,
                        TS,
                        YZZH,
                        PXXH,
                        KH,
                        JX,
                        CFRQ,
                        FZBZ,
                        JTDZ,
                        LXDH,
                        SFZH,
                        bz1,
                        bz2,
                        bz3,
                        dyr,
                        image,
                        hwmc,
                        tsyf,
                        imgfyr,
                        imgpyr,
                        ypspm};
                row病人处方清单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row病人处方清单Row);
                return row病人处方清单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                病人处方清单DataTable cln = ((病人处方清单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 病人处方清单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columncfts = base.Columns["cfts"];
                this.columnlsje = base.Columns["lsje"];
                this.columnyf = base.Columns["yf"];
                this.columnpc = base.Columns["pc"];
                this.columnsyjl = base.Columns["syjl"];
                this.columnzt = base.Columns["zt"];
                this.columnshh = base.Columns["shh"];
                this.columnksname = base.Columns["ksname"];
                this.columnysname = base.Columns["ysname"];
                this.columnpyck = base.Columns["pyck"];
                this.columnfph = base.Columns["fph"];
                this.columnhzxm = base.Columns["hzxm"];
                this.columnsex = base.Columns["sex"];
                this.columnage = base.Columns["age"];
                this.columnxh = base.Columns["xh"];
                this.columnblh = base.Columns["blh"];
                this.columnsfrq = base.Columns["sfrq"];
                this.columnpszt = base.Columns["pszt"];
                this.columnzje = base.Columns["zje"];
                this.columnpzh = base.Columns["pzh"];
                this.columnpyr = base.Columns["pyr"];
                this.columnfyr = base.Columns["fyr"];
                this.columnzdmc = base.Columns["zdmc"];
                this.columnpyckdm = base.Columns["pyckdm"];
                this.columnfyckdm = base.Columns["fyckdm"];
                this.columnSYFF = base.Columns["SYFF"];
                this.columnSYPC = base.Columns["SYPC"];
                this.columnJL = base.Columns["JL"];
                this.columnJLDW = base.Columns["JLDW"];
                this.columnTS = base.Columns["TS"];
                this.columnYZZH = base.Columns["YZZH"];
                this.columnPXXH = base.Columns["PXXH"];
                this.columnKH = base.Columns["KH"];
                this.columnJX = base.Columns["JX"];
                this.columnCFRQ = base.Columns["CFRQ"];
                this.columnFZBZ = base.Columns["FZBZ"];
                this.columnJTDZ = base.Columns["JTDZ"];
                this.columnLXDH = base.Columns["LXDH"];
                this.columnSFZH = base.Columns["SFZH"];
                this.columnbz1 = base.Columns["bz1"];
                this.columnbz2 = base.Columns["bz2"];
                this.columnbz3 = base.Columns["bz3"];
                this.columndyr = base.Columns["dyr"];
                this.columnimage = base.Columns["image"];
                this.columnhwmc = base.Columns["hwmc"];
                this.columntsyf = base.Columns["tsyf"];
                this.columnimgfyr = base.Columns["imgfyr"];
                this.columnimgpyr = base.Columns["imgpyr"];
                this.columnypspm = base.Columns["ypspm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columncfts = new global::System.Data.DataColumn("cfts", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncfts);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnyf = new global::System.Data.DataColumn("yf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyf);
                this.columnpc = new global::System.Data.DataColumn("pc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpc);
                this.columnsyjl = new global::System.Data.DataColumn("syjl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsyjl);
                this.columnzt = new global::System.Data.DataColumn("zt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzt);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnksname = new global::System.Data.DataColumn("ksname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnksname);
                this.columnysname = new global::System.Data.DataColumn("ysname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysname);
                this.columnpyck = new global::System.Data.DataColumn("pyck", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpyck);
                this.columnfph = new global::System.Data.DataColumn("fph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfph);
                this.columnhzxm = new global::System.Data.DataColumn("hzxm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhzxm);
                this.columnsex = new global::System.Data.DataColumn("sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsex);
                this.columnage = new global::System.Data.DataColumn("age", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnage);
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnblh = new global::System.Data.DataColumn("blh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblh);
                this.columnsfrq = new global::System.Data.DataColumn("sfrq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsfrq);
                this.columnpszt = new global::System.Data.DataColumn("pszt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpszt);
                this.columnzje = new global::System.Data.DataColumn("zje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzje);
                this.columnpzh = new global::System.Data.DataColumn("pzh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpzh);
                this.columnpyr = new global::System.Data.DataColumn("pyr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpyr);
                this.columnfyr = new global::System.Data.DataColumn("fyr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfyr);
                this.columnzdmc = new global::System.Data.DataColumn("zdmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzdmc);
                this.columnpyckdm = new global::System.Data.DataColumn("pyckdm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpyckdm);
                this.columnfyckdm = new global::System.Data.DataColumn("fyckdm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfyckdm);
                this.columnSYFF = new global::System.Data.DataColumn("SYFF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYFF);
                this.columnSYPC = new global::System.Data.DataColumn("SYPC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYPC);
                this.columnJL = new global::System.Data.DataColumn("JL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJL);
                this.columnJLDW = new global::System.Data.DataColumn("JLDW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJLDW);
                this.columnTS = new global::System.Data.DataColumn("TS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTS);
                this.columnYZZH = new global::System.Data.DataColumn("YZZH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYZZH);
                this.columnPXXH = new global::System.Data.DataColumn("PXXH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPXXH);
                this.columnKH = new global::System.Data.DataColumn("KH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKH);
                this.columnJX = new global::System.Data.DataColumn("JX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJX);
                this.columnCFRQ = new global::System.Data.DataColumn("CFRQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCFRQ);
                this.columnFZBZ = new global::System.Data.DataColumn("FZBZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFZBZ);
                this.columnJTDZ = new global::System.Data.DataColumn("JTDZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJTDZ);
                this.columnLXDH = new global::System.Data.DataColumn("LXDH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLXDH);
                this.columnSFZH = new global::System.Data.DataColumn("SFZH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSFZH);
                this.columnbz1 = new global::System.Data.DataColumn("bz1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbz1);
                this.columnbz2 = new global::System.Data.DataColumn("bz2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbz2);
                this.columnbz3 = new global::System.Data.DataColumn("bz3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbz3);
                this.columndyr = new global::System.Data.DataColumn("dyr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndyr);
                this.columnimage = new global::System.Data.DataColumn("image", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimage);
                this.columnhwmc = new global::System.Data.DataColumn("hwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhwmc);
                this.columntsyf = new global::System.Data.DataColumn("tsyf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntsyf);
                this.columnimgfyr = new global::System.Data.DataColumn("imgfyr", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimgfyr);
                this.columnimgpyr = new global::System.Data.DataColumn("imgpyr", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimgpyr);
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 病人处方清单Row New病人处方清单Row() {
                return ((病人处方清单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 病人处方清单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(病人处方清单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.病人处方清单RowChanged != null)) {
                    this.病人处方清单RowChanged(this, new 病人处方清单RowChangeEvent(((病人处方清单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.病人处方清单RowChanging != null)) {
                    this.病人处方清单RowChanging(this, new 病人处方清单RowChangeEvent(((病人处方清单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.病人处方清单RowDeleted != null)) {
                    this.病人处方清单RowDeleted(this, new 病人处方清单RowChangeEvent(((病人处方清单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.病人处方清单RowDeleting != null)) {
                    this.病人处方清单RowDeleting(this, new 病人处方清单RowChangeEvent(((病人处方清单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove病人处方清单Row(病人处方清单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "病人处方清单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 发药明细单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnypspm;
            
            private global::System.Data.DataColumn columnyppm;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnypjx;
            
            private global::System.Data.DataColumn columntlfl;
            
            private global::System.Data.DataColumn columngroupid;
            
            private global::System.Data.DataColumn columnfyrq;
            
            private global::System.Data.DataColumn columnfyr;
            
            private global::System.Data.DataColumn columnpyr;
            
            private global::System.Data.DataColumn columnlydw;
            
            private global::System.Data.DataColumn columnbz;
            
            private global::System.Data.DataColumn columninpatient_no;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnbed_no;
            
            private global::System.Data.DataColumn columnksname;
            
            private global::System.Data.DataColumn columnysname;
            
            private global::System.Data.DataColumn columncfts;
            
            private global::System.Data.DataColumn columnpresc_no;
            
            private global::System.Data.DataColumn columnrowno;
            
            private global::System.Data.DataColumn columnorder_usage;
            
            private global::System.Data.DataColumn columnhwh;
            
            private global::System.Data.DataColumn columnxb;
            
            private global::System.Data.DataColumn columnnl;
            
            private global::System.Data.DataColumn columnjtdz;
            
            private global::System.Data.DataColumn columnlxdh;
            
            private global::System.Data.DataColumn columnsfzh;
            
            private global::System.Data.DataColumn columnbz1;
            
            private global::System.Data.DataColumn columnbz2;
            
            private global::System.Data.DataColumn columnbz3;
            
            private global::System.Data.DataColumn columnjl;
            
            private global::System.Data.DataColumn columntsyf;
            
            private global::System.Data.DataColumn columnimage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发药明细单DataTable() {
                this.TableName = "发药明细单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 发药明细单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 发药明细单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yppmColumn {
                get {
                    return this.columnyppm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypjxColumn {
                get {
                    return this.columnypjx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tlflColumn {
                get {
                    return this.columntlfl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn groupidColumn {
                get {
                    return this.columngroupid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fyrqColumn {
                get {
                    return this.columnfyrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fyrColumn {
                get {
                    return this.columnfyr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pyrColumn {
                get {
                    return this.columnpyr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lydwColumn {
                get {
                    return this.columnlydw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bzColumn {
                get {
                    return this.columnbz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inpatient_noColumn {
                get {
                    return this.columninpatient_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bed_noColumn {
                get {
                    return this.columnbed_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ksnameColumn {
                get {
                    return this.columnksname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ysnameColumn {
                get {
                    return this.columnysname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cftsColumn {
                get {
                    return this.columncfts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn presc_noColumn {
                get {
                    return this.columnpresc_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rownoColumn {
                get {
                    return this.columnrowno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn order_usageColumn {
                get {
                    return this.columnorder_usage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hwhColumn {
                get {
                    return this.columnhwh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xbColumn {
                get {
                    return this.columnxb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nlColumn {
                get {
                    return this.columnnl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jtdzColumn {
                get {
                    return this.columnjtdz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lxdhColumn {
                get {
                    return this.columnlxdh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sfzhColumn {
                get {
                    return this.columnsfzh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bz1Column {
                get {
                    return this.columnbz1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bz2Column {
                get {
                    return this.columnbz2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bz3Column {
                get {
                    return this.columnbz3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlColumn {
                get {
                    return this.columnjl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tsyfColumn {
                get {
                    return this.columntsyf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn imageColumn {
                get {
                    return this.columnimage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发药明细单Row this[int index] {
                get {
                    return ((发药明细单Row)(this.Rows[index]));
                }
            }
            
            public event 发药明细单RowChangeEventHandler 发药明细单RowChanging;
            
            public event 发药明细单RowChangeEventHandler 发药明细单RowChanged;
            
            public event 发药明细单RowChangeEventHandler 发药明细单RowDeleting;
            
            public event 发药明细单RowChangeEventHandler 发药明细单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add发药明细单Row(发药明细单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发药明细单Row Add发药明细单Row(
                        string ypspm, 
                        string yppm, 
                        string ypgg, 
                        string sccj, 
                        decimal pfj, 
                        decimal lsj, 
                        decimal pfje, 
                        decimal lsje, 
                        string ypsl, 
                        string ypdw, 
                        string shh, 
                        string ypjx, 
                        string tlfl, 
                        string groupid, 
                        string fyrq, 
                        string fyr, 
                        string pyr, 
                        string lydw, 
                        string bz, 
                        string inpatient_no, 
                        string name, 
                        string bed_no, 
                        string ksname, 
                        string ysname, 
                        string cfts, 
                        string presc_no, 
                        string rowno, 
                        string order_usage, 
                        string hwh, 
                        string xb, 
                        string nl, 
                        string jtdz, 
                        string lxdh, 
                        string sfzh, 
                        string bz1, 
                        string bz2, 
                        string bz3, 
                        string jl, 
                        string tsyf, 
                        byte[] image) {
                发药明细单Row row发药明细单Row = ((发药明细单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ypspm,
                        yppm,
                        ypgg,
                        sccj,
                        pfj,
                        lsj,
                        pfje,
                        lsje,
                        ypsl,
                        ypdw,
                        shh,
                        ypjx,
                        tlfl,
                        groupid,
                        fyrq,
                        fyr,
                        pyr,
                        lydw,
                        bz,
                        inpatient_no,
                        name,
                        bed_no,
                        ksname,
                        ysname,
                        cfts,
                        presc_no,
                        rowno,
                        order_usage,
                        hwh,
                        xb,
                        nl,
                        jtdz,
                        lxdh,
                        sfzh,
                        bz1,
                        bz2,
                        bz3,
                        jl,
                        tsyf,
                        image};
                row发药明细单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row发药明细单Row);
                return row发药明细单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                发药明细单DataTable cln = ((发药明细单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 发药明细单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnypspm = base.Columns["ypspm"];
                this.columnyppm = base.Columns["yppm"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnpfj = base.Columns["pfj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsje = base.Columns["lsje"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnshh = base.Columns["shh"];
                this.columnypjx = base.Columns["ypjx"];
                this.columntlfl = base.Columns["tlfl"];
                this.columngroupid = base.Columns["groupid"];
                this.columnfyrq = base.Columns["fyrq"];
                this.columnfyr = base.Columns["fyr"];
                this.columnpyr = base.Columns["pyr"];
                this.columnlydw = base.Columns["lydw"];
                this.columnbz = base.Columns["bz"];
                this.columninpatient_no = base.Columns["inpatient_no"];
                this.columnname = base.Columns["name"];
                this.columnbed_no = base.Columns["bed_no"];
                this.columnksname = base.Columns["ksname"];
                this.columnysname = base.Columns["ysname"];
                this.columncfts = base.Columns["cfts"];
                this.columnpresc_no = base.Columns["presc_no"];
                this.columnrowno = base.Columns["rowno"];
                this.columnorder_usage = base.Columns["order_usage"];
                this.columnhwh = base.Columns["hwh"];
                this.columnxb = base.Columns["xb"];
                this.columnnl = base.Columns["nl"];
                this.columnjtdz = base.Columns["jtdz"];
                this.columnlxdh = base.Columns["lxdh"];
                this.columnsfzh = base.Columns["sfzh"];
                this.columnbz1 = base.Columns["bz1"];
                this.columnbz2 = base.Columns["bz2"];
                this.columnbz3 = base.Columns["bz3"];
                this.columnjl = base.Columns["jl"];
                this.columntsyf = base.Columns["tsyf"];
                this.columnimage = base.Columns["image"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
                this.columnyppm = new global::System.Data.DataColumn("yppm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyppm);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnypjx = new global::System.Data.DataColumn("ypjx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypjx);
                this.columntlfl = new global::System.Data.DataColumn("tlfl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntlfl);
                this.columngroupid = new global::System.Data.DataColumn("groupid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngroupid);
                this.columnfyrq = new global::System.Data.DataColumn("fyrq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfyrq);
                this.columnfyr = new global::System.Data.DataColumn("fyr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfyr);
                this.columnpyr = new global::System.Data.DataColumn("pyr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpyr);
                this.columnlydw = new global::System.Data.DataColumn("lydw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlydw);
                this.columnbz = new global::System.Data.DataColumn("bz", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbz);
                this.columninpatient_no = new global::System.Data.DataColumn("inpatient_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninpatient_no);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnbed_no = new global::System.Data.DataColumn("bed_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbed_no);
                this.columnksname = new global::System.Data.DataColumn("ksname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnksname);
                this.columnysname = new global::System.Data.DataColumn("ysname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysname);
                this.columncfts = new global::System.Data.DataColumn("cfts", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncfts);
                this.columnpresc_no = new global::System.Data.DataColumn("presc_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpresc_no);
                this.columnrowno = new global::System.Data.DataColumn("rowno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowno);
                this.columnorder_usage = new global::System.Data.DataColumn("order_usage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_usage);
                this.columnhwh = new global::System.Data.DataColumn("hwh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhwh);
                this.columnxb = new global::System.Data.DataColumn("xb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxb);
                this.columnnl = new global::System.Data.DataColumn("nl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnl);
                this.columnjtdz = new global::System.Data.DataColumn("jtdz", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjtdz);
                this.columnlxdh = new global::System.Data.DataColumn("lxdh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlxdh);
                this.columnsfzh = new global::System.Data.DataColumn("sfzh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsfzh);
                this.columnbz1 = new global::System.Data.DataColumn("bz1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbz1);
                this.columnbz2 = new global::System.Data.DataColumn("bz2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbz2);
                this.columnbz3 = new global::System.Data.DataColumn("bz3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbz3);
                this.columnjl = new global::System.Data.DataColumn("jl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjl);
                this.columntsyf = new global::System.Data.DataColumn("tsyf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntsyf);
                this.columnimage = new global::System.Data.DataColumn("image", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimage);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发药明细单Row New发药明细单Row() {
                return ((发药明细单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 发药明细单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(发药明细单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.发药明细单RowChanged != null)) {
                    this.发药明细单RowChanged(this, new 发药明细单RowChangeEvent(((发药明细单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.发药明细单RowChanging != null)) {
                    this.发药明细单RowChanging(this, new 发药明细单RowChangeEvent(((发药明细单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.发药明细单RowDeleted != null)) {
                    this.发药明细单RowDeleted(this, new 发药明细单RowChangeEvent(((发药明细单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.发药明细单RowDeleting != null)) {
                    this.发药明细单RowDeleting(this, new 发药明细单RowChangeEvent(((发药明细单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove发药明细单Row(发药明细单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "发药明细单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品汇总统计DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnwardname;
            
            private global::System.Data.DataColumn columndjzs;
            
            private global::System.Data.DataColumn columndjje;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnyppm;
            
            private global::System.Data.DataColumn columnypspm;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columndjpfje;
            
            private global::System.Data.DataColumn columnsfsl;
            
            private global::System.Data.DataColumn columnmemo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品汇总统计DataTable() {
                this.TableName = "药品汇总统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品汇总统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品汇总统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wardnameColumn {
                get {
                    return this.columnwardname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djzsColumn {
                get {
                    return this.columndjzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djjeColumn {
                get {
                    return this.columndjje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yppmColumn {
                get {
                    return this.columnyppm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djpfjeColumn {
                get {
                    return this.columndjpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sfslColumn {
                get {
                    return this.columnsfsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn memoColumn {
                get {
                    return this.columnmemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品汇总统计Row this[int index] {
                get {
                    return ((药品汇总统计Row)(this.Rows[index]));
                }
            }
            
            public event 药品汇总统计RowChangeEventHandler 药品汇总统计RowChanging;
            
            public event 药品汇总统计RowChangeEventHandler 药品汇总统计RowChanged;
            
            public event 药品汇总统计RowChangeEventHandler 药品汇总统计RowDeleting;
            
            public event 药品汇总统计RowChangeEventHandler 药品汇总统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品汇总统计Row(药品汇总统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品汇总统计Row Add药品汇总统计Row(
                        int xh, 
                        string wardname, 
                        decimal djzs, 
                        decimal djje, 
                        string shh, 
                        string yppm, 
                        string ypspm, 
                        string ypgg, 
                        string sccj, 
                        decimal ypsl, 
                        string ypdw, 
                        decimal lsje, 
                        decimal pfje, 
                        decimal djpfje, 
                        string sfsl, 
                        string memo) {
                药品汇总统计Row row药品汇总统计Row = ((药品汇总统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        wardname,
                        djzs,
                        djje,
                        shh,
                        yppm,
                        ypspm,
                        ypgg,
                        sccj,
                        ypsl,
                        ypdw,
                        lsje,
                        pfje,
                        djpfje,
                        sfsl,
                        memo};
                row药品汇总统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品汇总统计Row);
                return row药品汇总统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品汇总统计DataTable cln = ((药品汇总统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品汇总统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnwardname = base.Columns["wardname"];
                this.columndjzs = base.Columns["djzs"];
                this.columndjje = base.Columns["djje"];
                this.columnshh = base.Columns["shh"];
                this.columnyppm = base.Columns["yppm"];
                this.columnypspm = base.Columns["ypspm"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnlsje = base.Columns["lsje"];
                this.columnpfje = base.Columns["pfje"];
                this.columndjpfje = base.Columns["djpfje"];
                this.columnsfsl = base.Columns["sfsl"];
                this.columnmemo = base.Columns["memo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnwardname = new global::System.Data.DataColumn("wardname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwardname);
                this.columndjzs = new global::System.Data.DataColumn("djzs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjzs);
                this.columndjje = new global::System.Data.DataColumn("djje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjje);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnyppm = new global::System.Data.DataColumn("yppm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyppm);
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columndjpfje = new global::System.Data.DataColumn("djpfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjpfje);
                this.columnsfsl = new global::System.Data.DataColumn("sfsl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsfsl);
                this.columnmemo = new global::System.Data.DataColumn("memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmemo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品汇总统计Row New药品汇总统计Row() {
                return ((药品汇总统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品汇总统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品汇总统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品汇总统计RowChanged != null)) {
                    this.药品汇总统计RowChanged(this, new 药品汇总统计RowChangeEvent(((药品汇总统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品汇总统计RowChanging != null)) {
                    this.药品汇总统计RowChanging(this, new 药品汇总统计RowChangeEvent(((药品汇总统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品汇总统计RowDeleted != null)) {
                    this.药品汇总统计RowDeleted(this, new 药品汇总统计RowChangeEvent(((药品汇总统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品汇总统计RowDeleting != null)) {
                    this.药品汇总统计RowDeleting(this, new 药品汇总统计RowChangeEvent(((药品汇总统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品汇总统计Row(药品汇总统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品汇总统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 处方统计DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnxmmc;
            
            private global::System.Data.DataColumn columncfzs;
            
            private global::System.Data.DataColumn columncfje;
            
            private global::System.Data.DataColumn columntyzs;
            
            private global::System.Data.DataColumn columntyje;
            
            private global::System.Data.DataColumn columnsumcfzs;
            
            private global::System.Data.DataColumn columnsumcfje;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 处方统计DataTable() {
                this.TableName = "处方统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 处方统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 处方统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xmmcColumn {
                get {
                    return this.columnxmmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cfzsColumn {
                get {
                    return this.columncfzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cfjeColumn {
                get {
                    return this.columncfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tyzsColumn {
                get {
                    return this.columntyzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tyjeColumn {
                get {
                    return this.columntyje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sumcfzsColumn {
                get {
                    return this.columnsumcfzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sumcfjeColumn {
                get {
                    return this.columnsumcfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 处方统计Row this[int index] {
                get {
                    return ((处方统计Row)(this.Rows[index]));
                }
            }
            
            public event 处方统计RowChangeEventHandler 处方统计RowChanging;
            
            public event 处方统计RowChangeEventHandler 处方统计RowChanged;
            
            public event 处方统计RowChangeEventHandler 处方统计RowDeleting;
            
            public event 处方统计RowChangeEventHandler 处方统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add处方统计Row(处方统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 处方统计Row Add处方统计Row(int xh, string xmmc, long cfzs, decimal cfje, long tyzs, decimal tyje, long sumcfzs, decimal sumcfje) {
                处方统计Row row处方统计Row = ((处方统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        xmmc,
                        cfzs,
                        cfje,
                        tyzs,
                        tyje,
                        sumcfzs,
                        sumcfje};
                row处方统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row处方统计Row);
                return row处方统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                处方统计DataTable cln = ((处方统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 处方统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnxmmc = base.Columns["xmmc"];
                this.columncfzs = base.Columns["cfzs"];
                this.columncfje = base.Columns["cfje"];
                this.columntyzs = base.Columns["tyzs"];
                this.columntyje = base.Columns["tyje"];
                this.columnsumcfzs = base.Columns["sumcfzs"];
                this.columnsumcfje = base.Columns["sumcfje"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnxmmc = new global::System.Data.DataColumn("xmmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxmmc);
                this.columncfzs = new global::System.Data.DataColumn("cfzs", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncfzs);
                this.columncfje = new global::System.Data.DataColumn("cfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncfje);
                this.columntyzs = new global::System.Data.DataColumn("tyzs", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntyzs);
                this.columntyje = new global::System.Data.DataColumn("tyje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntyje);
                this.columnsumcfzs = new global::System.Data.DataColumn("sumcfzs", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsumcfzs);
                this.columnsumcfje = new global::System.Data.DataColumn("sumcfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsumcfje);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 处方统计Row New处方统计Row() {
                return ((处方统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 处方统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(处方统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.处方统计RowChanged != null)) {
                    this.处方统计RowChanged(this, new 处方统计RowChangeEvent(((处方统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.处方统计RowChanging != null)) {
                    this.处方统计RowChanging(this, new 处方统计RowChangeEvent(((处方统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.处方统计RowDeleted != null)) {
                    this.处方统计RowDeleted(this, new 处方统计RowChangeEvent(((处方统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.处方统计RowDeleting != null)) {
                    this.处方统计RowDeleting(this, new 处方统计RowChangeEvent(((处方统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove处方统计Row(处方统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "处方统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 收费发药处方统计DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnrq;
            
            private global::System.Data.DataColumn columnsfzs;
            
            private global::System.Data.DataColumn columnsfje;
            
            private global::System.Data.DataColumn columnbrfyzs;
            
            private global::System.Data.DataColumn columnbrfyje;
            
            private global::System.Data.DataColumn columnwrfyzs;
            
            private global::System.Data.DataColumn columnwrfyje;
            
            private global::System.Data.DataColumn columnwfyzs;
            
            private global::System.Data.DataColumn columnwfyje;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费发药处方统计DataTable() {
                this.TableName = "收费发药处方统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费发药处方统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 收费发药处方统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rqColumn {
                get {
                    return this.columnrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sfzsColumn {
                get {
                    return this.columnsfzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sfjeColumn {
                get {
                    return this.columnsfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn brfyzsColumn {
                get {
                    return this.columnbrfyzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn brfyjeColumn {
                get {
                    return this.columnbrfyje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wrfyzsColumn {
                get {
                    return this.columnwrfyzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wrfyjeColumn {
                get {
                    return this.columnwrfyje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wfyzsColumn {
                get {
                    return this.columnwfyzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wfyjeColumn {
                get {
                    return this.columnwfyje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费发药处方统计Row this[int index] {
                get {
                    return ((收费发药处方统计Row)(this.Rows[index]));
                }
            }
            
            public event 收费发药处方统计RowChangeEventHandler 收费发药处方统计RowChanging;
            
            public event 收费发药处方统计RowChangeEventHandler 收费发药处方统计RowChanged;
            
            public event 收费发药处方统计RowChangeEventHandler 收费发药处方统计RowDeleting;
            
            public event 收费发药处方统计RowChangeEventHandler 收费发药处方统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add收费发药处方统计Row(收费发药处方统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费发药处方统计Row Add收费发药处方统计Row(int xh, string rq, string sfzs, string sfje, string brfyzs, string brfyje, string wrfyzs, string wrfyje, string wfyzs, string wfyje) {
                收费发药处方统计Row row收费发药处方统计Row = ((收费发药处方统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        rq,
                        sfzs,
                        sfje,
                        brfyzs,
                        brfyje,
                        wrfyzs,
                        wrfyje,
                        wfyzs,
                        wfyje};
                row收费发药处方统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row收费发药处方统计Row);
                return row收费发药处方统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                收费发药处方统计DataTable cln = ((收费发药处方统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 收费发药处方统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnrq = base.Columns["rq"];
                this.columnsfzs = base.Columns["sfzs"];
                this.columnsfje = base.Columns["sfje"];
                this.columnbrfyzs = base.Columns["brfyzs"];
                this.columnbrfyje = base.Columns["brfyje"];
                this.columnwrfyzs = base.Columns["wrfyzs"];
                this.columnwrfyje = base.Columns["wrfyje"];
                this.columnwfyzs = base.Columns["wfyzs"];
                this.columnwfyje = base.Columns["wfyje"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnrq = new global::System.Data.DataColumn("rq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrq);
                this.columnsfzs = new global::System.Data.DataColumn("sfzs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsfzs);
                this.columnsfje = new global::System.Data.DataColumn("sfje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsfje);
                this.columnbrfyzs = new global::System.Data.DataColumn("brfyzs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbrfyzs);
                this.columnbrfyje = new global::System.Data.DataColumn("brfyje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbrfyje);
                this.columnwrfyzs = new global::System.Data.DataColumn("wrfyzs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwrfyzs);
                this.columnwrfyje = new global::System.Data.DataColumn("wrfyje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwrfyje);
                this.columnwfyzs = new global::System.Data.DataColumn("wfyzs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwfyzs);
                this.columnwfyje = new global::System.Data.DataColumn("wfyje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwfyje);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费发药处方统计Row New收费发药处方统计Row() {
                return ((收费发药处方统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 收费发药处方统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(收费发药处方统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.收费发药处方统计RowChanged != null)) {
                    this.收费发药处方统计RowChanged(this, new 收费发药处方统计RowChangeEvent(((收费发药处方统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.收费发药处方统计RowChanging != null)) {
                    this.收费发药处方统计RowChanging(this, new 收费发药处方统计RowChangeEvent(((收费发药处方统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.收费发药处方统计RowDeleted != null)) {
                    this.收费发药处方统计RowDeleted(this, new 收费发药处方统计RowChangeEvent(((收费发药处方统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.收费发药处方统计RowDeleting != null)) {
                    this.收费发药处方统计RowDeleting(this, new 收费发药处方统计RowChangeEvent(((收费发药处方统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove收费发药处方统计Row(收费发药处方统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "收费发药处方统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 单据汇总统计DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnwldw;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnjlce;
            
            private global::System.Data.DataColumn columnplce;
            
            private global::System.Data.DataColumn columndjzs;
            
            private global::System.Data.DataColumn columnrckfs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 单据汇总统计DataTable() {
                this.TableName = "单据汇总统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 单据汇总统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 单据汇总统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wldwColumn {
                get {
                    return this.columnwldw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plceColumn {
                get {
                    return this.columnplce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djzsColumn {
                get {
                    return this.columndjzs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rckfsColumn {
                get {
                    return this.columnrckfs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 单据汇总统计Row this[int index] {
                get {
                    return ((单据汇总统计Row)(this.Rows[index]));
                }
            }
            
            public event 单据汇总统计RowChangeEventHandler 单据汇总统计RowChanging;
            
            public event 单据汇总统计RowChangeEventHandler 单据汇总统计RowChanged;
            
            public event 单据汇总统计RowChangeEventHandler 单据汇总统计RowDeleting;
            
            public event 单据汇总统计RowChangeEventHandler 单据汇总统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add单据汇总统计Row(单据汇总统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 单据汇总统计Row Add单据汇总统计Row(string xh, string wldw, decimal jhje, decimal pfje, decimal lsje, decimal jlce, decimal plce, long djzs, string rckfs) {
                单据汇总统计Row row单据汇总统计Row = ((单据汇总统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        wldw,
                        jhje,
                        pfje,
                        lsje,
                        jlce,
                        plce,
                        djzs,
                        rckfs};
                row单据汇总统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row单据汇总统计Row);
                return row单据汇总统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                单据汇总统计DataTable cln = ((单据汇总统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 单据汇总统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnwldw = base.Columns["wldw"];
                this.columnjhje = base.Columns["jhje"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsje = base.Columns["lsje"];
                this.columnjlce = base.Columns["jlce"];
                this.columnplce = base.Columns["plce"];
                this.columndjzs = base.Columns["djzs"];
                this.columnrckfs = base.Columns["rckfs"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnwldw = new global::System.Data.DataColumn("wldw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwldw);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
                this.columnplce = new global::System.Data.DataColumn("plce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplce);
                this.columndjzs = new global::System.Data.DataColumn("djzs", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjzs);
                this.columnrckfs = new global::System.Data.DataColumn("rckfs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrckfs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 单据汇总统计Row New单据汇总统计Row() {
                return ((单据汇总统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 单据汇总统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(单据汇总统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.单据汇总统计RowChanged != null)) {
                    this.单据汇总统计RowChanged(this, new 单据汇总统计RowChangeEvent(((单据汇总统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.单据汇总统计RowChanging != null)) {
                    this.单据汇总统计RowChanging(this, new 单据汇总统计RowChangeEvent(((单据汇总统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.单据汇总统计RowDeleted != null)) {
                    this.单据汇总统计RowDeleted(this, new 单据汇总统计RowChangeEvent(((单据汇总统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.单据汇总统计RowDeleting != null)) {
                    this.单据汇总统计RowDeleting(this, new 单据汇总统计RowChangeEvent(((单据汇总统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove单据汇总统计Row(单据汇总统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "单据汇总统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 贵重药品统计DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnyppm;
            
            private global::System.Data.DataColumn columnypspm;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnrksl;
            
            private global::System.Data.DataColumn columncksl;
            
            private global::System.Data.DataColumn columnkcsl;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnypgg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 贵重药品统计DataTable() {
                this.TableName = "贵重药品统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 贵重药品统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 贵重药品统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yppmColumn {
                get {
                    return this.columnyppm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rkslColumn {
                get {
                    return this.columnrksl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ckslColumn {
                get {
                    return this.columncksl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kcslColumn {
                get {
                    return this.columnkcsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 贵重药品统计Row this[int index] {
                get {
                    return ((贵重药品统计Row)(this.Rows[index]));
                }
            }
            
            public event 贵重药品统计RowChangeEventHandler 贵重药品统计RowChanging;
            
            public event 贵重药品统计RowChangeEventHandler 贵重药品统计RowChanged;
            
            public event 贵重药品统计RowChangeEventHandler 贵重药品统计RowDeleting;
            
            public event 贵重药品统计RowChangeEventHandler 贵重药品统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add贵重药品统计Row(贵重药品统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 贵重药品统计Row Add贵重药品统计Row(string xh, string yppm, string ypspm, string sccj, decimal lsj, string ypdw, decimal rksl, decimal cksl, decimal kcsl, string shh, string ypgg) {
                贵重药品统计Row row贵重药品统计Row = ((贵重药品统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        yppm,
                        ypspm,
                        sccj,
                        lsj,
                        ypdw,
                        rksl,
                        cksl,
                        kcsl,
                        shh,
                        ypgg};
                row贵重药品统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row贵重药品统计Row);
                return row贵重药品统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                贵重药品统计DataTable cln = ((贵重药品统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 贵重药品统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnyppm = base.Columns["yppm"];
                this.columnypspm = base.Columns["ypspm"];
                this.columnsccj = base.Columns["sccj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnrksl = base.Columns["rksl"];
                this.columncksl = base.Columns["cksl"];
                this.columnkcsl = base.Columns["kcsl"];
                this.columnshh = base.Columns["shh"];
                this.columnypgg = base.Columns["ypgg"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnyppm = new global::System.Data.DataColumn("yppm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyppm);
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnrksl = new global::System.Data.DataColumn("rksl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrksl);
                this.columncksl = new global::System.Data.DataColumn("cksl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncksl);
                this.columnkcsl = new global::System.Data.DataColumn("kcsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkcsl);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 贵重药品统计Row New贵重药品统计Row() {
                return ((贵重药品统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 贵重药品统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(贵重药品统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.贵重药品统计RowChanged != null)) {
                    this.贵重药品统计RowChanged(this, new 贵重药品统计RowChangeEvent(((贵重药品统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.贵重药品统计RowChanging != null)) {
                    this.贵重药品统计RowChanging(this, new 贵重药品统计RowChangeEvent(((贵重药品统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.贵重药品统计RowDeleted != null)) {
                    this.贵重药品统计RowDeleted(this, new 贵重药品统计RowChangeEvent(((贵重药品统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.贵重药品统计RowDeleting != null)) {
                    this.贵重药品统计RowDeleting(this, new 贵重药品统计RowChangeEvent(((贵重药品统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove贵重药品统计Row(贵重药品统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "贵重药品统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 住院药品摆药明细DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnypspm;
            
            private global::System.Data.DataColumn columnyppm;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnypjx;
            
            private global::System.Data.DataColumn columngroupid;
            
            private global::System.Data.DataColumn columnfyrq;
            
            private global::System.Data.DataColumn columnfyr;
            
            private global::System.Data.DataColumn columnpyr;
            
            private global::System.Data.DataColumn columnlydw;
            
            private global::System.Data.DataColumn columninpatient_no;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnbed_no;
            
            private global::System.Data.DataColumn columnksname;
            
            private global::System.Data.DataColumn columnysname;
            
            private global::System.Data.DataColumn columncfts;
            
            private global::System.Data.DataColumn columnrowno;
            
            private global::System.Data.DataColumn columnYF;
            
            private global::System.Data.DataColumn columnMCYL;
            
            private global::System.Data.DataColumn columnMCDW;
            
            private global::System.Data.DataColumn columnPC;
            
            private global::System.Data.DataColumn columnhwh;
            
            private global::System.Data.DataColumn columncfrq;
            
            private global::System.Data.DataColumn columnMNGTYPE;
            
            private global::System.Data.DataColumn columngysj;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 住院药品摆药明细DataTable() {
                this.TableName = "住院药品摆药明细";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 住院药品摆药明细DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 住院药品摆药明细DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yppmColumn {
                get {
                    return this.columnyppm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypjxColumn {
                get {
                    return this.columnypjx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn groupidColumn {
                get {
                    return this.columngroupid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fyrqColumn {
                get {
                    return this.columnfyrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fyrColumn {
                get {
                    return this.columnfyr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pyrColumn {
                get {
                    return this.columnpyr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lydwColumn {
                get {
                    return this.columnlydw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inpatient_noColumn {
                get {
                    return this.columninpatient_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bed_noColumn {
                get {
                    return this.columnbed_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ksnameColumn {
                get {
                    return this.columnksname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ysnameColumn {
                get {
                    return this.columnysname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cftsColumn {
                get {
                    return this.columncfts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rownoColumn {
                get {
                    return this.columnrowno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YFColumn {
                get {
                    return this.columnYF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MCYLColumn {
                get {
                    return this.columnMCYL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MCDWColumn {
                get {
                    return this.columnMCDW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCColumn {
                get {
                    return this.columnPC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hwhColumn {
                get {
                    return this.columnhwh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cfrqColumn {
                get {
                    return this.columncfrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MNGTYPEColumn {
                get {
                    return this.columnMNGTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gysjColumn {
                get {
                    return this.columngysj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 住院药品摆药明细Row this[int index] {
                get {
                    return ((住院药品摆药明细Row)(this.Rows[index]));
                }
            }
            
            public event 住院药品摆药明细RowChangeEventHandler 住院药品摆药明细RowChanging;
            
            public event 住院药品摆药明细RowChangeEventHandler 住院药品摆药明细RowChanged;
            
            public event 住院药品摆药明细RowChangeEventHandler 住院药品摆药明细RowDeleting;
            
            public event 住院药品摆药明细RowChangeEventHandler 住院药品摆药明细RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add住院药品摆药明细Row(住院药品摆药明细Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 住院药品摆药明细Row Add住院药品摆药明细Row(
                        string ypspm, 
                        string yppm, 
                        string ypgg, 
                        string sccj, 
                        decimal lsj, 
                        decimal lsje, 
                        string ypsl, 
                        string ypdw, 
                        string shh, 
                        string ypjx, 
                        string groupid, 
                        string fyrq, 
                        string fyr, 
                        string pyr, 
                        string lydw, 
                        string inpatient_no, 
                        string name, 
                        string bed_no, 
                        string ksname, 
                        string ysname, 
                        string cfts, 
                        string rowno, 
                        string YF, 
                        string MCYL, 
                        string MCDW, 
                        string PC, 
                        string hwh, 
                        string cfrq, 
                        string MNGTYPE, 
                        string gysj) {
                住院药品摆药明细Row row住院药品摆药明细Row = ((住院药品摆药明细Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ypspm,
                        yppm,
                        ypgg,
                        sccj,
                        lsj,
                        lsje,
                        ypsl,
                        ypdw,
                        shh,
                        ypjx,
                        groupid,
                        fyrq,
                        fyr,
                        pyr,
                        lydw,
                        inpatient_no,
                        name,
                        bed_no,
                        ksname,
                        ysname,
                        cfts,
                        rowno,
                        YF,
                        MCYL,
                        MCDW,
                        PC,
                        hwh,
                        cfrq,
                        MNGTYPE,
                        gysj};
                row住院药品摆药明细Row.ItemArray = columnValuesArray;
                this.Rows.Add(row住院药品摆药明细Row);
                return row住院药品摆药明细Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                住院药品摆药明细DataTable cln = ((住院药品摆药明细DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 住院药品摆药明细DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnypspm = base.Columns["ypspm"];
                this.columnyppm = base.Columns["yppm"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnlsje = base.Columns["lsje"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnshh = base.Columns["shh"];
                this.columnypjx = base.Columns["ypjx"];
                this.columngroupid = base.Columns["groupid"];
                this.columnfyrq = base.Columns["fyrq"];
                this.columnfyr = base.Columns["fyr"];
                this.columnpyr = base.Columns["pyr"];
                this.columnlydw = base.Columns["lydw"];
                this.columninpatient_no = base.Columns["inpatient_no"];
                this.columnname = base.Columns["name"];
                this.columnbed_no = base.Columns["bed_no"];
                this.columnksname = base.Columns["ksname"];
                this.columnysname = base.Columns["ysname"];
                this.columncfts = base.Columns["cfts"];
                this.columnrowno = base.Columns["rowno"];
                this.columnYF = base.Columns["YF"];
                this.columnMCYL = base.Columns["MCYL"];
                this.columnMCDW = base.Columns["MCDW"];
                this.columnPC = base.Columns["PC"];
                this.columnhwh = base.Columns["hwh"];
                this.columncfrq = base.Columns["cfrq"];
                this.columnMNGTYPE = base.Columns["MNGTYPE"];
                this.columngysj = base.Columns["gysj"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
                this.columnyppm = new global::System.Data.DataColumn("yppm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyppm);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnypjx = new global::System.Data.DataColumn("ypjx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypjx);
                this.columngroupid = new global::System.Data.DataColumn("groupid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngroupid);
                this.columnfyrq = new global::System.Data.DataColumn("fyrq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfyrq);
                this.columnfyr = new global::System.Data.DataColumn("fyr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfyr);
                this.columnpyr = new global::System.Data.DataColumn("pyr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpyr);
                this.columnlydw = new global::System.Data.DataColumn("lydw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlydw);
                this.columninpatient_no = new global::System.Data.DataColumn("inpatient_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninpatient_no);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnbed_no = new global::System.Data.DataColumn("bed_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbed_no);
                this.columnksname = new global::System.Data.DataColumn("ksname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnksname);
                this.columnysname = new global::System.Data.DataColumn("ysname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysname);
                this.columncfts = new global::System.Data.DataColumn("cfts", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncfts);
                this.columnrowno = new global::System.Data.DataColumn("rowno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrowno);
                this.columnYF = new global::System.Data.DataColumn("YF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYF);
                this.columnMCYL = new global::System.Data.DataColumn("MCYL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMCYL);
                this.columnMCDW = new global::System.Data.DataColumn("MCDW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMCDW);
                this.columnPC = new global::System.Data.DataColumn("PC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPC);
                this.columnhwh = new global::System.Data.DataColumn("hwh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhwh);
                this.columncfrq = new global::System.Data.DataColumn("cfrq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncfrq);
                this.columnMNGTYPE = new global::System.Data.DataColumn("MNGTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMNGTYPE);
                this.columngysj = new global::System.Data.DataColumn("gysj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngysj);
                this.columnYF.Caption = "order_usage";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 住院药品摆药明细Row New住院药品摆药明细Row() {
                return ((住院药品摆药明细Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 住院药品摆药明细Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(住院药品摆药明细Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.住院药品摆药明细RowChanged != null)) {
                    this.住院药品摆药明细RowChanged(this, new 住院药品摆药明细RowChangeEvent(((住院药品摆药明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.住院药品摆药明细RowChanging != null)) {
                    this.住院药品摆药明细RowChanging(this, new 住院药品摆药明细RowChangeEvent(((住院药品摆药明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.住院药品摆药明细RowDeleted != null)) {
                    this.住院药品摆药明细RowDeleted(this, new 住院药品摆药明细RowChangeEvent(((住院药品摆药明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.住院药品摆药明细RowDeleting != null)) {
                    this.住院药品摆药明细RowDeleting(this, new 住院药品摆药明细RowChangeEvent(((住院药品摆药明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove住院药品摆药明细Row(住院药品摆药明细Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "住院药品摆药明细DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 发药配药工作量统计DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columntjr;
            
            private global::System.Data.DataColumn columnfys;
            
            private global::System.Data.DataColumn columnpys;
            
            private global::System.Data.DataColumn columnphs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发药配药工作量统计DataTable() {
                this.TableName = "发药配药工作量统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 发药配药工作量统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 发药配药工作量统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tjrColumn {
                get {
                    return this.columntjr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fysColumn {
                get {
                    return this.columnfys;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pysColumn {
                get {
                    return this.columnpys;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phsColumn {
                get {
                    return this.columnphs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发药配药工作量统计Row this[int index] {
                get {
                    return ((发药配药工作量统计Row)(this.Rows[index]));
                }
            }
            
            public event 发药配药工作量统计RowChangeEventHandler 发药配药工作量统计RowChanging;
            
            public event 发药配药工作量统计RowChangeEventHandler 发药配药工作量统计RowChanged;
            
            public event 发药配药工作量统计RowChangeEventHandler 发药配药工作量统计RowDeleting;
            
            public event 发药配药工作量统计RowChangeEventHandler 发药配药工作量统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add发药配药工作量统计Row(发药配药工作量统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发药配药工作量统计Row Add发药配药工作量统计Row(string tjr, int fys, int pys, int phs) {
                发药配药工作量统计Row row发药配药工作量统计Row = ((发药配药工作量统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        tjr,
                        fys,
                        pys,
                        phs};
                row发药配药工作量统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row发药配药工作量统计Row);
                return row发药配药工作量统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                发药配药工作量统计DataTable cln = ((发药配药工作量统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 发药配药工作量统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntjr = base.Columns["tjr"];
                this.columnfys = base.Columns["fys"];
                this.columnpys = base.Columns["pys"];
                this.columnphs = base.Columns["phs"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntjr = new global::System.Data.DataColumn("tjr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntjr);
                this.columnfys = new global::System.Data.DataColumn("fys", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfys);
                this.columnpys = new global::System.Data.DataColumn("pys", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpys);
                this.columnphs = new global::System.Data.DataColumn("phs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发药配药工作量统计Row New发药配药工作量统计Row() {
                return ((发药配药工作量统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 发药配药工作量统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(发药配药工作量统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.发药配药工作量统计RowChanged != null)) {
                    this.发药配药工作量统计RowChanged(this, new 发药配药工作量统计RowChangeEvent(((发药配药工作量统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.发药配药工作量统计RowChanging != null)) {
                    this.发药配药工作量统计RowChanging(this, new 发药配药工作量统计RowChangeEvent(((发药配药工作量统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.发药配药工作量统计RowDeleted != null)) {
                    this.发药配药工作量统计RowDeleted(this, new 发药配药工作量统计RowChangeEvent(((发药配药工作量统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.发药配药工作量统计RowDeleting != null)) {
                    this.发药配药工作量统计RowDeleting(this, new 发药配药工作量统计RowChangeEvent(((发药配药工作量统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove发药配药工作量统计Row(发药配药工作量统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "发药配药工作量统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 门诊精麻处方单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columngg;
            
            private global::System.Data.DataColumn columnsl;
            
            private global::System.Data.DataColumn columndw;
            
            private global::System.Data.DataColumn columnpl;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypyf;
            
            private global::System.Data.DataColumn columnysimage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊精麻处方单DataTable() {
                this.TableName = "门诊精麻处方单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 门诊精麻处方单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 门诊精麻处方单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ggColumn {
                get {
                    return this.columngg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn slColumn {
                get {
                    return this.columnsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dwColumn {
                get {
                    return this.columndw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plColumn {
                get {
                    return this.columnpl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypyfColumn {
                get {
                    return this.columnypyf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ysimageColumn {
                get {
                    return this.columnysimage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊精麻处方单Row this[int index] {
                get {
                    return ((门诊精麻处方单Row)(this.Rows[index]));
                }
            }
            
            public event 门诊精麻处方单RowChangeEventHandler 门诊精麻处方单RowChanging;
            
            public event 门诊精麻处方单RowChangeEventHandler 门诊精麻处方单RowChanged;
            
            public event 门诊精麻处方单RowChangeEventHandler 门诊精麻处方单RowDeleting;
            
            public event 门诊精麻处方单RowChangeEventHandler 门诊精麻处方单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add门诊精麻处方单Row(门诊精麻处方单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊精麻处方单Row Add门诊精麻处方单Row(string xh, string gg, string sl, string dw, string pl, string ypmc, string ypyf, byte[] ysimage) {
                门诊精麻处方单Row row门诊精麻处方单Row = ((门诊精麻处方单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        gg,
                        sl,
                        dw,
                        pl,
                        ypmc,
                        ypyf,
                        ysimage};
                row门诊精麻处方单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row门诊精麻处方单Row);
                return row门诊精麻处方单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                门诊精麻处方单DataTable cln = ((门诊精麻处方单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 门诊精麻处方单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columngg = base.Columns["gg"];
                this.columnsl = base.Columns["sl"];
                this.columndw = base.Columns["dw"];
                this.columnpl = base.Columns["pl"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypyf = base.Columns["ypyf"];
                this.columnysimage = base.Columns["ysimage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columngg = new global::System.Data.DataColumn("gg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngg);
                this.columnsl = new global::System.Data.DataColumn("sl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsl);
                this.columndw = new global::System.Data.DataColumn("dw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndw);
                this.columnpl = new global::System.Data.DataColumn("pl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpl);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypyf = new global::System.Data.DataColumn("ypyf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypyf);
                this.columnysimage = new global::System.Data.DataColumn("ysimage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysimage);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊精麻处方单Row New门诊精麻处方单Row() {
                return ((门诊精麻处方单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 门诊精麻处方单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(门诊精麻处方单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.门诊精麻处方单RowChanged != null)) {
                    this.门诊精麻处方单RowChanged(this, new 门诊精麻处方单RowChangeEvent(((门诊精麻处方单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.门诊精麻处方单RowChanging != null)) {
                    this.门诊精麻处方单RowChanging(this, new 门诊精麻处方单RowChangeEvent(((门诊精麻处方单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.门诊精麻处方单RowDeleted != null)) {
                    this.门诊精麻处方单RowDeleted(this, new 门诊精麻处方单RowChangeEvent(((门诊精麻处方单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.门诊精麻处方单RowDeleting != null)) {
                    this.门诊精麻处方单RowDeleting(this, new 门诊精麻处方单RowChangeEvent(((门诊精麻处方单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove门诊精麻处方单Row(门诊精麻处方单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "门诊精麻处方单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 精二DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columngg;
            
            private global::System.Data.DataColumn columnsl;
            
            private global::System.Data.DataColumn columndw;
            
            private global::System.Data.DataColumn columnpl;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypyf;
            
            private global::System.Data.DataColumn columnysimage;
            
            private global::System.Data.DataColumn columnblh;
            
            private global::System.Data.DataColumn columnbzl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 精二DataTable() {
                this.TableName = "精二";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 精二DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 精二DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ggColumn {
                get {
                    return this.columngg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn slColumn {
                get {
                    return this.columnsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dwColumn {
                get {
                    return this.columndw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plColumn {
                get {
                    return this.columnpl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypyfColumn {
                get {
                    return this.columnypyf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ysimageColumn {
                get {
                    return this.columnysimage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn blhColumn {
                get {
                    return this.columnblh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bzlColumn {
                get {
                    return this.columnbzl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 精二Row this[int index] {
                get {
                    return ((精二Row)(this.Rows[index]));
                }
            }
            
            public event 精二RowChangeEventHandler 精二RowChanging;
            
            public event 精二RowChangeEventHandler 精二RowChanged;
            
            public event 精二RowChangeEventHandler 精二RowDeleting;
            
            public event 精二RowChangeEventHandler 精二RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add精二Row(精二Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 精二Row Add精二Row(string xh, string gg, string sl, string dw, string pl, string ypmc, string ypyf, byte[] ysimage, string blh, string bzl) {
                精二Row row精二Row = ((精二Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        gg,
                        sl,
                        dw,
                        pl,
                        ypmc,
                        ypyf,
                        ysimage,
                        blh,
                        bzl};
                row精二Row.ItemArray = columnValuesArray;
                this.Rows.Add(row精二Row);
                return row精二Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                精二DataTable cln = ((精二DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 精二DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columngg = base.Columns["gg"];
                this.columnsl = base.Columns["sl"];
                this.columndw = base.Columns["dw"];
                this.columnpl = base.Columns["pl"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypyf = base.Columns["ypyf"];
                this.columnysimage = base.Columns["ysimage"];
                this.columnblh = base.Columns["blh"];
                this.columnbzl = base.Columns["bzl"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columngg = new global::System.Data.DataColumn("gg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngg);
                this.columnsl = new global::System.Data.DataColumn("sl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsl);
                this.columndw = new global::System.Data.DataColumn("dw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndw);
                this.columnpl = new global::System.Data.DataColumn("pl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpl);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypyf = new global::System.Data.DataColumn("ypyf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypyf);
                this.columnysimage = new global::System.Data.DataColumn("ysimage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysimage);
                this.columnblh = new global::System.Data.DataColumn("blh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblh);
                this.columnbzl = new global::System.Data.DataColumn("bzl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbzl);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 精二Row New精二Row() {
                return ((精二Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 精二Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(精二Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.精二RowChanged != null)) {
                    this.精二RowChanged(this, new 精二RowChangeEvent(((精二Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.精二RowChanging != null)) {
                    this.精二RowChanging(this, new 精二RowChangeEvent(((精二Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.精二RowDeleted != null)) {
                    this.精二RowDeleted(this, new 精二RowChangeEvent(((精二Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.精二RowDeleting != null)) {
                    this.精二RowDeleting(this, new 精二RowChangeEvent(((精二Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove精二Row(精二Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset2 ds = new Dataset2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "精二DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 采购入库单Row : global::System.Data.DataRow {
            
            private 采购入库单DataTable table采购入库单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 采购入库单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table采购入库单 = ((采购入库单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table采购入库单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypkl {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.ypklColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“ypkl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.ypklColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhj {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.jhjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“jhj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.jhjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jlce {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table采购入库单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table采购入库单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table采购入库单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table采购入库单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table采购入库单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table采购入库单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table采购入库单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table采购入库单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table采购入库单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table采购入库单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table采购入库单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table采购入库单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypklNull() {
                return this.IsNull(this.table采购入库单.ypklColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypklNull() {
                this[this.table采购入库单.ypklColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjNull() {
                return this.IsNull(this.table采购入库单.jhjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjNull() {
                this[this.table采购入库单.jhjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table采购入库单.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table采购入库单.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table采购入库单.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table采购入库单.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table采购入库单.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table采购入库单.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table采购入库单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table采购入库单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table采购入库单.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table采购入库单.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table采购入库单.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table采购入库单.jlceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table采购入库单.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table采购入库单.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table采购入库单.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table采购入库单.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table采购入库单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table采购入库单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table采购入库单.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table采购入库单.kwmcColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 普通入库单Row : global::System.Data.DataRow {
            
            private 普通入库单DataTable table普通入库单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 普通入库单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table普通入库单 = ((普通入库单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table普通入库单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal plce {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.plceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“plce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.plceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhj {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.jhjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“jhj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.jhjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jlce {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table普通入库单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table普通入库单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table普通入库单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table普通入库单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table普通入库单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table普通入库单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table普通入库单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table普通入库单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table普通入库单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table普通入库单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table普通入库单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table普通入库单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table普通入库单.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table普通入库单.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table普通入库单.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table普通入库单.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table普通入库单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table普通入库单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table普通入库单.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table普通入库单.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplceNull() {
                return this.IsNull(this.table普通入库单.plceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplceNull() {
                this[this.table普通入库单.plceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table普通入库单.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table普通入库单.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table普通入库单.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table普通入库单.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table普通入库单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table普通入库单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table普通入库单.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table普通入库单.kwmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjNull() {
                return this.IsNull(this.table普通入库单.jhjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjNull() {
                this[this.table普通入库单.jhjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table普通入库单.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table普通入库单.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table普通入库单.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table普通入库单.jlceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品申请单Row : global::System.Data.DataRow {
            
            private 药品申请单DataTable table药品申请单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品申请单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品申请单 = ((药品申请单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品申请单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table药品申请单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品申请单.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table药品申请单.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品申请单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table药品申请单.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal plce {
                get {
                    try {
                        return ((decimal)(this[this.table药品申请单.plceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“plce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.plceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品申请单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品申请单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table药品申请单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table药品申请单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品申请单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品申请单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品申请单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品申请单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table药品申请单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table药品申请单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品申请单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品申请单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table药品申请单.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table药品申请单.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table药品申请单.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table药品申请单.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药品申请单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药品申请单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table药品申请单.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table药品申请单.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplceNull() {
                return this.IsNull(this.table药品申请单.plceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplceNull() {
                this[this.table药品申请单.plceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table药品申请单.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table药品申请单.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table药品申请单.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table药品申请单.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品申请单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品申请单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table药品申请单.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table药品申请单.kwmcColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品出库单Row : global::System.Data.DataRow {
            
            private 药品出库单DataTable table药品出库单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品出库单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品出库单 = ((药品出库单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品出库单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal plce {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.plceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“plce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.plceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhj {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.jhjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“jhj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.jhjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jlce {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yppch {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.yppchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“yppch”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.yppchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kcl {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.kclColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“kcl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.kclColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品出库单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品出库单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table药品出库单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table药品出库单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品出库单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品出库单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品出库单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品出库单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table药品出库单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table药品出库单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品出库单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品出库单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table药品出库单.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table药品出库单.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table药品出库单.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table药品出库单.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药品出库单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药品出库单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table药品出库单.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table药品出库单.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplceNull() {
                return this.IsNull(this.table药品出库单.plceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplceNull() {
                this[this.table药品出库单.plceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table药品出库单.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table药品出库单.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table药品出库单.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table药品出库单.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品出库单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品出库单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table药品出库单.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table药品出库单.kwmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjNull() {
                return this.IsNull(this.table药品出库单.jhjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjNull() {
                this[this.table药品出库单.jhjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table药品出库单.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table药品出库单.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table药品出库单.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table药品出库单.jlceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyppchNull() {
                return this.IsNull(this.table药品出库单.yppchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyppchNull() {
                this[this.table药品出库单.yppchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskclNull() {
                return this.IsNull(this.table药品出库单.kclColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkclNull() {
                this[this.table药品出库单.kclColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品调价单Row : global::System.Data.DataRow {
            
            private 药品调价单DataTable table药品调价单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品调价单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品调价单 = ((药品调价单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品调价单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.ypfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“ypfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.ypfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ylsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.ylsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“ylsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.ylsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal xpfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.xpfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“xpfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.xpfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal xlsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.xlsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“xlsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.xlsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfjdwcj {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.pfjdwcjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“pfjdwcj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.pfjdwcjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsjdwcj {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.lsjdwcjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“lsjdwcj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.lsjdwcjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tpfje {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.tpfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“tpfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.tpfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tlsje {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.tlsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“tlsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.tlsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tjwh {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.tjwhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“tjwh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.tjwhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zxrq {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.zxrqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“zxrq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.zxrqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ckmc {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.ckmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“ckmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.ckmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品调价单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品调价单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table药品调价单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table药品调价单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品调价单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品调价单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品调价单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品调价单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table药品调价单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table药品调价单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品调价单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品调价单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypfjNull() {
                return this.IsNull(this.table药品调价单.ypfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypfjNull() {
                this[this.table药品调价单.ypfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsylsjNull() {
                return this.IsNull(this.table药品调价单.ylsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetylsjNull() {
                this[this.table药品调价单.ylsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxpfjNull() {
                return this.IsNull(this.table药品调价单.xpfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxpfjNull() {
                this[this.table药品调价单.xpfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxlsjNull() {
                return this.IsNull(this.table药品调价单.xlsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxlsjNull() {
                this[this.table药品调价单.xlsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjdwcjNull() {
                return this.IsNull(this.table药品调价单.pfjdwcjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjdwcjNull() {
                this[this.table药品调价单.pfjdwcjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjdwcjNull() {
                return this.IsNull(this.table药品调价单.lsjdwcjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjdwcjNull() {
                this[this.table药品调价单.lsjdwcjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstpfjeNull() {
                return this.IsNull(this.table药品调价单.tpfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettpfjeNull() {
                this[this.table药品调价单.tpfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstlsjeNull() {
                return this.IsNull(this.table药品调价单.tlsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettlsjeNull() {
                this[this.table药品调价单.tlsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品调价单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品调价单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstjwhNull() {
                return this.IsNull(this.table药品调价单.tjwhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettjwhNull() {
                this[this.table药品调价单.tjwhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszxrqNull() {
                return this.IsNull(this.table药品调价单.zxrqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzxrqNull() {
                this[this.table药品调价单.zxrqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsckmcNull() {
                return this.IsNull(this.table药品调价单.ckmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetckmcNull() {
                this[this.table药品调价单.ckmcColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 报损报溢单Row : global::System.Data.DataRow {
            
            private 报损报溢单DataTable table报损报溢单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 报损报溢单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table报损报溢单 = ((报损报溢单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table报损报溢单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal plce {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.plceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“plce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.plceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhj {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.jhjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“jhj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.jhjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jlce {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table报损报溢单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table报损报溢单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table报损报溢单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table报损报溢单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table报损报溢单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table报损报溢单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table报损报溢单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table报损报溢单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table报损报溢单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table报损报溢单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table报损报溢单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table报损报溢单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table报损报溢单.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table报损报溢单.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table报损报溢单.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table报损报溢单.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table报损报溢单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table报损报溢单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table报损报溢单.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table报损报溢单.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplceNull() {
                return this.IsNull(this.table报损报溢单.plceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplceNull() {
                this[this.table报损报溢单.plceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table报损报溢单.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table报损报溢单.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table报损报溢单.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table报损报溢单.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table报损报溢单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table报损报溢单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table报损报溢单.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table报损报溢单.kwmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjNull() {
                return this.IsNull(this.table报损报溢单.jhjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjNull() {
                this[this.table报损报溢单.jhjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table报损报溢单.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table报损报溢单.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table报损报溢单.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table报损报溢单.jlceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品盘点单Row : global::System.Data.DataRow {
            
            private 药品盘点单DataTable table药品盘点单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品盘点单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品盘点单 = ((药品盘点单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品盘点单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal zcsl {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.zcslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“zcsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.zcslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal zcje {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.zcjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“zcje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.zcjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pcsl {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.pcslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“pcsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.pcslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pcje {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.pcjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“pcje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.pcjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal yksl {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.ykslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“yksl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ykslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ykje {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.ykjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ykje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ykjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhj {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.jhjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“jhj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.jhjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jlce {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yppch {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.yppchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“yppch”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.yppchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal zcjhje {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.zcjhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“zcjhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.zcjhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pcjhje {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.pcjhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“pcjhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.pcjhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ykjhje {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.ykjhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ykjhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ykjhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yplx {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.yplxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“yplx”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.yplxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypjx {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.ypjxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ypjx”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ypjxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品盘点单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品盘点单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table药品盘点单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table药品盘点单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品盘点单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品盘点单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品盘点单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品盘点单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品盘点单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品盘点单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table药品盘点单.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table药品盘点单.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药品盘点单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药品盘点单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszcslNull() {
                return this.IsNull(this.table药品盘点单.zcslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzcslNull() {
                this[this.table药品盘点单.zcslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszcjeNull() {
                return this.IsNull(this.table药品盘点单.zcjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzcjeNull() {
                this[this.table药品盘点单.zcjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspcslNull() {
                return this.IsNull(this.table药品盘点单.pcslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpcslNull() {
                this[this.table药品盘点单.pcslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspcjeNull() {
                return this.IsNull(this.table药品盘点单.pcjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpcjeNull() {
                this[this.table药品盘点单.pcjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsykslNull() {
                return this.IsNull(this.table药品盘点单.ykslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetykslNull() {
                this[this.table药品盘点单.ykslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsykjeNull() {
                return this.IsNull(this.table药品盘点单.ykjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetykjeNull() {
                this[this.table药品盘点单.ykjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品盘点单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品盘点单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table药品盘点单.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table药品盘点单.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table药品盘点单.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table药品盘点单.kwmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjNull() {
                return this.IsNull(this.table药品盘点单.jhjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjNull() {
                this[this.table药品盘点单.jhjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table药品盘点单.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table药品盘点单.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table药品盘点单.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table药品盘点单.jlceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyppchNull() {
                return this.IsNull(this.table药品盘点单.yppchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyppchNull() {
                this[this.table药品盘点单.yppchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszcjhjeNull() {
                return this.IsNull(this.table药品盘点单.zcjhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzcjhjeNull() {
                this[this.table药品盘点单.zcjhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspcjhjeNull() {
                return this.IsNull(this.table药品盘点单.pcjhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpcjhjeNull() {
                this[this.table药品盘点单.pcjhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsykjhjeNull() {
                return this.IsNull(this.table药品盘点单.ykjhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetykjhjeNull() {
                this[this.table药品盘点单.ykjhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyplxNull() {
                return this.IsNull(this.table药品盘点单.yplxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyplxNull() {
                this[this.table药品盘点单.yplxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypjxNull() {
                return this.IsNull(this.table药品盘点单.ypjxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypjxNull() {
                this[this.table药品盘点单.ypjxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table药品盘点单.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table药品盘点单.ypxqColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品采购计划Row : global::System.Data.DataRow {
            
            private 药品采购计划DataTable table药品采购计划;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品采购计划Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品采购计划 = ((药品采购计划DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品采购计划.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品采购计划.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品采购计划.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal xqs {
                get {
                    try {
                        return ((decimal)(this[this.table药品采购计划.xqsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“xqs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.xqsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhs {
                get {
                    try {
                        return ((decimal)(this[this.table药品采购计划.jhsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“jhs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.jhsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ckjj {
                get {
                    try {
                        return ((decimal)(this[this.table药品采购计划.ckjjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“ckjj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.ckjjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ckkl {
                get {
                    try {
                        return ((decimal)(this[this.table药品采购计划.ckklColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“ckkl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.ckklColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ghdw {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.ghdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“ghdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.ghdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品采购计划.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品采购计划.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table药品采购计划.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table药品采购计划.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品采购计划.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品采购计划.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品采购计划.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品采购计划.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品采购计划.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品采购计划.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table药品采购计划.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table药品采购计划.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药品采购计划.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药品采购计划.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxqsNull() {
                return this.IsNull(this.table药品采购计划.xqsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxqsNull() {
                this[this.table药品采购计划.xqsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhsNull() {
                return this.IsNull(this.table药品采购计划.jhsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhsNull() {
                this[this.table药品采购计划.jhsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsckjjNull() {
                return this.IsNull(this.table药品采购计划.ckjjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetckjjNull() {
                this[this.table药品采购计划.ckjjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsckklNull() {
                return this.IsNull(this.table药品采购计划.ckklColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetckklNull() {
                this[this.table药品采购计划.ckklColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsghdwNull() {
                return this.IsNull(this.table药品采购计划.ghdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetghdwNull() {
                this[this.table药品采购计划.ghdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品采购计划.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品采购计划.shhColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 进销存情况表Row : global::System.Data.DataRow {
            
            private 进销存情况表DataTable table进销存情况表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 进销存情况表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table进销存情况表 = ((进销存情况表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xmmc {
                get {
                    try {
                        return ((string)(this[this.table进销存情况表.xmmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进销存情况表”中列“xmmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进销存情况表.xmmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string je {
                get {
                    try {
                        return ((string)(this[this.table进销存情况表.jeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进销存情况表”中列“je”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进销存情况表.jeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xmmc1 {
                get {
                    try {
                        return ((string)(this[this.table进销存情况表.xmmc1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进销存情况表”中列“xmmc1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进销存情况表.xmmc1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string je1 {
                get {
                    try {
                        return ((string)(this[this.table进销存情况表.je1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进销存情况表”中列“je1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进销存情况表.je1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxmmcNull() {
                return this.IsNull(this.table进销存情况表.xmmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxmmcNull() {
                this[this.table进销存情况表.xmmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjeNull() {
                return this.IsNull(this.table进销存情况表.jeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjeNull() {
                this[this.table进销存情况表.jeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isxmmc1Null() {
                return this.IsNull(this.table进销存情况表.xmmc1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setxmmc1Null() {
                this[this.table进销存情况表.xmmc1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isje1Null() {
                return this.IsNull(this.table进销存情况表.je1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setje1Null() {
                this[this.table进销存情况表.je1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 付款情况表Row : global::System.Data.DataRow {
            
            private 付款情况表DataTable table付款情况表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 付款情况表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table付款情况表 = ((付款情况表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table付款情况表.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djh {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.djhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“djh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.djhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djrq {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.djrqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“djrq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.djrqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djlb {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.djlbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“djlb”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.djlbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table付款情况表.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fph {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.fphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“fph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.fphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fprq {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.fprqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“fprq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.fprqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ghdw {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.ghdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“ghdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.ghdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shdh {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.shdhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“shdh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.shdhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djsj {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.djsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“djsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.djsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djy {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.djyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“djy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.djyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ywy {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.ywyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“ywy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.ywyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table付款情况表.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table付款情况表.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjhNull() {
                return this.IsNull(this.table付款情况表.djhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjhNull() {
                this[this.table付款情况表.djhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjrqNull() {
                return this.IsNull(this.table付款情况表.djrqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjrqNull() {
                this[this.table付款情况表.djrqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjlbNull() {
                return this.IsNull(this.table付款情况表.djlbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjlbNull() {
                this[this.table付款情况表.djlbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table付款情况表.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table付款情况表.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfphNull() {
                return this.IsNull(this.table付款情况表.fphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfphNull() {
                this[this.table付款情况表.fphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfprqNull() {
                return this.IsNull(this.table付款情况表.fprqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfprqNull() {
                this[this.table付款情况表.fprqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsghdwNull() {
                return this.IsNull(this.table付款情况表.ghdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetghdwNull() {
                this[this.table付款情况表.ghdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshdhNull() {
                return this.IsNull(this.table付款情况表.shdhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshdhNull() {
                this[this.table付款情况表.shdhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjsjNull() {
                return this.IsNull(this.table付款情况表.djsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjsjNull() {
                this[this.table付款情况表.djsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjyNull() {
                return this.IsNull(this.table付款情况表.djyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjyNull() {
                this[this.table付款情况表.djyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsywyNull() {
                return this.IsNull(this.table付款情况表.ywyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetywyNull() {
                this[this.table付款情况表.ywyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 保管明细帐Row : global::System.Data.DataRow {
            
            private 保管明细帐DataTable table保管明细帐;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 保管明细帐Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table保管明细帐 = ((保管明细帐DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table保管明细帐.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rq {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.rqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“rq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.rqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zy {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.zyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“zy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.zyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lsj {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jfsl {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.jfslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“jfsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.jfslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jfje {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.jfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“jfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.jfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dfsl {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.dfslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“dfsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.dfslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dfje {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.dfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“dfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.dfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jysl {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.jyslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“jysl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.jyslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyje {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.jyjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“jyje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.jyjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table保管明细帐.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table保管明细帐.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrqNull() {
                return this.IsNull(this.table保管明细帐.rqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrqNull() {
                this[this.table保管明细帐.rqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszyNull() {
                return this.IsNull(this.table保管明细帐.zyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzyNull() {
                this[this.table保管明细帐.zyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table保管明细帐.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table保管明细帐.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjfslNull() {
                return this.IsNull(this.table保管明细帐.jfslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjfslNull() {
                this[this.table保管明细帐.jfslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjfjeNull() {
                return this.IsNull(this.table保管明细帐.jfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjfjeNull() {
                this[this.table保管明细帐.jfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdfslNull() {
                return this.IsNull(this.table保管明细帐.dfslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdfslNull() {
                this[this.table保管明细帐.dfslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdfjeNull() {
                return this.IsNull(this.table保管明细帐.dfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdfjeNull() {
                this[this.table保管明细帐.dfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyslNull() {
                return this.IsNull(this.table保管明细帐.jyslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyslNull() {
                this[this.table保管明细帐.jyslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyjeNull() {
                return this.IsNull(this.table保管明细帐.jyjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyjeNull() {
                this[this.table保管明细帐.jyjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table保管明细帐.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table保管明细帐.ypdwColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 库存情况表Row : global::System.Data.DataRow {
            
            private 库存情况表DataTable table库存情况表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 库存情况表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table库存情况表 = ((库存情况表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table库存情况表.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table库存情况表.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table库存情况表.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table库存情况表.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table库存情况表.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table库存情况表.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kcl {
                get {
                    try {
                        return ((decimal)(this[this.table库存情况表.kclColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“kcl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.kclColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table库存情况表.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table库存情况表.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table库存情况表.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table库存情况表.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hwh {
                get {
                    try {
                        return ((string)(this[this.table库存情况表.hwhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“hwh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.hwhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table库存情况表.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table库存情况表.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table库存情况表.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table库存情况表.ypspmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table库存情况表.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table库存情况表.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table库存情况表.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table库存情况表.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table库存情况表.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table库存情况表.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table库存情况表.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table库存情况表.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskclNull() {
                return this.IsNull(this.table库存情况表.kclColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkclNull() {
                this[this.table库存情况表.kclColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table库存情况表.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table库存情况表.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table库存情况表.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table库存情况表.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table库存情况表.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table库存情况表.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table库存情况表.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table库存情况表.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshwhNull() {
                return this.IsNull(this.table库存情况表.hwhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethwhNull() {
                this[this.table库存情况表.hwhColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品失效报警Row : global::System.Data.DataRow {
            
            private 药品失效报警DataTable table药品失效报警;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品失效报警Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品失效报警 = ((药品失效报警DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品失效报警.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品失效报警.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品失效报警.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kcl {
                get {
                    try {
                        return ((decimal)(this[this.table药品失效报警.kclColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“kcl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.kclColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table药品失效报警.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table药品失效报警.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品失效报警.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品失效报警.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table药品失效报警.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table药品失效报警.ypspmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品失效报警.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品失效报警.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品失效报警.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品失效报警.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table药品失效报警.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table药品失效报警.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药品失效报警.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药品失效报警.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table药品失效报警.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table药品失效报警.kwmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table药品失效报警.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table药品失效报警.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table药品失效报警.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table药品失效报警.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskclNull() {
                return this.IsNull(this.table药品失效报警.kclColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkclNull() {
                this[this.table药品失效报警.kclColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品失效报警.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品失效报警.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table药品失效报警.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table药品失效报警.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table药品失效报警.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table药品失效报警.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品失效报警.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品失效报警.shhColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品高低储报警Row : global::System.Data.DataRow {
            
            private 药品高低储报警DataTable table药品高低储报警;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品高低储报警Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品高低储报警 = ((药品高低储报警DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品高低储报警.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table药品高低储报警.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品高低储报警.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品高低储报警.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品高低储报警.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品高低储报警.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kcsxx {
                get {
                    try {
                        return ((decimal)(this[this.table药品高低储报警.kcsxxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“kcsxx”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.kcsxxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kcl {
                get {
                    try {
                        return ((decimal)(this[this.table药品高低储报警.kclColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“kcl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.kclColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal gdc {
                get {
                    try {
                        return ((decimal)(this[this.table药品高低储报警.gdcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“gdc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.gdcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品高低储报警.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品高低储报警.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品高低储报警.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品高低储报警.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table药品高低储报警.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table药品高低储报警.ypspmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品高低储报警.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品高低储报警.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品高低储报警.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品高低储报警.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table药品高低储报警.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table药品高低储报警.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药品高低储报警.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药品高低储报警.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskcsxxNull() {
                return this.IsNull(this.table药品高低储报警.kcsxxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkcsxxNull() {
                this[this.table药品高低储报警.kcsxxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskclNull() {
                return this.IsNull(this.table药品高低储报警.kclColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkclNull() {
                this[this.table药品高低储报警.kclColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgdcNull() {
                return this.IsNull(this.table药品高低储报警.gdcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgdcNull() {
                this[this.table药品高低储报警.gdcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品高低储报警.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品高低储报警.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品高低储报警.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品高低储报警.shhColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 进出货排名统计Row : global::System.Data.DataRow {
            
            private 进出货排名统计DataTable table进出货排名统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 进出货排名统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table进出货排名统计 = ((进出货排名统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table进出货排名统计.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table进出货排名统计.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table进出货排名统计.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table进出货排名统计.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table进出货排名统计.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table进出货排名统计.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table进出货排名统计.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table进出货排名统计.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table进出货排名统计.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table进出货排名统计.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal plce {
                get {
                    try {
                        return ((decimal)(this[this.table进出货排名统计.plceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“plce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.plceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table进出货排名统计.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table进出货排名统计.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table进出货排名统计.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table进出货排名统计.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table进出货排名统计.ypspmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table进出货排名统计.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table进出货排名统计.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table进出货排名统计.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table进出货排名统计.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table进出货排名统计.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table进出货排名统计.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table进出货排名统计.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table进出货排名统计.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table进出货排名统计.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table进出货排名统计.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table进出货排名统计.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table进出货排名统计.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table进出货排名统计.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table进出货排名统计.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table进出货排名统计.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table进出货排名统计.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplceNull() {
                return this.IsNull(this.table进出货排名统计.plceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplceNull() {
                this[this.table进出货排名统计.plceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table进出货排名统计.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table进出货排名统计.shhColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 配发药工作量Row : global::System.Data.DataRow {
            
            private 配发药工作量DataTable table配发药工作量;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 配发药工作量Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table配发药工作量 = ((配发药工作量DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yfmc {
                get {
                    try {
                        return ((string)(this[this.table配发药工作量.yfmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“配发药工作量”中列“yfmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table配发药工作量.yfmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long xyzs {
                get {
                    try {
                        return ((long)(this[this.table配发药工作量.xyzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“配发药工作量”中列“xyzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table配发药工作量.xyzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long cyzs {
                get {
                    try {
                        return ((long)(this[this.table配发药工作量.cyzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“配发药工作量”中列“cyzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table配发药工作量.cyzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long zyzs {
                get {
                    try {
                        return ((long)(this[this.table配发药工作量.zyzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“配发药工作量”中列“zyzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table配发药工作量.zyzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long zyjs {
                get {
                    try {
                        return ((long)(this[this.table配发药工作量.zyjsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“配发药工作量”中列“zyjs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table配发药工作量.zyjsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long zzs {
                get {
                    try {
                        return ((long)(this[this.table配发药工作量.zzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“配发药工作量”中列“zzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table配发药工作量.zzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xm {
                get {
                    try {
                        return ((string)(this[this.table配发药工作量.xmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“配发药工作量”中列“xm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table配发药工作量.xmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal je {
                get {
                    try {
                        return ((decimal)(this[this.table配发药工作量.jeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“配发药工作量”中列“je”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table配发药工作量.jeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyfmcNull() {
                return this.IsNull(this.table配发药工作量.yfmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyfmcNull() {
                this[this.table配发药工作量.yfmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxyzsNull() {
                return this.IsNull(this.table配发药工作量.xyzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxyzsNull() {
                this[this.table配发药工作量.xyzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscyzsNull() {
                return this.IsNull(this.table配发药工作量.cyzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcyzsNull() {
                this[this.table配发药工作量.cyzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszyzsNull() {
                return this.IsNull(this.table配发药工作量.zyzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzyzsNull() {
                this[this.table配发药工作量.zyzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszyjsNull() {
                return this.IsNull(this.table配发药工作量.zyjsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzyjsNull() {
                this[this.table配发药工作量.zyjsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszzsNull() {
                return this.IsNull(this.table配发药工作量.zzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzzsNull() {
                this[this.table配发药工作量.zzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxmNull() {
                return this.IsNull(this.table配发药工作量.xmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxmNull() {
                this[this.table配发药工作量.xmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjeNull() {
                return this.IsNull(this.table配发药工作量.jeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjeNull() {
                this[this.table配发药工作量.jeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 病人处方清单Row : global::System.Data.DataRow {
            
            private 病人处方清单DataTable table病人处方清单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 病人处方清单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table病人处方清单 = ((病人处方清单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table病人处方清单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypsl {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cfts {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.cftsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“cfts”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.cftsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table病人处方清单.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yf {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.yfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“yf”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.yfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pc {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.pcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“pc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.pcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string syjl {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.syjlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“syjl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.syjlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zt {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.ztColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“zt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.ztColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ksname {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.ksnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“ksname”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.ksnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ysname {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.ysnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“ysname”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.ysnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pyck {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.pyckColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“pyck”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.pyckColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fph {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.fphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“fph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.fphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hzxm {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.hzxmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“hzxm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.hzxmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sex {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.sexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“sex”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.sexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string age {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.ageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“age”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.ageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table病人处方清单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string blh {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.blhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“blh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.blhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sfrq {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.sfrqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“sfrq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.sfrqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pszt {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.psztColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“pszt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.psztColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal zje {
                get {
                    try {
                        return ((decimal)(this[this.table病人处方清单.zjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“zje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.zjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pzh {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.pzhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“pzh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.pzhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pyr {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.pyrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“pyr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.pyrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fyr {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.fyrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“fyr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.fyrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zdmc {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.zdmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“zdmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.zdmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pyckdm {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.pyckdmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“pyckdm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.pyckdmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fyckdm {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.fyckdmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“fyckdm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.fyckdmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SYFF {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.SYFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“SYFF”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.SYFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SYPC {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.SYPCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“SYPC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.SYPCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JL {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.JLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“JL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.JLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JLDW {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.JLDWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“JLDW”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.JLDWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TS {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.TSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“TS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.TSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YZZH {
                get {
                    try {
                        return ((int)(this[this.table病人处方清单.YZZHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“YZZH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.YZZHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PXXH {
                get {
                    try {
                        return ((int)(this[this.table病人处方清单.PXXHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“PXXH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.PXXHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KH {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.KHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“KH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.KHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JX {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.JXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“JX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.JXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CFRQ {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.CFRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“CFRQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.CFRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FZBZ {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.FZBZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“FZBZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.FZBZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JTDZ {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.JTDZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“JTDZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.JTDZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LXDH {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.LXDHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“LXDH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.LXDHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SFZH {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.SFZHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“SFZH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.SFZHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bz1 {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.bz1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“bz1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.bz1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bz2 {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.bz2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“bz2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.bz2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bz3 {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.bz3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“bz3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.bz3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dyr {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.dyrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“dyr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.dyrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] image {
                get {
                    try {
                        return ((byte[])(this[this.table病人处方清单.imageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“image”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.imageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hwmc {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.hwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“hwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.hwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tsyf {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.tsyfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“tsyf”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.tsyfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] imgfyr {
                get {
                    try {
                        return ((byte[])(this[this.table病人处方清单.imgfyrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“imgfyr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.imgfyrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] imgpyr {
                get {
                    try {
                        return ((byte[])(this[this.table病人处方清单.imgpyrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“imgpyr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.imgpyrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table病人处方清单.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“病人处方清单”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table病人处方清单.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table病人处方清单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table病人处方清单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table病人处方清单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table病人处方清单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table病人处方清单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table病人处方清单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table病人处方清单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table病人处方清单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table病人处方清单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table病人处方清单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table病人处方清单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table病人处方清单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscftsNull() {
                return this.IsNull(this.table病人处方清单.cftsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcftsNull() {
                this[this.table病人处方清单.cftsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table病人处方清单.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table病人处方清单.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyfNull() {
                return this.IsNull(this.table病人处方清单.yfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyfNull() {
                this[this.table病人处方清单.yfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspcNull() {
                return this.IsNull(this.table病人处方清单.pcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpcNull() {
                this[this.table病人处方清单.pcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssyjlNull() {
                return this.IsNull(this.table病人处方清单.syjlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsyjlNull() {
                this[this.table病人处方清单.syjlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsztNull() {
                return this.IsNull(this.table病人处方清单.ztColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetztNull() {
                this[this.table病人处方清单.ztColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table病人处方清单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table病人处方清单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsksnameNull() {
                return this.IsNull(this.table病人处方清单.ksnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetksnameNull() {
                this[this.table病人处方清单.ksnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsysnameNull() {
                return this.IsNull(this.table病人处方清单.ysnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetysnameNull() {
                this[this.table病人处方清单.ysnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspyckNull() {
                return this.IsNull(this.table病人处方清单.pyckColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpyckNull() {
                this[this.table病人处方清单.pyckColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfphNull() {
                return this.IsNull(this.table病人处方清单.fphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfphNull() {
                this[this.table病人处方清单.fphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshzxmNull() {
                return this.IsNull(this.table病人处方清单.hzxmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethzxmNull() {
                this[this.table病人处方清单.hzxmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssexNull() {
                return this.IsNull(this.table病人处方清单.sexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsexNull() {
                this[this.table病人处方清单.sexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsageNull() {
                return this.IsNull(this.table病人处方清单.ageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetageNull() {
                this[this.table病人处方清单.ageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table病人处方清单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table病人处方清单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsblhNull() {
                return this.IsNull(this.table病人处方清单.blhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetblhNull() {
                this[this.table病人处方清单.blhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssfrqNull() {
                return this.IsNull(this.table病人处方清单.sfrqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsfrqNull() {
                this[this.table病人处方清单.sfrqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspsztNull() {
                return this.IsNull(this.table病人处方清单.psztColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpsztNull() {
                this[this.table病人处方清单.psztColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszjeNull() {
                return this.IsNull(this.table病人处方清单.zjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzjeNull() {
                this[this.table病人处方清单.zjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspzhNull() {
                return this.IsNull(this.table病人处方清单.pzhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpzhNull() {
                this[this.table病人处方清单.pzhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspyrNull() {
                return this.IsNull(this.table病人处方清单.pyrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpyrNull() {
                this[this.table病人处方清单.pyrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfyrNull() {
                return this.IsNull(this.table病人处方清单.fyrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfyrNull() {
                this[this.table病人处方清单.fyrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszdmcNull() {
                return this.IsNull(this.table病人处方清单.zdmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzdmcNull() {
                this[this.table病人处方清单.zdmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspyckdmNull() {
                return this.IsNull(this.table病人处方清单.pyckdmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpyckdmNull() {
                this[this.table病人处方清单.pyckdmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfyckdmNull() {
                return this.IsNull(this.table病人处方清单.fyckdmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfyckdmNull() {
                this[this.table病人处方清单.fyckdmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSYFFNull() {
                return this.IsNull(this.table病人处方清单.SYFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSYFFNull() {
                this[this.table病人处方清单.SYFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSYPCNull() {
                return this.IsNull(this.table病人处方清单.SYPCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSYPCNull() {
                this[this.table病人处方清单.SYPCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLNull() {
                return this.IsNull(this.table病人处方清单.JLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLNull() {
                this[this.table病人处方清单.JLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLDWNull() {
                return this.IsNull(this.table病人处方清单.JLDWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLDWNull() {
                this[this.table病人处方清单.JLDWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTSNull() {
                return this.IsNull(this.table病人处方清单.TSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTSNull() {
                this[this.table病人处方清单.TSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYZZHNull() {
                return this.IsNull(this.table病人处方清单.YZZHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYZZHNull() {
                this[this.table病人处方清单.YZZHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPXXHNull() {
                return this.IsNull(this.table病人处方清单.PXXHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPXXHNull() {
                this[this.table病人处方清单.PXXHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKHNull() {
                return this.IsNull(this.table病人处方清单.KHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKHNull() {
                this[this.table病人处方清单.KHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJXNull() {
                return this.IsNull(this.table病人处方清单.JXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJXNull() {
                this[this.table病人处方清单.JXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCFRQNull() {
                return this.IsNull(this.table病人处方清单.CFRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCFRQNull() {
                this[this.table病人处方清单.CFRQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFZBZNull() {
                return this.IsNull(this.table病人处方清单.FZBZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFZBZNull() {
                this[this.table病人处方清单.FZBZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJTDZNull() {
                return this.IsNull(this.table病人处方清单.JTDZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJTDZNull() {
                this[this.table病人处方清单.JTDZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLXDHNull() {
                return this.IsNull(this.table病人处方清单.LXDHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLXDHNull() {
                this[this.table病人处方清单.LXDHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSFZHNull() {
                return this.IsNull(this.table病人处方清单.SFZHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSFZHNull() {
                this[this.table病人处方清单.SFZHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbz1Null() {
                return this.IsNull(this.table病人处方清单.bz1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbz1Null() {
                this[this.table病人处方清单.bz1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbz2Null() {
                return this.IsNull(this.table病人处方清单.bz2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbz2Null() {
                this[this.table病人处方清单.bz2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbz3Null() {
                return this.IsNull(this.table病人处方清单.bz3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbz3Null() {
                this[this.table病人处方清单.bz3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdyrNull() {
                return this.IsNull(this.table病人处方清单.dyrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdyrNull() {
                this[this.table病人处方清单.dyrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimageNull() {
                return this.IsNull(this.table病人处方清单.imageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimageNull() {
                this[this.table病人处方清单.imageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshwmcNull() {
                return this.IsNull(this.table病人处方清单.hwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethwmcNull() {
                this[this.table病人处方清单.hwmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstsyfNull() {
                return this.IsNull(this.table病人处方清单.tsyfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettsyfNull() {
                this[this.table病人处方清单.tsyfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimgfyrNull() {
                return this.IsNull(this.table病人处方清单.imgfyrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimgfyrNull() {
                this[this.table病人处方清单.imgfyrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimgpyrNull() {
                return this.IsNull(this.table病人处方清单.imgpyrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimgpyrNull() {
                this[this.table病人处方清单.imgpyrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table病人处方清单.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table病人处方清单.ypspmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 发药明细单Row : global::System.Data.DataRow {
            
            private 发药明细单DataTable table发药明细单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 发药明细单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table发药明细单 = ((发药明细单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yppm {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.yppmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“yppm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.yppmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table发药明细单.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table发药明细单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table发药明细单.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table发药明细单.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypsl {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypjx {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.ypjxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“ypjx”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.ypjxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tlfl {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.tlflColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“tlfl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.tlflColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string groupid {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.groupidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“groupid”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.groupidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fyrq {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.fyrqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“fyrq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.fyrqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fyr {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.fyrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“fyr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.fyrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pyr {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.pyrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“pyr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.pyrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lydw {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.lydwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“lydw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.lydwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bz {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.bzColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“bz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.bzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string inpatient_no {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.inpatient_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“inpatient_no”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.inpatient_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bed_no {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.bed_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“bed_no”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.bed_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ksname {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.ksnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“ksname”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.ksnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ysname {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.ysnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“ysname”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.ysnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cfts {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.cftsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“cfts”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.cftsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string presc_no {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.presc_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“presc_no”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.presc_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rowno {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.rownoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“rowno”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.rownoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string order_usage {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.order_usageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“order_usage”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.order_usageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hwh {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.hwhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“hwh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.hwhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xb {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.xbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“xb”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.xbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nl {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.nlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“nl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.nlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jtdz {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.jtdzColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“jtdz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.jtdzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lxdh {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.lxdhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“lxdh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.lxdhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sfzh {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.sfzhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“sfzh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.sfzhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bz1 {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.bz1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“bz1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.bz1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bz2 {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.bz2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“bz2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.bz2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bz3 {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.bz3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“bz3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.bz3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jl {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.jlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“jl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.jlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tsyf {
                get {
                    try {
                        return ((string)(this[this.table发药明细单.tsyfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“tsyf”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.tsyfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] image {
                get {
                    try {
                        return ((byte[])(this[this.table发药明细单.imageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药明细单”中列“image”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药明细单.imageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table发药明细单.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table发药明细单.ypspmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyppmNull() {
                return this.IsNull(this.table发药明细单.yppmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyppmNull() {
                this[this.table发药明细单.yppmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table发药明细单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table发药明细单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table发药明细单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table发药明细单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table发药明细单.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table发药明细单.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table发药明细单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table发药明细单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table发药明细单.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table发药明细单.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table发药明细单.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table发药明细单.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table发药明细单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table发药明细单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table发药明细单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table发药明细单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table发药明细单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table发药明细单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypjxNull() {
                return this.IsNull(this.table发药明细单.ypjxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypjxNull() {
                this[this.table发药明细单.ypjxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstlflNull() {
                return this.IsNull(this.table发药明细单.tlflColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettlflNull() {
                this[this.table发药明细单.tlflColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgroupidNull() {
                return this.IsNull(this.table发药明细单.groupidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgroupidNull() {
                this[this.table发药明细单.groupidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfyrqNull() {
                return this.IsNull(this.table发药明细单.fyrqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfyrqNull() {
                this[this.table发药明细单.fyrqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfyrNull() {
                return this.IsNull(this.table发药明细单.fyrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfyrNull() {
                this[this.table发药明细单.fyrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspyrNull() {
                return this.IsNull(this.table发药明细单.pyrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpyrNull() {
                this[this.table发药明细单.pyrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslydwNull() {
                return this.IsNull(this.table发药明细单.lydwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlydwNull() {
                this[this.table发药明细单.lydwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbzNull() {
                return this.IsNull(this.table发药明细单.bzColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbzNull() {
                this[this.table发药明细单.bzColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinpatient_noNull() {
                return this.IsNull(this.table发药明细单.inpatient_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinpatient_noNull() {
                this[this.table发药明细单.inpatient_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.table发药明细单.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.table发药明细单.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbed_noNull() {
                return this.IsNull(this.table发药明细单.bed_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbed_noNull() {
                this[this.table发药明细单.bed_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsksnameNull() {
                return this.IsNull(this.table发药明细单.ksnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetksnameNull() {
                this[this.table发药明细单.ksnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsysnameNull() {
                return this.IsNull(this.table发药明细单.ysnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetysnameNull() {
                this[this.table发药明细单.ysnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscftsNull() {
                return this.IsNull(this.table发药明细单.cftsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcftsNull() {
                this[this.table发药明细单.cftsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispresc_noNull() {
                return this.IsNull(this.table发药明细单.presc_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpresc_noNull() {
                this[this.table发药明细单.presc_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrownoNull() {
                return this.IsNull(this.table发药明细单.rownoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrownoNull() {
                this[this.table发药明细单.rownoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isorder_usageNull() {
                return this.IsNull(this.table发药明细单.order_usageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setorder_usageNull() {
                this[this.table发药明细单.order_usageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshwhNull() {
                return this.IsNull(this.table发药明细单.hwhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethwhNull() {
                this[this.table发药明细单.hwhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxbNull() {
                return this.IsNull(this.table发药明细单.xbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxbNull() {
                this[this.table发药明细单.xbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnlNull() {
                return this.IsNull(this.table发药明细单.nlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnlNull() {
                this[this.table发药明细单.nlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjtdzNull() {
                return this.IsNull(this.table发药明细单.jtdzColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjtdzNull() {
                this[this.table发药明细单.jtdzColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslxdhNull() {
                return this.IsNull(this.table发药明细单.lxdhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlxdhNull() {
                this[this.table发药明细单.lxdhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssfzhNull() {
                return this.IsNull(this.table发药明细单.sfzhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsfzhNull() {
                this[this.table发药明细单.sfzhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbz1Null() {
                return this.IsNull(this.table发药明细单.bz1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbz1Null() {
                this[this.table发药明细单.bz1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbz2Null() {
                return this.IsNull(this.table发药明细单.bz2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbz2Null() {
                this[this.table发药明细单.bz2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbz3Null() {
                return this.IsNull(this.table发药明细单.bz3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbz3Null() {
                this[this.table发药明细单.bz3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlNull() {
                return this.IsNull(this.table发药明细单.jlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlNull() {
                this[this.table发药明细单.jlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstsyfNull() {
                return this.IsNull(this.table发药明细单.tsyfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettsyfNull() {
                this[this.table发药明细单.tsyfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimageNull() {
                return this.IsNull(this.table发药明细单.imageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimageNull() {
                this[this.table发药明细单.imageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品汇总统计Row : global::System.Data.DataRow {
            
            private 药品汇总统计DataTable table药品汇总统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品汇总统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品汇总统计 = ((药品汇总统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品汇总统计.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string wardname {
                get {
                    try {
                        return ((string)(this[this.table药品汇总统计.wardnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“wardname”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.wardnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal djzs {
                get {
                    try {
                        return ((decimal)(this[this.table药品汇总统计.djzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“djzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.djzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal djje {
                get {
                    try {
                        return ((decimal)(this[this.table药品汇总统计.djjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“djje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.djjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品汇总统计.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yppm {
                get {
                    try {
                        return ((string)(this[this.table药品汇总统计.yppmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“yppm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.yppmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table药品汇总统计.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品汇总统计.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品汇总统计.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table药品汇总统计.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品汇总统计.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table药品汇总统计.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table药品汇总统计.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal djpfje {
                get {
                    try {
                        return ((decimal)(this[this.table药品汇总统计.djpfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“djpfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.djpfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sfsl {
                get {
                    try {
                        return ((string)(this[this.table药品汇总统计.sfslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“sfsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.sfslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string memo {
                get {
                    try {
                        return ((string)(this[this.table药品汇总统计.memoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品汇总统计”中列“memo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品汇总统计.memoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品汇总统计.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品汇总统计.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswardnameNull() {
                return this.IsNull(this.table药品汇总统计.wardnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwardnameNull() {
                this[this.table药品汇总统计.wardnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjzsNull() {
                return this.IsNull(this.table药品汇总统计.djzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjzsNull() {
                this[this.table药品汇总统计.djzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjjeNull() {
                return this.IsNull(this.table药品汇总统计.djjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjjeNull() {
                this[this.table药品汇总统计.djjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品汇总统计.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品汇总统计.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyppmNull() {
                return this.IsNull(this.table药品汇总统计.yppmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyppmNull() {
                this[this.table药品汇总统计.yppmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table药品汇总统计.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table药品汇总统计.ypspmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品汇总统计.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品汇总统计.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品汇总统计.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品汇总统计.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table药品汇总统计.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table药品汇总统计.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品汇总统计.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品汇总统计.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table药品汇总统计.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table药品汇总统计.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table药品汇总统计.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table药品汇总统计.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjpfjeNull() {
                return this.IsNull(this.table药品汇总统计.djpfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjpfjeNull() {
                this[this.table药品汇总统计.djpfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssfslNull() {
                return this.IsNull(this.table药品汇总统计.sfslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsfslNull() {
                this[this.table药品汇总统计.sfslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmemoNull() {
                return this.IsNull(this.table药品汇总统计.memoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmemoNull() {
                this[this.table药品汇总统计.memoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 处方统计Row : global::System.Data.DataRow {
            
            private 处方统计DataTable table处方统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 处方统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table处方统计 = ((处方统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table处方统计.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“处方统计”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table处方统计.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xmmc {
                get {
                    try {
                        return ((string)(this[this.table处方统计.xmmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“处方统计”中列“xmmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table处方统计.xmmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long cfzs {
                get {
                    try {
                        return ((long)(this[this.table处方统计.cfzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“处方统计”中列“cfzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table处方统计.cfzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal cfje {
                get {
                    try {
                        return ((decimal)(this[this.table处方统计.cfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“处方统计”中列“cfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table处方统计.cfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long tyzs {
                get {
                    try {
                        return ((long)(this[this.table处方统计.tyzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“处方统计”中列“tyzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table处方统计.tyzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tyje {
                get {
                    try {
                        return ((decimal)(this[this.table处方统计.tyjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“处方统计”中列“tyje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table处方统计.tyjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long sumcfzs {
                get {
                    try {
                        return ((long)(this[this.table处方统计.sumcfzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“处方统计”中列“sumcfzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table处方统计.sumcfzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal sumcfje {
                get {
                    try {
                        return ((decimal)(this[this.table处方统计.sumcfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“处方统计”中列“sumcfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table处方统计.sumcfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table处方统计.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table处方统计.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxmmcNull() {
                return this.IsNull(this.table处方统计.xmmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxmmcNull() {
                this[this.table处方统计.xmmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscfzsNull() {
                return this.IsNull(this.table处方统计.cfzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcfzsNull() {
                this[this.table处方统计.cfzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscfjeNull() {
                return this.IsNull(this.table处方统计.cfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcfjeNull() {
                this[this.table处方统计.cfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstyzsNull() {
                return this.IsNull(this.table处方统计.tyzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettyzsNull() {
                this[this.table处方统计.tyzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstyjeNull() {
                return this.IsNull(this.table处方统计.tyjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettyjeNull() {
                this[this.table处方统计.tyjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssumcfzsNull() {
                return this.IsNull(this.table处方统计.sumcfzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsumcfzsNull() {
                this[this.table处方统计.sumcfzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssumcfjeNull() {
                return this.IsNull(this.table处方统计.sumcfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsumcfjeNull() {
                this[this.table处方统计.sumcfjeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 收费发药处方统计Row : global::System.Data.DataRow {
            
            private 收费发药处方统计DataTable table收费发药处方统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 收费发药处方统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table收费发药处方统计 = ((收费发药处方统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table收费发药处方统计.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费发药处方统计”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费发药处方统计.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rq {
                get {
                    try {
                        return ((string)(this[this.table收费发药处方统计.rqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费发药处方统计”中列“rq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费发药处方统计.rqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sfzs {
                get {
                    try {
                        return ((string)(this[this.table收费发药处方统计.sfzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费发药处方统计”中列“sfzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费发药处方统计.sfzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sfje {
                get {
                    try {
                        return ((string)(this[this.table收费发药处方统计.sfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费发药处方统计”中列“sfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费发药处方统计.sfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string brfyzs {
                get {
                    try {
                        return ((string)(this[this.table收费发药处方统计.brfyzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费发药处方统计”中列“brfyzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费发药处方统计.brfyzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string brfyje {
                get {
                    try {
                        return ((string)(this[this.table收费发药处方统计.brfyjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费发药处方统计”中列“brfyje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费发药处方统计.brfyjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string wrfyzs {
                get {
                    try {
                        return ((string)(this[this.table收费发药处方统计.wrfyzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费发药处方统计”中列“wrfyzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费发药处方统计.wrfyzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string wrfyje {
                get {
                    try {
                        return ((string)(this[this.table收费发药处方统计.wrfyjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费发药处方统计”中列“wrfyje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费发药处方统计.wrfyjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string wfyzs {
                get {
                    try {
                        return ((string)(this[this.table收费发药处方统计.wfyzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费发药处方统计”中列“wfyzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费发药处方统计.wfyzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string wfyje {
                get {
                    try {
                        return ((string)(this[this.table收费发药处方统计.wfyjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“收费发药处方统计”中列“wfyje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table收费发药处方统计.wfyjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table收费发药处方统计.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table收费发药处方统计.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrqNull() {
                return this.IsNull(this.table收费发药处方统计.rqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrqNull() {
                this[this.table收费发药处方统计.rqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssfzsNull() {
                return this.IsNull(this.table收费发药处方统计.sfzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsfzsNull() {
                this[this.table收费发药处方统计.sfzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssfjeNull() {
                return this.IsNull(this.table收费发药处方统计.sfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsfjeNull() {
                this[this.table收费发药处方统计.sfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbrfyzsNull() {
                return this.IsNull(this.table收费发药处方统计.brfyzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbrfyzsNull() {
                this[this.table收费发药处方统计.brfyzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbrfyjeNull() {
                return this.IsNull(this.table收费发药处方统计.brfyjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbrfyjeNull() {
                this[this.table收费发药处方统计.brfyjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswrfyzsNull() {
                return this.IsNull(this.table收费发药处方统计.wrfyzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwrfyzsNull() {
                this[this.table收费发药处方统计.wrfyzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswrfyjeNull() {
                return this.IsNull(this.table收费发药处方统计.wrfyjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwrfyjeNull() {
                this[this.table收费发药处方统计.wrfyjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswfyzsNull() {
                return this.IsNull(this.table收费发药处方统计.wfyzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwfyzsNull() {
                this[this.table收费发药处方统计.wfyzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswfyjeNull() {
                return this.IsNull(this.table收费发药处方统计.wfyjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwfyjeNull() {
                this[this.table收费发药处方统计.wfyjeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 单据汇总统计Row : global::System.Data.DataRow {
            
            private 单据汇总统计DataTable table单据汇总统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 单据汇总统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table单据汇总统计 = ((单据汇总统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xh {
                get {
                    try {
                        return ((string)(this[this.table单据汇总统计.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“单据汇总统计”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据汇总统计.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string wldw {
                get {
                    try {
                        return ((string)(this[this.table单据汇总统计.wldwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“单据汇总统计”中列“wldw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据汇总统计.wldwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table单据汇总统计.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“单据汇总统计”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据汇总统计.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table单据汇总统计.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“单据汇总统计”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据汇总统计.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table单据汇总统计.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“单据汇总统计”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据汇总统计.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jlce {
                get {
                    try {
                        return ((decimal)(this[this.table单据汇总统计.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“单据汇总统计”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据汇总统计.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal plce {
                get {
                    try {
                        return ((decimal)(this[this.table单据汇总统计.plceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“单据汇总统计”中列“plce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据汇总统计.plceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long djzs {
                get {
                    try {
                        return ((long)(this[this.table单据汇总统计.djzsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“单据汇总统计”中列“djzs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据汇总统计.djzsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rckfs {
                get {
                    try {
                        return ((string)(this[this.table单据汇总统计.rckfsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“单据汇总统计”中列“rckfs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据汇总统计.rckfsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table单据汇总统计.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table单据汇总统计.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswldwNull() {
                return this.IsNull(this.table单据汇总统计.wldwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwldwNull() {
                this[this.table单据汇总统计.wldwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table单据汇总统计.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table单据汇总统计.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table单据汇总统计.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table单据汇总统计.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table单据汇总统计.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table单据汇总统计.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table单据汇总统计.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table单据汇总统计.jlceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplceNull() {
                return this.IsNull(this.table单据汇总统计.plceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplceNull() {
                this[this.table单据汇总统计.plceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjzsNull() {
                return this.IsNull(this.table单据汇总统计.djzsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjzsNull() {
                this[this.table单据汇总统计.djzsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrckfsNull() {
                return this.IsNull(this.table单据汇总统计.rckfsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrckfsNull() {
                this[this.table单据汇总统计.rckfsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 贵重药品统计Row : global::System.Data.DataRow {
            
            private 贵重药品统计DataTable table贵重药品统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 贵重药品统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table贵重药品统计 = ((贵重药品统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xh {
                get {
                    try {
                        return ((string)(this[this.table贵重药品统计.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“贵重药品统计”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table贵重药品统计.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yppm {
                get {
                    try {
                        return ((string)(this[this.table贵重药品统计.yppmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“贵重药品统计”中列“yppm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table贵重药品统计.yppmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table贵重药品统计.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“贵重药品统计”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table贵重药品统计.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table贵重药品统计.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“贵重药品统计”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table贵重药品统计.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table贵重药品统计.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“贵重药品统计”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table贵重药品统计.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table贵重药品统计.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“贵重药品统计”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table贵重药品统计.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal rksl {
                get {
                    try {
                        return ((decimal)(this[this.table贵重药品统计.rkslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“贵重药品统计”中列“rksl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table贵重药品统计.rkslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal cksl {
                get {
                    try {
                        return ((decimal)(this[this.table贵重药品统计.ckslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“贵重药品统计”中列“cksl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table贵重药品统计.ckslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kcsl {
                get {
                    try {
                        return ((decimal)(this[this.table贵重药品统计.kcslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“贵重药品统计”中列“kcsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table贵重药品统计.kcslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table贵重药品统计.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“贵重药品统计”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table贵重药品统计.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table贵重药品统计.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“贵重药品统计”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table贵重药品统计.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table贵重药品统计.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table贵重药品统计.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyppmNull() {
                return this.IsNull(this.table贵重药品统计.yppmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyppmNull() {
                this[this.table贵重药品统计.yppmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table贵重药品统计.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table贵重药品统计.ypspmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table贵重药品统计.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table贵重药品统计.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table贵重药品统计.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table贵重药品统计.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table贵重药品统计.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table贵重药品统计.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrkslNull() {
                return this.IsNull(this.table贵重药品统计.rkslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrkslNull() {
                this[this.table贵重药品统计.rkslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsckslNull() {
                return this.IsNull(this.table贵重药品统计.ckslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetckslNull() {
                this[this.table贵重药品统计.ckslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskcslNull() {
                return this.IsNull(this.table贵重药品统计.kcslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkcslNull() {
                this[this.table贵重药品统计.kcslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table贵重药品统计.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table贵重药品统计.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table贵重药品统计.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table贵重药品统计.ypggColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 住院药品摆药明细Row : global::System.Data.DataRow {
            
            private 住院药品摆药明细DataTable table住院药品摆药明细;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 住院药品摆药明细Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table住院药品摆药明细 = ((住院药品摆药明细DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yppm {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.yppmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“yppm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.yppmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table住院药品摆药明细.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table住院药品摆药明细.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypsl {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypjx {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.ypjxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“ypjx”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.ypjxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string groupid {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.groupidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“groupid”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.groupidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fyrq {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.fyrqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“fyrq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.fyrqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fyr {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.fyrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“fyr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.fyrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pyr {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.pyrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“pyr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.pyrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lydw {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.lydwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“lydw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.lydwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string inpatient_no {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.inpatient_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“inpatient_no”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.inpatient_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bed_no {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.bed_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“bed_no”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.bed_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ksname {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.ksnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“ksname”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.ksnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ysname {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.ysnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“ysname”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.ysnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cfts {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.cftsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“cfts”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.cftsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rowno {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.rownoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“rowno”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.rownoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YF {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.YFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“YF”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.YFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MCYL {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.MCYLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“MCYL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.MCYLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MCDW {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.MCDWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“MCDW”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.MCDWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PC {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.PCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“PC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.PCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hwh {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.hwhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“hwh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.hwhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cfrq {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.cfrqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“cfrq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.cfrqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MNGTYPE {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.MNGTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“MNGTYPE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.MNGTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gysj {
                get {
                    try {
                        return ((string)(this[this.table住院药品摆药明细.gysjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“住院药品摆药明细”中列“gysj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table住院药品摆药明细.gysjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table住院药品摆药明细.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table住院药品摆药明细.ypspmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyppmNull() {
                return this.IsNull(this.table住院药品摆药明细.yppmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyppmNull() {
                this[this.table住院药品摆药明细.yppmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table住院药品摆药明细.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table住院药品摆药明细.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table住院药品摆药明细.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table住院药品摆药明细.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table住院药品摆药明细.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table住院药品摆药明细.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table住院药品摆药明细.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table住院药品摆药明细.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table住院药品摆药明细.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table住院药品摆药明细.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table住院药品摆药明细.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table住院药品摆药明细.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table住院药品摆药明细.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table住院药品摆药明细.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypjxNull() {
                return this.IsNull(this.table住院药品摆药明细.ypjxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypjxNull() {
                this[this.table住院药品摆药明细.ypjxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgroupidNull() {
                return this.IsNull(this.table住院药品摆药明细.groupidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgroupidNull() {
                this[this.table住院药品摆药明细.groupidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfyrqNull() {
                return this.IsNull(this.table住院药品摆药明细.fyrqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfyrqNull() {
                this[this.table住院药品摆药明细.fyrqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfyrNull() {
                return this.IsNull(this.table住院药品摆药明细.fyrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfyrNull() {
                this[this.table住院药品摆药明细.fyrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspyrNull() {
                return this.IsNull(this.table住院药品摆药明细.pyrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpyrNull() {
                this[this.table住院药品摆药明细.pyrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslydwNull() {
                return this.IsNull(this.table住院药品摆药明细.lydwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlydwNull() {
                this[this.table住院药品摆药明细.lydwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinpatient_noNull() {
                return this.IsNull(this.table住院药品摆药明细.inpatient_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinpatient_noNull() {
                this[this.table住院药品摆药明细.inpatient_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.table住院药品摆药明细.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.table住院药品摆药明细.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbed_noNull() {
                return this.IsNull(this.table住院药品摆药明细.bed_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbed_noNull() {
                this[this.table住院药品摆药明细.bed_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsksnameNull() {
                return this.IsNull(this.table住院药品摆药明细.ksnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetksnameNull() {
                this[this.table住院药品摆药明细.ksnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsysnameNull() {
                return this.IsNull(this.table住院药品摆药明细.ysnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetysnameNull() {
                this[this.table住院药品摆药明细.ysnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscftsNull() {
                return this.IsNull(this.table住院药品摆药明细.cftsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcftsNull() {
                this[this.table住院药品摆药明细.cftsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrownoNull() {
                return this.IsNull(this.table住院药品摆药明细.rownoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrownoNull() {
                this[this.table住院药品摆药明细.rownoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYFNull() {
                return this.IsNull(this.table住院药品摆药明细.YFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYFNull() {
                this[this.table住院药品摆药明细.YFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMCYLNull() {
                return this.IsNull(this.table住院药品摆药明细.MCYLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMCYLNull() {
                this[this.table住院药品摆药明细.MCYLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMCDWNull() {
                return this.IsNull(this.table住院药品摆药明细.MCDWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMCDWNull() {
                this[this.table住院药品摆药明细.MCDWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCNull() {
                return this.IsNull(this.table住院药品摆药明细.PCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCNull() {
                this[this.table住院药品摆药明细.PCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshwhNull() {
                return this.IsNull(this.table住院药品摆药明细.hwhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethwhNull() {
                this[this.table住院药品摆药明细.hwhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscfrqNull() {
                return this.IsNull(this.table住院药品摆药明细.cfrqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcfrqNull() {
                this[this.table住院药品摆药明细.cfrqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMNGTYPENull() {
                return this.IsNull(this.table住院药品摆药明细.MNGTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMNGTYPENull() {
                this[this.table住院药品摆药明细.MNGTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgysjNull() {
                return this.IsNull(this.table住院药品摆药明细.gysjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgysjNull() {
                this[this.table住院药品摆药明细.gysjColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 发药配药工作量统计Row : global::System.Data.DataRow {
            
            private 发药配药工作量统计DataTable table发药配药工作量统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 发药配药工作量统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table发药配药工作量统计 = ((发药配药工作量统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tjr {
                get {
                    try {
                        return ((string)(this[this.table发药配药工作量统计.tjrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药配药工作量统计”中列“tjr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药配药工作量统计.tjrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int fys {
                get {
                    try {
                        return ((int)(this[this.table发药配药工作量统计.fysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药配药工作量统计”中列“fys”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药配药工作量统计.fysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int pys {
                get {
                    try {
                        return ((int)(this[this.table发药配药工作量统计.pysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药配药工作量统计”中列“pys”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药配药工作量统计.pysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int phs {
                get {
                    try {
                        return ((int)(this[this.table发药配药工作量统计.phsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发药配药工作量统计”中列“phs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发药配药工作量统计.phsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstjrNull() {
                return this.IsNull(this.table发药配药工作量统计.tjrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettjrNull() {
                this[this.table发药配药工作量统计.tjrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfysNull() {
                return this.IsNull(this.table发药配药工作量统计.fysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfysNull() {
                this[this.table发药配药工作量统计.fysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspysNull() {
                return this.IsNull(this.table发药配药工作量统计.pysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpysNull() {
                this[this.table发药配药工作量统计.pysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphsNull() {
                return this.IsNull(this.table发药配药工作量统计.phsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphsNull() {
                this[this.table发药配药工作量统计.phsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 门诊精麻处方单Row : global::System.Data.DataRow {
            
            private 门诊精麻处方单DataTable table门诊精麻处方单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 门诊精麻处方单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table门诊精麻处方单 = ((门诊精麻处方单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xh {
                get {
                    try {
                        return ((string)(this[this.table门诊精麻处方单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊精麻处方单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊精麻处方单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gg {
                get {
                    try {
                        return ((string)(this[this.table门诊精麻处方单.ggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊精麻处方单”中列“gg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊精麻处方单.ggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sl {
                get {
                    try {
                        return ((string)(this[this.table门诊精麻处方单.slColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊精麻处方单”中列“sl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊精麻处方单.slColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dw {
                get {
                    try {
                        return ((string)(this[this.table门诊精麻处方单.dwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊精麻处方单”中列“dw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊精麻处方单.dwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pl {
                get {
                    try {
                        return ((string)(this[this.table门诊精麻处方单.plColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊精麻处方单”中列“pl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊精麻处方单.plColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table门诊精麻处方单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊精麻处方单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊精麻处方单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypyf {
                get {
                    try {
                        return ((string)(this[this.table门诊精麻处方单.ypyfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊精麻处方单”中列“ypyf”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊精麻处方单.ypyfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] ysimage {
                get {
                    try {
                        return ((byte[])(this[this.table门诊精麻处方单.ysimageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“门诊精麻处方单”中列“ysimage”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门诊精麻处方单.ysimageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table门诊精麻处方单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table门诊精麻处方单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsggNull() {
                return this.IsNull(this.table门诊精麻处方单.ggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetggNull() {
                this[this.table门诊精麻处方单.ggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsslNull() {
                return this.IsNull(this.table门诊精麻处方单.slColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetslNull() {
                this[this.table门诊精麻处方单.slColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdwNull() {
                return this.IsNull(this.table门诊精麻处方单.dwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdwNull() {
                this[this.table门诊精麻处方单.dwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplNull() {
                return this.IsNull(this.table门诊精麻处方单.plColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplNull() {
                this[this.table门诊精麻处方单.plColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table门诊精麻处方单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table门诊精麻处方单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypyfNull() {
                return this.IsNull(this.table门诊精麻处方单.ypyfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypyfNull() {
                this[this.table门诊精麻处方单.ypyfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsysimageNull() {
                return this.IsNull(this.table门诊精麻处方单.ysimageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetysimageNull() {
                this[this.table门诊精麻处方单.ysimageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 精二Row : global::System.Data.DataRow {
            
            private 精二DataTable table精二;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 精二Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table精二 = ((精二DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xh {
                get {
                    try {
                        return ((string)(this[this.table精二.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“精二”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table精二.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gg {
                get {
                    try {
                        return ((string)(this[this.table精二.ggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“精二”中列“gg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table精二.ggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sl {
                get {
                    try {
                        return ((string)(this[this.table精二.slColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“精二”中列“sl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table精二.slColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dw {
                get {
                    try {
                        return ((string)(this[this.table精二.dwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“精二”中列“dw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table精二.dwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pl {
                get {
                    try {
                        return ((string)(this[this.table精二.plColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“精二”中列“pl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table精二.plColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table精二.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“精二”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table精二.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypyf {
                get {
                    try {
                        return ((string)(this[this.table精二.ypyfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“精二”中列“ypyf”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table精二.ypyfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] ysimage {
                get {
                    try {
                        return ((byte[])(this[this.table精二.ysimageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“精二”中列“ysimage”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table精二.ysimageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string blh {
                get {
                    try {
                        return ((string)(this[this.table精二.blhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“精二”中列“blh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table精二.blhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bzl {
                get {
                    try {
                        return ((string)(this[this.table精二.bzlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“精二”中列“bzl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table精二.bzlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table精二.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table精二.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsggNull() {
                return this.IsNull(this.table精二.ggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetggNull() {
                this[this.table精二.ggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsslNull() {
                return this.IsNull(this.table精二.slColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetslNull() {
                this[this.table精二.slColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdwNull() {
                return this.IsNull(this.table精二.dwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdwNull() {
                this[this.table精二.dwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplNull() {
                return this.IsNull(this.table精二.plColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplNull() {
                this[this.table精二.plColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table精二.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table精二.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypyfNull() {
                return this.IsNull(this.table精二.ypyfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypyfNull() {
                this[this.table精二.ypyfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsysimageNull() {
                return this.IsNull(this.table精二.ysimageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetysimageNull() {
                this[this.table精二.ysimageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsblhNull() {
                return this.IsNull(this.table精二.blhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetblhNull() {
                this[this.table精二.blhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbzlNull() {
                return this.IsNull(this.table精二.bzlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbzlNull() {
                this[this.table精二.bzlColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 采购入库单RowChangeEvent : global::System.EventArgs {
            
            private 采购入库单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 采购入库单RowChangeEvent(采购入库单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 采购入库单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 普通入库单RowChangeEvent : global::System.EventArgs {
            
            private 普通入库单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 普通入库单RowChangeEvent(普通入库单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 普通入库单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品申请单RowChangeEvent : global::System.EventArgs {
            
            private 药品申请单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品申请单RowChangeEvent(药品申请单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品申请单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品出库单RowChangeEvent : global::System.EventArgs {
            
            private 药品出库单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品出库单RowChangeEvent(药品出库单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品出库单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品调价单RowChangeEvent : global::System.EventArgs {
            
            private 药品调价单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品调价单RowChangeEvent(药品调价单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品调价单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 报损报溢单RowChangeEvent : global::System.EventArgs {
            
            private 报损报溢单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 报损报溢单RowChangeEvent(报损报溢单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 报损报溢单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品盘点单RowChangeEvent : global::System.EventArgs {
            
            private 药品盘点单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品盘点单RowChangeEvent(药品盘点单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品盘点单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品采购计划RowChangeEvent : global::System.EventArgs {
            
            private 药品采购计划Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品采购计划RowChangeEvent(药品采购计划Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品采购计划Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 进销存情况表RowChangeEvent : global::System.EventArgs {
            
            private 进销存情况表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进销存情况表RowChangeEvent(进销存情况表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进销存情况表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 付款情况表RowChangeEvent : global::System.EventArgs {
            
            private 付款情况表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表RowChangeEvent(付款情况表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 保管明细帐RowChangeEvent : global::System.EventArgs {
            
            private 保管明细帐Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 保管明细帐RowChangeEvent(保管明细帐Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 保管明细帐Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 库存情况表RowChangeEvent : global::System.EventArgs {
            
            private 库存情况表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 库存情况表RowChangeEvent(库存情况表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 库存情况表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品失效报警RowChangeEvent : global::System.EventArgs {
            
            private 药品失效报警Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品失效报警RowChangeEvent(药品失效报警Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品失效报警Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品高低储报警RowChangeEvent : global::System.EventArgs {
            
            private 药品高低储报警Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品高低储报警RowChangeEvent(药品高低储报警Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品高低储报警Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 进出货排名统计RowChangeEvent : global::System.EventArgs {
            
            private 进出货排名统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进出货排名统计RowChangeEvent(进出货排名统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进出货排名统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 配发药工作量RowChangeEvent : global::System.EventArgs {
            
            private 配发药工作量Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 配发药工作量RowChangeEvent(配发药工作量Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 配发药工作量Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 病人处方清单RowChangeEvent : global::System.EventArgs {
            
            private 病人处方清单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 病人处方清单RowChangeEvent(病人处方清单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 病人处方清单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 发药明细单RowChangeEvent : global::System.EventArgs {
            
            private 发药明细单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发药明细单RowChangeEvent(发药明细单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发药明细单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品汇总统计RowChangeEvent : global::System.EventArgs {
            
            private 药品汇总统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品汇总统计RowChangeEvent(药品汇总统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品汇总统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 处方统计RowChangeEvent : global::System.EventArgs {
            
            private 处方统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 处方统计RowChangeEvent(处方统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 处方统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 收费发药处方统计RowChangeEvent : global::System.EventArgs {
            
            private 收费发药处方统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费发药处方统计RowChangeEvent(收费发药处方统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 收费发药处方统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 单据汇总统计RowChangeEvent : global::System.EventArgs {
            
            private 单据汇总统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 单据汇总统计RowChangeEvent(单据汇总统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 单据汇总统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 贵重药品统计RowChangeEvent : global::System.EventArgs {
            
            private 贵重药品统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 贵重药品统计RowChangeEvent(贵重药品统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 贵重药品统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 住院药品摆药明细RowChangeEvent : global::System.EventArgs {
            
            private 住院药品摆药明细Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 住院药品摆药明细RowChangeEvent(住院药品摆药明细Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 住院药品摆药明细Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 发药配药工作量统计RowChangeEvent : global::System.EventArgs {
            
            private 发药配药工作量统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发药配药工作量统计RowChangeEvent(发药配药工作量统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发药配药工作量统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 门诊精麻处方单RowChangeEvent : global::System.EventArgs {
            
            private 门诊精麻处方单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊精麻处方单RowChangeEvent(门诊精麻处方单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门诊精麻处方单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 精二RowChangeEvent : global::System.EventArgs {
            
            private 精二Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 精二RowChangeEvent(精二Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 精二Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591