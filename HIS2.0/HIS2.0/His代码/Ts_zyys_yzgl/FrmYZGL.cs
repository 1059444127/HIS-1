using System;
using System.Drawing;
using System.Collections;
using System.ComponentModel;
using System.Windows.Forms;
using System.Data;
using System.Data.OleDb;
using System.Text;
using TrasenClasses.GeneralClasses;
using TrasenClasses.GeneralControls;
using TrasenFrame.Classes;
using TrasenClasses.DatabaseAccess;
using UtilityLibrary.WinControls;
using TrasenFrame.Forms;
using Crownwood.Magic.Common;
using Crownwood.Magic.Menus;
using Ts_zyys_public;
using ts_zyhs_classes;
using ts_zyhs_yzgl;
using Ts_zyys_ssgl;
using 价格信息;
using System.IO;
using System.Runtime.InteropServices;
using System.Text.RegularExpressions;
using System.Threading;
using Ts_Hlyy_Interface;
using ts_yf_zyfy;
using System.Net;
using System.Collections.Generic;
using System.Configuration;
using ts_mzys_blcflr;
using TrasenHIS.BLL;
using ts_ybznsh_interface;
using System.Xml;
using System.Diagnostics;

namespace Ts_zyys_yzgl
{
    /// <summary>
    /// Form1 的摘要说明。
    /// </summary>
    public class FrmYZGL : System.Windows.Forms.Form
    {
        #region"Modify by: jchl"
        string _msg = "";

        bool bDataCheck = false;
        bool bYkDw = false;

        private string strHlyyType = "";
        private bool boHLYYDept = false;
        private bool colBoHlyy = true;

        SystemCfg cfg6220 = new SystemCfg(6220);//参数控制是否护士站完全上线 0=否 1=是

        /// <summary>
        /// 屏蔽医生站转科医嘱功能 0=不 1=是  
        /// </summary>
        SystemCfg cfg6200 = new SystemCfg(6200);

        /// <summary>
        /// 屏蔽医生站出院医嘱功能 0=不 1=是  
        /// </summary>
        SystemCfg cfg6201 = new SystemCfg(6201);

        /// <summary>
        /// 住院医生站临时医嘱参数控制药品是否必须输入频率 0=不 1=是  
        /// </summary>
        SystemCfg cfg6202 = new SystemCfg(6202);

        SystemCfg cfg29377 = new SystemCfg(29377);//控制治疗项目是否需要填写频次  add by  chenli  2017-11-30

        SystemCfg cfg6205 = new SystemCfg(6205);//医生开具越级抗菌药物是否进行审批流程 0否 1是。注：6204参数值必须为1

        SystemCfg cfg6204 = new SystemCfg(6204);//6204  医生开具抗菌药物是否需求登记 0否 1是

        SystemCfg cfg6206 = new SystemCfg(6206);//医生开具特殊级抗菌药物是否无条件进行审批流程 0否 1是。注：6204参数值必须为1

        SystemCfg cfg6207 = new SystemCfg(6207);//参数控制医生站已发送医嘱不能修改，只能删除(并且只能删除一组医嘱【新老系统交互问题】)
        SystemCfg cfg6223 = new SystemCfg(6223);//允许主治医师以上级别越级用药开始时间点 【如果不开启则维护为空 如开启则按照格式维护如(20:00)】
        SystemCfg cfg6224 = new SystemCfg(6224);//允许主治医师以上级别越级用药的时长【默认格式“HH$mm”】

        SystemCfg cfg6208 = new SystemCfg(6208);//开皮试药品时是否提示需要开皮试医嘱 0=不 1=是  
        SystemCfg cfg6209 = new SystemCfg(6209);//参数控制是否屏蔽会诊申请 0=不 1=是  
        SystemCfg cfg6210 = new SystemCfg(6210);//参数控制长期医嘱是否允许开立中草药处方 0=不 1=是  
        SystemCfg cfg6212 = new SystemCfg(6212);//参数控制补录医嘱是否允许修改为药库单位 0=不 1=是  
        SystemCfg cfg6213 = new SystemCfg(6213);//参数控制已发送医嘱是否允许出院带药 0=不 1=是    
        SystemCfg cfg6214 = new SystemCfg(6214);//参数控制住院医生站新开药品时自动提取药品字典的默认用法 0=不 1=是
        SystemCfg cfg6215 = new SystemCfg(6215);//参数控制医嘱发送不更新医嘱时间 0=不 1=是
        SystemCfg cfg6216 = new SystemCfg(6216);//参数控制使用修改时间功能时是否需要校验6004参数的有效时长 0=不 1=是  
        SystemCfg cfg6218 = new SystemCfg(6218);//参数控制DC是否在医嘱内容中体现操作人和操作时间 0=不 1=是  
        SystemCfg cfg6219 = new SystemCfg(6219);//参数控制副主任以上级别是否可以删除医嘱 0=不 1=是 
        SystemCfg cfg6221 = new SystemCfg(6221);//参数控制 智审上传出错 医嘱是否允许继续发送 0=不 1=是
        /// <summary>
        /// 住院医生中草药煎药费提示设置 0=不提示  1=提示 
        /// </summary>
        SystemCfg cfg7014 = new SystemCfg(7014);

        SystemCfg cfg7129 = new SystemCfg(7129);

        #endregion

        /// <summary>
        /// 医保病人的欠费控制是否按照医保实时试算结果进行欠费控制  0=否 1=是
        /// </summary>
        SystemCfg cfg7186 = new SystemCfg(7186);
        SystemCfg cfg6094 = new SystemCfg(6094);
        private Button btnYzPrint;
        private Button btnDc;
        private Button btnYkDw;
        private ImageList imgTab;
        private Button btn_jcyy;
        private Button ss_renew;
        private Label label18;//
        private string fylb = "";//武汉中心医院用add by zouchihua 2014-4-28
        [DllImport("User32.dll", EntryPoint = "PostMessage")]
        public static extern bool PostMessage(int hWnd, int Msg, int wParam, int lParam);
        //API函数申明
        [DllImport("kernel32")]
        private static extern int GetPrivateProfileString(string lpApplicationName, string lpKeyName, string lpDefault, StringBuilder lpReturnedString, int nSize, string lpFileName);
        /// <summary>
        /// 读取INI文件
        /// </summary>
        /// <param name="lpApplicationName">节名</param>
        /// <param name="lpKeyName">关键字</param>
        /// <param name="lpFileName">INI文件路径</param>
        /// <returns></returns>
        public static string GetIniString(string lpApplicationName, string lpKeyName, string lpFileName)
        {
            System.Text.StringBuilder strReturn = new StringBuilder(255);
            int nSize = GetPrivateProfileString(lpApplicationName, lpKeyName, "", strReturn, 255, lpFileName);
            return strReturn.ToString();
        }
        #region 自定义变量
        /// <summary>
        /// add by zouchihua 2012-10-22 会诊病人增加婴儿判断
        /// </summary>
        private int Hzbaby_id = 0;
        private SystemCfg cfg6079 = new SystemCfg(6079);
        private SystemCfg cfg6088 = new SystemCfg(6088);
        private SystemCfg cfg6089 = new SystemCfg(6089);
        private SystemCfg cfg6090 = new SystemCfg(6090);
        public OleDbConnection cCon = new OleDbConnection();
        private DataView SelectDataView = new DataView();
        private DataView SelectDataViews = new DataView();
        private DataTable tbYbzfbl = new DataTable();//医保自付比例
        private DbQuery myQuery;
        private BaseFunc myFunc;
        private FrmSSApply ssgl = new FrmSSApply();
        private string cYF = "";
        public int ModelID = 0;
        private long cYZ = 0;
        private double cJL = 0;
        public string sTab0 = "长期账单";
        public string sTab1 = "临时账单";
        public long BabyID = 0;
        public Guid BinID = Guid.Empty;
        public long YS_ID = 0;
        public long DeptID = InstanceForm._currentDept.DeptId;
        public Form Cpinfo;
        public ArrayList AR_OrderId = new ArrayList();//需要修改的执行时间的时间列。用于特殊治疗。modify by zouchihua 2011-09-14
        public decimal price = 0;
        /// <summary>
        /// 模板检索文本框 add by zouchihua 2012-08-06
        /// </summary>
        private TextBox SerchTxtBox = new TextBox();
        private string mbtj = "";
        private string mbtype = "2";
        //记录补录时间 Modify By tany 2011-08-05
        private DateTime blsj = DateManager.ServerDateTimeByDBType(InstanceForm._database);
        /// <summary>
        /// 是否使用合理用药
        /// </summary>
        string cfg6032 = "0";
        SystemCfg cfg_6032 = new SystemCfg(6032);
        SystemCfg cfg6075 = new SystemCfg(6075);
        SystemCfg cfg18005 = new SystemCfg(18005);
        SystemCfg cfg6085 = new SystemCfg(6085);
        /// <summary>
        /// 是否显示输血申请菜单
        /// </summary>
        SystemCfg cfg6073 = new SystemCfg(6073);
        /// <summary>
        /// 超过剂量是否强制不允许开立
        /// </summary>
        SystemCfg cfg6074 = new SystemCfg(6074);
        /// <summary>
        /// 是否显示打印规格列
        /// </summary>
        string cfg6036 = "0";
        /// <summary>
        /// 特殊治疗是否进行欠费控制
        /// </summary>
        SystemCfg cfg6054;
        SystemCfg cfg6058;
        SystemCfg cfg6061;
        SystemCfg cfg6063;
        SystemCfg cfg6082 = new SystemCfg(6082);

        private SystemCfg cfg6083 = new SystemCfg(6083);
        /// <summary>
        /// 模版名称 add by zouchihua 2013-8-4
        /// </summary>
        private string Mbmc = "";
        /// <summary>
        /// 合理用药接口 add by zouchihua 2011-12-24
        /// </summary>
        HlyyInterface hl = null;
        /// <summary>
        /// 补录标记，1表示补录 
        /// </summary>
        private int Blbj = 0;//Modify By zouchihua 2011-19-13
        private ArrayList order_arr = new ArrayList();//Add By zouchihua 2011-11-01
        SystemCfg cfg6053;
        SystemCfg cfg6059;
        SystemCfg cfg6070 = new SystemCfg(6070);
        /// <summary>
        /// 住院医生站是否使用药品比例控制 0=否，1=是
        /// </summary>
        SystemCfg cfg6066;
        ComboBox cmb = new ComboBox();
        private DataTable Mbtb = new DataTable();//保存模板列表  Add By zouchihua 2011-11-14
        private DataTable BrxxTb = new DataTable();//病人信息表     Add By zouchihua 2011-12-27
        /// <summary>
        /// 医生是否能够开医嘱类型为8和9（护理和其他）的项目
        /// </summary>
        private bool _ishlqt = false;
        /// <summary>
        /// 是否开单科室领药 0=不领1=领药
        /// </summary>
        public int _iskdksly = 0;//是否开单科室领药 Modify By Tany 2009-07-15 
        /// <summary>
        /// 口服药统领分类
        /// </summary>
        private string _kfyTlfl = ""; //Add By Tany 2010-01-19
        /// <summary>
        /// 注射剂统领分类
        /// </summary>
        private string _zsjTlfl = ""; //Add By Tany 2010-01-19
        private SystemCfg cfg6046;
        private SystemCfg cfg6047;
        private SystemCfg cfg6048;
        private SystemCfg cfg6049;
        private SystemCfg cfg6068 = new SystemCfg(6068);//医生工作站：是否能发送其他医生开立的医嘱 0=否 ，1=是
        public string mzxx = "";  //在开术后医嘱的时候得到麻醉内容。
        public int State = 0;
        string BinSql = "";   //定义SQL语句
        string BinSql1 = "";
        private bool isPY = true;
        public string WardID = "";
        public long Ward_dept = 0;
        public long Dept_Br = 0;
        public User YS = null;
        bool isHSZ = false;
        public string STAG = "";
        public long lg = 1;//权限
        private DataTable usageTb = null;//用法表
        private DataTable frequencyTb = null;//频率表
        public DataTable TypeTable = null;
        public DataTable _myTb = null;
        private DataTable WardIP_table = null;
        string sPaintLong = "", sPaintPSLong = "", sPaintWZXLong = "";//皮试，未执行
        int max_len10 = 0, max_len11 = 0, max_len12 = 0;//最长的医嘱长度,最长的医嘱长度(有数量单位的),最长的数量单位长度		
        string sPaint = "", sPaintPS = "", sPaintWZX = "";//皮试，未执行
        int max_len0 = 0, max_len1 = 0, max_len2 = 0;//最长的医嘱长度,最长的医嘱长度(有数量单位的),最长的数量单位长度		
        private int GridWidth = 90;//75;
        private bool LongOrderStat = false;
        private int tabnum = 0;
        private int pageType = 0; //0 代表长期医嘱窗口 1 代表临时医嘱窗口 
        private ImageList _images = null;
        protected Crownwood.Magic.Common.VisualStyle _style;
        private DataGridEx GrdSel;
        private System.Windows.Forms.DataGridTableStyle dataGridTableStyle3;
        private DataView SelectTempOrderDataView = new DataView();
        private DataView SelectLongOrderDataView = new DataView();
        private Crownwood.Magic.Controls.TabControl tabControl1;
        private Crownwood.Magic.Controls.TabPage tabPage1;
        //private Crownwood.Magic.Controls.TabPage tabPageJyjg;//检验结构查询 add by zouchihua
        private Crownwood.Magic.Controls.TabbedGroups tabbedGroups1;
        private Crownwood.Magic.Menus.MenuControl _topMenu = null;
        private Guid tsapply_id = Guid.Empty;//申请id
        private int Apply_type = 0;//0=正常  包括 1=特殊治疗，2=手术申请，3=转科 4=会诊 ;
        private Point pointZero;
        private int hh = 0;
        private double _price = 0;    //定义医嘱项目的价格变量
        private bool SS = true;
        private DataTable dwdt = new DataTable();
        private DataTable YPXL = new DataTable();
        private decimal JL = 0;//单位最小剂量
        private decimal JL2 = 0;
        public bool outType = false;//是否是出院或死亡
        private bool outTypeTemp = false;
        private bool YXCZ = false;//界面是否为有效长嘱状态
        private bool XG1 = false;//长嘱 是否被修改
        private bool XG2 = false;//临嘱 是否被修改
        private bool isClose = true;
        private bool XXC = false;//是否完成选项卡数据加载
        private int inFlag = 0;//设置输入编码状态（0 拼音码，1 五笔码）
        private DateTime MaxdTime;//补录时间的最大值
        private DateTime MindTime;//补录时间的最小值
        private string default_usage = "";
        private Doctor doctor;
        private bool mz = false;  //声明手术麻醉状态
        private bool _ys = false;  //声明医生工作站状态
        private bool hs = false;  //声明护士工作站1状态
        private bool _hs = false;
        private bool _hzsq = false;//会诊申请。
        private bool _tszl = false; //声明特殊治疗工作站状态
        private int sort = 0;//长期医嘱排列顺序：0=按嘱号排，1=按开始时间排
        // 0新开             1补录          2召回                     3插入                   4删除                5说明              6加急     
        private string[] hint = new String[]{"新开医嘱状态","补录医嘱状态","召回已停止的医嘱","在未发送的医嘱中插入一条记录。","删除或取消医嘱记录","输入说明性的医嘱","该医嘱记录增加“加急”或其它提示",
											  // 7自备                                                                  8停嘱             9保存                 10发送     
											  "给该医嘱记录添加“自备”提示，“自备”后不能取消，除非删除后重开。","停止该组医嘱(只能停长期医嘱的)","保存所有未执行的医嘱","发送所有已保存且未发送的医嘱",
											  //  11交病人                12自由录入                        13                           14                     15
											  "指定药品交病人 ","自由录入医嘱内容状态，不产生费用","医嘱费用查询――打开状态","医嘱费用查询――关闭状态","该组医嘱被存为模板",
											  //     16                17          18               19                      20                21
											  "显示模板列表","显示药品明细信息","提示：","补录医嘱只能是临时医嘱！","给中草药加脚注","医嘱补录"};
        public static long[] openForm = new long[10]; //被打开的医嘱管理窗体，限制为10个

        //定义同上时间
        private ArrayList sameDTlist = new ArrayList();
        //定义开始时间----浏阳妇幼用  长期
        private ArrayList startDTlist = new ArrayList();
        //定义开始时间----浏阳妇幼用  临时
        private ArrayList startDTlistT = new ArrayList();

        SystemCfg cfg6095 = new SystemCfg(6095);
        #endregion

        #region 控件的声明
        /// <summary>
        /// 控件的声明
        /// </summary>
        private System.Windows.Forms.StatusBar statusBar1;
        private System.Windows.Forms.Panel panel1;
        private System.Windows.Forms.Panel panel4;
        private System.Windows.Forms.Panel panel3;
        private System.Windows.Forms.Panel panel2;
        private System.Windows.Forms.Button btSave;
        private System.Windows.Forms.Button btDel;
        private System.Windows.Forms.Button btInsert;
        private System.Windows.Forms.Button btSend;
        private System.Windows.Forms.Panel panel5;
        private System.Windows.Forms.Panel panel6;
        private 病人信息.PatientInfo patientInfo1;
        private System.Windows.Forms.TabControl tabControl2;
        private System.Windows.Forms.TabPage tabPage6;
        private System.Windows.Forms.CheckBox ChkWillGetFee;
        private System.Windows.Forms.TabPage tabPage4;
        private System.Windows.Forms.TabPage tabPage3;
        private System.Windows.Forms.TabPage tabPage8;
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.DateTimePicker DtpbeginDate;
        private DataGridEx dataGrid_LongOrder;
        private System.Windows.Forms.Button btStopOrder;
        private System.Windows.Forms.Button btnInsert;
        private System.Windows.Forms.Button btnExplain;
        private System.Windows.Forms.Button btnSelf;
        private System.Windows.Forms.Button btnNewGroup;
        public System.Windows.Forms.TextBox txtExplain;
        private System.Windows.Forms.Button btnOrderRecall;
        private 价格信息.PriceInfo priceInfo1;
        private System.Windows.Forms.ListView listView1;
        private System.Windows.Forms.ColumnHeader columnHeader1;
        private System.Windows.Forms.ColumnHeader columnHeader2;
        private System.Windows.Forms.ColumnHeader columnHeader3;
        private System.Windows.Forms.TextBox txtModelName;
        private System.Windows.Forms.Label label17;
        private System.Windows.Forms.GroupBox groupBox2;
        private System.Windows.Forms.RadioButton rdAll;
        private System.Windows.Forms.RadioButton rdDept;
        private System.Windows.Forms.RadioButton rdPerson;
        private PinkieControls.ButtonXP btnSave;
        private PinkieControls.ButtonXP btnOpen;
        private System.Windows.Forms.Button button3;
        private DataGridEx dataGrid_TempOrder;
        private System.Windows.Forms.CheckBox chkAddi;
        private System.Windows.Forms.Button btnSupply;
        private System.Windows.Forms.ContextMenu contextMenu1;
        private System.Windows.Forms.MenuItem menuItem1;
        private System.Windows.Forms.MenuItem menuItem2;
        private System.Windows.Forms.MenuItem menuItem3;
        private System.Windows.Forms.MenuItem menuItem4;
        private System.Windows.Forms.Label label2;
        private System.Windows.Forms.TextBox txtContent;
        private System.Windows.Forms.Button btExn;
        private System.Windows.Forms.Timer timer1;
        private System.Windows.Forms.ListView lViewFee;
        private System.Windows.Forms.ColumnHeader columnHeader4;
        private System.Windows.Forms.ColumnHeader columnHeader5;
        private System.Windows.Forms.ColumnHeader columnHeader6;
        private System.Windows.Forms.ColumnHeader columnHeader7;
        private System.Windows.Forms.Label label5;
        private System.Windows.Forms.Label lbHJ;
        private System.Windows.Forms.MenuItem menuItem5;
        private System.Windows.Forms.MenuItem menuItem6;
        private System.Windows.Forms.MenuItem menuItem7;
        private System.Windows.Forms.MenuItem menuItem8;
        private System.Windows.Forms.MenuItem menuItem9;
        private System.Windows.Forms.MenuItem menuItem10;
        private System.Windows.Forms.MenuItem menuItem11;
        private System.Windows.Forms.MenuItem menuItem12;
        private System.Windows.Forms.Button btRefur;
        private System.Windows.Forms.Timer timer2;
        private System.Windows.Forms.Label lbE3;
        private System.Windows.Forms.Label lbE1;
        private System.Windows.Forms.Label lbE2;
        public System.Windows.Forms.Label lbXYTS;
        private System.Timers.Timer timer3;
        public System.Windows.Forms.Button btXY;
        private System.Windows.Forms.Button btAVA;
        private System.Windows.Forms.Button button2;
        private System.Windows.Forms.Button button4;
        private System.Windows.Forms.Button button5;
        private System.Windows.Forms.Button button6;
        private System.Windows.Forms.Button button7;
        private System.Windows.Forms.Button button8;
        private System.Windows.Forms.Button button9;
        private System.Windows.Forms.Button button10;
        private System.Windows.Forms.Button button11;
        private System.Windows.Forms.Button btJZYF;
        private System.Windows.Forms.Button btnPrt;//临时医嘱
        private System.Windows.Forms.ComboBox cmbChild;
        private System.Windows.Forms.Label lbInFlag;
        public System.Windows.Forms.Button btFootnote;
        private System.Windows.Forms.Panel pnExplain;
        private System.Windows.Forms.LinkLabel linkLbJJ;
        private System.Windows.Forms.LinkLabel linkLbJH;
        private System.Windows.Forms.Label label3;
        private System.Windows.Forms.LinkLabel linkLabel1;
        private System.Windows.Forms.Timer timer4;
        private System.Windows.Forms.LinkLabel linkLabel2;
        private System.Windows.Forms.ImageList groupTabs;
        private System.Windows.Forms.ImageList mainTabs;
        private System.Windows.Forms.ImageList imageList4;
        private System.Windows.Forms.LinkLabel linkLbCYDY;
        private System.Windows.Forms.Label lb_Model;
        private System.Windows.Forms.Label label4;
        private System.Windows.Forms.Label lb_dept;
        private System.Windows.Forms.CheckBox chk_dept;
        private System.Windows.Forms.Label label6;
        private System.Windows.Forms.CheckBox chk_zb;
        private System.Windows.Forms.CheckBox chk_TZ;
        private System.Windows.Forms.Label label7;
        private System.Windows.Forms.CheckBox chk_ypInfo;
        public System.Windows.Forms.Button bt_NewSelect;
        private TrasenClasses.GeneralControls.DataGridEx dataGrid_TempZD;
        private System.Windows.Forms.DataGridTableStyle dataGridTableStyle4;
        private System.Windows.Forms.DataGridTableStyle dataGridTableStyle1;
        private System.Windows.Forms.DataGridTableStyle dataGridTableStyle2;
        private System.Windows.Forms.DataGridTableStyle dataGridTableStyle;
        private TrasenClasses.GeneralControls.DataGridEx dataGrid_LongZD;
        private System.Windows.Forms.DataGrid dataGrid1;
        private System.Windows.Forms.TabControl tabControl3;
        private System.Windows.Forms.TabPage tabPage2;
        private System.Windows.Forms.TabPage tabPage5;
        private DataGridEx dataGrid2;
        private UtilityLibrary.WinControls.OutlookBar outlookBar1;
        private System.Windows.Forms.DataGridTableStyle dataGridTableStyle5;
        private System.Windows.Forms.Panel panelRight;
        private System.Windows.Forms.Panel panel7;
        private System.Windows.Forms.Splitter splitter4;
        private System.Windows.Forms.Panel panelLeft;
        private System.Windows.Forms.Splitter splitter1;
        private System.Windows.Forms.Panel panel8;
        private System.Windows.Forms.Label label8;
        private System.Windows.Forms.Label label9;
        private System.Windows.Forms.Label label10;
        private System.Windows.Forms.Label label11;
        private System.Windows.Forms.Label label12;
        private System.Windows.Forms.Label label13;
        private System.Windows.Forms.Label label14;
        private ComboBox cmbYF;
        private Label label15;
        private CheckBox chkRq;
        private DateTimePicker dtpRq2;
        private DateTimePicker dtpRq1;
        private ContextMenuStrip contextMenuStrip1;
        private ToolStripMenuItem 批量停嘱ToolStripMenuItem;
        private Button btngms;
        private ContextMenuStrip contextMenuStrip2;
        private ToolStripMenuItem 药物临床信息参考ToolStripMenuItem;
        private ToolStripMenuItem 药品说明书ToolStripMenuItem;
        private ToolStripMenuItem 中国药典ToolStripMenuItem;
        private ToolStripMenuItem 病人用药教育ToolStripMenuItem;
        private ToolStripMenuItem 药物检验值ToolStripMenuItem;
        private ToolStripMenuItem 临床检验信息参考ToolStripMenuItem;
        private ToolStripMenuItem toolStripMenuItem2;
        private ToolStripMenuItem 医药信息中心ToolStripMenuItem;
        private ToolStripSeparator toolStripSeparator1;
        private ToolStripMenuItem 药品配对信息ToolStripMenuItem;
        private ToolStripMenuItem 给药途径配对信息ToolStripMenuItem;
        private ToolStripMenuItem 医院药品信息ToolStripMenuItem;
        private ToolStripSeparator toolStripSeparator2;
        private ToolStripMenuItem 系统设置ToolStripMenuItem;
        private ToolStripMenuItem 用药研究ToolStripMenuItem;
        private ToolStripMenuItem 药物药物相互作用ToolStripMenuItem;
        private ToolStripMenuItem 药物食物相互作用ToolStripMenuItem;
        private ToolStripSeparator toolStripSeparator5;
        private ToolStripMenuItem 国内注射剂体外配伍ToolStripMenuItem;
        private ToolStripMenuItem 国外注射剂体外配伍ToolStripMenuItem;
        private ToolStripSeparator toolStripSeparator6;
        private ToolStripMenuItem 禁忌症ToolStripMenuItem;
        private ToolStripMenuItem 副作用ToolStripMenuItem;
        private ToolStripSeparator toolStripSeparator7;
        private ToolStripMenuItem 老年人用药ToolStripMenuItem;
        private ToolStripMenuItem 儿童用药ToolStripMenuItem;
        private ToolStripMenuItem 妊娠期用药ToolStripMenuItem;
        private ToolStripMenuItem 哺乳期用药ToolStripMenuItem;
        private ToolStripSeparator toolStripSeparator3;
        private ToolStripSeparator toolStripSeparator4;
        private ToolStripMenuItem 警告ToolStripMenuItem;
        private ToolStripMenuItem 审查ToolStripMenuItem;
        private LinkLabel linkLabel3;
        private Button btnLsyz;
        private ToolStripMenuItem 药品信息ToolStripMenuItem;
        private ColumnHeader columnHeader8;
        private MenuItem menuItem13;
        private Label label16;
        private Label labTempOrderHj;
        private TextBox txtserch;
        private Button button1;
        private BackgroundWorker backgroundWorker1;
        private ContextMenuStrip contextMenuStrip3;
        private ToolStripMenuItem 已备ToolStripMenuItem;
        private Button buttZH;
        private Button buttGS;
        private DateTimePicker datetimeLR;
        private DateTimePicker datetimeLRT;
        private System.ComponentModel.IContainer components;
        #endregion

        #region 护士医嘱管理构造函数
        /// <summary>
        /// 护士医嘱管理构造函数
        /// </summary>
        /// <param name="currentUser">用户ID</param>
        /// <param name="currentDept">执行科室</param>
        /// <param name="_value"></param>
        public FrmYZGL(long currentUser, long currentDept, object[] _value)
        {
            myQuery = new DbQuery(InstanceForm._database);
            myFunc = new BaseFunc(InstanceForm._database);
            cfg6063 = new SystemCfg(6063);
            GetBinID(Guid.Empty, _value);
            _hs = true;
            LoadResources();
            InitializeComponent();
            InitializeOutlookBar();

            BinSql = @" SELECT INPATIENT_ID AS BINID,BED_NO AS 床号,NAME AS 姓名 " +
                " FROM vi_zy_vInpatient_Bed " +
                " WHERE WARD_ID= '" + InstanceForm._currentDept.WardId + "' ORDER BY BED_NO,Baby_ID";

            _style = Crownwood.Magic.Common.VisualStyle.IDE;

            CreateInitialPages();

            GetBinID(Guid.Empty, _value);

            YS = new User(Convert.ToInt32(currentUser), InstanceForm._database);

            YS_ID = YS.EmployeeId;

            //护士站医嘱录入是否默认管床医生为下嘱医生 Add By Tany 2007-11-10
            if ((new SystemCfg(6018, InstanceForm._database)).Config == "是")
            {
                string docSql = "select zy_doc from zy_inpatient a inner join JC_ROLE_DOCTOR b on a.zy_doc=b.employee_id where a.inpatient_id='" + BinID + "'";
                DataTable docTb = InstanceForm._database.GetDataTable(docSql);

                if (docTb == null || docTb.Rows.Count == 0)
                {
                    MessageBox.Show("该病人没有分配管床医生，下嘱医生将默认当前操作员！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
                else
                {
                    YS_ID = Convert.ToInt64(docTb.Rows[0]["zy_doc"]);
                }
            }

            //Modify By tany 2010-03-08 护士站开单科室默认病人的所在科室
            //DeptID = Convert.ToInt64(Convertor.IsNull(currentDept, "0"));
            DeptID = Convert.ToInt64(Convertor.IsNull(_value[2], "0"));
            WardID = Convertor.IsNull(_value[1].ToString(), "0");
            Dept_Br = Convert.ToInt64(Convertor.IsNull(_value[2], "0"));
            STAG = Convertor.IsNull(_value[3].ToString(), "0");

            //Modify By tany 2011-05-09 增加对婴儿号的提取
            BabyID = Convert.ToInt64(STAG.Substring(40, 10));

            lg = Convert.ToInt64(Convertor.IsNull(_value[5], "0"));
            if (this.lg == 0 || this.lg == 4) outType = true;
            else outType = (bool)_value[4];

            this.Ward_dept = Convert.ToInt64(Convertor.IsNull(_value[6], "0"));


            //doctor=new Doctor(YS_ID,InstanceForm._database);

            //			this.tabControl3.TabPages.Remove(this.tabPage5);

            ///-----------账单录入-----------------///
            this.isHSZ = myFunc.IsHSZ(YS.EmployeeId);   //判断是否是护士长
            LoadItems();
        }
        #endregion

        #region 护士账单医嘱管理构造函数
        /// <summary>
        /// 护士1医嘱管理构造函数
        /// </summary>
        /// <param name="currentUser">用户ID</param>
        /// <param name="currentDept">执行科室</param>
        /// <param name="_value"></param>
        public FrmYZGL(long currentUser, long currentDept, string str, string tt, string hszd, object[] _value)
        {
            myQuery = new DbQuery(InstanceForm._database);
            myFunc = new BaseFunc(InstanceForm._database);
            GetBinID(Guid.Empty, _value);
            cfg6063 = new SystemCfg(6063);
            hs = true;
            LoadResources();
            InitializeComponent();
            InitializeOutlookBar();

            BinSql = @" SELECT INPATIENT_ID AS BINID,BED_NO AS 床号,NAME AS 姓名 " +
                " FROM vi_zy_vInpatient_Bed " +
                " WHERE WARD_ID= '" + InstanceForm._currentDept.WardId + "' ORDER BY BED_NO,Baby_ID";

            _style = Crownwood.Magic.Common.VisualStyle.IDE;

            CreateInitialPages();

            GetBinID(Guid.Empty, _value);

            YS = new User(Convert.ToInt32(currentUser), InstanceForm._database);

            YS_ID = YS.EmployeeId;

            //护士站医嘱录入是否默认管床医生为下嘱医生 Add By Tany 2007-11-10
            if ((new SystemCfg(6018, InstanceForm._database)).Config == "是")
            {
                string docSql = "select zy_doc from zy_inpatient a inner join JC_ROLE_DOCTOR b on a.zy_doc=b.employee_id where a.inpatient_id='" + BinID + "'";
                DataTable docTb = InstanceForm._database.GetDataTable(docSql);

                if (docTb == null || docTb.Rows.Count == 0)
                {
                    MessageBox.Show("该病人没有分配管床医生，下嘱医生将默认当前操作员！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
                else
                {
                    YS_ID = Convert.ToInt64(docTb.Rows[0]["zy_doc"]);
                }
            }

            DeptID = Convert.ToInt64(Convertor.IsNull(currentDept, "0"));
            WardID = Convertor.IsNull(_value[1].ToString(), "0");
            Dept_Br = Convert.ToInt32(Convertor.IsNull(_value[2], "0"));
            STAG = Convertor.IsNull(_value[3].ToString(), "0");

            //Modify By tany 2011-05-09 增加对婴儿号的提取
            BabyID = Convert.ToInt64(STAG.Substring(40, 10));

            lg = Convert.ToInt64(Convertor.IsNull(_value[5], "0"));
            if (this.lg == 0 || this.lg == 4) outType = true;
            else outType = (bool)_value[4];
            this.Ward_dept = Convert.ToInt64(Convertor.IsNull(_value[6], "0"));

            //doctor=new Doctor(YS_ID,InstanceForm._database);

            ///-----------账单录入-----------------///
            this.isHSZ = myFunc.IsHSZ(YS.EmployeeId);   //判断是否是护士长
            LoadItems();
        }
        #endregion


        private long EMrdeptid = 0;
        #region 医生医嘱管理构造函数
        /// <summary>
        /// 医生医嘱管理构造函数
        /// </summary>
        /// <param name="currentUser">用户ID</param>
        /// <param name="currentDept">执行科室</param>
        /// <param name="_value"></param>
        public FrmYZGL(long currentUser, long currentDept, string str, object[] _value)
        {
            myQuery = new DbQuery(InstanceForm._database);
            myFunc = new BaseFunc(InstanceForm._database);
            cfg6063 = new SystemCfg(6063);

            GetBinID(Guid.Empty, _value);
            _ys = true;
            LoadResources();
            InitializeComponent();
            InitializeOutlookBar();

            _style = Crownwood.Magic.Common.VisualStyle.IDE;

            CreateInitialPages();

            GetBinID(Guid.Empty, _value);

            YS = new User(Convert.ToInt32(currentUser), InstanceForm._database);

            YS_ID = YS.EmployeeId;
            DeptID = Convert.ToInt64(Convertor.IsNull(currentDept, "0"));
            EMrdeptid = Convert.ToInt64(Convertor.IsNull(currentDept, "0"));
            WardID = Convertor.IsNull(_value[1].ToString(), "0");
            Dept_Br = Convert.ToInt32(Convertor.IsNull(_value[2], "0"));
            STAG = Convertor.IsNull(_value[3].ToString(), "0");
            // MessageBox.Show(STAG);
            //Modify By tany 2011-05-09 增加对婴儿号的提取
            BabyID = Convert.ToInt64(STAG.Substring(40, 10));

            lg = Convert.ToInt64(Convertor.IsNull(_value[5], "0"));

            if (this.lg == 0 || this.lg == 4) outType = true;
            else outType = (bool)_value[4];
            this.Ward_dept = Convert.ToInt64(Convertor.IsNull(_value[6], "0"));
            this._iskdksly = Convert.ToInt32(Convertor.IsNull(_value[7], "0"));
            _tszl = Convert.ToBoolean(Convert.ToInt32(Convertor.IsNull(_value[8], "0")));//

            try
            {
                //Modify by zouchihua 2011-11-01
                tsapply_id = new Guid(_value[9].ToString());
                Apply_type = Convert.ToInt16(Convertor.IsNull(_value[10], "0"));//0=正常  包括 1=特殊治疗，2=手术申请，3=转科 4=会诊 ;

                if (Apply_type == 4)//改为apply_type=4 (Convertor.IsNull(_value[8], "0") == "0") Modify by zouchihua 2012-12-12
                    _hzsq = true;
                //add by zouchihua 2012-10-15 会诊医生开的医嘱是否开单科室为病人所在科室，执行科室为会诊科室 1=是，0=否
                if (_hzsq)
                {
                    cfg6059 = new SystemCfg(6059);
                    if (cfg6059.Config == "1")
                    {
                        //如果是会诊，并且参数6059开启 科室为病人所在科室
                        DeptID = Convert.ToInt64(Convertor.IsNull(_value[2], "0"));  //改为病人所在科室
                    }
                    //如果是会诊 add by zouchihua 2012-10-22
                    Hzbaby_id = Convert.ToInt32(Convertor.IsNull(_value[11], "0"));//婴儿
                    //  MessageBox.Show(Apply_type.ToString());
                }
            }
            catch (Exception ex)
            {
                _hzsq = false;
                tsapply_id = Guid.Empty;
                Apply_type = 0;
            }
            BinSql = @" SELECT INPATIENT_ID AS BINID,BED_NO AS 床号,NAME AS 姓名 " +
                " FROM vi_zy_vInpatient_Bed " +
                " WHERE inpatient_id= '" + BinID + "'";

            if (_tszl)
            {
                BinSql += " and baby_id=" + BabyID;
            }

            BinSql += " ORDER BY BED_NO,Baby_ID";

            //医生的判断放入Formload里面
            //if (!_tszl)
            //{
            //    try
            //    {
            //        doctor = new Doctor(YS_ID, InstanceForm._database);
            //    }
            //    catch
            //    {
            //        this.Close();
            //        return;
            //    }
            //}
            this.tabControl3.TabPages.Remove(this.tabPage5);

            //addJycxyp();//add by zouchihua
        }
        #endregion

        #region 手术麻醉医嘱管理构造函数
        /// <summary>
        /// 手术麻醉医嘱管理构造函数
        /// </summary>
        /// <param name="currentUser"></param>
        /// <param name="currentDept"></param>
        /// <param name="str"></param>
        /// <param name="_value"></param>
        public FrmYZGL(long currentUser, long currentDept, string str, string ssql, object[] _value)  ///手术麻醉
        {
            myQuery = new DbQuery(InstanceForm._database);
            myFunc = new BaseFunc(InstanceForm._database);
            cfg6063 = new SystemCfg(6063);
            GetBinID(Guid.Empty, _value);

            mz = true;
            BinSql1 = ssql;
            LoadResources();
            InitializeComponent();
            _style = Crownwood.Magic.Common.VisualStyle.IDE;

            CreateInitialPages();

            GetBinID(Guid.Empty, _value);

            YS = new User(Convert.ToInt32(currentUser), InstanceForm._database);

            InitializeOutlookBar();
            YS_ID = YS.EmployeeId;
            DeptID = Convert.ToInt64(Convertor.IsNull(currentDept, "0"));
            WardID = Convertor.IsNull(_value[1].ToString(), "0");
            Dept_Br = Convert.ToInt32(Convertor.IsNull(_value[2], "0"));
            STAG = Convertor.IsNull(_value[3].ToString(), "0");
            try
            {
                //Modify by zouchihua 2011-11-01
                tsapply_id = new Guid(_value[8].ToString());
                Apply_type = Convert.ToInt32(Convertor.IsNull(_value[9], "0"));
            }
            catch
            {
                tsapply_id = Guid.Empty;
                Apply_type = 0;
            }


            //Modify By tany 2011-05-09 增加对婴儿号的提取
            BabyID = Convert.ToInt64(STAG.Substring(40, 10));

            lg = Convert.ToInt64(Convertor.IsNull(_value[5], "0"));
            if (this.lg == 0 || this.lg == 4) outType = true;
            else outType = (bool)_value[4];
            this.Ward_dept = Convert.ToInt64(Convertor.IsNull(_value[6], "0"));
            //doctor = new Doctor(YS_ID, InstanceForm._database);	

            ///-----------账单录入-----------------///
            try
            {
                this.isHSZ = myFunc.IsHSZ(YS.EmployeeId);   //判断是否是护士长
            }
            catch (System.Exception err)
            {
                this.isHSZ = false;
            }

            LoadItems();

            #region  隐藏不需要出现的控件
            btnOrderRecall.Enabled = false;
            btnExplain.Enabled = false;
            button3.Enabled = false;
            btStopOrder.Enabled = false;
            btJZYF.Enabled = false;
            btAVA.Visible = false;
            lbXYTS.Visible = false;
            btXY.Enabled = false;
            chk_TZ.Visible = false;
            //add by zouchihua  2013-01-07
            chk_TZ.Checked = false;
            #endregion
        }
        #endregion

        #region 获得BinID号
        /// <summary>
        /// 获得BinID号
        /// </summary>
        /// <param name="Start">0或BinID</param>当参数为0时BinID为初始进入医嘱界面获得的值，否则BinID为到医嘱界面中获得的值(即选择左边病人列表中病人的BinID)
        /// <param name="_value">由主界面传入相关病人的信息值</param>
        /// <returns></returns>
        public Guid GetBinID(Guid Start, object[] _value)
        {
            if (Start == Guid.Empty)
                BinID = new Guid(Convertor.IsNull(_value[0], Guid.Empty.ToString()));
            else
                BinID = Start;

            //Modify by jchl 2015-05-18（初始化病人id时,同步初始化该病人是否启用医保智能审核提示）
            //_bAuditCheck = CheckIsAuditCheck(BinID.ToString());
            _bAuditCheck = ClsAuditCheck.CheckIsAuditCheck(BinID.ToString(), FrmMdiMain.Database);//是否需要智审

            return BinID;
        }
        #endregion

        /// <summary>
        /// 清理所有正在使用的资源。
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            if (isClose == false) return;
            for (int i = 0; i < 10; i++)
            {
                if (Ts_zyys_main.frmMain.openForm[i] == this.BinID)
                {
                    Ts_zyys_main.frmMain.openForm[i] = Guid.Empty;
                    break;
                }
            }
            if (disposing)
            {
                if (components != null)
                {
                    components.Dispose();
                }
            }
            base.Dispose(disposing);
        }

        #region Windows 窗体设计器生成的代码
        /// <summary>
        /// 设计器支持所需的方法 - 不要使用代码编辑器修改
        /// 此方法的内容。
        /// </summary>
        private void InitializeComponent()
        {
            this.components = new System.ComponentModel.Container();
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FrmYZGL));
            this.statusBar1 = new System.Windows.Forms.StatusBar();
            this.panel1 = new System.Windows.Forms.Panel();
            this.splitter1 = new System.Windows.Forms.Splitter();
            this.panelRight = new System.Windows.Forms.Panel();
            this.panel3 = new System.Windows.Forms.Panel();
            this.label18 = new System.Windows.Forms.Label();
            this.ss_renew = new System.Windows.Forms.Button();
            this.btnYkDw = new System.Windows.Forms.Button();
            this.btnDc = new System.Windows.Forms.Button();
            this.btnYzPrint = new System.Windows.Forms.Button();
            this.buttGS = new System.Windows.Forms.Button();
            this.label16 = new System.Windows.Forms.Label();
            this.labTempOrderHj = new System.Windows.Forms.Label();
            this.datetimeLRT = new System.Windows.Forms.DateTimePicker();
            this.btnLsyz = new System.Windows.Forms.Button();
            this.linkLabel3 = new System.Windows.Forms.LinkLabel();
            this.btngms = new System.Windows.Forms.Button();
            this.label15 = new System.Windows.Forms.Label();
            this.chkRq = new System.Windows.Forms.CheckBox();
            this.dtpRq2 = new System.Windows.Forms.DateTimePicker();
            this.dtpRq1 = new System.Windows.Forms.DateTimePicker();
            this.cmbYF = new System.Windows.Forms.ComboBox();
            this.dataGrid_TempZD = new TrasenClasses.GeneralControls.DataGridEx();
            this.dataGridTableStyle1 = new System.Windows.Forms.DataGridTableStyle();
            this.dataGrid_LongZD = new TrasenClasses.GeneralControls.DataGridEx();
            this.dataGridTableStyle4 = new System.Windows.Forms.DataGridTableStyle();
            this.btRefur = new System.Windows.Forms.Button();
            this.pnExplain = new System.Windows.Forms.Panel();
            this.linkLabel1 = new System.Windows.Forms.LinkLabel();
            this.label3 = new System.Windows.Forms.Label();
            this.linkLbCYDY = new System.Windows.Forms.LinkLabel();
            this.linkLabel2 = new System.Windows.Forms.LinkLabel();
            this.linkLbJH = new System.Windows.Forms.LinkLabel();
            this.linkLbJJ = new System.Windows.Forms.LinkLabel();
            this.btAVA = new System.Windows.Forms.Button();
            this.chk_TZ = new System.Windows.Forms.CheckBox();
            this.cmbChild = new System.Windows.Forms.ComboBox();
            this.lbXYTS = new System.Windows.Forms.Label();
            this.txtExplain = new System.Windows.Forms.TextBox();
            this.btExn = new System.Windows.Forms.Button();
            this.dataGrid_TempOrder = new TrasenClasses.GeneralControls.DataGridEx();
            this.dataGridTableStyle2 = new System.Windows.Forms.DataGridTableStyle();
            this.dataGrid_LongOrder = new TrasenClasses.GeneralControls.DataGridEx();
            this.dataGridTableStyle = new System.Windows.Forms.DataGridTableStyle();
            this.panel4 = new System.Windows.Forms.Panel();
            this.btn_jcyy = new System.Windows.Forms.Button();
            this.buttZH = new System.Windows.Forms.Button();
            this.button1 = new System.Windows.Forms.Button();
            this.btJZYF = new System.Windows.Forms.Button();
            this.chkAddi = new System.Windows.Forms.CheckBox();
            this.button3 = new System.Windows.Forms.Button();
            this.btnOrderRecall = new System.Windows.Forms.Button();
            this.btnNewGroup = new System.Windows.Forms.Button();
            this.btnSelf = new System.Windows.Forms.Button();
            this.contextMenuStrip3 = new System.Windows.Forms.ContextMenuStrip(this.components);
            this.已备ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.btnExplain = new System.Windows.Forms.Button();
            this.btnSupply = new System.Windows.Forms.Button();
            this.btnPrt = new System.Windows.Forms.Button();
            this.btSave = new System.Windows.Forms.Button();
            this.btDel = new System.Windows.Forms.Button();
            this.btInsert = new System.Windows.Forms.Button();
            this.btSend = new System.Windows.Forms.Button();
            this.btStopOrder = new System.Windows.Forms.Button();
            this.contextMenuStrip1 = new System.Windows.Forms.ContextMenuStrip(this.components);
            this.批量停嘱ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.btnInsert = new System.Windows.Forms.Button();
            this.button2 = new System.Windows.Forms.Button();
            this.button4 = new System.Windows.Forms.Button();
            this.button5 = new System.Windows.Forms.Button();
            this.button6 = new System.Windows.Forms.Button();
            this.button7 = new System.Windows.Forms.Button();
            this.button8 = new System.Windows.Forms.Button();
            this.button9 = new System.Windows.Forms.Button();
            this.button10 = new System.Windows.Forms.Button();
            this.button11 = new System.Windows.Forms.Button();
            this.panel7 = new System.Windows.Forms.Panel();
            this.splitter4 = new System.Windows.Forms.Splitter();
            this.panel6 = new System.Windows.Forms.Panel();
            this.lb_Model = new System.Windows.Forms.Label();
            this.txtserch = new System.Windows.Forms.TextBox();
            this.panel8 = new System.Windows.Forms.Panel();
            this.label14 = new System.Windows.Forms.Label();
            this.label13 = new System.Windows.Forms.Label();
            this.label12 = new System.Windows.Forms.Label();
            this.label11 = new System.Windows.Forms.Label();
            this.label10 = new System.Windows.Forms.Label();
            this.label9 = new System.Windows.Forms.Label();
            this.label8 = new System.Windows.Forms.Label();
            this.tabControl2 = new System.Windows.Forms.TabControl();
            this.tabPage6 = new System.Windows.Forms.TabPage();
            this.lbHJ = new System.Windows.Forms.Label();
            this.lViewFee = new System.Windows.Forms.ListView();
            this.columnHeader4 = new System.Windows.Forms.ColumnHeader();
            this.columnHeader5 = new System.Windows.Forms.ColumnHeader();
            this.columnHeader6 = new System.Windows.Forms.ColumnHeader();
            this.columnHeader7 = new System.Windows.Forms.ColumnHeader();
            this.label5 = new System.Windows.Forms.Label();
            this.lbE3 = new System.Windows.Forms.Label();
            this.lbE1 = new System.Windows.Forms.Label();
            this.ChkWillGetFee = new System.Windows.Forms.CheckBox();
            this.lbE2 = new System.Windows.Forms.Label();
            this.tabPage3 = new System.Windows.Forms.TabPage();
            this.bt_NewSelect = new System.Windows.Forms.Button();
            this.label7 = new System.Windows.Forms.Label();
            this.chk_ypInfo = new System.Windows.Forms.CheckBox();
            this.label6 = new System.Windows.Forms.Label();
            this.chk_zb = new System.Windows.Forms.CheckBox();
            this.label4 = new System.Windows.Forms.Label();
            this.chk_dept = new System.Windows.Forms.CheckBox();
            this.lb_dept = new System.Windows.Forms.Label();
            this.dataGrid1 = new System.Windows.Forms.DataGrid();
            this.priceInfo1 = new 价格信息.PriceInfo();
            this.tabPage8 = new System.Windows.Forms.TabPage();
            this.txtContent = new System.Windows.Forms.TextBox();
            this.label2 = new System.Windows.Forms.Label();
            this.btnOpen = new PinkieControls.ButtonXP();
            this.btnSave = new PinkieControls.ButtonXP();
            this.groupBox2 = new System.Windows.Forms.GroupBox();
            this.rdAll = new System.Windows.Forms.RadioButton();
            this.rdDept = new System.Windows.Forms.RadioButton();
            this.rdPerson = new System.Windows.Forms.RadioButton();
            this.txtModelName = new System.Windows.Forms.TextBox();
            this.label17 = new System.Windows.Forms.Label();
            this.tabPage4 = new System.Windows.Forms.TabPage();
            this.listView1 = new System.Windows.Forms.ListView();
            this.columnHeader1 = new System.Windows.Forms.ColumnHeader();
            this.columnHeader2 = new System.Windows.Forms.ColumnHeader();
            this.columnHeader3 = new System.Windows.Forms.ColumnHeader();
            this.columnHeader8 = new System.Windows.Forms.ColumnHeader();
            this.contextMenu1 = new System.Windows.Forms.ContextMenu();
            this.menuItem1 = new System.Windows.Forms.MenuItem();
            this.menuItem13 = new System.Windows.Forms.MenuItem();
            this.menuItem3 = new System.Windows.Forms.MenuItem();
            this.menuItem2 = new System.Windows.Forms.MenuItem();
            this.menuItem4 = new System.Windows.Forms.MenuItem();
            this.menuItem9 = new System.Windows.Forms.MenuItem();
            this.menuItem10 = new System.Windows.Forms.MenuItem();
            this.menuItem11 = new System.Windows.Forms.MenuItem();
            this.menuItem12 = new System.Windows.Forms.MenuItem();
            this.menuItem5 = new System.Windows.Forms.MenuItem();
            this.menuItem6 = new System.Windows.Forms.MenuItem();
            this.menuItem7 = new System.Windows.Forms.MenuItem();
            this.menuItem8 = new System.Windows.Forms.MenuItem();
            this.panel5 = new System.Windows.Forms.Panel();
            this.btXY = new System.Windows.Forms.Button();
            this.btFootnote = new System.Windows.Forms.Button();
            this.DtpbeginDate = new System.Windows.Forms.DateTimePicker();
            this.patientInfo1 = new 病人信息.PatientInfo();
            this.label1 = new System.Windows.Forms.Label();
            this.panelLeft = new System.Windows.Forms.Panel();
            this.panel2 = new System.Windows.Forms.Panel();
            this.tabControl3 = new System.Windows.Forms.TabControl();
            this.tabPage2 = new System.Windows.Forms.TabPage();
            this.outlookBar1 = new UtilityLibrary.WinControls.OutlookBar();
            this.tabPage5 = new System.Windows.Forms.TabPage();
            this.dataGrid2 = new TrasenClasses.GeneralControls.DataGridEx();
            this.dataGridTableStyle5 = new System.Windows.Forms.DataGridTableStyle();
            this.timer1 = new System.Windows.Forms.Timer(this.components);
            this.timer2 = new System.Windows.Forms.Timer(this.components);
            this.timer3 = new System.Timers.Timer();
            this.lbInFlag = new System.Windows.Forms.Label();
            this.timer4 = new System.Windows.Forms.Timer(this.components);
            this.groupTabs = new System.Windows.Forms.ImageList(this.components);
            this.mainTabs = new System.Windows.Forms.ImageList(this.components);
            this.imageList4 = new System.Windows.Forms.ImageList(this.components);
            this.contextMenuStrip2 = new System.Windows.Forms.ContextMenuStrip(this.components);
            this.药物临床信息参考ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.药品说明书ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.中国药典ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.病人用药教育ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.药物检验值ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.临床检验信息参考ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.toolStripSeparator1 = new System.Windows.Forms.ToolStripSeparator();
            this.toolStripMenuItem2 = new System.Windows.Forms.ToolStripMenuItem();
            this.药物药物相互作用ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.药物食物相互作用ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.toolStripSeparator5 = new System.Windows.Forms.ToolStripSeparator();
            this.国内注射剂体外配伍ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.国外注射剂体外配伍ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.toolStripSeparator6 = new System.Windows.Forms.ToolStripSeparator();
            this.禁忌症ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.副作用ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.toolStripSeparator7 = new System.Windows.Forms.ToolStripSeparator();
            this.老年人用药ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.儿童用药ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.妊娠期用药ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.哺乳期用药ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.toolStripSeparator2 = new System.Windows.Forms.ToolStripSeparator();
            this.医药信息中心ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.toolStripSeparator3 = new System.Windows.Forms.ToolStripSeparator();
            this.药品配对信息ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.给药途径配对信息ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.医院药品信息ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.toolStripSeparator4 = new System.Windows.Forms.ToolStripSeparator();
            this.用药研究ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.系统设置ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.审查ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.警告ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.药品信息ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.backgroundWorker1 = new System.ComponentModel.BackgroundWorker();
            this.datetimeLR = new System.Windows.Forms.DateTimePicker();
            this.imgTab = new System.Windows.Forms.ImageList(this.components);
            this.panel1.SuspendLayout();
            this.panelRight.SuspendLayout();
            this.panel3.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.dataGrid_TempZD)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dataGrid_LongZD)).BeginInit();
            this.pnExplain.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.dataGrid_TempOrder)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dataGrid_LongOrder)).BeginInit();
            this.panel4.SuspendLayout();
            this.contextMenuStrip3.SuspendLayout();
            this.contextMenuStrip1.SuspendLayout();
            this.panel7.SuspendLayout();
            this.panel6.SuspendLayout();
            this.panel8.SuspendLayout();
            this.tabControl2.SuspendLayout();
            this.tabPage6.SuspendLayout();
            this.tabPage3.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.dataGrid1)).BeginInit();
            this.tabPage8.SuspendLayout();
            this.groupBox2.SuspendLayout();
            this.tabPage4.SuspendLayout();
            this.panel5.SuspendLayout();
            this.panelLeft.SuspendLayout();
            this.panel2.SuspendLayout();
            this.tabControl3.SuspendLayout();
            this.tabPage2.SuspendLayout();
            this.tabPage5.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.dataGrid2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.timer3)).BeginInit();
            this.contextMenuStrip2.SuspendLayout();
            this.SuspendLayout();
            // 
            // statusBar1
            // 
            this.statusBar1.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.statusBar1.Location = new System.Drawing.Point(0, 703);
            this.statusBar1.Name = "statusBar1";
            this.statusBar1.Size = new System.Drawing.Size(1241, 22);
            this.statusBar1.TabIndex = 0;
            this.statusBar1.Text = "提示:";
            this.statusBar1.MouseLeave += new System.EventHandler(this.statusBar1_MouseLeave);
            this.statusBar1.MouseEnter += new System.EventHandler(this.statusBar1_MouseEnter);
            // 
            // panel1
            // 
            this.panel1.Controls.Add(this.splitter1);
            this.panel1.Controls.Add(this.panelRight);
            this.panel1.Controls.Add(this.panelLeft);
            this.panel1.Dock = System.Windows.Forms.DockStyle.Fill;
            this.panel1.Location = new System.Drawing.Point(0, 0);
            this.panel1.Name = "panel1";
            this.panel1.Size = new System.Drawing.Size(1241, 703);
            this.panel1.TabIndex = 1;
            // 
            // splitter1
            // 
            this.splitter1.Location = new System.Drawing.Point(144, 0);
            this.splitter1.Name = "splitter1";
            this.splitter1.Size = new System.Drawing.Size(3, 703);
            this.splitter1.TabIndex = 10;
            this.splitter1.TabStop = false;
            // 
            // panelRight
            // 
            this.panelRight.Controls.Add(this.panel3);
            this.panelRight.Controls.Add(this.panel4);
            this.panelRight.Controls.Add(this.panel7);
            this.panelRight.Dock = System.Windows.Forms.DockStyle.Fill;
            this.panelRight.Location = new System.Drawing.Point(144, 0);
            this.panelRight.Name = "panelRight";
            this.panelRight.Size = new System.Drawing.Size(1097, 703);
            this.panelRight.TabIndex = 9;
            // 
            // panel3
            // 
            this.panel3.Controls.Add(this.label18);
            this.panel3.Controls.Add(this.ss_renew);
            this.panel3.Controls.Add(this.btnYkDw);
            this.panel3.Controls.Add(this.btnDc);
            this.panel3.Controls.Add(this.btnYzPrint);
            this.panel3.Controls.Add(this.buttGS);
            this.panel3.Controls.Add(this.label16);
            this.panel3.Controls.Add(this.labTempOrderHj);
            this.panel3.Controls.Add(this.datetimeLRT);
            this.panel3.Controls.Add(this.btnLsyz);
            this.panel3.Controls.Add(this.linkLabel3);
            this.panel3.Controls.Add(this.btngms);
            this.panel3.Controls.Add(this.label15);
            this.panel3.Controls.Add(this.chkRq);
            this.panel3.Controls.Add(this.dtpRq2);
            this.panel3.Controls.Add(this.dtpRq1);
            this.panel3.Controls.Add(this.cmbYF);
            this.panel3.Controls.Add(this.dataGrid_TempZD);
            this.panel3.Controls.Add(this.dataGrid_LongZD);
            this.panel3.Controls.Add(this.btRefur);
            this.panel3.Controls.Add(this.pnExplain);
            this.panel3.Controls.Add(this.btAVA);
            this.panel3.Controls.Add(this.chk_TZ);
            this.panel3.Controls.Add(this.cmbChild);
            this.panel3.Controls.Add(this.lbXYTS);
            this.panel3.Controls.Add(this.txtExplain);
            this.panel3.Controls.Add(this.btExn);
            this.panel3.Controls.Add(this.dataGrid_TempOrder);
            this.panel3.Controls.Add(this.dataGrid_LongOrder);
            this.panel3.Dock = System.Windows.Forms.DockStyle.Fill;
            this.panel3.Location = new System.Drawing.Point(0, 0);
            this.panel3.Name = "panel3";
            this.panel3.Size = new System.Drawing.Size(1097, 498);
            this.panel3.TabIndex = 0;
            // 
            // label18
            // 
            this.label18.AutoSize = true;
            this.label18.Font = new System.Drawing.Font("微软雅黑", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.label18.ForeColor = System.Drawing.Color.Red;
            this.label18.Location = new System.Drawing.Point(886, 7);
            this.label18.Name = "label18";
            this.label18.Size = new System.Drawing.Size(233, 20);
            this.label18.TabIndex = 75;
            this.label18.Text = "（该病人为单病种病人）当前费用：";
            this.label18.Visible = false;
            // 
            // ss_renew
            // 
            this.ss_renew.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.ss_renew.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.ss_renew.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.ss_renew.ForeColor = System.Drawing.SystemColors.Desktop;
            this.ss_renew.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.ss_renew.ImageIndex = 4;
            this.ss_renew.Location = new System.Drawing.Point(955, 476);
            this.ss_renew.Name = "ss_renew";
            this.ss_renew.Size = new System.Drawing.Size(67, 22);
            this.ss_renew.TabIndex = 74;
            this.ss_renew.Text = "术前续费单";
            this.ss_renew.Click += new System.EventHandler(this.ss_renew_Click);
            // 
            // btnYkDw
            // 
            this.btnYkDw.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btnYkDw.FlatStyle = System.Windows.Forms.FlatStyle.Popup;
            this.btnYkDw.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btnYkDw.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btnYkDw.Location = new System.Drawing.Point(549, 477);
            this.btnYkDw.Name = "btnYkDw";
            this.btnYkDw.Size = new System.Drawing.Size(80, 20);
            this.btnYkDw.TabIndex = 73;
            this.btnYkDw.Text = "药库单位(&k)";
            this.btnYkDw.Click += new System.EventHandler(this.btnYkDw_Click);
            // 
            // btnDc
            // 
            this.btnDc.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btnDc.FlatStyle = System.Windows.Forms.FlatStyle.Popup;
            this.btnDc.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btnDc.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btnDc.Location = new System.Drawing.Point(518, 477);
            this.btnDc.Name = "btnDc";
            this.btnDc.Size = new System.Drawing.Size(29, 20);
            this.btnDc.TabIndex = 72;
            this.btnDc.Text = "DC";
            this.btnDc.Click += new System.EventHandler(this.btnDc_Click);
            // 
            // btnYzPrint
            // 
            this.btnYzPrint.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btnYzPrint.FlatStyle = System.Windows.Forms.FlatStyle.Popup;
            this.btnYzPrint.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btnYzPrint.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btnYzPrint.Location = new System.Drawing.Point(631, 477);
            this.btnYzPrint.Name = "btnYzPrint";
            this.btnYzPrint.Size = new System.Drawing.Size(64, 20);
            this.btnYzPrint.TabIndex = 71;
            this.btnYzPrint.Text = "医嘱打印";
            this.btnYzPrint.Click += new System.EventHandler(this.btnYzPrint_Click);
            // 
            // buttGS
            // 
            this.buttGS.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.buttGS.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.buttGS.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.buttGS.ForeColor = System.Drawing.SystemColors.Desktop;
            this.buttGS.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.buttGS.ImageIndex = 4;
            this.buttGS.Location = new System.Drawing.Point(882, 476);
            this.buttGS.Name = "buttGS";
            this.buttGS.Size = new System.Drawing.Size(67, 22);
            this.buttGS.TabIndex = 70;
            this.buttGS.Text = "同上(&R)";
            this.buttGS.Click += new System.EventHandler(this.buttGS_Click);
            // 
            // label16
            // 
            this.label16.AutoSize = true;
            this.label16.BackColor = System.Drawing.SystemColors.ButtonHighlight;
            this.label16.Location = new System.Drawing.Point(452, 5);
            this.label16.Name = "label16";
            this.label16.Size = new System.Drawing.Size(53, 12);
            this.label16.TabIndex = 24;
            this.label16.Text = "费用合计";
            // 
            // labTempOrderHj
            // 
            this.labTempOrderHj.AutoSize = true;
            this.labTempOrderHj.BackColor = System.Drawing.SystemColors.ActiveCaptionText;
            this.labTempOrderHj.ForeColor = System.Drawing.Color.DarkRed;
            this.labTempOrderHj.Location = new System.Drawing.Point(509, 5);
            this.labTempOrderHj.Name = "labTempOrderHj";
            this.labTempOrderHj.Size = new System.Drawing.Size(11, 12);
            this.labTempOrderHj.TabIndex = 23;
            this.labTempOrderHj.Text = "0";
            this.labTempOrderHj.Visible = false;
            // 
            // datetimeLRT
            // 
            this.datetimeLRT.CustomFormat = "yyyy-MM-dd HH:mm:ss";
            this.datetimeLRT.Format = System.Windows.Forms.DateTimePickerFormat.Custom;
            this.datetimeLRT.Location = new System.Drawing.Point(153, 454);
            this.datetimeLRT.Name = "datetimeLRT";
            this.datetimeLRT.ShowUpDown = true;
            this.datetimeLRT.Size = new System.Drawing.Size(135, 21);
            this.datetimeLRT.TabIndex = 3;
            this.datetimeLRT.Visible = false;
            this.datetimeLRT.LostFocus += new System.EventHandler(this.datetimeLRT_LostFocus);
            // 
            // btnLsyz
            // 
            this.btnLsyz.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btnLsyz.FlatStyle = System.Windows.Forms.FlatStyle.Popup;
            this.btnLsyz.Font = new System.Drawing.Font("宋体", 9F);
            this.btnLsyz.ForeColor = System.Drawing.SystemColors.ActiveCaption;
            this.btnLsyz.Location = new System.Drawing.Point(815, 477);
            this.btnLsyz.Name = "btnLsyz";
            this.btnLsyz.Size = new System.Drawing.Size(63, 20);
            this.btnLsyz.TabIndex = 22;
            this.btnLsyz.Text = "历史医嘱";
            this.btnLsyz.Click += new System.EventHandler(this.btnLsyz_Click);
            // 
            // linkLabel3
            // 
            this.linkLabel3.AutoSize = true;
            this.linkLabel3.BackColor = System.Drawing.Color.SeaShell;
            this.linkLabel3.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.linkLabel3.Location = new System.Drawing.Point(363, 4);
            this.linkLabel3.Name = "linkLabel3";
            this.linkLabel3.Size = new System.Drawing.Size(67, 14);
            this.linkLabel3.TabIndex = 21;
            this.linkLabel3.TabStop = true;
            this.linkLabel3.Text = "健康档案";
            this.linkLabel3.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLabel3_LinkClicked);
            // 
            // btngms
            // 
            this.btngms.BackColor = System.Drawing.SystemColors.ActiveCaptionText;
            this.btngms.FlatAppearance.BorderColor = System.Drawing.Color.Blue;
            this.btngms.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btngms.Location = new System.Drawing.Point(773, 2);
            this.btngms.Name = "btngms";
            this.btngms.Size = new System.Drawing.Size(107, 23);
            this.btngms.TabIndex = 20;
            this.btngms.Text = "过敏史/病生状态";
            this.btngms.UseVisualStyleBackColor = false;
            this.btngms.Visible = false;
            this.btngms.Click += new System.EventHandler(this.btngms_Click);
            // 
            // label15
            // 
            this.label15.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.label15.AutoSize = true;
            this.label15.BackColor = System.Drawing.Color.White;
            this.label15.Location = new System.Drawing.Point(562, 478);
            this.label15.Name = "label15";
            this.label15.Size = new System.Drawing.Size(17, 12);
            this.label15.TabIndex = 19;
            this.label15.Text = "到";
            this.label15.Visible = false;
            // 
            // chkRq
            // 
            this.chkRq.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.chkRq.AutoSize = true;
            this.chkRq.BackColor = System.Drawing.Color.White;
            this.chkRq.Checked = true;
            this.chkRq.CheckState = System.Windows.Forms.CheckState.Checked;
            this.chkRq.Location = new System.Drawing.Point(456, 478);
            this.chkRq.Name = "chkRq";
            this.chkRq.Size = new System.Drawing.Size(15, 14);
            this.chkRq.TabIndex = 18;
            this.chkRq.UseVisualStyleBackColor = false;
            this.chkRq.Visible = false;
            this.chkRq.CheckedChanged += new System.EventHandler(this.chkRq_CheckedChanged);
            // 
            // dtpRq2
            // 
            this.dtpRq2.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.dtpRq2.Format = System.Windows.Forms.DateTimePickerFormat.Short;
            this.dtpRq2.Location = new System.Drawing.Point(583, 476);
            this.dtpRq2.Name = "dtpRq2";
            this.dtpRq2.Size = new System.Drawing.Size(86, 21);
            this.dtpRq2.TabIndex = 17;
            this.dtpRq2.Visible = false;
            // 
            // dtpRq1
            // 
            this.dtpRq1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.dtpRq1.Format = System.Windows.Forms.DateTimePickerFormat.Short;
            this.dtpRq1.Location = new System.Drawing.Point(474, 476);
            this.dtpRq1.Name = "dtpRq1";
            this.dtpRq1.Size = new System.Drawing.Size(86, 21);
            this.dtpRq1.TabIndex = 16;
            this.dtpRq1.Visible = false;
            // 
            // cmbYF
            // 
            this.cmbYF.BackColor = System.Drawing.Color.FloralWhite;
            this.cmbYF.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbYF.Font = new System.Drawing.Font("宋体", 11F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.cmbYF.ForeColor = System.Drawing.SystemColors.ActiveCaption;
            this.cmbYF.Location = new System.Drawing.Point(577, 1);
            this.cmbYF.Name = "cmbYF";
            this.cmbYF.Size = new System.Drawing.Size(93, 23);
            this.cmbYF.TabIndex = 12;
            this.cmbYF.SelectedIndexChanged += new System.EventHandler(this.cmbYF_SelectedIndexChanged);
            // 
            // dataGrid_TempZD
            // 
            this.dataGrid_TempZD.CaptionVisible = false;
            this.dataGrid_TempZD.CellSelectedBackColor = System.Drawing.Color.SkyBlue;
            this.dataGrid_TempZD.DataMember = "";
            this.dataGrid_TempZD.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            this.dataGrid_TempZD.Location = new System.Drawing.Point(680, 64);
            this.dataGrid_TempZD.Name = "dataGrid_TempZD";
            this.dataGrid_TempZD.Size = new System.Drawing.Size(200, 272);
            this.dataGrid_TempZD.TabIndex = 15;
            this.dataGrid_TempZD.TableStyles.AddRange(new System.Windows.Forms.DataGridTableStyle[] {
            this.dataGridTableStyle1});
            this.dataGrid_TempZD.MouseUp += new System.Windows.Forms.MouseEventHandler(this.dataGrid_TempZD_MouseUp);
            this.dataGrid_TempZD.CurrentCellChanged += new System.EventHandler(this.dataGrid_TempZD_CurrentCellChanged);
            this.dataGrid_TempZD.MouseDown += new System.Windows.Forms.MouseEventHandler(this.dataGrid_TempZD_MouseDown);
            this.dataGrid_TempZD.myKeyDown += new TrasenClasses.GeneralControls.myDelegate(this.dataGrid_TempZD_myKeyDown);
            // 
            // dataGridTableStyle1
            // 
            this.dataGridTableStyle1.DataGrid = this.dataGrid_TempZD;
            this.dataGridTableStyle1.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            // 
            // dataGrid_LongZD
            // 
            this.dataGrid_LongZD.AllowSorting = false;
            this.dataGrid_LongZD.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(224)))), ((int)(((byte)(224)))), ((int)(((byte)(224)))));
            this.dataGrid_LongZD.CaptionVisible = false;
            this.dataGrid_LongZD.CellSelectedBackColor = System.Drawing.Color.SkyBlue;
            this.dataGrid_LongZD.DataMember = "";
            this.dataGrid_LongZD.HeaderFont = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.dataGrid_LongZD.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            this.dataGrid_LongZD.Location = new System.Drawing.Point(448, 64);
            this.dataGrid_LongZD.Name = "dataGrid_LongZD";
            this.dataGrid_LongZD.Size = new System.Drawing.Size(200, 272);
            this.dataGrid_LongZD.TabIndex = 14;
            this.dataGrid_LongZD.TableStyles.AddRange(new System.Windows.Forms.DataGridTableStyle[] {
            this.dataGridTableStyle4});
            this.dataGrid_LongZD.MouseUp += new System.Windows.Forms.MouseEventHandler(this.dataGrid_LongZD_MouseUp);
            this.dataGrid_LongZD.CurrentCellChanged += new System.EventHandler(this.dataGrid_LongZD_CurrentCellChanged);
            this.dataGrid_LongZD.MouseDown += new System.Windows.Forms.MouseEventHandler(this.dataGrid_LongZD_MouseDown);
            this.dataGrid_LongZD.myKeyDown += new TrasenClasses.GeneralControls.myDelegate(this.dataGrid_LongZD_myKeyDown);
            // 
            // dataGridTableStyle4
            // 
            this.dataGridTableStyle4.DataGrid = this.dataGrid_LongZD;
            this.dataGridTableStyle4.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            // 
            // btRefur
            // 
            this.btRefur.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btRefur.FlatStyle = System.Windows.Forms.FlatStyle.Popup;
            this.btRefur.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btRefur.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btRefur.Location = new System.Drawing.Point(764, 477);
            this.btRefur.Name = "btRefur";
            this.btRefur.Size = new System.Drawing.Size(49, 20);
            this.btRefur.TabIndex = 7;
            this.btRefur.Text = "刷新F5";
            this.btRefur.Click += new System.EventHandler(this.btRefur_Click);
            // 
            // pnExplain
            // 
            this.pnExplain.BackColor = System.Drawing.Color.WhiteSmoke;
            this.pnExplain.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.pnExplain.Controls.Add(this.linkLabel1);
            this.pnExplain.Controls.Add(this.label3);
            this.pnExplain.Controls.Add(this.linkLbCYDY);
            this.pnExplain.Controls.Add(this.linkLabel2);
            this.pnExplain.Controls.Add(this.linkLbJH);
            this.pnExplain.Controls.Add(this.linkLbJJ);
            this.pnExplain.ForeColor = System.Drawing.SystemColors.Highlight;
            this.pnExplain.Location = new System.Drawing.Point(904, 284);
            this.pnExplain.Name = "pnExplain";
            this.pnExplain.Size = new System.Drawing.Size(80, 108);
            this.pnExplain.TabIndex = 13;
            this.pnExplain.Visible = false;
            this.pnExplain.MouseLeave += new System.EventHandler(this.pnExplain_MouseLeave);
            // 
            // linkLabel1
            // 
            this.linkLabel1.AutoSize = true;
            this.linkLabel1.Font = new System.Drawing.Font("宋体", 10F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.linkLabel1.LinkBehavior = System.Windows.Forms.LinkBehavior.NeverUnderline;
            this.linkLabel1.LinkColor = System.Drawing.Color.Navy;
            this.linkLabel1.Location = new System.Drawing.Point(18, 88);
            this.linkLabel1.Name = "linkLabel1";
            this.linkLabel1.Size = new System.Drawing.Size(49, 14);
            this.linkLabel1.TabIndex = 3;
            this.linkLabel1.TabStop = true;
            this.linkLabel1.Text = "关  闭";
            this.linkLabel1.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLabel1_LinkClicked);
            // 
            // label3
            // 
            this.label3.AutoSize = true;
            this.label3.Location = new System.Drawing.Point(10, 77);
            this.label3.Name = "label3";
            this.label3.Size = new System.Drawing.Size(77, 12);
            this.label3.TabIndex = 2;
            this.label3.Text = "------------";
            // 
            // linkLbCYDY
            // 
            this.linkLbCYDY.AutoSize = true;
            this.linkLbCYDY.Font = new System.Drawing.Font("宋体", 10F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.linkLbCYDY.LinkBehavior = System.Windows.Forms.LinkBehavior.NeverUnderline;
            this.linkLbCYDY.LinkColor = System.Drawing.Color.Navy;
            this.linkLbCYDY.Location = new System.Drawing.Point(16, 64);
            this.linkLbCYDY.Name = "linkLbCYDY";
            this.linkLbCYDY.Size = new System.Drawing.Size(63, 14);
            this.linkLbCYDY.TabIndex = 6;
            this.linkLbCYDY.TabStop = true;
            this.linkLbCYDY.Text = "出院带药";
            this.linkLbCYDY.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLbJJ_LinkClicked);
            // 
            // linkLabel2
            // 
            this.linkLabel2.AutoSize = true;
            this.linkLabel2.Cursor = System.Windows.Forms.Cursors.Hand;
            this.linkLabel2.Font = new System.Drawing.Font("宋体", 10F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.linkLabel2.ImageAlign = System.Drawing.ContentAlignment.BottomLeft;
            this.linkLabel2.LinkBehavior = System.Windows.Forms.LinkBehavior.NeverUnderline;
            this.linkLabel2.LinkColor = System.Drawing.Color.Navy;
            this.linkLabel2.Location = new System.Drawing.Point(18, 8);
            this.linkLabel2.Name = "linkLabel2";
            this.linkLabel2.Size = new System.Drawing.Size(49, 14);
            this.linkLabel2.TabIndex = 5;
            this.linkLabel2.TabStop = true;
            this.linkLabel2.Text = "交病人";
            this.linkLabel2.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLbJJ_LinkClicked);
            // 
            // linkLbJH
            // 
            this.linkLbJH.AutoSize = true;
            this.linkLbJH.Font = new System.Drawing.Font("宋体", 10F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.linkLbJH.LinkBehavior = System.Windows.Forms.LinkBehavior.NeverUnderline;
            this.linkLbJH.LinkColor = System.Drawing.Color.Navy;
            this.linkLbJH.Location = new System.Drawing.Point(18, 46);
            this.linkLbJH.Name = "linkLbJH";
            this.linkLbJH.Size = new System.Drawing.Size(49, 14);
            this.linkLbJH.TabIndex = 1;
            this.linkLbJH.TabStop = true;
            this.linkLbJH.Text = "交护办";
            this.linkLbJH.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLbJJ_LinkClicked);
            // 
            // linkLbJJ
            // 
            this.linkLbJJ.AutoSize = true;
            this.linkLbJJ.Cursor = System.Windows.Forms.Cursors.Hand;
            this.linkLbJJ.Font = new System.Drawing.Font("宋体", 10F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.linkLbJJ.LinkBehavior = System.Windows.Forms.LinkBehavior.NeverUnderline;
            this.linkLbJJ.LinkColor = System.Drawing.Color.Navy;
            this.linkLbJJ.Location = new System.Drawing.Point(18, 27);
            this.linkLbJJ.Name = "linkLbJJ";
            this.linkLbJJ.Size = new System.Drawing.Size(49, 14);
            this.linkLbJJ.TabIndex = 0;
            this.linkLbJJ.TabStop = true;
            this.linkLbJJ.Text = "交医生";
            this.linkLbJJ.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLbJJ_LinkClicked);
            // 
            // btAVA
            // 
            this.btAVA.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btAVA.FlatStyle = System.Windows.Forms.FlatStyle.Popup;
            this.btAVA.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btAVA.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btAVA.Location = new System.Drawing.Point(697, 477);
            this.btAVA.Name = "btAVA";
            this.btAVA.Size = new System.Drawing.Size(64, 20);
            this.btAVA.TabIndex = 9;
            this.btAVA.Text = "有效长嘱";
            this.btAVA.Click += new System.EventHandler(this.btAVA_Click);
            // 
            // chk_TZ
            // 
            this.chk_TZ.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.chk_TZ.BackColor = System.Drawing.Color.White;
            this.chk_TZ.Checked = true;
            this.chk_TZ.CheckState = System.Windows.Forms.CheckState.Checked;
            this.chk_TZ.FlatStyle = System.Windows.Forms.FlatStyle.System;
            this.chk_TZ.Location = new System.Drawing.Point(91, 478);
            this.chk_TZ.Name = "chk_TZ";
            this.chk_TZ.Size = new System.Drawing.Size(144, 16);
            this.chk_TZ.TabIndex = 3;
            this.chk_TZ.Text = "发送医嘱通知护士站";
            this.chk_TZ.UseVisualStyleBackColor = false;
            // 
            // cmbChild
            // 
            this.cmbChild.BackColor = System.Drawing.Color.FloralWhite;
            this.cmbChild.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbChild.Font = new System.Drawing.Font("宋体", 11F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.cmbChild.ForeColor = System.Drawing.SystemColors.ActiveCaption;
            this.cmbChild.Location = new System.Drawing.Point(672, 1);
            this.cmbChild.Name = "cmbChild";
            this.cmbChild.Size = new System.Drawing.Size(99, 23);
            this.cmbChild.TabIndex = 11;
            // 
            // lbXYTS
            // 
            this.lbXYTS.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.lbXYTS.AutoSize = true;
            this.lbXYTS.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(254)))), ((int)(((byte)(245)))), ((int)(((byte)(237)))));
            this.lbXYTS.Cursor = System.Windows.Forms.Cursors.Hand;
            this.lbXYTS.ForeColor = System.Drawing.Color.Navy;
            this.lbXYTS.Location = new System.Drawing.Point(110, 478);
            this.lbXYTS.Name = "lbXYTS";
            this.lbXYTS.Size = new System.Drawing.Size(65, 12);
            this.lbXYTS.TabIndex = 8;
            this.lbXYTS.Text = "有新药信息";
            this.lbXYTS.TextAlign = System.Drawing.ContentAlignment.BottomCenter;
            this.lbXYTS.MouseLeave += new System.EventHandler(this.lbXYTS_MouseLeave);
            this.lbXYTS.Click += new System.EventHandler(this.btXY_Click);
            this.lbXYTS.MouseEnter += new System.EventHandler(this.lbXYTS_MouseEnter);
            // 
            // txtExplain
            // 
            this.txtExplain.Font = new System.Drawing.Font("宋体", 11F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtExplain.Location = new System.Drawing.Point(184, 416);
            this.txtExplain.MaxLength = 100;
            this.txtExplain.Name = "txtExplain";
            this.txtExplain.Size = new System.Drawing.Size(336, 24);
            this.txtExplain.TabIndex = 3;
            this.txtExplain.Visible = false;
            this.txtExplain.Leave += new System.EventHandler(this.txtExplain_Leave);
            this.txtExplain.KeyUp += new System.Windows.Forms.KeyEventHandler(this.txtExplain_KeyUp);
            // 
            // btExn
            // 
            this.btExn.Location = new System.Drawing.Point(440, 448);
            this.btExn.Name = "btExn";
            this.btExn.Size = new System.Drawing.Size(56, 23);
            this.btExn.TabIndex = 5;
            this.btExn.Text = "选择(&S)";
            this.btExn.Click += new System.EventHandler(this.btExn_Click);
            // 
            // dataGrid_TempOrder
            // 
            this.dataGrid_TempOrder.CaptionVisible = false;
            this.dataGrid_TempOrder.CellSelectedBackColor = System.Drawing.Color.SkyBlue;
            this.dataGrid_TempOrder.DataMember = "";
            this.dataGrid_TempOrder.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            this.dataGrid_TempOrder.Location = new System.Drawing.Point(224, 64);
            this.dataGrid_TempOrder.Name = "dataGrid_TempOrder";
            this.dataGrid_TempOrder.Size = new System.Drawing.Size(208, 272);
            this.dataGrid_TempOrder.TabIndex = 4;
            this.dataGrid_TempOrder.TableStyles.AddRange(new System.Windows.Forms.DataGridTableStyle[] {
            this.dataGridTableStyle2});
            this.dataGrid_TempOrder.MouseDoubleClick += new System.Windows.Forms.MouseEventHandler(this.dataGrid_TempOrder_MouseDoubleClick);
            this.dataGrid_TempOrder.Paint += new System.Windows.Forms.PaintEventHandler(this.dataGrid_TempOrder_Paint);
            this.dataGrid_TempOrder.MouseClick += new System.Windows.Forms.MouseEventHandler(this.dataGrid_TempOrder_MouseClick);
            this.dataGrid_TempOrder.DoubleClick += new System.EventHandler(this.dataGrid_TempOrder_DoubleClick);
            this.dataGrid_TempOrder.Enter += new System.EventHandler(this.dataGrid_TempOrder_Enter);
            this.dataGrid_TempOrder.MouseUp += new System.Windows.Forms.MouseEventHandler(this.dataGrid_TempOrder_MouseUp);
            this.dataGrid_TempOrder.CurrentCellChanged += new System.EventHandler(this.dataGrid_TempOrder_CurrentCellChanged);
            this.dataGrid_TempOrder.myKeyDown += new TrasenClasses.GeneralControls.myDelegate(this.dataGrid_TempOrder_myKeyDown);
            this.dataGrid_TempOrder.Click += new System.EventHandler(this.dataGrid_LongOrder_Click);
            // 
            // dataGridTableStyle2
            // 
            this.dataGridTableStyle2.DataGrid = this.dataGrid_TempOrder;
            this.dataGridTableStyle2.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            // 
            // dataGrid_LongOrder
            // 
            this.dataGrid_LongOrder.AllowSorting = false;
            this.dataGrid_LongOrder.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(224)))), ((int)(((byte)(224)))), ((int)(((byte)(224)))));
            this.dataGrid_LongOrder.CaptionVisible = false;
            this.dataGrid_LongOrder.CellSelectedBackColor = System.Drawing.Color.SkyBlue;
            this.dataGrid_LongOrder.DataMember = "";
            this.dataGrid_LongOrder.HeaderFont = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.dataGrid_LongOrder.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            this.dataGrid_LongOrder.Location = new System.Drawing.Point(16, 64);
            this.dataGrid_LongOrder.Name = "dataGrid_LongOrder";
            this.dataGrid_LongOrder.Size = new System.Drawing.Size(192, 272);
            this.dataGrid_LongOrder.TabIndex = 0;
            this.dataGrid_LongOrder.TableStyles.AddRange(new System.Windows.Forms.DataGridTableStyle[] {
            this.dataGridTableStyle});
            this.dataGrid_LongOrder.MouseDoubleClick += new System.Windows.Forms.MouseEventHandler(this.dataGrid_LongOrder_MouseDoubleClick);
            this.dataGrid_LongOrder.Paint += new System.Windows.Forms.PaintEventHandler(this.dataGrid_LongOrder_Paint);
            this.dataGrid_LongOrder.MouseClick += new System.Windows.Forms.MouseEventHandler(this.dataGrid_LongOrder_MouseClick);
            this.dataGrid_LongOrder.DoubleClick += new System.EventHandler(this.dataGrid_LongOrder_DoubleClick);
            this.dataGrid_LongOrder.Enter += new System.EventHandler(this.dataGrid_LongOrder_Enter);
            this.dataGrid_LongOrder.MouseUp += new System.Windows.Forms.MouseEventHandler(this.dataGrid_LongOrder_MouseUp);
            this.dataGrid_LongOrder.CurrentCellChanged += new System.EventHandler(this.dataGrid_LongOrder_CurrentCellChanged);
            this.dataGrid_LongOrder.myKeyDown += new TrasenClasses.GeneralControls.myDelegate(this.dataGrid_LongOrder_myKeyDown);
            this.dataGrid_LongOrder.Click += new System.EventHandler(this.dataGrid_LongOrder_Click);
            // 
            // dataGridTableStyle
            // 
            this.dataGridTableStyle.DataGrid = this.dataGrid_LongOrder;
            this.dataGridTableStyle.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            // 
            // panel4
            // 
            this.panel4.Controls.Add(this.btn_jcyy);
            this.panel4.Controls.Add(this.buttZH);
            this.panel4.Controls.Add(this.button1);
            this.panel4.Controls.Add(this.btJZYF);
            this.panel4.Controls.Add(this.chkAddi);
            this.panel4.Controls.Add(this.button3);
            this.panel4.Controls.Add(this.btnOrderRecall);
            this.panel4.Controls.Add(this.btnNewGroup);
            this.panel4.Controls.Add(this.btnSelf);
            this.panel4.Controls.Add(this.btnExplain);
            this.panel4.Controls.Add(this.btnSupply);
            this.panel4.Controls.Add(this.btnPrt);
            this.panel4.Controls.Add(this.btSave);
            this.panel4.Controls.Add(this.btDel);
            this.panel4.Controls.Add(this.btInsert);
            this.panel4.Controls.Add(this.btSend);
            this.panel4.Controls.Add(this.btStopOrder);
            this.panel4.Controls.Add(this.btnInsert);
            this.panel4.Controls.Add(this.button2);
            this.panel4.Controls.Add(this.button4);
            this.panel4.Controls.Add(this.button5);
            this.panel4.Controls.Add(this.button6);
            this.panel4.Controls.Add(this.button7);
            this.panel4.Controls.Add(this.button8);
            this.panel4.Controls.Add(this.button9);
            this.panel4.Controls.Add(this.button10);
            this.panel4.Controls.Add(this.button11);
            this.panel4.Dock = System.Windows.Forms.DockStyle.Bottom;
            this.panel4.Location = new System.Drawing.Point(0, 498);
            this.panel4.Name = "panel4";
            this.panel4.Size = new System.Drawing.Size(1097, 45);
            this.panel4.TabIndex = 4;
            // 
            // btn_jcyy
            // 
            this.btn_jcyy.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btn_jcyy.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btn_jcyy.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btn_jcyy.Location = new System.Drawing.Point(973, 14);
            this.btn_jcyy.Name = "btn_jcyy";
            this.btn_jcyy.Size = new System.Drawing.Size(68, 24);
            this.btn_jcyy.TabIndex = 69;
            this.btn_jcyy.Text = "检查预约";
            this.btn_jcyy.UseVisualStyleBackColor = true;
            this.btn_jcyy.Click += new System.EventHandler(this.btn_jcyy_Click);
            // 
            // buttZH
            // 
            this.buttZH.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.buttZH.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.buttZH.ForeColor = System.Drawing.SystemColors.Desktop;
            this.buttZH.Location = new System.Drawing.Point(927, 14);
            this.buttZH.Name = "buttZH";
            this.buttZH.Size = new System.Drawing.Size(40, 24);
            this.buttZH.TabIndex = 68;
            this.buttZH.Text = "整盒";
            this.buttZH.UseVisualStyleBackColor = true;
            this.buttZH.Click += new System.EventHandler(this.buttZH_Click);
            // 
            // button1
            // 
            this.button1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.button1.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.button1.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.button1.ForeColor = System.Drawing.Color.Maroon;
            this.button1.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button1.ImageIndex = 4;
            this.button1.Location = new System.Drawing.Point(863, 14);
            this.button1.Name = "button1";
            this.button1.Size = new System.Drawing.Size(63, 24);
            this.button1.TabIndex = 67;
            this.button1.Text = "外来药&E";
            this.button1.Click += new System.EventHandler(this.button1_Click_1);
            // 
            // btJZYF
            // 
            this.btJZYF.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btJZYF.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btJZYF.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btJZYF.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btJZYF.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btJZYF.ImageIndex = 4;
            this.btJZYF.Location = new System.Drawing.Point(710, 14);
            this.btJZYF.Name = "btJZYF";
            this.btJZYF.Size = new System.Drawing.Size(64, 24);
            this.btJZYF.TabIndex = 66;
            this.btJZYF.Text = "出院带药";
            this.btJZYF.Click += new System.EventHandler(this.btJZYF_Click);
            this.btJZYF.MouseDown += new System.Windows.Forms.MouseEventHandler(this.btJZYF_MouseDown);
            // 
            // chkAddi
            // 
            this.chkAddi.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.chkAddi.ForeColor = System.Drawing.Color.Red;
            this.chkAddi.Location = new System.Drawing.Point(778, 14);
            this.chkAddi.Name = "chkAddi";
            this.chkAddi.Size = new System.Drawing.Size(84, 24);
            this.chkAddi.TabIndex = 65;
            this.chkAddi.Text = "自由录入F2";
            this.chkAddi.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            this.chkAddi.CheckedChanged += new System.EventHandler(this.chkAddi_CheckedChanged);
            // 
            // button3
            // 
            this.button3.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.button3.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.button3.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.button3.ForeColor = System.Drawing.SystemColors.Desktop;
            this.button3.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button3.ImageIndex = 4;
            this.button3.Location = new System.Drawing.Point(390, 14);
            this.button3.Name = "button3";
            this.button3.Size = new System.Drawing.Size(60, 24);
            this.button3.TabIndex = 64;
            this.button3.Text = "加急(&M)";
            this.button3.Click += new System.EventHandler(this.button3_Click);
            this.button3.MouseDown += new System.Windows.Forms.MouseEventHandler(this.button3_MouseDown);
            // 
            // btnOrderRecall
            // 
            this.btnOrderRecall.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btnOrderRecall.BackColor = System.Drawing.SystemColors.ActiveBorder;
            this.btnOrderRecall.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btnOrderRecall.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btnOrderRecall.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btnOrderRecall.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btnOrderRecall.ImageIndex = 1;
            this.btnOrderRecall.Location = new System.Drawing.Point(138, 14);
            this.btnOrderRecall.Name = "btnOrderRecall";
            this.btnOrderRecall.Size = new System.Drawing.Size(60, 24);
            this.btnOrderRecall.TabIndex = 45;
            this.btnOrderRecall.Text = "召回F4";
            this.btnOrderRecall.UseVisualStyleBackColor = false;
            this.btnOrderRecall.Click += new System.EventHandler(this.btnOrderRecall_Click);
            // 
            // btnNewGroup
            // 
            this.btnNewGroup.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btnNewGroup.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btnNewGroup.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btnNewGroup.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btnNewGroup.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btnNewGroup.ImageIndex = 4;
            this.btnNewGroup.Location = new System.Drawing.Point(8, 14);
            this.btnNewGroup.Name = "btnNewGroup";
            this.btnNewGroup.Size = new System.Drawing.Size(60, 24);
            this.btnNewGroup.TabIndex = 61;
            this.btnNewGroup.Text = "新开F3";
            this.btnNewGroup.Click += new System.EventHandler(this.btnNewGroup_Click);
            // 
            // btnSelf
            // 
            this.btnSelf.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btnSelf.ContextMenuStrip = this.contextMenuStrip3;
            this.btnSelf.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btnSelf.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btnSelf.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btnSelf.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btnSelf.ImageIndex = 4;
            this.btnSelf.Location = new System.Drawing.Point(453, 14);
            this.btnSelf.Name = "btnSelf";
            this.btnSelf.Size = new System.Drawing.Size(60, 24);
            this.btnSelf.TabIndex = 60;
            this.btnSelf.Text = "自备F8";
            this.btnSelf.Click += new System.EventHandler(this.btnSelf_Click);
            // 
            // contextMenuStrip3
            // 
            this.contextMenuStrip3.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.已备ToolStripMenuItem});
            this.contextMenuStrip3.Name = "contextMenuStrip3";
            this.contextMenuStrip3.Size = new System.Drawing.Size(101, 26);
            // 
            // 已备ToolStripMenuItem
            // 
            this.已备ToolStripMenuItem.Name = "已备ToolStripMenuItem";
            this.已备ToolStripMenuItem.Size = new System.Drawing.Size(100, 22);
            this.已备ToolStripMenuItem.Text = "已备";
            this.已备ToolStripMenuItem.Click += new System.EventHandler(this.已备ToolStripMenuItem_Click);
            // 
            // btnExplain
            // 
            this.btnExplain.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btnExplain.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btnExplain.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btnExplain.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btnExplain.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btnExplain.ImageIndex = 4;
            this.btnExplain.Location = new System.Drawing.Point(327, 14);
            this.btnExplain.Name = "btnExplain";
            this.btnExplain.Size = new System.Drawing.Size(60, 24);
            this.btnExplain.TabIndex = 59;
            this.btnExplain.Text = "说明F7";
            this.btnExplain.Click += new System.EventHandler(this.btnExplain_Click);
            // 
            // btnSupply
            // 
            this.btnSupply.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btnSupply.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btnSupply.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btnSupply.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btnSupply.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btnSupply.ImageIndex = 4;
            this.btnSupply.Location = new System.Drawing.Point(71, 14);
            this.btnSupply.Name = "btnSupply";
            this.btnSupply.Size = new System.Drawing.Size(64, 24);
            this.btnSupply.TabIndex = 58;
            this.btnSupply.Text = "补录F12";
            this.btnSupply.Click += new System.EventHandler(this.btnSupply_Click);
            // 
            // btnPrt
            // 
            this.btnPrt.Enabled = false;
            this.btnPrt.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btnPrt.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btnPrt.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btnPrt.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btnPrt.ImageIndex = 4;
            this.btnPrt.Location = new System.Drawing.Point(711, 16);
            this.btnPrt.Name = "btnPrt";
            this.btnPrt.Size = new System.Drawing.Size(60, 16);
            this.btnPrt.TabIndex = 56;
            this.btnPrt.Text = "打印(&P)";
            // 
            // btSave
            // 
            this.btSave.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btSave.Cursor = System.Windows.Forms.Cursors.Hand;
            this.btSave.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btSave.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btSave.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btSave.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btSave.ImageIndex = 3;
            this.btSave.Location = new System.Drawing.Point(585, 14);
            this.btSave.Name = "btSave";
            this.btSave.Size = new System.Drawing.Size(60, 24);
            this.btSave.TabIndex = 52;
            this.btSave.Text = "保存F10";
            this.btSave.Click += new System.EventHandler(this.btSave_Click);
            // 
            // btDel
            // 
            this.btDel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btDel.BackColor = System.Drawing.SystemColors.ActiveBorder;
            this.btDel.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btDel.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btDel.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btDel.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btDel.ImageIndex = 7;
            this.btDel.Location = new System.Drawing.Point(264, 14);
            this.btDel.Name = "btDel";
            this.btDel.Size = new System.Drawing.Size(60, 24);
            this.btDel.TabIndex = 50;
            this.btDel.Text = "取消(&D)";
            this.btDel.UseVisualStyleBackColor = false;
            this.btDel.Click += new System.EventHandler(this.btDel_Click);
            // 
            // btInsert
            // 
            this.btInsert.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btInsert.BackColor = System.Drawing.SystemColors.ActiveBorder;
            this.btInsert.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btInsert.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btInsert.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btInsert.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btInsert.ImageIndex = 6;
            this.btInsert.Location = new System.Drawing.Point(201, 14);
            this.btInsert.Name = "btInsert";
            this.btInsert.Size = new System.Drawing.Size(60, 24);
            this.btInsert.TabIndex = 49;
            this.btInsert.Text = "插入(&I)";
            this.btInsert.UseVisualStyleBackColor = false;
            this.btInsert.Click += new System.EventHandler(this.btInsert_Click);
            // 
            // btSend
            // 
            this.btSend.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btSend.Cursor = System.Windows.Forms.Cursors.Hand;
            this.btSend.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btSend.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btSend.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btSend.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btSend.ImageIndex = 4;
            this.btSend.Location = new System.Drawing.Point(648, 14);
            this.btSend.Name = "btSend";
            this.btSend.Size = new System.Drawing.Size(60, 24);
            this.btSend.TabIndex = 48;
            this.btSend.Text = "发送F9";
            this.btSend.Click += new System.EventHandler(this.btSend_Click);
            // 
            // btStopOrder
            // 
            this.btStopOrder.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btStopOrder.BackColor = System.Drawing.SystemColors.ActiveBorder;
            this.btStopOrder.ContextMenuStrip = this.contextMenuStrip1;
            this.btStopOrder.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btStopOrder.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btStopOrder.ForeColor = System.Drawing.SystemColors.Desktop;
            this.btStopOrder.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btStopOrder.ImageIndex = 2;
            this.btStopOrder.Location = new System.Drawing.Point(516, 14);
            this.btStopOrder.Name = "btStopOrder";
            this.btStopOrder.Size = new System.Drawing.Size(66, 24);
            this.btStopOrder.TabIndex = 46;
            this.btStopOrder.Text = "停嘱F6";
            this.btStopOrder.UseVisualStyleBackColor = false;
            this.btStopOrder.Click += new System.EventHandler(this.btStopOrder_Click);
            // 
            // contextMenuStrip1
            // 
            this.contextMenuStrip1.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.批量停嘱ToolStripMenuItem});
            this.contextMenuStrip1.Name = "contextMenuStrip1";
            this.contextMenuStrip1.Size = new System.Drawing.Size(125, 26);
            // 
            // 批量停嘱ToolStripMenuItem
            // 
            this.批量停嘱ToolStripMenuItem.Name = "批量停嘱ToolStripMenuItem";
            this.批量停嘱ToolStripMenuItem.Size = new System.Drawing.Size(124, 22);
            this.批量停嘱ToolStripMenuItem.Text = "批量停嘱";
            this.批量停嘱ToolStripMenuItem.Click += new System.EventHandler(this.批量停嘱ToolStripMenuItem_Click);
            // 
            // btnInsert
            // 
            this.btnInsert.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)
                        | System.Windows.Forms.AnchorStyles.Right)));
            this.btnInsert.BackColor = System.Drawing.SystemColors.ActiveBorder;
            this.btnInsert.Enabled = false;
            this.btnInsert.FlatStyle = System.Windows.Forms.FlatStyle.Popup;
            this.btnInsert.Location = new System.Drawing.Point(2, 5);
            this.btnInsert.Name = "btnInsert";
            this.btnInsert.Size = new System.Drawing.Size(1093, 40);
            this.btnInsert.TabIndex = 44;
            this.btnInsert.UseVisualStyleBackColor = false;
            // 
            // button2
            // 
            this.button2.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.button2.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.button2.ForeColor = System.Drawing.SystemColors.Desktop;
            this.button2.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button2.ImageIndex = 4;
            this.button2.Location = new System.Drawing.Point(344, 8);
            this.button2.Name = "button2";
            this.button2.Size = new System.Drawing.Size(60, 24);
            this.button2.TabIndex = 59;
            this.button2.Text = "说明F7";
            // 
            // button4
            // 
            this.button4.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.button4.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.button4.ForeColor = System.Drawing.SystemColors.Desktop;
            this.button4.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button4.ImageIndex = 4;
            this.button4.Location = new System.Drawing.Point(464, 8);
            this.button4.Name = "button4";
            this.button4.Size = new System.Drawing.Size(60, 24);
            this.button4.TabIndex = 60;
            this.button4.Text = "自备F8";
            // 
            // button5
            // 
            this.button5.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.button5.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.button5.ForeColor = System.Drawing.SystemColors.Desktop;
            this.button5.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button5.ImageIndex = 4;
            this.button5.Location = new System.Drawing.Point(720, 8);
            this.button5.Name = "button5";
            this.button5.Size = new System.Drawing.Size(60, 24);
            this.button5.TabIndex = 66;
            this.button5.Text = "交病人";
            // 
            // button6
            // 
            this.button6.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.button6.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.button6.ForeColor = System.Drawing.SystemColors.Desktop;
            this.button6.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button6.ImageIndex = 4;
            this.button6.Location = new System.Drawing.Point(400, 8);
            this.button6.Name = "button6";
            this.button6.Size = new System.Drawing.Size(60, 24);
            this.button6.TabIndex = 64;
            this.button6.Text = "加急(&M)";
            // 
            // button7
            // 
            this.button7.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.button7.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.button7.ForeColor = System.Drawing.SystemColors.Desktop;
            this.button7.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button7.ImageIndex = 4;
            this.button7.Location = new System.Drawing.Point(656, 8);
            this.button7.Name = "button7";
            this.button7.Size = new System.Drawing.Size(60, 24);
            this.button7.TabIndex = 48;
            this.button7.Text = "发送F9";
            // 
            // button8
            // 
            this.button8.BackColor = System.Drawing.SystemColors.ActiveBorder;
            this.button8.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.button8.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.button8.ForeColor = System.Drawing.SystemColors.Desktop;
            this.button8.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button8.ImageIndex = 2;
            this.button8.Location = new System.Drawing.Point(528, 8);
            this.button8.Name = "button8";
            this.button8.Size = new System.Drawing.Size(66, 24);
            this.button8.TabIndex = 46;
            this.button8.Text = "停嘱F6";
            this.button8.UseVisualStyleBackColor = false;
            // 
            // button9
            // 
            this.button9.BackColor = System.Drawing.SystemColors.ActiveBorder;
            this.button9.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.button9.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.button9.ForeColor = System.Drawing.SystemColors.Desktop;
            this.button9.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button9.ImageIndex = 6;
            this.button9.Location = new System.Drawing.Point(216, 8);
            this.button9.Name = "button9";
            this.button9.Size = new System.Drawing.Size(60, 24);
            this.button9.TabIndex = 49;
            this.button9.Text = "插入(&I)";
            this.button9.UseVisualStyleBackColor = false;
            // 
            // button10
            // 
            this.button10.BackColor = System.Drawing.SystemColors.ActiveBorder;
            this.button10.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.button10.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.button10.ForeColor = System.Drawing.SystemColors.Desktop;
            this.button10.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button10.ImageIndex = 7;
            this.button10.Location = new System.Drawing.Point(280, 8);
            this.button10.Name = "button10";
            this.button10.Size = new System.Drawing.Size(60, 24);
            this.button10.TabIndex = 50;
            this.button10.Text = "取消(&D)";
            this.button10.UseVisualStyleBackColor = false;
            // 
            // button11
            // 
            this.button11.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.button11.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.button11.ForeColor = System.Drawing.SystemColors.Desktop;
            this.button11.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button11.ImageIndex = 3;
            this.button11.Location = new System.Drawing.Point(600, 8);
            this.button11.Name = "button11";
            this.button11.Size = new System.Drawing.Size(60, 24);
            this.button11.TabIndex = 52;
            this.button11.Text = "保存F10";
            // 
            // panel7
            // 
            this.panel7.Controls.Add(this.splitter4);
            this.panel7.Controls.Add(this.panel6);
            this.panel7.Controls.Add(this.panel5);
            this.panel7.Dock = System.Windows.Forms.DockStyle.Bottom;
            this.panel7.Location = new System.Drawing.Point(0, 543);
            this.panel7.Name = "panel7";
            this.panel7.Size = new System.Drawing.Size(1097, 160);
            this.panel7.TabIndex = 10;
            // 
            // splitter4
            // 
            this.splitter4.Location = new System.Drawing.Point(461, 0);
            this.splitter4.Name = "splitter4";
            this.splitter4.Size = new System.Drawing.Size(3, 160);
            this.splitter4.TabIndex = 9;
            this.splitter4.TabStop = false;
            // 
            // panel6
            // 
            this.panel6.Controls.Add(this.lb_Model);
            this.panel6.Controls.Add(this.txtserch);
            this.panel6.Controls.Add(this.panel8);
            this.panel6.Controls.Add(this.tabControl2);
            this.panel6.Dock = System.Windows.Forms.DockStyle.Fill;
            this.panel6.Location = new System.Drawing.Point(461, 0);
            this.panel6.Name = "panel6";
            this.panel6.Size = new System.Drawing.Size(636, 160);
            this.panel6.TabIndex = 8;
            // 
            // lb_Model
            // 
            this.lb_Model.AutoSize = true;
            this.lb_Model.BackColor = System.Drawing.Color.WhiteSmoke;
            this.lb_Model.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lb_Model.Location = new System.Drawing.Point(293, 4);
            this.lb_Model.Name = "lb_Model";
            this.lb_Model.Size = new System.Drawing.Size(63, 14);
            this.lb_Model.TabIndex = 18;
            this.lb_Model.Text = "个人模板";
            this.lb_Model.Visible = false;
            // 
            // txtserch
            // 
            this.txtserch.BackColor = System.Drawing.SystemColors.Menu;
            this.txtserch.Location = new System.Drawing.Point(365, 3);
            this.txtserch.Name = "txtserch";
            this.txtserch.Size = new System.Drawing.Size(100, 21);
            this.txtserch.TabIndex = 9;
            this.txtserch.TextChanged += new System.EventHandler(this.txtserch_TextChanged);
            // 
            // panel8
            // 
            this.panel8.AccessibleRole = System.Windows.Forms.AccessibleRole.None;
            this.panel8.BackColor = System.Drawing.Color.LightYellow;
            this.panel8.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.panel8.Controls.Add(this.label14);
            this.panel8.Controls.Add(this.label13);
            this.panel8.Controls.Add(this.label12);
            this.panel8.Controls.Add(this.label11);
            this.panel8.Controls.Add(this.label10);
            this.panel8.Controls.Add(this.label9);
            this.panel8.Controls.Add(this.label8);
            this.panel8.Location = new System.Drawing.Point(24, 32);
            this.panel8.Name = "panel8";
            this.panel8.Size = new System.Drawing.Size(384, 120);
            this.panel8.TabIndex = 16;
            this.panel8.Visible = false;
            // 
            // label14
            // 
            this.label14.BackColor = System.Drawing.Color.White;
            this.label14.Location = new System.Drawing.Point(0, 104);
            this.label14.Name = "label14";
            this.label14.Size = new System.Drawing.Size(384, 16);
            this.label14.TabIndex = 6;
            this.label14.Text = "黑色字,白色底:长嘱中为已经执行停嘱医嘱;临嘱中为已经执行的医嘱";
            // 
            // label13
            // 
            this.label13.ForeColor = System.Drawing.Color.Gray;
            this.label13.Location = new System.Drawing.Point(0, 88);
            this.label13.Name = "label13";
            this.label13.Size = new System.Drawing.Size(384, 16);
            this.label13.TabIndex = 5;
            this.label13.Text = "灰色字:已经申请停嘱的医嘱";
            // 
            // label12
            // 
            this.label12.ForeColor = System.Drawing.Color.Blue;
            this.label12.Location = new System.Drawing.Point(0, 72);
            this.label12.Name = "label12";
            this.label12.Size = new System.Drawing.Size(384, 16);
            this.label12.TabIndex = 4;
            this.label12.Text = "蓝色字,执行人跟执行时间框中有内容:该医嘱已经执行";
            // 
            // label11
            // 
            this.label11.ForeColor = System.Drawing.Color.Blue;
            this.label11.Location = new System.Drawing.Point(0, 56);
            this.label11.Name = "label11";
            this.label11.Size = new System.Drawing.Size(384, 16);
            this.label11.TabIndex = 3;
            this.label11.Text = "蓝色字,但执行人跟执行时间框中无内容:护士已经转抄医嘱";
            // 
            // label10
            // 
            this.label10.ForeColor = System.Drawing.Color.SeaGreen;
            this.label10.Location = new System.Drawing.Point(0, 40);
            this.label10.Name = "label10";
            this.label10.Size = new System.Drawing.Size(384, 16);
            this.label10.TabIndex = 2;
            this.label10.Text = "绿色字:医嘱已经发送到护士站,护士还没有对其做任何操作";
            // 
            // label9
            // 
            this.label9.BackColor = System.Drawing.Color.PaleTurquoise;
            this.label9.Location = new System.Drawing.Point(0, 24);
            this.label9.Name = "label9";
            this.label9.Size = new System.Drawing.Size(384, 16);
            this.label9.TabIndex = 1;
            this.label9.Text = "红底黑字:医嘱内容只是保存到本地,还没有发送到护士站";
            // 
            // label8
            // 
            this.label8.Font = new System.Drawing.Font("宋体", 10F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.label8.Location = new System.Drawing.Point(8, 8);
            this.label8.Name = "label8";
            this.label8.Size = new System.Drawing.Size(384, 16);
            this.label8.TabIndex = 0;
            this.label8.Text = "医嘱颜色状态说明：";
            // 
            // tabControl2
            // 
            this.tabControl2.Appearance = System.Windows.Forms.TabAppearance.FlatButtons;
            this.tabControl2.Controls.Add(this.tabPage6);
            this.tabControl2.Controls.Add(this.tabPage3);
            this.tabControl2.Controls.Add(this.tabPage8);
            this.tabControl2.Controls.Add(this.tabPage4);
            this.tabControl2.Cursor = System.Windows.Forms.Cursors.Default;
            this.tabControl2.Dock = System.Windows.Forms.DockStyle.Fill;
            this.tabControl2.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.tabControl2.Location = new System.Drawing.Point(0, 0);
            this.tabControl2.Name = "tabControl2";
            this.tabControl2.SelectedIndex = 0;
            this.tabControl2.Size = new System.Drawing.Size(636, 160);
            this.tabControl2.TabIndex = 17;
            this.tabControl2.SelectedIndexChanged += new System.EventHandler(this.tabControl2_SelectedIndexChanged);
            // 
            // tabPage6
            // 
            this.tabPage6.Controls.Add(this.lbHJ);
            this.tabPage6.Controls.Add(this.lViewFee);
            this.tabPage6.Controls.Add(this.label5);
            this.tabPage6.Controls.Add(this.lbE3);
            this.tabPage6.Controls.Add(this.lbE1);
            this.tabPage6.Controls.Add(this.ChkWillGetFee);
            this.tabPage6.Controls.Add(this.lbE2);
            this.tabPage6.Location = new System.Drawing.Point(4, 27);
            this.tabPage6.Name = "tabPage6";
            this.tabPage6.Size = new System.Drawing.Size(628, 129);
            this.tabPage6.TabIndex = 2;
            this.tabPage6.Text = "新开医嘱费用";
            // 
            // lbHJ
            // 
            this.lbHJ.BackColor = System.Drawing.SystemColors.Control;
            this.lbHJ.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.lbHJ.ForeColor = System.Drawing.SystemColors.WindowText;
            this.lbHJ.Location = new System.Drawing.Point(320, 0);
            this.lbHJ.Name = "lbHJ";
            this.lbHJ.Size = new System.Drawing.Size(72, 20);
            this.lbHJ.TabIndex = 7;
            this.lbHJ.Text = "0.00";
            this.lbHJ.TextAlign = System.Drawing.ContentAlignment.BottomRight;
            this.lbHJ.Visible = false;
            // 
            // lViewFee
            // 
            this.lViewFee.AutoArrange = false;
            this.lViewFee.Columns.AddRange(new System.Windows.Forms.ColumnHeader[] {
            this.columnHeader4,
            this.columnHeader5,
            this.columnHeader6,
            this.columnHeader7});
            this.lViewFee.Dock = System.Windows.Forms.DockStyle.Bottom;
            this.lViewFee.Font = new System.Drawing.Font("宋体", 10F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lViewFee.GridLines = true;
            this.lViewFee.HeaderStyle = System.Windows.Forms.ColumnHeaderStyle.Nonclickable;
            this.lViewFee.Location = new System.Drawing.Point(0, 129);
            this.lViewFee.Name = "lViewFee";
            this.lViewFee.Size = new System.Drawing.Size(628, 0);
            this.lViewFee.TabIndex = 5;
            this.lViewFee.UseCompatibleStateImageBehavior = false;
            this.lViewFee.View = System.Windows.Forms.View.Details;
            // 
            // columnHeader4
            // 
            this.columnHeader4.Text = "医嘱内容";
            this.columnHeader4.Width = 212;
            // 
            // columnHeader5
            // 
            this.columnHeader5.Text = "单价";
            this.columnHeader5.Width = 72;
            // 
            // columnHeader6
            // 
            this.columnHeader6.Text = "数量";
            this.columnHeader6.Width = 50;
            // 
            // columnHeader7
            // 
            this.columnHeader7.Text = "费用";
            this.columnHeader7.Width = 74;
            // 
            // label5
            // 
            this.label5.AutoSize = true;
            this.label5.ForeColor = System.Drawing.SystemColors.Desktop;
            this.label5.Location = new System.Drawing.Point(280, 2);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(49, 14);
            this.label5.TabIndex = 6;
            this.label5.Text = "合计：";
            this.label5.TextAlign = System.Drawing.ContentAlignment.BottomRight;
            this.label5.Visible = false;
            // 
            // lbE3
            // 
            this.lbE3.ForeColor = System.Drawing.SystemColors.Desktop;
            this.lbE3.Location = new System.Drawing.Point(64, 80);
            this.lbE3.Name = "lbE3";
            this.lbE3.Size = new System.Drawing.Size(224, 16);
            this.lbE3.TabIndex = 4;
            this.lbE3.Text = "3.只计算单次费用";
            // 
            // lbE1
            // 
            this.lbE1.ForeColor = System.Drawing.SystemColors.Desktop;
            this.lbE1.Location = new System.Drawing.Point(64, 40);
            this.lbE1.Name = "lbE1";
            this.lbE1.Size = new System.Drawing.Size(224, 16);
            this.lbE1.TabIndex = 3;
            this.lbE1.Text = "1.说明性的医嘱不会产生任何费用";
            // 
            // ChkWillGetFee
            // 
            this.ChkWillGetFee.Dock = System.Windows.Forms.DockStyle.Top;
            this.ChkWillGetFee.Location = new System.Drawing.Point(0, 0);
            this.ChkWillGetFee.Name = "ChkWillGetFee";
            this.ChkWillGetFee.Size = new System.Drawing.Size(628, 24);
            this.ChkWillGetFee.TabIndex = 1;
            this.ChkWillGetFee.Text = "打开（关闭）费用查询";
            this.ChkWillGetFee.CheckedChanged += new System.EventHandler(this.ChkWillGetFee_CheckedChanged);
            // 
            // lbE2
            // 
            this.lbE2.ForeColor = System.Drawing.SystemColors.Desktop;
            this.lbE2.Location = new System.Drawing.Point(64, 60);
            this.lbE2.Name = "lbE2";
            this.lbE2.Size = new System.Drawing.Size(224, 16);
            this.lbE2.TabIndex = 8;
            this.lbE2.Text = "2.只显示新开医嘱费用";
            // 
            // tabPage3
            // 
            this.tabPage3.Controls.Add(this.bt_NewSelect);
            this.tabPage3.Controls.Add(this.label7);
            this.tabPage3.Controls.Add(this.chk_ypInfo);
            this.tabPage3.Controls.Add(this.label6);
            this.tabPage3.Controls.Add(this.chk_zb);
            this.tabPage3.Controls.Add(this.label4);
            this.tabPage3.Controls.Add(this.chk_dept);
            this.tabPage3.Controls.Add(this.lb_dept);
            this.tabPage3.Controls.Add(this.dataGrid1);
            this.tabPage3.Controls.Add(this.priceInfo1);
            this.tabPage3.Location = new System.Drawing.Point(4, 27);
            this.tabPage3.Name = "tabPage3";
            this.tabPage3.Size = new System.Drawing.Size(628, 129);
            this.tabPage3.TabIndex = 0;
            this.tabPage3.Text = "药品明细信息";
            this.tabPage3.Visible = false;
            // 
            // bt_NewSelect
            // 
            this.bt_NewSelect.Cursor = System.Windows.Forms.Cursors.Hand;
            this.bt_NewSelect.FlatStyle = System.Windows.Forms.FlatStyle.Popup;
            this.bt_NewSelect.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.bt_NewSelect.Location = new System.Drawing.Point(328, 96);
            this.bt_NewSelect.Name = "bt_NewSelect";
            this.bt_NewSelect.Size = new System.Drawing.Size(80, 24);
            this.bt_NewSelect.TabIndex = 10;
            this.bt_NewSelect.Text = "刷新选项卡";
            this.bt_NewSelect.TextAlign = System.Drawing.ContentAlignment.BottomCenter;
            this.bt_NewSelect.Click += new System.EventHandler(this.bt_NewSelect_Click);
            // 
            // label7
            // 
            this.label7.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D;
            this.label7.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.label7.Location = new System.Drawing.Point(322, 4);
            this.label7.Name = "label7";
            this.label7.Size = new System.Drawing.Size(86, 16);
            this.label7.TabIndex = 7;
            this.label7.Text = "显示药品信息";
            this.label7.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // chk_ypInfo
            // 
            this.chk_ypInfo.Location = new System.Drawing.Point(306, 4);
            this.chk_ypInfo.Name = "chk_ypInfo";
            this.chk_ypInfo.Size = new System.Drawing.Size(16, 16);
            this.chk_ypInfo.TabIndex = 8;
            this.chk_ypInfo.CheckedChanged += new System.EventHandler(this.chk_ypInfo_CheckedChanged);
            // 
            // label6
            // 
            this.label6.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D;
            this.label6.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.label6.Location = new System.Drawing.Point(322, 64);
            this.label6.Name = "label6";
            this.label6.Size = new System.Drawing.Size(86, 16);
            this.label6.TabIndex = 5;
            this.label6.Text = "自备药提示";
            this.label6.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // chk_zb
            // 
            this.chk_zb.Location = new System.Drawing.Point(306, 64);
            this.chk_zb.Name = "chk_zb";
            this.chk_zb.Size = new System.Drawing.Size(16, 16);
            this.chk_zb.TabIndex = 6;
            // 
            // label4
            // 
            this.label4.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D;
            this.label4.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.label4.Location = new System.Drawing.Point(322, 24);
            this.label4.Name = "label4";
            this.label4.Size = new System.Drawing.Size(86, 16);
            this.label4.TabIndex = 2;
            this.label4.Text = "所属药房";
            this.label4.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // chk_dept
            // 
            this.chk_dept.Location = new System.Drawing.Point(306, 24);
            this.chk_dept.Name = "chk_dept";
            this.chk_dept.Size = new System.Drawing.Size(16, 16);
            this.chk_dept.TabIndex = 4;
            this.chk_dept.CheckedChanged += new System.EventHandler(this.chk_dept_CheckedChanged);
            // 
            // lb_dept
            // 
            this.lb_dept.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D;
            this.lb_dept.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lb_dept.ForeColor = System.Drawing.Color.Blue;
            this.lb_dept.Location = new System.Drawing.Point(322, 44);
            this.lb_dept.Name = "lb_dept";
            this.lb_dept.Size = new System.Drawing.Size(86, 16);
            this.lb_dept.TabIndex = 3;
            this.lb_dept.Tag = "0";
            this.lb_dept.Text = "所属药房";
            this.lb_dept.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            this.lb_dept.Visible = false;
            // 
            // dataGrid1
            // 
            this.dataGrid1.BackgroundColor = System.Drawing.SystemColors.Window;
            this.dataGrid1.CaptionBackColor = System.Drawing.Color.MediumSeaGreen;
            this.dataGrid1.CaptionVisible = false;
            this.dataGrid1.DataMember = "";
            this.dataGrid1.Dock = System.Windows.Forms.DockStyle.Fill;
            this.dataGrid1.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            this.dataGrid1.Location = new System.Drawing.Point(0, 0);
            this.dataGrid1.Name = "dataGrid1";
            this.dataGrid1.ReadOnly = true;
            this.dataGrid1.SelectionBackColor = System.Drawing.Color.MediumSeaGreen;
            this.dataGrid1.Size = new System.Drawing.Size(628, 129);
            this.dataGrid1.TabIndex = 29;
            this.dataGrid1.Visible = false;
            // 
            // priceInfo1
            // 
            this.priceInfo1.Dock = System.Windows.Forms.DockStyle.Fill;
            this.priceInfo1.Dv = null;
            this.priceInfo1.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.priceInfo1.Location = new System.Drawing.Point(0, 0);
            this.priceInfo1.Name = "priceInfo1";
            this.priceInfo1.Order_context = null;
            this.priceInfo1.Size = new System.Drawing.Size(628, 129);
            this.priceInfo1.TabIndex = 1;
            // 
            // tabPage8
            // 
            this.tabPage8.Controls.Add(this.txtContent);
            this.tabPage8.Controls.Add(this.label2);
            this.tabPage8.Controls.Add(this.btnOpen);
            this.tabPage8.Controls.Add(this.btnSave);
            this.tabPage8.Controls.Add(this.groupBox2);
            this.tabPage8.Controls.Add(this.txtModelName);
            this.tabPage8.Controls.Add(this.label17);
            this.tabPage8.Location = new System.Drawing.Point(4, 27);
            this.tabPage8.Name = "tabPage8";
            this.tabPage8.Size = new System.Drawing.Size(628, 129);
            this.tabPage8.TabIndex = 3;
            this.tabPage8.Text = "创建模板";
            this.tabPage8.Visible = false;
            // 
            // txtContent
            // 
            this.txtContent.Location = new System.Drawing.Point(67, 49);
            this.txtContent.Name = "txtContent";
            this.txtContent.Size = new System.Drawing.Size(200, 23);
            this.txtContent.TabIndex = 1;
            // 
            // label2
            // 
            this.label2.AutoSize = true;
            this.label2.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.label2.ForeColor = System.Drawing.SystemColors.Highlight;
            this.label2.Location = new System.Drawing.Point(10, 55);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(57, 12);
            this.label2.TabIndex = 69;
            this.label2.Text = "内容描述";
            // 
            // btnOpen
            // 
            this.btnOpen.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(240)))), ((int)(((byte)(240)))), ((int)(((byte)(240)))));
            this.btnOpen.DefaultScheme = false;
            this.btnOpen.DialogResult = System.Windows.Forms.DialogResult.None;
            this.btnOpen.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btnOpen.Hint = "";
            this.btnOpen.Location = new System.Drawing.Point(168, 88);
            this.btnOpen.Name = "btnOpen";
            this.btnOpen.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.btnOpen.Size = new System.Drawing.Size(104, 30);
            this.btnOpen.TabIndex = 3;
            this.btnOpen.Text = "打开模板(&O)";
            this.btnOpen.Click += new System.EventHandler(this.btnOpen_Click);
            // 
            // btnSave
            // 
            this.btnSave.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(240)))), ((int)(((byte)(240)))), ((int)(((byte)(240)))));
            this.btnSave.DefaultScheme = false;
            this.btnSave.DialogResult = System.Windows.Forms.DialogResult.None;
            this.btnSave.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btnSave.Hint = "";
            this.btnSave.Location = new System.Drawing.Point(40, 88);
            this.btnSave.Name = "btnSave";
            this.btnSave.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.btnSave.Size = new System.Drawing.Size(104, 30);
            this.btnSave.TabIndex = 2;
            this.btnSave.Text = "存为模板(&S)";
            this.btnSave.Click += new System.EventHandler(this.btnSave_Click);
            // 
            // groupBox2
            // 
            this.groupBox2.Controls.Add(this.rdAll);
            this.groupBox2.Controls.Add(this.rdDept);
            this.groupBox2.Controls.Add(this.rdPerson);
            this.groupBox2.Location = new System.Drawing.Point(288, 8);
            this.groupBox2.Name = "groupBox2";
            this.groupBox2.Size = new System.Drawing.Size(112, 104);
            this.groupBox2.TabIndex = 21;
            this.groupBox2.TabStop = false;
            // 
            // rdAll
            // 
            this.rdAll.Location = new System.Drawing.Point(14, 72);
            this.rdAll.Name = "rdAll";
            this.rdAll.Size = new System.Drawing.Size(84, 24);
            this.rdAll.TabIndex = 2;
            this.rdAll.Tag = "0";
            this.rdAll.Text = "属于全院";
            // 
            // rdDept
            // 
            this.rdDept.Location = new System.Drawing.Point(14, 44);
            this.rdDept.Name = "rdDept";
            this.rdDept.Size = new System.Drawing.Size(84, 24);
            this.rdDept.TabIndex = 1;
            this.rdDept.Tag = "1";
            this.rdDept.Text = "属于本科";
            // 
            // rdPerson
            // 
            this.rdPerson.Checked = true;
            this.rdPerson.Location = new System.Drawing.Point(14, 16);
            this.rdPerson.Name = "rdPerson";
            this.rdPerson.Size = new System.Drawing.Size(84, 24);
            this.rdPerson.TabIndex = 0;
            this.rdPerson.TabStop = true;
            this.rdPerson.Tag = "2";
            this.rdPerson.Text = "属于本人";
            // 
            // txtModelName
            // 
            this.txtModelName.Location = new System.Drawing.Point(67, 15);
            this.txtModelName.Name = "txtModelName";
            this.txtModelName.Size = new System.Drawing.Size(200, 23);
            this.txtModelName.TabIndex = 0;
            // 
            // label17
            // 
            this.label17.AutoSize = true;
            this.label17.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.label17.ForeColor = System.Drawing.SystemColors.Highlight;
            this.label17.Location = new System.Drawing.Point(10, 23);
            this.label17.Name = "label17";
            this.label17.Size = new System.Drawing.Size(58, 12);
            this.label17.TabIndex = 3;
            this.label17.Text = "模 板 名";
            // 
            // tabPage4
            // 
            this.tabPage4.Controls.Add(this.listView1);
            this.tabPage4.Location = new System.Drawing.Point(4, 27);
            this.tabPage4.Name = "tabPage4";
            this.tabPage4.Size = new System.Drawing.Size(628, 129);
            this.tabPage4.TabIndex = 1;
            this.tabPage4.Text = "模板列表";
            this.tabPage4.Visible = false;
            // 
            // listView1
            // 
            this.listView1.BackColor = System.Drawing.Color.Azure;
            this.listView1.Columns.AddRange(new System.Windows.Forms.ColumnHeader[] {
            this.columnHeader1,
            this.columnHeader2,
            this.columnHeader3,
            this.columnHeader8});
            this.listView1.ContextMenu = this.contextMenu1;
            this.listView1.Dock = System.Windows.Forms.DockStyle.Fill;
            this.listView1.FullRowSelect = true;
            this.listView1.GridLines = true;
            this.listView1.Location = new System.Drawing.Point(0, 0);
            this.listView1.MultiSelect = false;
            this.listView1.Name = "listView1";
            this.listView1.Size = new System.Drawing.Size(628, 129);
            this.listView1.Sorting = System.Windows.Forms.SortOrder.Ascending;
            this.listView1.TabIndex = 2;
            this.listView1.UseCompatibleStateImageBehavior = false;
            this.listView1.View = System.Windows.Forms.View.Details;
            this.listView1.DoubleClick += new System.EventHandler(this.listView1_DoubleClick);
            // 
            // columnHeader1
            // 
            this.columnHeader1.Text = "模板名";
            this.columnHeader1.Width = 136;
            // 
            // columnHeader2
            // 
            this.columnHeader2.Text = "创建人";
            this.columnHeader2.Width = 63;
            // 
            // columnHeader3
            // 
            this.columnHeader3.Text = "主要内容";
            this.columnHeader3.Width = 209;
            // 
            // columnHeader8
            // 
            this.columnHeader8.Text = "拼音码";
            // 
            // contextMenu1
            // 
            this.contextMenu1.MenuItems.AddRange(new System.Windows.Forms.MenuItem[] {
            this.menuItem1,
            this.menuItem13,
            this.menuItem3,
            this.menuItem2,
            this.menuItem4,
            this.menuItem9,
            this.menuItem5,
            this.menuItem6,
            this.menuItem7,
            this.menuItem8});
            // 
            // menuItem1
            // 
            this.menuItem1.Index = 0;
            this.menuItem1.Text = "使用";
            this.menuItem1.Click += new System.EventHandler(this.menuItem1_Click);
            // 
            // menuItem13
            // 
            this.menuItem13.Index = 1;
            this.menuItem13.Shortcut = System.Windows.Forms.Shortcut.CtrlF;
            this.menuItem13.Text = "检索";
            this.menuItem13.Click += new System.EventHandler(this.menuItem13_Click);
            // 
            // menuItem3
            // 
            this.menuItem3.Index = 2;
            this.menuItem3.Text = "-";
            // 
            // menuItem2
            // 
            this.menuItem2.Index = 3;
            this.menuItem2.Text = "添加";
            this.menuItem2.Click += new System.EventHandler(this.menuItem2_Click);
            // 
            // menuItem4
            // 
            this.menuItem4.Index = 4;
            this.menuItem4.Text = "删除";
            this.menuItem4.Click += new System.EventHandler(this.menuItem4_Click);
            // 
            // menuItem9
            // 
            this.menuItem9.Index = 5;
            this.menuItem9.MenuItems.AddRange(new System.Windows.Forms.MenuItem[] {
            this.menuItem10,
            this.menuItem11,
            this.menuItem12});
            this.menuItem9.Text = "更改归属";
            // 
            // menuItem10
            // 
            this.menuItem10.Index = 0;
            this.menuItem10.Text = "成为本人的";
            this.menuItem10.Click += new System.EventHandler(this.ChgAscription_Click);
            // 
            // menuItem11
            // 
            this.menuItem11.Index = 1;
            this.menuItem11.Text = "成为科室的";
            this.menuItem11.Click += new System.EventHandler(this.ChgAscription_Click);
            // 
            // menuItem12
            // 
            this.menuItem12.Index = 2;
            this.menuItem12.Text = "成为全院的";
            this.menuItem12.Click += new System.EventHandler(this.ChgAscription_Click);
            // 
            // menuItem5
            // 
            this.menuItem5.Index = 6;
            this.menuItem5.Text = "-";
            // 
            // menuItem6
            // 
            this.menuItem6.Index = 7;
            this.menuItem6.Text = "本人的";
            this.menuItem6.Click += new System.EventHandler(this.menuItem_Click);
            // 
            // menuItem7
            // 
            this.menuItem7.Index = 8;
            this.menuItem7.Text = "科室的";
            this.menuItem7.Click += new System.EventHandler(this.menuItem_Click);
            // 
            // menuItem8
            // 
            this.menuItem8.Index = 9;
            this.menuItem8.Text = "全院的";
            this.menuItem8.Click += new System.EventHandler(this.menuItem_Click);
            // 
            // panel5
            // 
            this.panel5.Controls.Add(this.btXY);
            this.panel5.Controls.Add(this.btFootnote);
            this.panel5.Controls.Add(this.DtpbeginDate);
            this.panel5.Controls.Add(this.patientInfo1);
            this.panel5.Controls.Add(this.label1);
            this.panel5.Dock = System.Windows.Forms.DockStyle.Left;
            this.panel5.Location = new System.Drawing.Point(0, 0);
            this.panel5.Name = "panel5";
            this.panel5.Size = new System.Drawing.Size(461, 160);
            this.panel5.TabIndex = 6;
            // 
            // btXY
            // 
            this.btXY.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btXY.FlatStyle = System.Windows.Forms.FlatStyle.Popup;
            this.btXY.Font = new System.Drawing.Font("宋体", 7.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btXY.Location = new System.Drawing.Point(400, 2);
            this.btXY.Name = "btXY";
            this.btXY.Size = new System.Drawing.Size(56, 19);
            this.btXY.TabIndex = 9;
            this.btXY.Text = "新药信息";
            this.btXY.Click += new System.EventHandler(this.btXY_Click);
            // 
            // btFootnote
            // 
            this.btFootnote.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.btFootnote.FlatStyle = System.Windows.Forms.FlatStyle.Popup;
            this.btFootnote.Font = new System.Drawing.Font("宋体", 7.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.btFootnote.Location = new System.Drawing.Point(341, 2);
            this.btFootnote.Name = "btFootnote";
            this.btFootnote.Size = new System.Drawing.Size(56, 19);
            this.btFootnote.TabIndex = 31;
            this.btFootnote.Text = "中药脚注";
            this.btFootnote.Click += new System.EventHandler(this.btFootnote_Click);
            // 
            // DtpbeginDate
            // 
            this.DtpbeginDate.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.DtpbeginDate.CalendarFont = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.DtpbeginDate.CalendarTrailingForeColor = System.Drawing.Color.Green;
            this.DtpbeginDate.CustomFormat = "yyyy-MM-dd HH:mm:ss";
            this.DtpbeginDate.Enabled = false;
            this.DtpbeginDate.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.DtpbeginDate.Format = System.Windows.Forms.DateTimePickerFormat.Custom;
            this.DtpbeginDate.Location = new System.Drawing.Point(96, 0);
            this.DtpbeginDate.Name = "DtpbeginDate";
            this.DtpbeginDate.ShowUpDown = true;
            this.DtpbeginDate.Size = new System.Drawing.Size(164, 21);
            this.DtpbeginDate.TabIndex = 29;
            this.DtpbeginDate.Value = new System.DateTime(2004, 6, 25, 0, 0, 0, 0);
            this.DtpbeginDate.Visible = false;
            this.DtpbeginDate.ValueChanged += new System.EventHandler(this.DtpbeginDate_ValueChanged);
            this.DtpbeginDate.KeyUp += new System.Windows.Forms.KeyEventHandler(this.DtpbeginDate_KeyUp);
            // 
            // patientInfo1
            // 
            this.patientInfo1.BackColor = System.Drawing.SystemColors.Control;
            this.patientInfo1.Dock = System.Windows.Forms.DockStyle.Bottom;
            this.patientInfo1.IsShow = true;
            this.patientInfo1.Location = new System.Drawing.Point(0, 18);
            this.patientInfo1.Name = "patientInfo1";
            this.patientInfo1.Size = new System.Drawing.Size(461, 142);
            this.patientInfo1.TabIndex = 21;
            this.patientInfo1.DoubleClick += new System.EventHandler(this.patientInfo1_DoubleClick);
            // 
            // label1
            // 
            this.label1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left)));
            this.label1.AutoSize = true;
            this.label1.FlatStyle = System.Windows.Forms.FlatStyle.Popup;
            this.label1.Font = new System.Drawing.Font("宋体", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.label1.ForeColor = System.Drawing.SystemColors.ControlText;
            this.label1.Location = new System.Drawing.Point(8, 4);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(83, 12);
            this.label1.TabIndex = 30;
            this.label1.Text = "医嘱补录时间:";
            this.label1.Visible = false;
            // 
            // panelLeft
            // 
            this.panelLeft.Controls.Add(this.panel2);
            this.panelLeft.Dock = System.Windows.Forms.DockStyle.Left;
            this.panelLeft.Location = new System.Drawing.Point(0, 0);
            this.panelLeft.Name = "panelLeft";
            this.panelLeft.Size = new System.Drawing.Size(144, 703);
            this.panelLeft.TabIndex = 10;
            // 
            // panel2
            // 
            this.panel2.Controls.Add(this.tabControl3);
            this.panel2.Dock = System.Windows.Forms.DockStyle.Fill;
            this.panel2.Location = new System.Drawing.Point(0, 0);
            this.panel2.Name = "panel2";
            this.panel2.Size = new System.Drawing.Size(144, 703);
            this.panel2.TabIndex = 0;
            // 
            // tabControl3
            // 
            this.tabControl3.Controls.Add(this.tabPage2);
            this.tabControl3.Controls.Add(this.tabPage5);
            this.tabControl3.Dock = System.Windows.Forms.DockStyle.Fill;
            this.tabControl3.Location = new System.Drawing.Point(0, 0);
            this.tabControl3.Name = "tabControl3";
            this.tabControl3.SelectedIndex = 0;
            this.tabControl3.Size = new System.Drawing.Size(144, 703);
            this.tabControl3.TabIndex = 16;
            // 
            // tabPage2
            // 
            this.tabPage2.Controls.Add(this.outlookBar1);
            this.tabPage2.Location = new System.Drawing.Point(4, 22);
            this.tabPage2.Name = "tabPage2";
            this.tabPage2.Size = new System.Drawing.Size(136, 677);
            this.tabPage2.TabIndex = 0;
            this.tabPage2.Text = "功能";
            // 
            // outlookBar1
            // 
            this.outlookBar1.AnimationSpeed = 20;
            this.outlookBar1.BackgroundBitmap = null;
            this.outlookBar1.BorderType = UtilityLibrary.WinControls.BorderType.None;
            this.outlookBar1.Dock = System.Windows.Forms.DockStyle.Fill;
            this.outlookBar1.FlatArrowButtons = false;
            this.outlookBar1.Font = new System.Drawing.Font("Tahoma", 11F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.World, ((byte)(134)));
            this.outlookBar1.LeftTopColor = System.Drawing.Color.Empty;
            this.outlookBar1.Location = new System.Drawing.Point(0, 0);
            this.outlookBar1.Name = "outlookBar1";
            this.outlookBar1.RightBottomColor = System.Drawing.Color.Empty;
            this.outlookBar1.Size = new System.Drawing.Size(136, 677);
            this.outlookBar1.TabIndex = 2;
            this.outlookBar1.Text = "outlookBar1";
            this.outlookBar1.Click += new System.EventHandler(this.outlookBar1_Click);
            // 
            // tabPage5
            // 
            this.tabPage5.Controls.Add(this.dataGrid2);
            this.tabPage5.Location = new System.Drawing.Point(4, 22);
            this.tabPage5.Name = "tabPage5";
            this.tabPage5.Size = new System.Drawing.Size(136, 677);
            this.tabPage5.TabIndex = 1;
            this.tabPage5.Text = "病人";
            // 
            // dataGrid2
            // 
            this.dataGrid2.BackgroundColor = System.Drawing.SystemColors.ActiveCaptionText;
            this.dataGrid2.CaptionText = "病人信息列表";
            this.dataGrid2.CellSelectedBackColor = System.Drawing.Color.SkyBlue;
            this.dataGrid2.DataMember = "";
            this.dataGrid2.Dock = System.Windows.Forms.DockStyle.Fill;
            this.dataGrid2.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            this.dataGrid2.Location = new System.Drawing.Point(0, 0);
            this.dataGrid2.Name = "dataGrid2";
            this.dataGrid2.ReadOnly = true;
            this.dataGrid2.RowHeadersVisible = false;
            this.dataGrid2.Size = new System.Drawing.Size(136, 677);
            this.dataGrid2.TabIndex = 16;
            this.dataGrid2.TableStyles.AddRange(new System.Windows.Forms.DataGridTableStyle[] {
            this.dataGridTableStyle5});
            this.dataGrid2.CurrentCellChanged += new System.EventHandler(this.dataGrid2_CurrentCellChanged);
            // 
            // dataGridTableStyle5
            // 
            this.dataGridTableStyle5.DataGrid = this.dataGrid2;
            this.dataGridTableStyle5.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            // 
            // timer1
            // 
            this.timer1.Interval = 10;
            this.timer1.Tick += new System.EventHandler(this.timer1_Tick);
            // 
            // timer2
            // 
            this.timer2.Tick += new System.EventHandler(this.timer2_Tick);
            // 
            // timer3
            // 
            this.timer3.SynchronizingObject = this;
            this.timer3.Elapsed += new System.Timers.ElapsedEventHandler(this.timer3_Elapsed);
            // 
            // lbInFlag
            // 
            this.lbInFlag.AutoSize = true;
            this.lbInFlag.Font = new System.Drawing.Font("宋体", 11F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lbInFlag.ForeColor = System.Drawing.SystemColors.Desktop;
            this.lbInFlag.Location = new System.Drawing.Point(944, 736);
            this.lbInFlag.Name = "lbInFlag";
            this.lbInFlag.Size = new System.Drawing.Size(92, 15);
            this.lbInFlag.TabIndex = 2;
            this.lbInFlag.Text = "拼音码(F11)";
            this.lbInFlag.TextAlign = System.Drawing.ContentAlignment.BottomLeft;
            // 
            // timer4
            // 
            this.timer4.Interval = 1;
            this.timer4.Tick += new System.EventHandler(this.timer4_Tick);
            // 
            // groupTabs
            // 
            this.groupTabs.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("groupTabs.ImageStream")));
            this.groupTabs.TransparentColor = System.Drawing.Color.Transparent;
            this.groupTabs.Images.SetKeyName(0, "");
            this.groupTabs.Images.SetKeyName(1, "");
            this.groupTabs.Images.SetKeyName(2, "");
            this.groupTabs.Images.SetKeyName(3, "");
            this.groupTabs.Images.SetKeyName(4, "");
            this.groupTabs.Images.SetKeyName(5, "");
            this.groupTabs.Images.SetKeyName(6, "");
            this.groupTabs.Images.SetKeyName(7, "");
            this.groupTabs.Images.SetKeyName(8, "");
            // 
            // mainTabs
            // 
            this.mainTabs.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("mainTabs.ImageStream")));
            this.mainTabs.TransparentColor = System.Drawing.Color.Transparent;
            this.mainTabs.Images.SetKeyName(0, "");
            this.mainTabs.Images.SetKeyName(1, "");
            this.mainTabs.Images.SetKeyName(2, "");
            // 
            // imageList4
            // 
            this.imageList4.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("imageList4.ImageStream")));
            this.imageList4.TransparentColor = System.Drawing.Color.Transparent;
            this.imageList4.Images.SetKeyName(0, "");
            this.imageList4.Images.SetKeyName(1, "");
            this.imageList4.Images.SetKeyName(2, "");
            this.imageList4.Images.SetKeyName(3, "");
            this.imageList4.Images.SetKeyName(4, "");
            this.imageList4.Images.SetKeyName(5, "");
            this.imageList4.Images.SetKeyName(6, "");
            this.imageList4.Images.SetKeyName(7, "");
            this.imageList4.Images.SetKeyName(8, "");
            this.imageList4.Images.SetKeyName(9, "");
            this.imageList4.Images.SetKeyName(10, "");
            this.imageList4.Images.SetKeyName(11, "");
            this.imageList4.Images.SetKeyName(12, "");
            this.imageList4.Images.SetKeyName(13, "");
            this.imageList4.Images.SetKeyName(14, "");
            this.imageList4.Images.SetKeyName(15, "");
            this.imageList4.Images.SetKeyName(16, "");
            this.imageList4.Images.SetKeyName(17, "");
            this.imageList4.Images.SetKeyName(18, "");
            this.imageList4.Images.SetKeyName(19, "");
            this.imageList4.Images.SetKeyName(20, "");
            // 
            // contextMenuStrip2
            // 
            this.contextMenuStrip2.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.药物临床信息参考ToolStripMenuItem,
            this.药品说明书ToolStripMenuItem,
            this.中国药典ToolStripMenuItem,
            this.病人用药教育ToolStripMenuItem,
            this.药物检验值ToolStripMenuItem,
            this.临床检验信息参考ToolStripMenuItem,
            this.toolStripSeparator1,
            this.toolStripMenuItem2,
            this.toolStripSeparator2,
            this.医药信息中心ToolStripMenuItem,
            this.toolStripSeparator3,
            this.药品配对信息ToolStripMenuItem,
            this.给药途径配对信息ToolStripMenuItem,
            this.医院药品信息ToolStripMenuItem,
            this.toolStripSeparator4,
            this.用药研究ToolStripMenuItem,
            this.系统设置ToolStripMenuItem,
            this.审查ToolStripMenuItem,
            this.警告ToolStripMenuItem,
            this.药品信息ToolStripMenuItem});
            this.contextMenuStrip2.Name = "contextMenuStrip2";
            this.contextMenuStrip2.Size = new System.Drawing.Size(173, 380);
            // 
            // 药物临床信息参考ToolStripMenuItem
            // 
            this.药物临床信息参考ToolStripMenuItem.Name = "药物临床信息参考ToolStripMenuItem";
            this.药物临床信息参考ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.药物临床信息参考ToolStripMenuItem.Text = "药物临床信息参考";
            this.药物临床信息参考ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 药品说明书ToolStripMenuItem
            // 
            this.药品说明书ToolStripMenuItem.Name = "药品说明书ToolStripMenuItem";
            this.药品说明书ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.药品说明书ToolStripMenuItem.Text = "药品说明书";
            this.药品说明书ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 中国药典ToolStripMenuItem
            // 
            this.中国药典ToolStripMenuItem.Name = "中国药典ToolStripMenuItem";
            this.中国药典ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.中国药典ToolStripMenuItem.Text = "中国药典";
            this.中国药典ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 病人用药教育ToolStripMenuItem
            // 
            this.病人用药教育ToolStripMenuItem.Name = "病人用药教育ToolStripMenuItem";
            this.病人用药教育ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.病人用药教育ToolStripMenuItem.Text = "病人用药教育";
            this.病人用药教育ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 药物检验值ToolStripMenuItem
            // 
            this.药物检验值ToolStripMenuItem.Name = "药物检验值ToolStripMenuItem";
            this.药物检验值ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.药物检验值ToolStripMenuItem.Text = "药物检验值";
            this.药物检验值ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 临床检验信息参考ToolStripMenuItem
            // 
            this.临床检验信息参考ToolStripMenuItem.Name = "临床检验信息参考ToolStripMenuItem";
            this.临床检验信息参考ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.临床检验信息参考ToolStripMenuItem.Text = "临床检验信息参考";
            this.临床检验信息参考ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // toolStripSeparator1
            // 
            this.toolStripSeparator1.Name = "toolStripSeparator1";
            this.toolStripSeparator1.Size = new System.Drawing.Size(169, 6);
            // 
            // toolStripMenuItem2
            // 
            this.toolStripMenuItem2.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.药物药物相互作用ToolStripMenuItem,
            this.药物食物相互作用ToolStripMenuItem,
            this.toolStripSeparator5,
            this.国内注射剂体外配伍ToolStripMenuItem,
            this.国外注射剂体外配伍ToolStripMenuItem,
            this.toolStripSeparator6,
            this.禁忌症ToolStripMenuItem,
            this.副作用ToolStripMenuItem,
            this.toolStripSeparator7,
            this.老年人用药ToolStripMenuItem,
            this.儿童用药ToolStripMenuItem,
            this.妊娠期用药ToolStripMenuItem,
            this.哺乳期用药ToolStripMenuItem});
            this.toolStripMenuItem2.Name = "toolStripMenuItem2";
            this.toolStripMenuItem2.Size = new System.Drawing.Size(172, 22);
            this.toolStripMenuItem2.Text = "专项信息";
            this.toolStripMenuItem2.Click += new System.EventHandler(this.toolStripMenuItem2_Click);
            // 
            // 药物药物相互作用ToolStripMenuItem
            // 
            this.药物药物相互作用ToolStripMenuItem.Name = "药物药物相互作用ToolStripMenuItem";
            this.药物药物相互作用ToolStripMenuItem.Size = new System.Drawing.Size(184, 22);
            this.药物药物相互作用ToolStripMenuItem.Text = "药物-药物相互作用";
            this.药物药物相互作用ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 药物食物相互作用ToolStripMenuItem
            // 
            this.药物食物相互作用ToolStripMenuItem.Name = "药物食物相互作用ToolStripMenuItem";
            this.药物食物相互作用ToolStripMenuItem.Size = new System.Drawing.Size(184, 22);
            this.药物食物相互作用ToolStripMenuItem.Text = "药物-食物相互作用";
            this.药物食物相互作用ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // toolStripSeparator5
            // 
            this.toolStripSeparator5.Name = "toolStripSeparator5";
            this.toolStripSeparator5.Size = new System.Drawing.Size(181, 6);
            // 
            // 国内注射剂体外配伍ToolStripMenuItem
            // 
            this.国内注射剂体外配伍ToolStripMenuItem.Name = "国内注射剂体外配伍ToolStripMenuItem";
            this.国内注射剂体外配伍ToolStripMenuItem.Size = new System.Drawing.Size(184, 22);
            this.国内注射剂体外配伍ToolStripMenuItem.Text = "国内注射剂体外配伍";
            this.国内注射剂体外配伍ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 国外注射剂体外配伍ToolStripMenuItem
            // 
            this.国外注射剂体外配伍ToolStripMenuItem.Name = "国外注射剂体外配伍ToolStripMenuItem";
            this.国外注射剂体外配伍ToolStripMenuItem.Size = new System.Drawing.Size(184, 22);
            this.国外注射剂体外配伍ToolStripMenuItem.Text = "国外注射剂体外配伍";
            this.国外注射剂体外配伍ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // toolStripSeparator6
            // 
            this.toolStripSeparator6.Name = "toolStripSeparator6";
            this.toolStripSeparator6.Size = new System.Drawing.Size(181, 6);
            // 
            // 禁忌症ToolStripMenuItem
            // 
            this.禁忌症ToolStripMenuItem.Name = "禁忌症ToolStripMenuItem";
            this.禁忌症ToolStripMenuItem.Size = new System.Drawing.Size(184, 22);
            this.禁忌症ToolStripMenuItem.Text = "禁忌症";
            this.禁忌症ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 副作用ToolStripMenuItem
            // 
            this.副作用ToolStripMenuItem.Name = "副作用ToolStripMenuItem";
            this.副作用ToolStripMenuItem.Size = new System.Drawing.Size(184, 22);
            this.副作用ToolStripMenuItem.Text = "副作用";
            this.副作用ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // toolStripSeparator7
            // 
            this.toolStripSeparator7.Name = "toolStripSeparator7";
            this.toolStripSeparator7.Size = new System.Drawing.Size(181, 6);
            // 
            // 老年人用药ToolStripMenuItem
            // 
            this.老年人用药ToolStripMenuItem.Name = "老年人用药ToolStripMenuItem";
            this.老年人用药ToolStripMenuItem.Size = new System.Drawing.Size(184, 22);
            this.老年人用药ToolStripMenuItem.Text = "老年人用药";
            this.老年人用药ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 儿童用药ToolStripMenuItem
            // 
            this.儿童用药ToolStripMenuItem.Name = "儿童用药ToolStripMenuItem";
            this.儿童用药ToolStripMenuItem.Size = new System.Drawing.Size(184, 22);
            this.儿童用药ToolStripMenuItem.Text = "儿童用药";
            this.儿童用药ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 妊娠期用药ToolStripMenuItem
            // 
            this.妊娠期用药ToolStripMenuItem.Name = "妊娠期用药ToolStripMenuItem";
            this.妊娠期用药ToolStripMenuItem.Size = new System.Drawing.Size(184, 22);
            this.妊娠期用药ToolStripMenuItem.Text = "妊娠期用药";
            this.妊娠期用药ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 哺乳期用药ToolStripMenuItem
            // 
            this.哺乳期用药ToolStripMenuItem.Name = "哺乳期用药ToolStripMenuItem";
            this.哺乳期用药ToolStripMenuItem.Size = new System.Drawing.Size(184, 22);
            this.哺乳期用药ToolStripMenuItem.Text = "哺乳期用药";
            this.哺乳期用药ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // toolStripSeparator2
            // 
            this.toolStripSeparator2.Name = "toolStripSeparator2";
            this.toolStripSeparator2.Size = new System.Drawing.Size(169, 6);
            // 
            // 医药信息中心ToolStripMenuItem
            // 
            this.医药信息中心ToolStripMenuItem.Name = "医药信息中心ToolStripMenuItem";
            this.医药信息中心ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.医药信息中心ToolStripMenuItem.Text = "医药信息中心";
            this.医药信息中心ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // toolStripSeparator3
            // 
            this.toolStripSeparator3.Name = "toolStripSeparator3";
            this.toolStripSeparator3.Size = new System.Drawing.Size(169, 6);
            // 
            // 药品配对信息ToolStripMenuItem
            // 
            this.药品配对信息ToolStripMenuItem.Name = "药品配对信息ToolStripMenuItem";
            this.药品配对信息ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.药品配对信息ToolStripMenuItem.Text = "药品配对信息";
            this.药品配对信息ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 给药途径配对信息ToolStripMenuItem
            // 
            this.给药途径配对信息ToolStripMenuItem.Name = "给药途径配对信息ToolStripMenuItem";
            this.给药途径配对信息ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.给药途径配对信息ToolStripMenuItem.Text = "给药途径配对信息";
            this.给药途径配对信息ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 医院药品信息ToolStripMenuItem
            // 
            this.医院药品信息ToolStripMenuItem.Name = "医院药品信息ToolStripMenuItem";
            this.医院药品信息ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.医院药品信息ToolStripMenuItem.Text = "医院药品信息";
            this.医院药品信息ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // toolStripSeparator4
            // 
            this.toolStripSeparator4.Name = "toolStripSeparator4";
            this.toolStripSeparator4.Size = new System.Drawing.Size(169, 6);
            // 
            // 用药研究ToolStripMenuItem
            // 
            this.用药研究ToolStripMenuItem.Name = "用药研究ToolStripMenuItem";
            this.用药研究ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.用药研究ToolStripMenuItem.Text = "用药研究";
            this.用药研究ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 系统设置ToolStripMenuItem
            // 
            this.系统设置ToolStripMenuItem.Name = "系统设置ToolStripMenuItem";
            this.系统设置ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.系统设置ToolStripMenuItem.Text = "系统设置";
            this.系统设置ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 审查ToolStripMenuItem
            // 
            this.审查ToolStripMenuItem.Name = "审查ToolStripMenuItem";
            this.审查ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.审查ToolStripMenuItem.Text = "审查";
            this.审查ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 警告ToolStripMenuItem
            // 
            this.警告ToolStripMenuItem.Name = "警告ToolStripMenuItem";
            this.警告ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.警告ToolStripMenuItem.Text = "警告";
            this.警告ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // 药品信息ToolStripMenuItem
            // 
            this.药品信息ToolStripMenuItem.Name = "药品信息ToolStripMenuItem";
            this.药品信息ToolStripMenuItem.Size = new System.Drawing.Size(172, 22);
            this.药品信息ToolStripMenuItem.Text = "药品信息";
            this.药品信息ToolStripMenuItem.Click += new System.EventHandler(this.药物临床信息参考ToolStripMenuItem_Click);
            // 
            // backgroundWorker1
            // 
            this.backgroundWorker1.DoWork += new System.ComponentModel.DoWorkEventHandler(this.backgroundWorker1_DoWork);
            // 
            // datetimeLR
            // 
            this.datetimeLR.CustomFormat = "yyyy-MM-dd HH:mm:ss";
            this.datetimeLR.Format = System.Windows.Forms.DateTimePickerFormat.Custom;
            this.datetimeLR.Location = new System.Drawing.Point(156, 454);
            this.datetimeLR.Name = "datetimeLR";
            this.datetimeLR.ShowUpDown = true;
            this.datetimeLR.Size = new System.Drawing.Size(135, 21);
            this.datetimeLR.TabIndex = 3;
            this.datetimeLR.Visible = false;
            this.datetimeLR.LostFocus += new System.EventHandler(this.datetimeLR_LostFocus);
            // 
            // imgTab
            // 
            this.imgTab.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("imgTab.ImageStream")));
            this.imgTab.TransparentColor = System.Drawing.Color.Transparent;
            this.imgTab.Images.SetKeyName(0, "a.bmp");
            this.imgTab.Images.SetKeyName(1, "b.bmp");
            // 
            // FrmYZGL
            // 
            this.AutoScaleBaseSize = new System.Drawing.Size(6, 14);
            this.ClientSize = new System.Drawing.Size(1241, 725);
            this.Controls.Add(this.datetimeLR);
            this.Controls.Add(this.lbInFlag);
            this.Controls.Add(this.panel1);
            this.Controls.Add(this.statusBar1);
            this.ForeColor = System.Drawing.SystemColors.ActiveCaption;
            this.KeyPreview = true;
            this.Name = "FrmYZGL";
            this.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen;
            this.Text = "医嘱管理";
            this.WindowState = System.Windows.Forms.FormWindowState.Maximized;
            this.Deactivate += new System.EventHandler(this.FrmYZGL_Deactivate);
            this.Load += new System.EventHandler(this.FrmYZGL_Load);
            this.Activated += new System.EventHandler(this.FrmYZGL_Activated);
            this.FormClosed += new System.Windows.Forms.FormClosedEventHandler(this.FrmYZGL_FormClosed);
            this.Closing += new System.ComponentModel.CancelEventHandler(this.FrmYZGL_Closing);
            this.KeyUp += new System.Windows.Forms.KeyEventHandler(this.FrmYZGL_KeyUp);
            this.FormClosing += new System.Windows.Forms.FormClosingEventHandler(this.FrmYZGL_FormClosing);
            this.panel1.ResumeLayout(false);
            this.panelRight.ResumeLayout(false);
            this.panel3.ResumeLayout(false);
            this.panel3.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.dataGrid_TempZD)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dataGrid_LongZD)).EndInit();
            this.pnExplain.ResumeLayout(false);
            this.pnExplain.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.dataGrid_TempOrder)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dataGrid_LongOrder)).EndInit();
            this.panel4.ResumeLayout(false);
            this.contextMenuStrip3.ResumeLayout(false);
            this.contextMenuStrip1.ResumeLayout(false);
            this.panel7.ResumeLayout(false);
            this.panel6.ResumeLayout(false);
            this.panel6.PerformLayout();
            this.panel8.ResumeLayout(false);
            this.tabControl2.ResumeLayout(false);
            this.tabPage6.ResumeLayout(false);
            this.tabPage6.PerformLayout();
            this.tabPage3.ResumeLayout(false);
            ((System.ComponentModel.ISupportInitialize)(this.dataGrid1)).EndInit();
            this.tabPage8.ResumeLayout(false);
            this.tabPage8.PerformLayout();
            this.groupBox2.ResumeLayout(false);
            this.tabPage4.ResumeLayout(false);
            this.panel5.ResumeLayout(false);
            this.panel5.PerformLayout();
            this.panelLeft.ResumeLayout(false);
            this.panel2.ResumeLayout(false);
            this.tabControl3.ResumeLayout(false);
            this.tabPage2.ResumeLayout(false);
            this.tabPage5.ResumeLayout(false);
            ((System.ComponentModel.ISupportInitialize)(this.dataGrid2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.timer3)).EndInit();
            this.contextMenuStrip2.ResumeLayout(false);
            this.ResumeLayout(false);
            this.PerformLayout();

        }

        void dataGrid_LongOrder_DoubleClick(object sender, EventArgs e)
        {

            //变量付初始值
            DataTable myTb = (DataTable)this.dataGrid_LongOrder.DataSource;
            int nrow = dataGrid_LongOrder.CurrentCell.RowNumber;
            if (Convertor.IsNull(myTb.Rows[nrow]["类型"].ToString(), "") == "3-中草药" && myTb.Rows[nrow]["status_flag"].ToString() != "-1")//Modify by zouchihua 2013-3-11 保存的医嘱也可以看到
            {
                try
                {
                    中草药明细 fo = new 中草药明细();
                    fo.YS_ID = this.YS_ID;
                    fo.BinID = this.BinID;
                    fo.GroupNum = Convert.ToInt32(myTb.Rows[nrow]["嘱号"].ToString());
                    fo.ShowDialog();
                }
                catch { }
            }


            //add by zouchihua 2013-8-10获得医技信息 
            if (myTb.Rows[nrow]["类型"].ToString() == "5-医技" && (int.Parse(myTb.Rows[nrow]["status_flag"].ToString()) <= 1 || int.Parse(myTb.Rows[nrow]["status_flag"].ToString()) == 9))
            {
                string sql = "select * from JC_ASSAY where yzid='" + myTb.Rows[nrow]["hoitem_id"].ToString() + "'";
                DataTable tbbb = FrmMdiMain.Database.GetDataTable(sql);
                if (tbbb.Rows.Count > 0)
                {
                    Ts_zyys_jysq.FrmJyBb_fjsm frm;
                    if (new Guid(myTb.Rows[nrow]["id"].ToString()) == Guid.Empty)
                    {
                        frm = new Ts_zyys_jysq.FrmJyBb_fjsm(myTb.Rows[nrow]["id"].ToString(), long.Parse(myTb.Rows[nrow]["hoitem_id"].ToString()));
                        if (myTb.Rows[nrow]["dwlx"].ToString().Trim() != "" && long.Parse(myTb.Rows[nrow]["dwlx"].ToString().Trim()) > 0)
                            frm.bb = myTb.Rows[nrow]["dwlx"].ToString().Trim();
                    }
                    else
                        frm = new Ts_zyys_jysq.FrmJyBb_fjsm(myTb.Rows[nrow]["id"].ToString());
                    frm.ShowDialog();
                    if (frm.DialogResult == DialogResult.OK)
                    {
                        if (new Guid(myTb.Rows[nrow]["id"].ToString()) == Guid.Empty)
                        {
                            myTb.Rows[nrow]["医嘱内容"] = frm.fjsm + myTb.Rows[nrow]["医嘱内容"].ToString();
                            myTb.Rows[nrow]["memo"] = frm.fjsm + "★";
                            myTb.Rows[nrow]["dwlx"] = int.Parse(frm.bb);
                            this.Refresh();
                        }
                        else
                        {
                            sql = "update zy_orderrecord set dwlx='" + frm.bb + "' ,memo='" + frm.fjsm + "★', ORDER_CONTEXT='" + frm.fjsm + "'+SUBSTRING(ORDER_CONTEXT,CHARINDEX(ORDER_NAME,ORDER_CONTEXT,1),LEN(ORDER_CONTEXT))   from  zy_orderrecord a join JC_HOITEMDICTION b on a.HOITEM_ID=b.ORDER_ID where a.order_id='" + myTb.Rows[nrow]["id"].ToString() + "'";
                            FrmMdiMain.Database.DoCommand(sql);
                            loadGrid_LongOrder();
                        }
                    }
                }
            }
        }
        #endregion



        //调用API,判断CAPSLOCK状态
        [DllImport("user32.dll", CharSet = CharSet.Auto)]
        private static extern Int32 GetKeyState(int nVirtKey);

        #region OUTLOOK CONTROL的代码
        void InitializeOutlookBar()
        {

            //创建功能菜单
            OutlookBarBand outlookShortcutsBand = new OutlookBarBand("医嘱类型");

            string ifqy = ApiFunction.GetIniString("SfQy", "SfQy", Constant.ApplicationDirectory + "\\Cpset.ini");
            /*是否启用临床路径 0=不启用，1=启用临床路径 2=启用单病种 3=单病种临床路径都启用*/
            if (ifqy == "1" || ifqy == "3")
            {
                string typename = ApiFunction.GetIniString("Tpype", "typename", Constant.ApplicationDirectory + "\\Cpset.ini");

                if (typename == "创星科技")
                    outlookShortcutsBand.Items.Add(new OutlookBarItem("引入路径", 1));
            }
            outlookShortcutsBand.LargeImageList = this.imageList4;
            if (myQuery.GetCpzt(BinID.ToString(), "0").Trim().IndexOf("1") >= 0)
            {    //add by zouchihua 临床路径
                outlookShortcutsBand.Items.Add(new OutlookBarItem("临床路径", 1));
            }
            else
                if (myQuery.GetCpzt(BinID.ToString(), "0").Trim().IndexOf("9") >= 0)
                {
                    //add by zouchihua 临床路径
                    outlookShortcutsBand.Items.Add(new OutlookBarItem("单病种", 1));
                }
            outlookShortcutsBand.Items.Add(new OutlookBarItem("治疗申请", 13));
            if (cfg6073.Config.Trim() == "1")
                outlookShortcutsBand.Items.Add(new OutlookBarItem("输血申请", 14));//add by zouchihua 2013-8-19 增加输血申请
            outlookShortcutsBand.Items.Add(new OutlookBarItem("化验单", 0));
            outlookShortcutsBand.Items.Add(new OutlookBarItem("检查单", 2));

            //Modify By Tany 2015-02-03 增加病理申请
            try
            {
                string sfqy = ApiFunction.GetIniString("bl", "是否启用", Constant.ApplicationDirectory + "\\bl.ini");
                if (sfqy == "1")
                {
                    outlookShortcutsBand.Items.Add(new OutlookBarItem("病理申请", 2));
                }
            }
            catch
            {
            }

            if (_hs)
            {
                //modify by : jchl
                //outlookShortcutsBand.Items.Add(new OutlookBarItem("手术申请", 4));//武汉中心医院直接屏蔽手术申请
            }
            else
            {
                if (cfg6209.Config.Trim() == "0" && (cfg6220.Config.Trim() == "1" || myQuery.IsDeptOk(DeptID.ToString())))
                {
                    //modify by : jchl 参数控制是否屏蔽会诊申请 0=不 1=是  
                    outlookShortcutsBand.Items.Add(new OutlookBarItem("会诊申请", 15));
                }
            }
            if (!_tszl)
            {
                outlookShortcutsBand.Items.Add(new OutlookBarItem("特殊治疗", 6));
            }
            outlookShortcutsBand.Items.Add(new OutlookBarItem("产后医嘱", 3));

            outlookShortcutsBand.Items.Add(new OutlookBarItem("术后医嘱", 4));

            #region"modify by : jchl"
            //outlookShortcutsBand.Items.Add(new OutlookBarItem("转科医嘱", 17));
            //outlookShortcutsBand.Items.Add(new OutlookBarItem("出院医嘱", 8));
            if (cfg6200.Config.Trim() == "0" && (cfg6220.Config.Trim() == "1" || myQuery.IsDeptOk(DeptID.ToString())))
            {
                outlookShortcutsBand.Items.Add(new OutlookBarItem("转科医嘱", 17));
            }
            if (cfg6201.Config.Trim() == "0" && (cfg6220.Config.Trim() == "1" || myQuery.IsDeptOk(DeptID.ToString())))
            {
                outlookShortcutsBand.Items.Add(new OutlookBarItem("出院医嘱", 8));
            }
            btnDc.Visible = !(cfg6201.Config.Trim() == "0" && (cfg6220.Config.Trim() == "1" || myQuery.IsDeptOk(DeptID.ToString())));
            #endregion

            outlookShortcutsBand.Items.Add(new OutlookBarItem("死亡医嘱", 20));
            outlookBar1.Bands.Add(outlookShortcutsBand);

            //添加控件的单击事件和设置字体
            outlookBar1.ItemClicked += new OutlookBarItemClickedHandler(OnOutlookBarItemClicked);
            outlookBar1.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((System.Byte)(134)));

            //控制控件的停靠
            outlookBar1.Dock = System.Windows.Forms.DockStyle.Left;

            //outlookBar1.BackColor = Color.Blue;

        }


        //wait_jchl
        void OnOutlookBarItemClicked(OutlookBarBand band, OutlookBarItem item)
        {
            string cfg6033 = new SystemCfg(6033).Config;
            if (cfg6033 == "1")
            {
                if ((mz || _tszl) && (item.Text.Trim() != "特殊治疗") && (item.Text.Trim() != "病理申请"))//Modify by zouchihua 2011-12-30 手术麻醉把特殊治疗放出来
                {
                    return;
                }
            }
            else
            {
                if ((mz || _tszl) && (item.Text.Trim() != "病理申请"))//Modify by Tany 2015-04-08 手麻把病理申请放出来
                {
                    return;
                }
            }
            #region//Add by Zouchihua 2011-10-12 判断病人的当前科室是不是属于本院区，主要是为了阻止临时跨院业务的病人操作
            string[] rtnSql = ts_zyhs_classes.BaseFunc.GetBrzt(BinID);
            if (rtnSql[0] != "0")
            {
                MessageBox.Show("由于跨院转科或者特殊治疗，该病人记录已经冻结不允许操作！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }
            #endregion
            //Modify by zouchihfua 2011-11-16  病人所在科室机构编码
            //string[] rtnSql = ts_zyhs_classes.BaseFunc.GetBrzt(BinID);
            int BrJgbm = Convert.ToInt32(rtnSql[1]);
            if (this.XG2 == true && (item.Text.Trim() == "治疗申请" || item.Text.Trim() == "化验单" || item.Text.Trim() == "检查单" || item.Text.Trim() == "会诊申请" || item.Text.Trim() == "手术申请"))
            {
                MessageBox.Show("请先保存临时医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            if (outType == true) return;

            //add by zouchihua  临床路径或者单病种
            //if ((item.Text == "出院医嘱" || item.Text == "死亡医嘱" || item.Text == "转科医嘱") && (myQuery.GetCpzt(BinID.ToString(), "0").Trim().IndexOf("1") >= 0 || myQuery.GetCpzt(BinID.ToString(), "0").Trim().IndexOf("9") >= 0))
            if ((item.Text == "出院医嘱" || item.Text == "死亡医嘱") && (myQuery.GetCpzt(BinID.ToString(), "0").Trim().IndexOf("1") >= 0 || myQuery.GetCpzt(BinID.ToString(), "0").Trim().IndexOf("9") >= 0))
            {
                MessageBox.Show("请先退出临床路径！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }

            if ((item.Text == "转科医嘱") && (myQuery.GetCpzt(BinID.ToString(), "0").Trim().IndexOf("1") >= 0 || myQuery.GetCpzt(BinID.ToString(), "0").Trim().IndexOf("9") >= 0))
            {
                if (MessageBox.Show("入径病人跨科转科需要注意\r\r（1）该病人路径已完成请先点击“完成路径”，再操作转科\r\r（2）该病人路径未完成请先点击“退出路径”，再操作转科\r\r入径病人科内转科，点击“确定”完成转科操作后，可以继续执行临床路径的操作", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Information, MessageBoxDefaultButton.Button2) == DialogResult.Cancel)
                    return;
            }

            Cursor = PubStaticFun.WaitCursor();
            switch (item.Text)
            {
                case "引入路径":
                    //引入临床路径
                    myQuery.GetIntoPathway(this.BinID.ToString(), "0", 0);//单病种 为 1 ，默认 为0
                    //临床路径默认进入 临床路径管理
                    try
                    {
                        Addpathfrm();
                        Crownwood.Magic.Controls.TabControl tc = ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]);
                        //Crownwood.Magic.Controls.TabControl tc = null;
                        if (tabbedGroups1.ActiveLeaf != null)
                            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
                        if (tc.TabPages["临床路径管理"] != null && !mz)
                        {

                            tc.SelectedTab = tc.TabPages["临床路径管理"];
                            //tc.TabPages["临床路径管理"].BringToFront();
                            //tc.TabPages["临床路径管理"].Select();
                            this.panel4.Visible = false;
                            this.panel7.Visible = false;
                            this.panelLeft.Visible = false;
                        }
                        else if (tc.TabPages["单病种管理"] != null && !mz)
                        {
                            tc.SelectedTab = tc.TabPages["单病种管理"];
                            //tc.TabPages["临床路径管理"].BringToFront();
                            //tc.TabPages["临床路径管理"].Select();
                            this.panel4.Visible = false;
                            this.panel7.Visible = false;
                            this.panelLeft.Visible = false;
                        }
                        else
                        {
                            this.panel4.Visible = true;
                            this.panel7.Visible = true;
                            this.panelLeft.Visible = true;
                        }



                    }
                    catch
                    {

                    }
                    break;
                case "临床路径":
                    {

                        try
                        {
                            myQuery.GetFrmCpinfo(this.Handle.ToInt32(), BinID.ToString(), BabyID.ToString(), this.Dept_Br.ToString(), this.WardID.ToString(), SelectDataView, 0);
                            Crownwood.Magic.Controls.TabControl tc = null;
                            if (tabbedGroups1.ActiveLeaf != null)
                                tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
                            tc.SelectedTab = tc.TabPages["临床路径管理"];
                            this.panel4.Visible = false;
                            this.panel7.Visible = false;
                            this.panelLeft.Visible = false;
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(ex.Message);
                        }
                        break;
                    }
                case "单病种":
                    {
                        try
                        {
                            myQuery.GetFrmCpinfo(this.Handle.ToInt32(), BinID.ToString(), BabyID.ToString(), this.Dept_Br.ToString(), this.WardID.ToString(), SelectDataView, 1);
                            Crownwood.Magic.Controls.TabControl tc = null;
                            if (tabbedGroups1.ActiveLeaf != null)
                                tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
                            tc.SelectedTab = tc.TabPages["单病种管理"];
                            this.panel4.Visible = false;
                            this.panel7.Visible = false;
                            this.panelLeft.Visible = false;
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(ex.Message);
                        }
                        break;
                    }
                case "治疗申请":
                    {
                        Ts_zyys_zlsq.InstanceForm._database = InstanceForm._database;
                        Ts_zyys_zlsq.InstanceForm._currentDept = InstanceForm._currentDept;
                        Ts_zyys_zlsq.InstanceForm._currentUser = InstanceForm._currentUser;
                        Ts_zyys_zlsq.FrmZLSQ cure = new Ts_zyys_zlsq.FrmZLSQ();
                        cure.YS = this.YS;
                        cure.YS_ID = this.YS_ID;
                        cure.BinID = this.BinID;
                        cure.BabyID = this.BabyID;
                        cure.DeptID = this.DeptID;
                        cure.WardID = this.WardID;
                        cure.Dept_Br = this.Dept_Br;

                        cure._Zyid = this.patientInfo1.lbID.Text.Trim();//add by jchl

                        cure.lg = this.lg;
                        cure.ShowDialog();
                        loadGrid_TempOrder();//刷新数据
                        break;
                    }
                case "化验单":
                    {
                        Ts_zyys_jysq.InstanceForm._database = InstanceForm._database;
                        Ts_zyys_jysq.InstanceForm._currentDept = InstanceForm._currentDept;
                        Ts_zyys_jysq.InstanceForm._currentUser = InstanceForm._currentUser;
                        Ts_zyys_jysq.FrmJYSQ jysq = new Ts_zyys_jysq.FrmJYSQ(this.BinID, this.BabyID);

                        jysq.YS = this.YS;
                        jysq.YS_ID = this.YS_ID;
                        jysq.BinID = this.BinID;
                        jysq.DeptID = this.DeptID;
                        jysq.WardID = this.WardID;
                        jysq.BabyID = this.BabyID;
                        jysq.Dept_Br = this.Dept_Br;
                        jysq.lg = this.lg;

                        jysq._Zyid = this.patientInfo1.lbID.Text.Trim();//add by jchl

                        jysq.ShowDialog();
                        loadGrid_TempOrder();//刷新数据
                        break;
                    }
                case "病理申请": //Add By Tany 2015-02-03
                    {
                        try
                        {
                            string sfqy = ApiFunction.GetIniString("bl", "是否启用", Constant.ApplicationDirectory + "\\bl.ini");
                            if (sfqy == "1")
                            {
                                Ts_Bl_interface.BlFactory bf = new Ts_Bl_interface.BlFactory();
                                //bf.Create("").ShowPatBlInfo(BinID, Ts_Bl_interface.PatientSource.住院);
                                bf.Create("").ShowBlSq(BinID, Ts_Bl_interface.PatientSource.住院, InstanceForm._currentDept.DeptId);
                            }
                            else
                            {
                                MessageBox.Show("没有开启病理接口，请联系管理员");
                            }
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(ex.Message);
                        }
                        break;
                    }
                case "输血申请":
                    {
                        try
                        {
                            ts_ls_xk_new_yxsq.Frm_BloodRequest frmblood = new ts_ls_xk_new_yxsq.Frm_BloodRequest(this.patientInfo1.lbID.Text, 2, InstanceForm._currentUser, InstanceForm._currentDept, InstanceForm._database);
                            frmblood.ShowDialog();
                            loadGrid_TempOrder();//刷新数据
                        }
                        catch (Exception ex)
                        {

                        }
                        break;
                    }
                case "检查单":
                    {
                        Ts_zyys_jcsq.InstanceForm._database = InstanceForm._database;
                        Ts_zyys_jcsq.InstanceForm._currentDept = InstanceForm._currentDept;
                        Ts_zyys_jcsq.InstanceForm._currentUser = InstanceForm._currentUser;
                        //Ts_zyys_jcsq.FrmJCSQ jcsq = new Ts_zyys_jcsq.FrmJCSQ();
                        //jcsq.YS = this.YS;
                        //jcsq.YS_ID = this.YS_ID;
                        //jcsq.BinID = this.BinID;
                        //jcsq.DeptID = this.DeptID;
                        //jcsq.WardID = this.WardID;
                        //jcsq.BabyID = this.BabyID;
                        //jcsq.Dept_Br = this.Dept_Br;
                        //jcsq.lg = this.lg;

                        //jcsq._Zyid = this.patientInfo1.lbID.Text.Trim();//add by jchl

                        //jcsq.ShowDialog();
                        Ts_zyys_jcsq.FrmJCSQBW jcsqbw = new Ts_zyys_jcsq.FrmJCSQBW();
                        jcsqbw.YS = this.YS;
                        jcsqbw.YS_ID = this.YS_ID;
                        jcsqbw.BinID = this.BinID;
                        jcsqbw.DeptID = this.DeptID;
                        jcsqbw.WardID = this.WardID;
                        jcsqbw.BabyID = this.BabyID;
                        jcsqbw.Dept_Br = this.Dept_Br;
                        jcsqbw.lg = this.lg;

                        jcsqbw._Zyid = this.patientInfo1.lbID.Text.Trim();//add by jchl

                        jcsqbw.ShowDialog();

                        loadGrid_TempOrder();//刷新数据
                        break;
                    }
                case "特殊治疗":
                    {
                        object[] communicateValue = new object[6];
                        communicateValue[0] = BinID;
                        communicateValue[1] = WardID;
                        communicateValue[2] = 0;
                        communicateValue[3] = "";
                        communicateValue[4] = BabyID;//Modify By tany 2011-05-09
                        communicateValue[5] = this.lg;

                        GetForm("Ts_zyys_tszl", "Fun_ts_zyys_tszl", "特殊治疗", YS.UserID, DeptID, communicateValue, true);
                        loadGrid_TempOrder();//刷新数据
                        break;
                    }
                case "会诊申请":
                    {
                        if (this.BabyID != 0) break;
                        Ts_zyys_hzgl.FrmCon fc = new Ts_zyys_hzgl.FrmCon(this.YS_ID);
                        fc.YS = this.YS;
                        fc.YS_ID = this.YS_ID;
                        fc.BinID = this.BinID;
                        fc.DeptID = this.DeptID;
                        fc.WardID = this.WardID;
                        fc.lg = this.lg;
                        fc.ShowDialog();
                        loadGrid_TempOrder();//刷新数据
                        break;
                    }
                case "手术申请":
                    {
                        if (this.BabyID != 0) break;
                        //object[] communicateValue = new object[7];
                        //communicateValue[0] = BinID;
                        //communicateValue[1] = WardID;
                        //communicateValue[2] = 0;
                        //communicateValue[3] = "";
                        //communicateValue[4] = 0;
                        //communicateValue[5] = this.lg;
                        //communicateValue[6] = this.patientInfo1.lbID.Text;
                        //GetForm("Ts_zyys_ssgl", "Fun_Ts_zyys_sssq_hs", "手术申请", InstanceForm._currentUser.UserID, InstanceForm._currentDept.DeptId, communicateValue, true);
                        Ts_zyys_ssgl.FrmSSApply fs = new FrmSSApply(true);
                        fs.YS = this.YS;
                        fs.YS_ID = this.YS_ID;
                        fs.BinID = this.BinID;
                        fs.DeptID = this.DeptID;
                        fs.WardID = this.WardID;
                        fs.lg = this.lg;
                        fs.sInpatient_no = this.patientInfo1.lbID.Text;
                        fs.ShowDialog();
                        loadGrid_TempOrder();//刷新数据
                        break;
                    }
                case "产后医嘱":
                    {
                        //判断性别
                        if (myQuery.SexName(this.BinID) == "男")
                        {
                            MessageBox.Show("该病人是男性,不能开产后医嘱", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            break;
                        }
                        if (this.BabyID != 0)
                        {
                            MessageBox.Show("这是婴儿！！！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            break;
                        }
                        if (this.XG1 == true)
                        {
                            MessageBox.Show("请先保存长期医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            break;
                        }
                        FrmStop fs = new FrmStop();
                        fs.Text = "停产前医嘱";
                        fs.YS = this.YS;
                        fs.YS_ID = this.YS_ID;
                        fs.BinID = this.BinID;
                        fs.DeptID = this.DeptID;
                        fs.ShowDialog();
                        if (fs.flag == false) break;

                        //写停医嘱记录
                        //
                        long Order_Num = myQuery.GetYzNum(this.BinID, this.DeptID);
                        long OrderNumCount = Order_Num + 1;

                        string sDate = DateManager.ServerDateTimeByDBType(InstanceForm._database).ToString("yyyy-MM-dd HH:mm");
                        //Modiby by zouchihua 2011-09-22 产后医嘱补录
                        //构成SQL语句,并执行,默认婴儿ID为0，医嘱录入人为医生本人，默认病人科室为医生科室,中草药剂量默认为1,操作员为医生本人
                        string sSql = "";
                        if (Blbj != 1)
                        {
                            sSql = "INSERT INTO ZY_ORDERRECORD(" +
                               "order_id,Group_ID,Inpatient_ID,Dept_ID,Ward_ID,MNGTYPE,nType,Order_Doc," + // ntype=0 护士站只执行一次 2004-12-31
                               "HOItem_ID,xmly,Order_context,Num,Dosage,Unit,book_date," +
                               "Order_bDate,First_times,Order_Usage,frequency," +
                               "Operator,Delete_Bit,status_flag,baby_id,dept_br,exec_dept,serial_no,jgbm)" +
                               " VALUES('" + PubStaticFun.NewGuid() + "'," + OrderNumCount.ToString() + ",'" + BinID.ToString() + "'," + this.DeptID.ToString() + ",'" + this.WardID + "',0,0," + this.YS_ID.ToString() + "," +
                               "-1,2,'产后医嘱',0,1,'',GetDate(),'" + sDate + "',1,'','1'," +
                               "" + this.YS_ID.ToString() + ",0,1," + "0" + "," + this.Dept_Br.ToString() + "," + this.DeptID.ToString() + ",0," + BrJgbm + ")";
                        }
                        else
                        {
                            blsj = this.DtpbeginDate.Value;
                            sSql = "INSERT INTO ZY_ORDERRECORD(" +
                             "order_id,Group_ID,Inpatient_ID,Dept_ID,Ward_ID,MNGTYPE,nType,Order_Doc," + // ntype=0 护士站只执行一次 2004-12-31
                             "HOItem_ID,xmly,Order_context,Num,Dosage,Unit,book_date," +
                             "Order_bDate,First_times,Order_Usage,frequency," +
                             "Operator,Delete_Bit,status_flag,baby_id,dept_br,exec_dept,serial_no,jgbm)" +
                             " VALUES('" + PubStaticFun.NewGuid() + "'," + OrderNumCount.ToString() + ",'" + BinID.ToString() + "'," + this.DeptID.ToString() + ",'" + this.WardID + "',0,0," + this.YS_ID.ToString() + "," +
                             "-1,2,'产后医嘱',0,1,'',GetDate(),'" + blsj + "',1,'','1'," +
                             "" + this.YS_ID.ToString() + ",0,1," + "0" + "," + this.Dept_Br.ToString() + "," + this.DeptID.ToString() + ",0," + BrJgbm + ")";
                            Blbj = 0;
                            this.DtpbeginDate.Visible = false;
                        }
                        InstanceForm._database.DoCommand(sSql);

                        loadGrid_LongOrder();//刷新数据
                        break;
                    }
                case "术后医嘱":
                    {
                        if (this.BabyID != 0)
                        {
                            //						MessageBox.Show("婴儿！！！","提示",MessageBoxButtons.OK,MessageBoxIcon.Warning);
                            break;
                        }
                        if (this.XG1 == true)
                        {
                            MessageBox.Show("请先保存长期医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            break;
                        }
                        if (myQuery.IsSSapply(this.BinID, this.BabyID) == false)
                        {
                            if (MessageBox.Show("系统发现您还没给该病人开手术申请，请补开，否则可能会漏费。\n如果是在手术室做的手术，请在开完手术申请后再开术后医嘱。\n(择期手术要审核！)\n\n如果要退出术后医嘱，请按“确定”\n继续开术后医嘱，请按“取消”",
                                                "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1) == DialogResult.OK)
                                break;
                        }

                        string ssql = "select * FROM SS_APPRECORD WHERE inpatient_id = '" + BinID.ToString() + "' AND bdelete = 0 AND (shbj = 1 or jzss=1) and sqdjrq> DATEADD(dd,-3,GetDate()) order by id desc ";
                        DataTable tab = InstanceForm._database.GetDataTable(ssql);


                        FrmStop fs = new FrmStop();
                        fs.Text = "停术前医嘱";

                        if (tab.Rows.Count > 0)
                        {
                            fs.textBox2.Text = tab.Rows[0]["ysss"].ToString();
                            ssql = "select name from ss_anesthesiacode where id=" + Convert.ToInt32(tab.Rows[0]["ysmz"]) + "";
                            DataTable tb = InstanceForm._database.GetDataTable(ssql);
                            if (tb.Rows.Count > 0)
                                fs.textBox1.Text = tb.Rows[0]["name"].ToString();
                            else
                                fs.textBox1.Text = tab.Rows[0]["ysmz"].ToString().Trim();
                        }
                        fs.YS = this.YS;
                        fs.YS_ID = this.YS_ID;
                        fs.BinID = this.BinID;
                        fs.BabyID = this.BabyID;
                        fs.DeptID = this.DeptID;
                        fs.ShowDialog();
                        this.mzxx = fs.mznr;
                        if (fs.flag == false) break;

                        //写停医嘱记录
                        //
                        long Order_Num = myQuery.GetYzNum(this.BinID, this.DeptID);
                        long OrderNumCount = Order_Num + 1;
                        long OrderNumCount1 = Order_Num + 2;
                        string mzshhlcg = this.mzxx + "术后护理常规";

                        string sDate = DateManager.ServerDateTimeByDBType(InstanceForm._database).ToString("yyyy-MM-dd HH:mm");

                        string[] sSql = new string[2];
                        //Modify by zouchihua  术后医嘱补录
                        #region
                        if (Blbj != 1)
                        {
                            //构成SQL语句,并执行,默认婴儿ID为0，医嘱录入人为医生本人，默认病人科室为医生科室,中草药剂量默认为1,操作员为医生本人
                            sSql[0] = "INSERT INTO ZY_ORDERRECORD(" +
                                "order_id,Group_ID,Inpatient_ID,Dept_ID,Ward_ID,MNGTYPE,nType,Order_Doc," + // ntype=0 护士站只执行一次 2004-12-31
                                "HOItem_ID,xmly,Order_context,Num,Dosage,Unit,book_date," +
                                "Order_bDate,First_times,Order_Usage,frequency," +
                                "Operator,Delete_Bit,status_flag,baby_id,dept_br,exec_dept,serial_no,jgbm)" +
                                " VALUES('" + PubStaticFun.NewGuid() + "'," + OrderNumCount.ToString() + ",'" + BinID.ToString() + "'," + this.DeptID.ToString() + ",'" + this.WardID + "',0,0," + this.YS_ID.ToString() + "," +
                                "-1,2,'术后医嘱',0,1,'',GetDate(),'" + sDate + "',1,'','1'," +
                                "" + this.YS_ID.ToString() + ",0,1," + "0" + "," + this.Dept_Br.ToString() + "," + this.DeptID.ToString() + ",0," + BrJgbm + ")";

                            sSql[1] = "INSERT INTO ZY_ORDERRECORD(" +
                                "order_id,Group_ID,Inpatient_ID,Dept_ID,Ward_ID,MNGTYPE,nType,Order_Doc," + // ntype=0 护士站只执行一次 2004-12-31
                                "HOItem_ID,xmly,Order_context,Num,Dosage,Unit,book_date," +
                                "Order_bDate,First_times,Order_Usage,frequency," +
                                "Operator,Delete_Bit,status_flag,baby_id,dept_br,exec_dept,serial_no,jgbm)" +
                                " VALUES('" + PubStaticFun.NewGuid() + "'," + OrderNumCount1.ToString() + ",'" + BinID.ToString() + "'," + this.DeptID.ToString() + ",'" + this.WardID + "',0,7," + this.YS_ID.ToString() + "," +
                                "-1,2,'" + mzshhlcg + "',0,1,'',GetDate()," + "GetDate(),1,'',''," +
                                "" + this.YS_ID.ToString() + ",0,0," + "0" + "," + this.Dept_Br.ToString() + "," + this.DeptID.ToString() + ",0," + BrJgbm + ")";
                            InstanceForm._database.DoCommand(null, null, null, sSql);
                        }
                        else
                        {
                            //if (blsj.ToString() == "0001-01-01 00:00:00")
                            blsj = DtpbeginDate.Value;
                            //构成SQL语句,并执行,默认婴儿ID为0，医嘱录入人为医生本人，默认病人科室为医生科室,中草药剂量默认为1,操作员为医生本人
                            sSql[0] = "INSERT INTO ZY_ORDERRECORD(" +
                                "order_id,Group_ID,Inpatient_ID,Dept_ID,Ward_ID,MNGTYPE,nType,Order_Doc," + // ntype=0 护士站只执行一次 2004-12-31
                                "HOItem_ID,xmly,Order_context,Num,Dosage,Unit,book_date," +
                                "Order_bDate,First_times,Order_Usage,frequency," +
                                "Operator,Delete_Bit,status_flag,baby_id,dept_br,exec_dept,serial_no,jgbm)" +
                                " VALUES('" + PubStaticFun.NewGuid() + "'," + OrderNumCount.ToString() + ",'" + BinID.ToString() + "'," + this.DeptID.ToString() + ",'" + this.WardID + "',0,0," + this.YS_ID.ToString() + "," +
                                "-1,2,'术后医嘱',0,1,'',GetDate(),'" + blsj + "',1,'','1'," +
                                "" + this.YS_ID.ToString() + ",0,1," + "0" + "," + this.Dept_Br.ToString() + "," + this.DeptID.ToString() + ",0," + BrJgbm + ")";

                            sSql[1] = "INSERT INTO ZY_ORDERRECORD(" +
                                "order_id,Group_ID,Inpatient_ID,Dept_ID,Ward_ID,MNGTYPE,nType,Order_Doc," + // ntype=0 护士站只执行一次 2004-12-31
                                "HOItem_ID,xmly,Order_context,Num,Dosage,Unit,book_date," +
                                "Order_bDate,First_times,Order_Usage,frequency," +
                                "Operator,Delete_Bit,status_flag,baby_id,dept_br,exec_dept,serial_no,jgbm)" +
                                " VALUES('" + PubStaticFun.NewGuid() + "'," + OrderNumCount1.ToString() + ",'" + BinID.ToString() + "'," + this.DeptID.ToString() + ",'" + this.WardID + "',0,7," + this.YS_ID.ToString() + "," +
                                "-1,2,'" + mzshhlcg + "',0,1,'',getdate()," + "'" + blsj.AddMinutes(1) + "',1,'',''," +
                                "" + this.YS_ID.ToString() + ",0,9," + "0" + "," + this.Dept_Br.ToString() + "," + this.DeptID.ToString() + ",0," + BrJgbm + ")";
                            //补录医嘱
                            InstanceForm._database.DoCommand(null, null, null, sSql);
                            Blbj = 0;//改变补录标记
                            this.DtpbeginDate.Visible = false;
                        }
                        #endregion
                        loadGrid_LongOrder();//刷新数据
                        break;
                    }
                case "转科医嘱":
                    {
                        if (this.BabyID != 0)
                        {
                            MessageBox.Show("婴儿不能开转科医嘱！请选母亲！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            break;
                        }
                        #region//Add by Zouchihua 2011-10-12 判断病人的当前科室是不是属于本院区，主要是为了阻止临时跨院业务的病人操作
                        rtnSql = ts_zyhs_classes.BaseFunc.GetBrzt(BinID);
                        if (rtnSql[0] != "0")
                        {
                            MessageBox.Show("由于跨院转科或者特殊治疗，该病人记录已经冻结不允许操作！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            Cursor = Cursors.Default;
                            return;
                        }
                        if (rtnSql[2] != "0")
                        {
                            MessageBox.Show("由于跨院特殊申请未完成，不允许操作！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            Cursor = Cursors.Default;
                            return;
                        }
                        #endregion
                        if (myQuery.IsNotExec(this.BinID, this.BabyID) == true)
                        {
                            MessageBox.Show("还有未执行的医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            break;
                        }
                        //add by zouchihua 2013-5-17 未发送的医嘱不允许转科出院
                        if (myQuery.IsNotSend(this.BinID, this.BabyID) == true)
                        {
                            MessageBox.Show("对不起！\n还有未发送的医嘱！请执行完或删除后再开转科医嘱。", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            break;
                        }
                        if (outType == true)
                        {
                            Cursor = Cursors.Arrow;
                            return;
                        }
                        if (this.XG1 == true)
                        {
                            MessageBox.Show("请先保存长期医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            break;
                        }
                        FrmTurn zk = new FrmTurn();
                        zk.YS = this.YS;
                        zk.BinID = this.BinID;
                        zk.YS_ID = this.YS_ID;
                        zk.DeptID = this.DeptID;
                        zk.WardID = this.WardID;
                        zk.ShowDialog();
                        outType = zk.outType;

                        //Modify by jchl 转科医嘱在临时医嘱体现
                        loadGrid_LongOrder();//刷新数据			
                        loadGrid_TempOrder();//刷新数据			
                        break;
                    }
                case "出院医嘱":
                    {
                        if (myQuery.IsSSapp(this.BinID, this.BabyID) == true)
                        {
                            MessageBox.Show("对不起！\n该病人还有已审核的(急诊)手术申请未执行，\n请取消手术审核，或取消急诊手术申请后，再开出院医嘱！\n(提示：“取消审核”在“手术查询”界面中执行)", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);

                            break;
                        }
                        #region//Add by Zouchihua 2011-10-12 判断病人的当前科室是不是属于本院区，主要是为了阻止临时跨院业务的病人操作
                        rtnSql = ts_zyhs_classes.BaseFunc.GetBrzt(BinID);
                        if (rtnSql[0] != "0")
                        {
                            MessageBox.Show("由于跨院转科或者特殊治疗，该病人记录已经冻结不允许操作！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            Cursor = Cursors.Default;
                            return;
                        }
                        if (rtnSql[2] != "0")
                        {
                            MessageBox.Show("由于跨院特殊申请未完成，不允许操作！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            Cursor = Cursors.Default;
                            return;
                        }
                        #endregion
                        string ssmzMsg = ""; //一起提醒手术麻醉的状态 Modify By Tany 2015-04-08
                        if (myQuery.IsSSarr(this.BinID, this.BabyID) == true)
                        {
                            ssmzMsg += "对不起！\n该病人还有已安排的手术未完成，\n请通知“手术室”确认完成后，再开出院医嘱！\r\n";
                        }
                        //Modify By Tany 2015-04-08 增加对麻醉的完成判断
                        if (myQuery.IsMZarr(this.BinID, this.BabyID) == true)
                        {
                            ssmzMsg += "对不起！\n该病人还有未完成的麻醉，\n请通知“麻醉科”确认完成后，再开出院医嘱！";
                        }
                        if (ssmzMsg != "")
                        {
                            MessageBox.Show(ssmzMsg, "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            break;
                        }
                        //Modify By Tany 2015-05-08
                        //增加一段专门验证老系统的数据
                        string zyh = patientInfo1.lbID.Text;
                        try
                        {
                            //验证老系统手术麻醉是否记账完成后才能出院 Modify By Tany 2015-03-17
                            TrasenHIS.BLL.OutHosp.isSSMZChargeFee(zyh, InstanceForm._database);

                            //验证老系统是不是有责任医生 Modify By Tany 2015-04-01
                            TrasenHIS.BLL.SyncPatientInfo.SyncDoc(BinID, InstanceForm._database);
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(ex.Message);
                            break;
                        }
                        SystemCfg cfg6042 = new SystemCfg(6042);
                        if (cfg6042.Config.Trim() == "0")
                        {
                            if (myQuery.IsNotExec(this.BinID, this.BabyID) == true)
                            {
                                MessageBox.Show("对不起！\n还有未转抄的医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                break;
                            }
                        }
                        if (myQuery.IsNotSend(this.BinID, this.BabyID) == true)
                        {
                            MessageBox.Show("对不起！\n还有未发送的医嘱！请执行完或删除后再开出院医嘱。", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            break;
                        }
                        FrmLeave cy = new FrmLeave();
                        cy.YS = this.YS;
                        cy.BinID = this.BinID;
                        cy.BabyID = this.BabyID;
                        cy.YS_ID = this.YS_ID;
                        cy.DeptID = this.DeptID;
                        cy.WardID = this.WardID;
                        cy.ShowDialog();
                        outType = cy.outType;

                        //Modify by jchl 转科医嘱在临时医嘱体现
                        loadGrid_LongOrder();//刷新数据			
                        loadGrid_TempOrder();//刷新数据			
                        break;
                    }
                case "死亡医嘱":
                    {
                        #region//Add by Zouchihua 2011-10-12 判断病人的当前科室是不是属于本院区，主要是为了阻止临时跨院业务的病人操作
                        rtnSql = ts_zyhs_classes.BaseFunc.GetBrzt(BinID);
                        if (rtnSql[0] != "0")
                        {
                            MessageBox.Show("由于跨院转科或者特殊治疗，该病人记录已经冻结不允许操作！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            Cursor = Cursors.Default;
                            return;
                        }
                        if (rtnSql[2] != "0")
                        {
                            MessageBox.Show("由于跨院特殊申请未完成，不允许操作！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            Cursor = Cursors.Default;
                            return;
                        }
                        #endregion
                        if (myQuery.IsNotExec(this.BinID, this.BabyID) == true)
                        {
                            MessageBox.Show("还有未执行的医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            break;
                        }
                        //add by zouchihua 2013-5-17 未发送的医嘱不允许死亡
                        if (myQuery.IsNotSend(this.BinID, this.BabyID) == true)
                        {
                            MessageBox.Show("对不起！\n还有未发送的医嘱！请执行完或删除后再开死亡医嘱。", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            break;
                        }
                        string ssmzMsg = ""; //一起提醒手术麻醉的状态 Modify By Tany 2015-04-08
                        if (myQuery.IsSSarr(this.BinID, this.BabyID) == true)
                        {
                            ssmzMsg += "对不起！\n该病人还有已安排的手术未完成，\n请通知“手术室”确认完成后，再开出院医嘱！\r\n";
                        }
                        //Modify By Tany 2015-04-08 增加对麻醉的完成判断
                        if (myQuery.IsMZarr(this.BinID, this.BabyID) == true)
                        {
                            ssmzMsg += "对不起！\n该病人还有未完成的麻醉，\n请通知“麻醉科”确认完成后，再开出院医嘱！";
                        }
                        if (ssmzMsg != "")
                        {
                            MessageBox.Show(ssmzMsg, "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            break;
                        }
                        //Modify By Tany 2015-05-08
                        //增加一段专门验证老系统的数据
                        string zyh = patientInfo1.lbID.Text;
                        try
                        {
                            //验证老系统手术麻醉是否记账完成后才能出院 Modify By Tany 2015-03-17
                            TrasenHIS.BLL.OutHosp.isSSMZChargeFee(zyh, InstanceForm._database);

                            //验证老系统是不是有责任医生 Modify By Tany 2015-04-01
                            TrasenHIS.BLL.SyncPatientInfo.SyncDoc(BinID, InstanceForm._database);
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(ex.Message);
                            break;
                        }
                        if (this.XG1 == true)
                        {
                            MessageBox.Show("请先保存长期医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            break;
                        }
                        if (MessageBox.Show("确定病人死亡吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No) break;
                        FrmDeath fd = new FrmDeath();
                        fd.YS = this.YS;
                        fd.BinID = this.BinID;
                        fd.YS_ID = this.YS_ID;
                        fd.DeptID = this.DeptID;
                        fd.WardID = this.WardID;
                        fd.ShowDialog();
                        outType = fd.outType;

                        //Modify by jchl 转科医嘱在临时医嘱体现
                        loadGrid_LongOrder();//刷新数据			
                        loadGrid_TempOrder();//刷新数据			
                        break;
                    }
            }
            Cursor = Cursors.Arrow;
        }

        protected override void DefWndProc(ref System.Windows.Forms.Message m)
        {
            switch (m.Msg)
            {
                case 500://播放声音
                    FrmYZGL_Onfs();
                    break;
                default:
                    base.DefWndProc(ref m);
                    break;
            }
        }
        /// <summary>
        /// 临床路径发送医嘱后，刷新
        /// </summary>
        void FrmYZGL_Onfs()
        {

            loadGrid_LongOrder();
            loadGrid_TempOrder();

        }
        #endregion

        #region 显示录入账单中的内容
        private void LoadItems()
        {
            Cursor = PubStaticFun.WaitCursor();

            string sSql = "";
            //事先取出数据放置到DATAVIEW中去					
            //只显示8，9的，并且显示执行科室 Modify By Tany 2005-05-22
            sSql = @"SELECT AA.拼音码 ,AA.医嘱内容 as 内容,'' 自付比, AA.单位,AA.单价,1 as 剂量," +
                //						  "       CAST(CAST(ORDER_ID AS INT) AS CHARACTER(10) ) AS 医嘱编号,Hoicode as 标准码,AA.BZ as 备注,Order_Type as type,iscomplex,zxdd_id AS exec_dept,seekdeptname(zxdd_id) 执行科室"+   //Modify By Tany 2005-06-13 从jc_HOItemDiction取执行科室
                    "       CAST(CAST(ORDER_ID AS INT) AS CHARACTER(10) ) AS 医嘱编号,Hoicode as 标准码,AA.BZ as 备注, " +
                    "  Order_Type as type,iscomplex,default_dept AS exec_dept,dbo.FUN_ZY_SEEKdeptname(default_dept) 执行科室,默认用法,itemid" +
                    "  FROM (SELECT  a.order_name as 医嘱内容,order_unit as 单位,retail_price as 单价,a.py_code as 拼音码," +
                    "                default_usage 默认用法,default_dept,a.bz,a.ORDER_ID,a.Order_Type,a.Hoicode,0 iscomplex,zxdd_id,c.item_id itemid " +
                    "          FROM  jc_HOItemDiction a,jc_HOI_HDI b,jc_HSItemDiction c " +
                    "         WHERE a.ORDER_ID=b.Hoitem_id and c.item_id=b.Hditem_id and a.delete_bit=0 and b.tc_flag<>1 and a.Order_Type IN (8, 9) and c.jgbm=" + FrmMdiMain.Jgbm +
                    "        union all " +
                    "	     SELECT  a.order_name as 医嘱内容,order_unit as 单位,price as 单价,a.py_code as 拼音码," +
                    "                default_usage 默认用法,default_dept,a.bz,a.ORDER_ID,a.Order_Type,a.Hoicode,0 iscomplex,execdeptid zxdd_id,c.itemid " +
                    "          FROM  jc_HOItemDiction a,jc_HOI_HDI b,vi_jc_items c " +
                    "         WHERE a.ORDER_ID=b.Hoitem_id and c.itemid=b.Hditem_id and a.delete_bit=0 and b.tc_flag=1 and b.tcid=c.tcid and a.Order_Type IN (8, 9) and c.jgbm=" + FrmMdiMain.Jgbm +
                    "        )  AS AA ";

            //Modify By Tany 2010-03-10 修改成存储过程方便修改
            sSql = "exec SP_ZYHS_ORDERS_SELCARD " + FrmMdiMain.Jgbm + "," + FrmMdiMain.CurrentDept.DeptId; //Modify By Tany 2015-05-12 为了适应权限控制，增加科室参数
            if (ClassStatic._itemDT == null || ClassStatic._itemDT.Rows.Count == 0)
            {
                ClassStatic._itemDT = InstanceForm._database.GetDataTable(sSql);
                ClassStatic._itemDT.TableName = "ORDERQUERY";
            }
            SelectDataViews.Table = ClassStatic._itemDT;
            Cursor = Cursors.Default;
        }
        #endregion

        #region TABLES 控制的代码
        protected void CreateInitialPages()
        {
            inittabControl();
        }
        private void inittabControl()
        {
            inittabControl_Cfcl(); //必须第一，否则出错
            addLongOrder();
            addTemporayOrder();
            addLongZD();
            addTemporayZD();
            this.tabControl1.ShowClose = false;
        }

        private void inittabControl_Cfcl()
        {
            this.tabControl1 = new Crownwood.Magic.Controls.TabControl();
            this.tabPage1 = new Crownwood.Magic.Controls.TabPage();
            //this.tabPageJyjg = new Crownwood.Magic.Controls.TabPage();
            this.tabbedGroups1 = new Crownwood.Magic.Controls.TabbedGroups();
            this.tabControl1.SuspendLayout();
            this.tabPage1.SuspendLayout();
            //this.tabPageJyjg.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.tabbedGroups1)).BeginInit();
            // 
            // tabControl1
            // 
            this.tabControl1.Dock = System.Windows.Forms.DockStyle.Fill;
            this.tabControl1.Appearance = Crownwood.Magic.Controls.TabControl.VisualAppearance.MultiForm;
            this.tabControl1.IDEPixelArea = true;
            this.tabControl1.ImageList = this.mainTabs;
            this.tabControl1.Location = new System.Drawing.Point(0, 0);
            this.tabControl1.Name = "tabControl1";
            this.tabControl1.SelectedIndex = 0;
            this.tabControl1.SelectedTab = this.tabPage1;
            this.tabControl1.Size = new System.Drawing.Size(702, 582);
            this.tabControl1.TabIndex = 0;
            this.tabControl1.Style = Crownwood.Magic.Common.VisualStyle.IDE;
            this.tabControl1.InsetPlain = true;//
            this.tabControl1.TabPages.AddRange(new Crownwood.Magic.Controls.TabPage[] {
																							   this.tabPage1 });//,	 this.tabPage2, this.tabPage3});
            // 
            // tabbedGroups1
            // 
            this.tabbedGroups1.AllowDrop = true;
            this.tabbedGroups1.AtLeastOneLeaf = true;
            this.tabbedGroups1.Dock = System.Windows.Forms.DockStyle.Fill;
            this.tabbedGroups1.Location = new System.Drawing.Point(0, 0);
            this.tabbedGroups1.Name = "tabbedGroups1";
            this.tabbedGroups1.ImageList = this.groupTabs;
            this.tabbedGroups1.ProminentLeaf = null;
            this.tabbedGroups1.ResizeBarColor = System.Drawing.SystemColors.Control;
            this.tabbedGroups1.Size = new System.Drawing.Size(702, 557);
            this.tabbedGroups1.TabIndex = 0;
            this.tabbedGroups1.PageCloseRequest += new Crownwood.Magic.Controls.TabbedGroups.PageCloseRequestHandler(this.tabbedGroups1_PageCloseRequest);
            this.tabbedGroups1.PageLoading += new Crownwood.Magic.Controls.TabbedGroups.PageLoadingHandler(tabbedGroups1_PageLoading);

            // 
            // tabPage1
            // 
            this.tabPage1.Controls.Add(this.tabbedGroups1);
            this.tabPage1.ImageIndex = 0;
            this.tabPage1.Location = new System.Drawing.Point(0, 0);
            this.tabPage1.Name = "tabPage1";
            this.tabPage1.Size = new System.Drawing.Size(702, 557);
            this.tabPage1.TabIndex = 3;
            this.tabPage1.Title = "医嘱处理";



            this.tabControl1.ShowClose = false;
            // this.tabControl1.SelectionChanged += new Crownwood.Magic.Controls.SelectTabHandler(tabControl1_SelectionChanged);
            this.tabControl1.SelectionChanged += new EventHandler(tabControl1_SelectionChanged);


            this.tabControl1.TabIndexChanged += new EventHandler(tabControl1_TabIndexChanged);
            this.panel3.Controls.Add(this.tabControl1);
            this.tabControl1.ResumeLayout(false);
            this.tabPage1.ResumeLayout(false);

            ((System.ComponentModel.ISupportInitialize)(this.tabbedGroups1)).EndInit();
        }







        private void tabbedGroups1_PageCloseRequest(Crownwood.Magic.Controls.TabbedGroups tg, Crownwood.Magic.Controls.TGCloseRequestEventArgs e)
        {
            // Has anyone registered for the event?
            Crownwood.Magic.Controls.TabControl tc = null;

            // Find the active tab control in the selected group 
            if (tabControl1.SelectedIndex == 0)
            {
                if (tabbedGroups1.ActiveLeaf != null)
                    tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            }
            else
            {
                if (tabControl1.SelectedIndex == 1)
                {
                    //					if (tabbedGroups2.ActiveLeaf != null)
                    //						tc = tabbedGroups2.ActiveLeaf.GroupControl as XcJw.Crownwood.Magic.Controls.TabControl;
                }
                else
                {
                    //					if (tabbedGroups3.ActiveLeaf != null)
                    //						tc = tabbedGroups3.ActiveLeaf.GroupControl as XcJw.Crownwood.Magic.Controls.TabControl;
                }
            }

            // Did we find a current tab control?
            if (tc != null)
            {
                // Does it have a selected tab?
                if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                {
                    LongOrderStat = false;
                    return;
                }
                if (tc.SelectedTab.Title.ToString() == "临时医嘱")
                {
                    return;
                }
                if (tc.SelectedTab.Title.ToString() == "长期账单")
                {
                    return;
                }
                if (tc.SelectedTab.Title.ToString() == "临时账单")
                {
                    return;
                }
            }
            else
            {
                pageType = 0;
            }
        }

        private void tabPage1_PropertyChanged(Crownwood.Magic.Controls.TabPage page, Crownwood.Magic.Controls.TabPage.Property prop, object oldValue)
        {
            if (this.tabControl1.TabPages["长期医嘱"].Selected)
            {
                pageType = 0;
                this.dataGrid_LongOrder.Focus();
            }
            if (this.tabControl1.TabPages["临时医嘱"].Selected)
            {
                pageType = 1;
                this.dataGrid_TempOrder.Focus();
            }
            if (this.tabControl1.TabPages["长期账单"].Selected)
            {
                pageType = 2;
                this.dataGrid_LongZD.Focus();
            }
            if (this.tabControl1.TabPages["临时账单"].Selected)
            {
                pageType = 3;
                this.dataGrid_TempZD.Focus();
            }
        }
        private void tabbedGroups1_PageLoading(Crownwood.Magic.Controls.TabbedGroups tg, Crownwood.Magic.Controls.TGPageLoadingEventArgs e)
        {
            if (this.tabControl1.TabPages["长期医嘱"].Selected)
            {
                pageType = 0;
                this.dataGrid_LongOrder.Focus();
                return;
            }
            if (this.tabControl1.TabPages["临时医嘱"].Selected)
            {
                pageType = 1;
                this.dataGrid_TempOrder.Focus();
                return;
            }
            if (this.tabControl1.TabPages["长期账单"].Selected)
            {
                pageType = 2;
                this.dataGrid_LongZD.Focus();
                return;
            }
            if (this.tabControl1.TabPages["临时账单"].Selected)
            {
                pageType = 3;
                this.dataGrid_TempZD.Focus();
                return;
            }
        }

        //增加长期医嘱页面
        private void addLongOrder()
        {
            pageType = 0;
            //初始化网格
            //InitGrd();
            //			InitGrd_LongOrder();
            Crownwood.Magic.Controls.TabGroupLeaf tgl = tabbedGroups1.RootSequence[0] as Crownwood.Magic.Controls.TabGroupLeaf;
            Crownwood.Magic.Controls.TabPage tp1 = new Crownwood.Magic.Controls.TabPage("长期医嘱", dataGrid_LongOrder, imgTab, 0);//Modify By Tany 2015-02-02 长期医嘱的页图片改变
            tgl.TabPages.Add(tp1);
            tp1.Selected = true;
            LongOrderStat = true;
        }

        //增加临时医嘱页面
        private void addTemporayOrder()
        {
            //pageType = 1;
            Crownwood.Magic.Controls.TabGroupLeaf tgl = tabbedGroups1.RootSequence[0] as Crownwood.Magic.Controls.TabGroupLeaf;
            Crownwood.Magic.Controls.TabPage tp1 = new Crownwood.Magic.Controls.TabPage("临时医嘱", dataGrid_TempOrder, imgTab, 1);//Modify By Tany 2015-02-02 临时医嘱的页图片改变
            tgl.TabPages.Add(tp1);
            tp1.AllowDrop = false;
            //去close按钮
            ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).ShowClose = false;
            //添加页面改变事件
            ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged -= new EventHandler(FrmYZGL_SelectionChanged);
            ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged += new EventHandler(FrmYZGL_SelectionChanged);
            //((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged += new Crownwood.Magic.Controls.SelectTabHandler(FrmYZGL_SelectionChanged);
        }




        //增加检验结果查询 add by zouchihua 2012-2-29
        /// <summary>
        /// 增加检验项目查询
        /// </summary>
        private void addJycxyp()
        {

            string cfg6037 = "0";
            cfg6037 = new SystemCfg(6037).Config.Trim();
            if (cfg6037 == "0")
                return;

            this.panel4.Visible = false;
            this.panel7.Visible = false;
            this.panelLeft.Visible = false;

            object[] value = new object[1];
            string cfg5026 = new SystemCfg(5026).Config;
            try
            {
                int cd = Convert.ToInt32(cfg5026);
                value[0] = patientInfo1.lbID.Text.Trim().Substring(0, cd);
            }
            catch { value[0] = patientInfo1.lbID.Text.Trim(); }
            Form f = GetDllForm("ts_lis_mzzyQuery", "Fun_ts_lis_mzzyQuery_zyys", "检验结果查询", value);
            if (f == null)
                return;
            f.Load += new EventHandler(f_Load);
            Crownwood.Magic.Controls.TabGroupLeaf tgl = tabbedGroups1.RootSequence[0] as Crownwood.Magic.Controls.TabGroupLeaf;
            //Crownwood.Magic.Controls.TabPage tp1 = new Crownwood.Magic.Controls.TabPage("检验结果查询", f, 2);
            Crownwood.Magic.Controls.TabPage tp1 = new Crownwood.Magic.Controls.TabPage();
            // tp1.SizeChanged += new EventHandler(tp1_SizeChanged); 
            tp1.Disposed += new EventHandler(tp1_Disposed);
            tp1.Title = "检验结果查询";
            tp1.ImageIndex = 2;

            //this.tabPageJyjg.Title = "检验结果查询";
            tgl.TabPages.Add(tp1);
            //f.Show();
            f.FormBorderStyle = FormBorderStyle.None;
            f.ShowInTaskbar = false;

            f.Dock = DockStyle.Fill;

            f.TopLevel = false;
            tp1.Controls.Add(f);
            //f.Hide();
            //去close按钮
            ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).ShowClose = false;
            //添加页面改变事件
            ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged -= new EventHandler(FrmYZGL_SelectionChanged);
            ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged += new EventHandler(FrmYZGL_SelectionChanged);
            //((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged -= new Crownwood.Magic.Controls.SelectTabHandler(FrmYZGL_SelectionChanged);
            //((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged += new Crownwood.Magic.Controls.SelectTabHandler(FrmYZGL_SelectionChanged);



        }
        void tp1_SizeChanged(object sender, EventArgs e)
        {
            try
            {

                Crownwood.DotNetMagic.Controls.TabPage page = sender as Crownwood.DotNetMagic.Controls.TabPage;
                Form f = page.Controls[0] as Form;
                //f.Hide();
                page.Controls.Remove(page.Controls[0]);

                f.TopLevel = false;
                f.Dock = DockStyle.Fill;
                page.Controls.Add(f);

            }
            catch
            {
            }
        }
        void f_Load(object sender, EventArgs e)
        {
            //this.panel4.Visible = false;
            //this.panel7.Visible = false;
            //this.panelLeft.Visible = false;
        }
        /// <summary>
        /// 添加临床路径窗体
        /// </summary>
        private void Addpathfrm()
        {
            if (myQuery.GetCpzt(BinID.ToString(), "0").Trim().IndexOf("1") < 0 && myQuery.GetCpzt(BinID.ToString(), "0").Trim().IndexOf("9") < 0)
                return;
            // Form f=;

            try
            {
                int Iscp = 0;
                if (myQuery.GetCpzt(BinID.ToString(), "0").Trim() == "9")
                    Iscp = 1;//单病种

                Cpinfo = (Form)myQuery.GetFrmCpinfo(this.Handle.ToInt32(), BinID.ToString(), BabyID.ToString(), this.Dept_Br.ToString(), this.WardID.ToString(), SelectDataView, Iscp);
                Cpinfo.Disposed += new EventHandler(Cpinfo_Disposed);
                if (Cpinfo == null)
                    return;
                Crownwood.Magic.Controls.TabGroupLeaf tgl = tabbedGroups1.RootSequence[0] as Crownwood.Magic.Controls.TabGroupLeaf;
                Crownwood.Magic.Controls.TabPage tp1 = new Crownwood.Magic.Controls.TabPage((Iscp == 0 ? "临床路径管理" : "单病种管理"), Cpinfo, 3);
                tp1.Disposed += new EventHandler(tp1_Disposed);
                tp1.Title = (Iscp == 0 ? "临床路径管理" : "单病种管理");
                tp1.ImageIndex = 2;


                //this.tabPageJyjg.Title = "检验结果查询";
                tgl.TabPages.Add(tp1);
                Cpinfo.FormBorderStyle = FormBorderStyle.None;
                Cpinfo.ShowInTaskbar = false;
                Cpinfo.Dock = DockStyle.Fill;
                Cpinfo.TopLevel = false;
                Cpinfo.Show();
                //去close按钮
                ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).ShowClose = false;
                //添加页面改变事件
                ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged -= new EventHandler(FrmYZGL_SelectionChanged);
                ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged += new EventHandler(FrmYZGL_SelectionChanged);
                //((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged -= new Crownwood.Magic.Controls.SelectTabHandler(FrmYZGL_SelectionChanged);
                //((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged += new Crownwood.Magic.Controls.SelectTabHandler(FrmYZGL_SelectionChanged);
                (Cpinfo as Ts_Clinicalpathway_Factory.FrmTsCpInfo).toolStripButton7_Click(null, null);

                //this.panel4.Visible = false;
                // this.panel7.Visible = false;

            }
            catch (Exception ex)
            {
                MessageBox.Show("初始化临床路径窗体时错误： " + ex.Message);
            }
        }

        void Cpinfo_Disposed(object sender, EventArgs e)
        {
            try
            {
                Crownwood.Magic.Controls.TabControl tc = null;
                if (tabbedGroups1.ActiveLeaf != null)
                    tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
                ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).TabPages.Remove(tc.SelectedTab);
                tc.SelectedTab = tc.TabPages["长期医嘱"];
            }
            catch { }
        }



        void tp1_Disposed(object sender, EventArgs e)
        {
            Crownwood.Magic.Controls.TabPage tp = sender as Crownwood.Magic.Controls.TabPage;
            int i = 0;
            for (i = 0; i < tp.Controls.Count; i++)
            {
                tp.Controls[i].Dispose();
            }
        }
        /// <summary>
        /// add by zouchihua 获得 dll窗体 2012-2-29
        /// </summary>
        /// <param name="dllname"></param>
        /// <param name="functionName"></param>
        /// <param name="chinesename"></param>
        /// <returns></returns>
        private Form GetDllForm(string dllname, string functionName, string chinesename, object[] _value)
        {
            Form f = null;
            try
            {
                //string sDllName = f.Name.Remove(f.Name.LastIndexOf(f.Extension), f.Extension.Length).Trim();
                System.Reflection.Assembly assembly = System.Reflection.Assembly.LoadFrom(Application.StartupPath + "\\" + dllname + ".dll");
                Type type = assembly.GetType(dllname + ".InstanceForm", true, true);
                //Type type = assembly.GetType(dllname + ".Frm_Query", true, true);
                object[] paramertes = new object[3];
                paramertes[0] = FrmMdiMain.CurrentUser.EmployeeId;
                paramertes[1] = FrmMdiMain.CurrentDept.DeptId;
                paramertes[2] = chinesename;
                //object[] _value=new object[1];
                string cfg5026 = new SystemCfg(5026).Config;
                int cd = Convert.ToInt32(cfg5026);
                //_value[0]=patientInfo1.lbID.Text.Trim().Substring(0,cd);
                Object obj = System.Activator.CreateInstance(type);
                ((IInnerCommunicate)obj).CurrentDept = FrmMdiMain.CurrentDept;
                ((IInnerCommunicate)obj).CurrentUser = FrmMdiMain.CurrentUser;
                ((IInnerCommunicate)obj).Database = FrmMdiMain.Database;
                ((IInnerCommunicate)obj).ChineseName = chinesename;
                ((IInnerCommunicate)obj).FunctionName = functionName;
                ((IInnerCommunicate)obj).CommunicateValue = _value;
                f = (Form)((IInnerCommunicate)obj).GetObject();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            return f;
        }

        //增加长期账单页面
        private void addLongZD()
        {
            //pageType = 2;
            //初始化网格
            Crownwood.Magic.Controls.TabGroupLeaf tgl = tabbedGroups1.RootSequence[0] as Crownwood.Magic.Controls.TabGroupLeaf;
            Crownwood.Magic.Controls.TabPage tp1 = new Crownwood.Magic.Controls.TabPage("长期账单", dataGrid_LongZD, 2);
            tgl.TabPages.Add(tp1);
            ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).ShowClose = false;
            //添加页面改变事件
            ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged -= new EventHandler(FrmYZGL_SelectionChanged);
            ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged += new EventHandler(FrmYZGL_SelectionChanged);
            //((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged+=new Crownwood.Magic.Controls.SelectTabHandler(FrmYZGL_SelectionChanged);
        }

        //增加临时账单页面
        private void addTemporayZD()
        {
            //pageType = 3;
            Crownwood.Magic.Controls.TabGroupLeaf tgl = tabbedGroups1.RootSequence[0] as Crownwood.Magic.Controls.TabGroupLeaf;
            Crownwood.Magic.Controls.TabPage tp1 = new Crownwood.Magic.Controls.TabPage("临时账单", dataGrid_TempZD, 3);
            tgl.TabPages.Add(tp1);
            //去close按钮
            ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).ShowClose = false;
            //添加页面改变事件

            ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged -= new EventHandler(FrmYZGL_SelectionChanged);
            ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged += new EventHandler(FrmYZGL_SelectionChanged);
            //((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]).SelectionChanged+=new Crownwood.Magic.Controls.SelectTabHandler(FrmYZGL_SelectionChanged);
        }

        #region 控制用户在选择医嘱和账单界面时显示和隐藏的相关控件
        private void FrmYZGL_SelectionChanged(object sender, EventArgs e)//FrmYZGL_SelectionChanged(Crownwood.Magic.Controls.TabControl sender, Crownwood.Magic.Controls.TabPage oldPage, Crownwood.Magic.Controls.TabPage newPage)//
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            if (tabbedGroups1.ActiveLeaf != null)
                tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //add yaokx 2014-02-27 当拖动长期医嘱和临时医嘱互相切换时候，这里加判断不然会报错为null
            if (tc != null && tc.SelectedTab != null)
            {

                //tc.ButtonActiveColor = Color.Red;
                //tc.TextInactiveColor = Color.Blue;
                //如果选择临床路径，不显示 add by zouchihua 2012-9-6
                if (tc.SelectedTab.Title == "临床路径管理" || tc.SelectedTab.Title == "单病种管理" || tc.SelectedTab.Title == "检验结果查询")
                {
                    this.panel4.Visible = false;
                    this.panel7.Visible = false;
                    panelLeft.Visible = false;
                    this.btAVA.Visible = false;
                    this.btRefur.Visible = false;
                    if (tc.SelectedTab.Title == "临床路径管理")
                    {
                        // try
                        // {
                        // //add by zouchihua 刷新临床路径窗体
                        //(Cpinfo as Ts_Clinicalpathway_Factory.FrmTsCpInfo).toolStripButton7_Click(null, null);
                        // }
                        //catch (Exception ex)
                        //{
                        ////MessageBox.Show(ex.Message);
                        //}
                    }
                    if (tc.SelectedTab.Title == "检验结果查询")
                    {
                        try
                        {
                            ////先删除，再加载这个窗体 Modify by zouchihua 2012-10-11
                            Crownwood.Magic.Controls.TabPage page = tc.SelectedTab;
                            Form f = page.Controls[0] as Form;
                            f.Show();
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(ex.Message);
                        }
                    }


                }
                else
                {
                    this.panel4.Visible = true;
                    this.panel7.Visible = true;
                    this.panelLeft.Visible = true;
                    this.btAVA.Visible = true;
                    this.btRefur.Visible = true;
                }
                //Modify By Tany 2010-03-21
                switch (tc.SelectedTab.Title.ToString().Trim())
                {
                    case "长期医嘱":
                        pageType = 0;
                        break;
                    case "临时医嘱":
                        pageType = 1;
                        break;
                    case "长期账单":
                        pageType = 2;
                        break;
                    case "临时账单":
                        pageType = 3;
                        break;
                }
                if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                {
                    //隐藏补录时间
                    this.label1.Visible = false;
                    this.DtpbeginDate.Visible = false;
                    //add by jchl
                    Blbj = 0;
                }
                if (tc.SelectedTab.Title.ToString() == sTab0 || tc.SelectedTab.Title.ToString() == sTab1)
                {
                    this.dataGrid1.Visible = true;
                    this.btnSupply.Enabled = false;
                    this.btAVA.Enabled = false;
                    this.btRefur.Enabled = false;
                    this.btnOrderRecall.Enabled = false;
                    if (mz || hs)
                    {
                        this.btnExplain.Enabled = true;
                        this.button3.Enabled = true;
                        this.btSend.Enabled = false;
                    }
                    this.btnExplain.Text = "清空";
                    this.button3.Text = "整理";
                    this.tabPage1.Title = "账单处理";
                    this.btnSelf.Enabled = false;
                    this.btStopOrder.Enabled = false;
                    this.btJZYF.Enabled = false;
                    this.tabPage6.Enabled = false;
                    this.chk_ypInfo.Visible = false;
                    this.chk_dept.Visible = false;
                    this.chk_zb.Visible = false;
                    this.label7.Visible = false;
                    this.label4.Visible = false;
                    this.lb_dept.Visible = false;
                    this.label6.Visible = false;
                    this.chkAddi.Enabled = false;
                    this.bt_NewSelect.Visible = false;
                    this.txtContent.Enabled = false;
                    this.priceInfo1.Visible = false;
                    this.btFootnote.Enabled = false;

                    this.tabControl3.TabPages.Remove(this.tabPage2);
                    if (this.tabControl3.TabPages.Contains(this.tabPage5) == false)
                    {
                        this.tabControl3.TabPages.Add(this.tabPage5);
                        GetBinNo();   //得到病人列表
                    }
                    Cursor = Cursors.Default;
                    // return;
                }
                this.label16.Visible = false;
                this.labTempOrderHj.Visible = false;
                if (tc.SelectedTab.Title.ToString().Trim() == "长期医嘱" || tc.SelectedTab.Title.ToString().Trim() == "临时医嘱")
                {
                    this.dataGrid1.Visible = false;
                    this.btnSupply.Enabled = true;
                    this.btnOrderRecall.Enabled = true;
                    if (mz)
                    {
                        this.btnExplain.Enabled = false;
                        this.button3.Enabled = false;
                        this.btSend.Enabled = true;
                    }
                    //add by zouchiha 特殊治疗临时医嘱显示费用  2012-11-14
                    if (tc.SelectedTab.Title.ToString().Trim() == "临时医嘱")
                    {
                        if (_tszl || mz)
                        {
                            if (cfg6063.Config.Trim() == "1")
                            {
                                this.label16.Visible = true;
                                this.labTempOrderHj.Visible = true;
                            }
                        }
                    }
                    //Modify By Tany 2007-09-17 屏蔽
                    //if(_hs == true)    //护士医嘱时，从账单转到医嘱的时候分别加载一次长期医嘱或者临时医嘱
                    //{
                    //    if(tc.SelectedTab.Title.ToString().Trim() == "长期医嘱")
                    //        loadGrid_LongOrder();
                    //    else
                    //        loadGrid_TempOrder();
                    //}
                    this.btnExplain.Text = "说明F7";
                    this.button3.Text = "加急(&M)";
                    this.tabPage1.Title = "医嘱处理";
                    this.btnSelf.Enabled = true;
                    this.btStopOrder.Enabled = true;
                    this.btJZYF.Enabled = true;
                    this.tabPage6.Enabled = true;
                    this.chk_ypInfo.Visible = true;
                    this.chk_dept.Visible = true;
                    this.chk_zb.Visible = true;
                    this.label7.Visible = true;
                    this.chkAddi.Enabled = true;
                    this.label4.Visible = true;
                    this.lb_dept.Visible = true;
                    this.label6.Visible = true;
                    this.btAVA.Enabled = true;
                    this.btRefur.Enabled = true;
                    this.bt_NewSelect.Visible = true;
                    this.txtContent.Enabled = true;
                    this.priceInfo1.Visible = true;
                    this.btFootnote.Enabled = true;

                    if (this.tabControl3.TabPages.Contains(this.tabPage2) == false)
                    {
                        this.tabControl3.TabPages.Add(this.tabPage2);
                        this.tabControl3.TabPages.Remove(this.tabPage5);
                    }
                    Cursor = Cursors.Default;
                    //return;
                }
                //add by zouchihua 2012-29
                if (tc.SelectedTab.Title.ToString() == "检验结果查询")
                {
                    this.btnSelf.Enabled = false;
                    this.btStopOrder.Enabled = false;
                    this.btJZYF.Enabled = false;
                    this.tabPage6.Enabled = false;
                    this.chk_ypInfo.Visible = false;
                    this.chk_dept.Visible = false;
                    this.chk_zb.Visible = false;
                    this.label7.Visible = false;
                    this.chkAddi.Enabled = false;
                    this.label4.Visible = false;
                    this.lb_dept.Visible = false;
                    this.label6.Visible = false;
                    this.btAVA.Enabled = false;
                    this.btRefur.Enabled = false;
                    this.bt_NewSelect.Visible = false;
                    this.txtContent.Enabled = false;
                    this.priceInfo1.Visible = false;
                    this.btFootnote.Enabled = false;

                    this.btSave.Enabled = false;
                    this.btnInsert.Enabled = false;
                    this.btnNewGroup.Enabled = false;
                    this.btnOrderRecall.Enabled = false;
                    this.btnExplain.Enabled = false;
                    this.button3.Enabled = false;
                    this.btnExplain.Enabled = false;
                    this.btDel.Enabled = false;
                    this.btSend.Enabled = false;
                    this.btnSupply.Enabled = false;
                    this.tabControl2.Enabled = false;
                    this.btInsert.Enabled = false;
                    Cursor = Cursors.Default;
                    // return;
                }
                else
                {
                    this.btSave.Enabled = true;
                    this.btnInsert.Enabled = true;
                    this.btnNewGroup.Enabled = true;
                    this.btnOrderRecall.Enabled = true;
                    this.btnExplain.Enabled = true;
                    this.button3.Enabled = true;
                    this.btnExplain.Enabled = true;
                    this.btDel.Enabled = true;
                    this.btSend.Enabled = true;
                    this.btnSupply.Enabled = true;
                    this.tabControl2.Enabled = true;
                    this.btInsert.Enabled = true;
                }
            }
        }
        #endregion

        private void tabControl1_SelectionChanged(object sender, EventArgs e)//tabControl1_SelectionChanged(Crownwood.Magic.Controls.TabControl sender, Crownwood.Magic.Controls.TabPage oldPage, Crownwood.Magic.Controls.TabPage newPage)//
        {

            if (this.tabControl1.TabPages["长期医嘱"].Selected)
            {
                pageType = 0;
                this.dataGrid_LongOrder.Focus();
                this.listView1.Items.Clear();
                return;
            }
            if (this.tabControl1.TabPages["临时医嘱"].Selected)
            {
                pageType = 1;
                this.dataGrid_TempOrder.Focus();
                return;
            }
            if (this.tabControl1.TabPages["长期账单"].Selected)
            {
                pageType = 2;
                this.dataGrid_LongZD.Focus();
                return;
            }
            if (this.tabControl1.TabPages["临时账单"].Selected)
            {
                pageType = 3;
                this.dataGrid_TempZD.Focus();
                return;
            }
        }

        private void tabControl1_TabIndexChanged(object sender, EventArgs e)
        {
            if (this.tabControl1.TabPages["长期医嘱"].Selected)
            {
                pageType = 0;
                this.dataGrid_LongOrder.Focus();
                this.listView1.Items.Clear();
                return;
            }
            if (this.tabControl1.TabPages["临时医嘱"].Selected)
            {
                pageType = 1;
                this.dataGrid_TempOrder.Focus();
                return;
            }
            if (this.tabControl1.TabPages["长期账单"].Selected)
            {
                pageType = 2;
                this.dataGrid_TempZD.Focus();
                return;
            }
            if (this.tabControl1.TabPages["临时账单"].Selected)
            {
                pageType = 3;
                this.dataGrid_TempZD.Focus();
                return;
            }

            tabControl2_SelectedIndexChanged(null, null);
        }

        #region 判断是哪一个医嘱界面（长嘱、临嘱、长期账单还是临时账单）
        private void checkPage()
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            if (tabControl1.SelectedIndex == 0)
            {
                if (tabbedGroups1.ActiveLeaf != null)
                    tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            }
            else
            {
                if (tabControl1.SelectedIndex == 1)
                {
                }
                else
                {
                }
            }
            // Did we find a current tab control?
            if (tc != null)
            {
                // Does it have a selected tab?
                if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                {
                    pageType = 0;
                    LongOrderStat = true;
                    return;
                }
                if (tc.SelectedTab.Title.ToString() == "临时医嘱")
                {
                    pageType = 1;
                    LongOrderStat = false;
                    return;
                }
                if (tc.SelectedTab.Title.ToString() == sTab0)
                {
                    pageType = 2;
                    LongOrderStat = false;
                    return;
                }
                if (tc.SelectedTab.Title.ToString() == sTab1)
                {
                    pageType = 3;
                    LongOrderStat = false;
                    return;
                }
            }
            else
            {
                pageType = 0;
                LongOrderStat = true;
            }

        }
        #endregion

        #region 选择页面（0=长嘱，1=临嘱）
        private void SelTabPage(int tabPageNo)
        {
            Crownwood.Magic.Controls.TabGroupLeaf tgl = tabbedGroups1.RootSequence[0] as Crownwood.Magic.Controls.TabGroupLeaf;
            tgl.TabPages[tabPageNo].Selected = true;
        }
        #endregion
        #endregion

        #region GRID录入控制

        #region 网格颜色控制

        #region 长期医嘱颜色控制
        public void SetEnableValues(object sender, DataGridEnableEventArgs e)
        {
            e.BackColor = Color.White;
            DataTable myTb = new DataTable();
            myTb = (DataTable)this.dataGrid_LongOrder.DataSource;
            if (myTb == null) return;
            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)dataGrid_TempOrder.TableStyles[0].GridColumnStyles[e.Col];

            try
            {
                //通过医嘱的status_flag来设置
                if (myTb.Rows[e.Row]["ID"].ToString().Trim() == "" || new Guid(myTb.Rows[e.Row]["ID"].ToString()) == Guid.Empty)
                {
                    e.BackColor = Color.FromArgb(240, 240, 240);
                }
                if (myTb.Rows[e.Row]["status_flag"].ToString() == "0" || myTb.Rows[e.Row]["status_flag"].ToString() == "9")
                {
                    //				e.BackColor=Color.FromArgb(240,240,240);
                    e.BackColor = Color.Pink;
                }
                else if (myTb.Rows[e.Row]["status_flag"].ToString() == "1")
                {
                    e.ForeColor = Color.SeaGreen;
                }
                else if (myTb.Rows[e.Row]["status_flag"].ToString() == "2")
                {
                    e.ForeColor = Color.Blue;
                }
                else if (myTb.Rows[e.Row]["status_flag"].ToString() == "3")
                {
                    e.ForeColor = Color.Gray;
                }
                if (myTb.Rows[e.Row]["医嘱内容"].ToString().Trim() == "术后医嘱" || myTb.Rows[e.Row]["医嘱内容"].ToString().Trim() == "产后医嘱")
                {
                    e.ForeColor = Color.Red;
                }
                //if (txtCol.HeaderText == "审")
                //{
                //    if(myTb.Rows[e.Row]["审"].ToString()=="0")
                //    {
                //        myTb.Rows[e.Row]["审"] = "aaa";
                //    }
                //    else if (myTb.Rows[e.Row]["审"].ToString() == "200")
                //    {
                //        myTb.Rows[e.Row]["审"] = "bbb"; 
                //    }
                //    else
                //    {
                //        myTb.Rows[e.Row]["审"] = "ccc"; 
                //    }
                //}
                if (txtCol.HeaderText == "录入时间" && myTb.Rows[e.Row]["ntype"].ToString() != "7")
                {
                    //增加自付比例颜色显示 Modify By Tany 2015-04-07
                    decimal _zfbl = Convert.ToDecimal(Convertor.IsNull(myTb.Rows[e.Row]["zfbl"], "-1"));
                    if (_zfbl == 0)
                    {
                        e.BackColor = Color.LightGreen;
                    }
                    else if (_zfbl >= 1)
                    {
                        e.BackColor = Color.Red;
                    }
                    else if (_zfbl > 0 && _zfbl < 1)
                    {
                        e.BackColor = Color.LightBlue;
                    }
                    //e.BackColor = Color.FromArgb(255, 240, 240);
                }
            }
            catch
            {
            }
        }
        #endregion

        #region 临时医嘱颜色控制
        public void SetEnableValues1(object sender, DataGridEnableEventArgs e)
        {
            e.BackColor = Color.White;
            DataTable myTb = new DataTable();
            myTb = (DataTable)this.dataGrid_TempOrder.DataSource;
            if (myTb == null) return;
            if (e.Row == myTb.Rows.Count) return;
            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)dataGrid_TempOrder.TableStyles[0].GridColumnStyles[e.Col];

            try
            {
                //通过医嘱的status_flag来设置
                if (myTb.Rows[e.Row]["ID"].ToString().Trim() == "" || new Guid(myTb.Rows[e.Row]["ID"].ToString()) == Guid.Empty)
                {
                    //e.BackColor=Color.PaleTurquoise;
                    e.BackColor = Color.FromArgb(240, 240, 240);
                }
                if (myTb.Rows[e.Row]["status_flag"].ToString() == "0" || myTb.Rows[e.Row]["status_flag"].ToString() == "9")
                {
                    e.BackColor = Color.FromArgb(240, 240, 240);
                    e.BackColor = Color.Honeydew;
                    e.BackColor = Color.Pink;
                }
                else if (myTb.Rows[e.Row]["status_flag"].ToString() == "1")
                {
                    e.ForeColor = Color.SeaGreen;
                }
                else if (myTb.Rows[e.Row]["status_flag"].ToString() == "2")
                {
                    e.ForeColor = Color.Blue;
                }
                else if (myTb.Rows[e.Row]["status_flag"].ToString() == "3")
                {
                    e.ForeColor = Color.Gray;
                }

                if (Convert.ToInt32(myTb.Rows[e.Row]["status_flag"].ToString().Trim() == "" ? "0" : myTb.Rows[e.Row]["status_flag"].ToString()) >= 1 && (txtCol.HeaderText == "天数" || txtCol.HeaderText == "总量" || txtCol.HeaderText == "总单位"))
                {
                    e.BackColor = Color.LightYellow;
                }
                //Modify By Tany 2015-02-02 临时医嘱录入时间的颜色区别
                if (txtCol.HeaderText == "录入时间" && myTb.Rows[e.Row]["ntype"].ToString() != "7")
                {
                    //增加自付比例颜色显示 Modify By Tany 2015-04-07
                    decimal _zfbl = Convert.ToDecimal(Convertor.IsNull(myTb.Rows[e.Row]["zfbl"], "-1"));
                    if (_zfbl == 0)
                    {
                        e.BackColor = Color.LightGreen;
                    }
                    else if (_zfbl >= 1)
                    {
                        e.BackColor = Color.Red;
                    }
                    else if (_zfbl > 0 && _zfbl < 1)
                    {
                        e.BackColor = Color.LightBlue;
                    }
                    //e.BackColor = Color.FromArgb(255, 240, 240);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }

        }
        #endregion

        #region 长期账单颜色控制
        public void SetEnableValues2(object sender, DataGridEnableEventArgs e)
        {
            e.BackColor = Color.White;
            DataTable myTb = new DataTable();
            myTb = (DataTable)this.dataGrid_TempZD.DataSource;
            if (myTb == null) return;
            //通过医嘱的status_flag来设置
            if (new Guid(myTb.Rows[e.Row]["ID"].ToString()) == Guid.Empty)
            {
                //e.BackColor=Color.PaleTurquoise;
                e.BackColor = Color.FromArgb(240, 240, 240);
            }
            if (myTb.Rows[e.Row]["status_flag"].ToString() == "0")
            {
                e.BackColor = Color.FromArgb(240, 240, 240);
                e.BackColor = Color.Honeydew;
            }
            else if (myTb.Rows[e.Row]["status_flag"].ToString() == "1")
            {
                e.ForeColor = Color.SeaGreen;
            }
            else if (myTb.Rows[e.Row]["status_flag"].ToString() == "2")
            {
                e.ForeColor = Color.Blue;
            }
            else if (myTb.Rows[e.Row]["status_flag"].ToString() == "3")
            {
                e.ForeColor = Color.Gray;
            }

        }
        #endregion

        #region 临时账单颜色控制
        public void SetEnableValues3(object sender, DataGridEnableEventArgs e)
        {
            e.BackColor = Color.White;
            DataTable myTb = new DataTable();
            myTb = (DataTable)this.dataGrid_LongZD.DataSource;
            if (myTb == null) return;
            //通过医嘱的status_flag来设置
            if (new Guid(myTb.Rows[e.Row]["ID"].ToString()) == Guid.Empty)
            {
                //e.BackColor=Color.PaleTurquoise;
                e.BackColor = Color.FromArgb(240, 240, 240);
            }
            if (myTb.Rows[e.Row]["status_flag"].ToString() == "0")
            {
                e.BackColor = Color.FromArgb(240, 240, 240);
                e.BackColor = Color.Honeydew;
            }
            else if (myTb.Rows[e.Row]["status_flag"].ToString() == "1")
            {
                e.ForeColor = Color.SeaGreen;
            }
            else if (myTb.Rows[e.Row]["status_flag"].ToString() == "2")
            {
                e.ForeColor = Color.Blue;
            }
            else if (myTb.Rows[e.Row]["status_flag"].ToString() == "3")
            {
                e.ForeColor = Color.Gray;
            }
        }
        #endregion

        #endregion

        #endregion

        #region 将医嘱按嘱号分开，医嘱格式化输出
        /// <summary>
        /// 将医嘱按嘱号分开，医嘱格式化输出
        /// </summary>
        /// <param name="myTb"></param>
        /// <returns></returns>
        private DataTable CheckGrdData(DataTable myTb)
        {
            int i, j = 1;
            int grouprows = 1;
            this.sPaint = "";
            int l = 0, group_rows = 1;//,max_len=0;    //同组中的医嘱个数,最长的长度		
            this.sPaint = "";
            this.sPaintPS = "";
            this.sPaintWZX = "";

            #region 算出长度
            max_len0 = 0;
            max_len1 = 0;
            max_len2 = 0;
            #endregion

            if (myTb.Rows.Count < 1) return myTb.Copy();

            #region 医嘱的公用属性至上
            for (i = 0; i <= myTb.Rows.Count - 1; i++)
            {
                #region 算出长度
                if (myTb.Rows[i]["类型"].ToString() == "1-西药" || myTb.Rows[i]["类型"].ToString() == "2-中成药" || myTb.Rows[i]["类型"].ToString() == "3-中草药")
                {
                    l = System.Text.Encoding.Default.GetByteCount(myTb.Rows[i]["医嘱内容"].ToString().Trim() + " ");
                    max_len0 = max_len0 > l ? max_len0 : l;
                }
                #endregion

                if (i == 0)
                {
                    if (!(myTb.Rows[i]["类型"].ToString() == "3-中草药" && Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) > 1))
                    {
                        j = GetMaxZYnum(myTb, myTb.Rows[i]["嘱号"].ToString());
                    }
                    else j = 1;

                    if (j != 1)
                    {
                        myTb.Rows[i]["执行护士"] = System.DBNull.Value;
                        myTb.Rows[i]["执行时间"] = System.DBNull.Value;
                        myTb.Rows[i]["下嘱医生"] = System.DBNull.Value;
                        myTb.Rows[i]["停嘱时间"] = System.DBNull.Value;
                    }

                }
                if (i >= 1)
                {
                    if (!(myTb.Rows[i]["类型"].ToString() == "3-中草药" && Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) > 1))
                    {
                        j = GetMaxZYnum(myTb, myTb.Rows[i]["嘱号"].ToString());
                    }
                    else j = 1;
                    #region 显示医嘱内容
                    if (myTb.Rows[i]["嘱号"].ToString().Trim() != myTb.Rows[i - 1]["嘱号"].ToString().Trim())
                    {
                        if (j != 1)
                        {
                            myTb.Rows[i]["执行护士"] = System.DBNull.Value;
                            myTb.Rows[i]["执行时间"] = System.DBNull.Value;
                            myTb.Rows[i]["停嘱时间"] = System.DBNull.Value;
                            myTb.Rows[i]["下嘱医生"] = System.DBNull.Value;
                            //add by zouchihua 
                            try
                            {
                                myTb.Rows[i]["REALEXECDATE"] = System.DBNull.Value;
                            }
                            catch { }
                        }
                        //如果是最后一行或本行和上一行的医嘱号不一致


                        //如果一组中的医嘱个数大于1
                        if (group_rows != 1)
                        {
                            //[3i2]0 代表第三行是一组医嘱的最后一条，该组医嘱有两条医嘱，status_flag=0
                            this.sPaint += "[" + i.ToString() + "i" + group_rows.ToString().Trim() + "]" + myTb.Rows[i - 1]["status_flag"].ToString().Trim();
                        }
                        group_rows = 1;
                        grouprows = 1;
                    }
                    else
                    {
                        try
                        {
                            grouprows += 1;
                            //如果不是第一行，且本行和下一行的医嘱号一致
                            myTb.Rows[i]["用法"] = System.DBNull.Value;
                            myTb.Rows[i]["频率"] = System.DBNull.Value;
                            myTb.Rows[i]["开始时间"] = System.DBNull.Value;
                            myTb.Rows[i]["首日执行次数"] = System.DBNull.Value;
                            myTb.Rows[i]["剂数"] = System.DBNull.Value;
                            myTb.Rows[i]["滴量"] = System.DBNull.Value;
                            if (j != grouprows)
                            {
                                myTb.Rows[i]["执行护士"] = System.DBNull.Value;
                                myTb.Rows[i]["执行时间"] = System.DBNull.Value;
                                myTb.Rows[i]["停嘱时间"] = System.DBNull.Value;
                                myTb.Rows[i]["下嘱医生"] = System.DBNull.Value;
                                //add by zouchihua 
                                try
                                {
                                    myTb.Rows[i]["REALEXECDATE"] = System.DBNull.Value;
                                }
                                catch { }
                            }
                            if (myTb.Rows[i]["类型"].ToString() == "1-西药" || myTb.Rows[i]["类型"].ToString() == "2-中成药" || myTb.Rows[i]["类型"].ToString() == "3-中草药") group_rows += 1;
                            if (i == myTb.Rows.Count - 1 && j > 1 && group_rows != 1)
                            {
                                this.sPaint += "[" + Convert.ToString(i + 1) + "i" + group_rows.ToString().Trim() + "]" + myTb.Rows[i]["status_flag"].ToString().Trim();
                            }
                        }
                        catch (System.Exception err)
                        {
                            MessageBox.Show(err.ToString(), "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        }
                    }
                    #endregion

                    #region 显示未执行
                    if (Convert.ToInt64(myTb.Rows[i]["wzx_flag"].ToString()) > 0)
                    {
                        this.sPaintWZX += "i" + i.ToString() + "X";
                    }
                    #endregion
                }
                #region 显示皮试
                if (myTb.Rows[i]["ps_flag"].ToString() == "2")
                {
                    this.sPaintPS += "[" + i.ToString() + "+" + System.Text.Encoding.Default.GetByteCount(myTb.Rows[i]["医嘱内容"].ToString().Trim() + "  ") + "]";
                }
                if (myTb.Rows[i]["ps_flag"].ToString() == "1")
                {
                    this.sPaintPS += "[" + i.ToString() + "-" + System.Text.Encoding.Default.GetByteCount(myTb.Rows[i]["医嘱内容"].ToString().Trim() + "  ") + "]" + myTb.Rows[i]["status_flag"].ToString().Trim();
                }
                #region 显示强阳性皮试 yaokx 2014-05-06
                if (myTb.Rows[i]["ps_flag"].ToString() == "21")
                {
                    this.sPaintPS += "[" + i.ToString() + "++" + System.Text.Encoding.Default.GetByteCount(myTb.Rows[i]["医嘱内容"].ToString().Trim() + "  ") + "]";
                }
                if (myTb.Rows[i]["ps_flag"].ToString() == "22")
                {
                    this.sPaintPS += "[" + i.ToString() + "+++" + System.Text.Encoding.Default.GetByteCount(myTb.Rows[i]["医嘱内容"].ToString().Trim() + "  ") + "]" + myTb.Rows[i]["status_flag"].ToString().Trim();
                }
                #endregion
                #endregion

            }
            #endregion

            return myTb.Copy();
        }

        private DataTable CheckGrdDataLong(DataTable myTb)
        {
            int i, j = 1;
            int grouprows = 1;
            string RowString = "";
            this.sPaintLong = "";
            int l = 0, group_rows = 1;//,max_len=0;    //同组中的医嘱个数,最长的长度		
            this.sPaintLong = "";
            this.sPaintPSLong = "";
            this.sPaintWZXLong = "";

            #region 算出长度
            max_len10 = 0;
            max_len11 = 0;
            max_len12 = 0;
            //////////			for(i=0;i<=myTb.Rows.Count-1;i++)
            //////////			{				
            //////////				if(myTb.Rows[i]["类型"].ToString()=="1-西药" || myTb.Rows[i]["类型"].ToString()=="2-中成药" || myTb.Rows[i]["类型"].ToString()=="3-中草药")
            //////////				{
            //////////					l=System.Text.Encoding.Default.GetByteCount(myTb.Rows[i]["医嘱内容"].ToString().Trim());
            //////////					max_len10=max_len10>l?max_len10:l;
            //////////				}
            //////////			}
            #endregion

            if (myTb.Rows.Count < 2) return myTb.Copy();

            #region 按嘱号将医嘱分开
            //			for(i=1;i<=myTb.Rows.Count-1;i++)
            //			{
            //				//如果嘱号不同 就插入一行
            //				if(myTb.Rows[i]["嘱号"].ToString().Trim() != myTb.Rows[i-1]["嘱号"].ToString().Trim() )
            //				{
            //					myTb=InsertRow(myTb,i);
            //					i++;
            //				}
            //			}
            #endregion

            //算出长度
            if (myTb.Rows[0]["类型"].ToString() == "1-西药" || myTb.Rows[0]["类型"].ToString() == "2-中成药" || myTb.Rows[0]["类型"].ToString() == "3-中草药")
            {
                l = System.Text.Encoding.Default.GetByteCount(myTb.Rows[0]["医嘱内容"].ToString().Trim() + " ");
                max_len10 = max_len10 > l ? max_len10 : l;
            }

            #region 医嘱的公用属性至上

            if (!(myTb.Rows[0]["类型"].ToString() == "3-中草药" && Convert.ToInt32(myTb.Rows[0]["status_flag"].ToString()) > 1))
            {
                //				j=myQuery.GetMaxZYnum(this.BinID,this.BabyID,this.DeptID,Convert.ToInt32(myTb.Rows[0]["嘱号"].ToString()));//同组中的医嘱记录个数
                j = GetMaxZYnum(myTb, myTb.Rows[0]["嘱号"].ToString());
            }
            else j = 1;

            RowString = myTb.Rows[0]["医嘱内容"].ToString().Trim();

            if (j != 1)
            {
                myTb.Rows[0]["执行护士"] = System.DBNull.Value;
                myTb.Rows[0]["执行时间"] = System.DBNull.Value;
                myTb.Rows[0]["停嘱时间"] = System.DBNull.Value;
                myTb.Rows[0]["下嘱医生"] = System.DBNull.Value;
                myTb.Rows[0]["停嘱医生"] = System.DBNull.Value;
            }
            else if ((RowString == "术后医嘱" || RowString == "产后医嘱" || RowString == "转科医嘱") && Convert.ToInt32(myTb.Rows[0]["status_flag"].ToString().Trim()) >= 1)
            {
                myTb.Rows[0]["开始时间"] = System.DBNull.Value;
                myTb.Rows[0]["剂量"] = System.DBNull.Value;
                myTb.Rows[0]["用法"] = System.DBNull.Value;
                myTb.Rows[0]["频率"] = System.DBNull.Value;
                myTb.Rows[0]["开始时间"] = System.DBNull.Value;
                myTb.Rows[0]["首日执行次数"] = System.DBNull.Value;
                myTb.Rows[0]["末日次数"] = System.DBNull.Value;
                myTb.Rows[0]["剂数"] = System.DBNull.Value;
                myTb.Rows[0]["滴量"] = System.DBNull.Value;
                myTb.Rows[0]["执行护士"] = System.DBNull.Value;
                myTb.Rows[0]["执行时间"] = System.DBNull.Value;
                myTb.Rows[0]["停嘱时间"] = System.DBNull.Value;
                myTb.Rows[0]["下嘱医生"] = System.DBNull.Value;
                myTb.Rows[0]["停嘱医生"] = System.DBNull.Value;
            }
            else if (myTb.Rows[0]["status_flag"].ToString().Trim() == "2") myTb.Rows[0]["停嘱时间"] = System.DBNull.Value;//取消欲停恢复有效长嘱后

            for (i = 1; i <= myTb.Rows.Count - 1; i++)
            {
                //算出长度
                if (myTb.Rows[i]["类型"].ToString() == "1-西药" || myTb.Rows[i]["类型"].ToString() == "2-中成药" || myTb.Rows[i]["类型"].ToString() == "3-中草药")
                {
                    l = System.Text.Encoding.Default.GetByteCount(myTb.Rows[i]["医嘱内容"].ToString().Trim());
                    max_len10 = max_len10 > l ? max_len10 : l;
                }

                //				j=myQuery.GetMaxZYnum(this.BinID,this.BabyID,this.DeptID,Convert.ToInt32(myTb.Rows[i]["嘱号"].ToString()));//同组中的医嘱记录个数
                j = GetMaxZYnum(myTb, myTb.Rows[i]["嘱号"].ToString());

                RowString = myTb.Rows[i]["医嘱内容"].ToString().Trim();

                #region 显示医嘱内容
                if (myTb.Rows[i]["嘱号"].ToString().Trim() != myTb.Rows[i - 1]["嘱号"].ToString().Trim())
                {
                    if (j != 1)
                    {
                        myTb.Rows[i]["执行护士"] = System.DBNull.Value;
                        myTb.Rows[i]["执行时间"] = System.DBNull.Value;
                        myTb.Rows[i]["下嘱医生"] = System.DBNull.Value;
                        myTb.Rows[i]["停嘱医生"] = System.DBNull.Value;
                    }
                    else if ((RowString == "术后医嘱" || RowString == "产后医嘱" || RowString == "转科医嘱") && Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString().Trim()) >= 1)
                    {
                        myTb.Rows[i]["开始时间"] = System.DBNull.Value;
                        myTb.Rows[i]["剂量"] = System.DBNull.Value;
                        myTb.Rows[i]["用法"] = System.DBNull.Value;
                        myTb.Rows[i]["频率"] = System.DBNull.Value;
                        myTb.Rows[i]["开始时间"] = System.DBNull.Value;
                        myTb.Rows[i]["首日执行次数"] = System.DBNull.Value;
                        myTb.Rows[i]["末日次数"] = System.DBNull.Value;
                        myTb.Rows[i]["剂数"] = System.DBNull.Value;
                        myTb.Rows[i]["滴量"] = System.DBNull.Value;
                        myTb.Rows[i]["执行护士"] = System.DBNull.Value;
                        myTb.Rows[i]["执行时间"] = System.DBNull.Value;
                        myTb.Rows[i]["停嘱时间"] = System.DBNull.Value;
                        myTb.Rows[i]["下嘱医生"] = System.DBNull.Value;
                        myTb.Rows[i]["停嘱医生"] = System.DBNull.Value;
                    }
                    if (myTb.Rows[i]["status_flag"].ToString().Trim() == "2") myTb.Rows[i]["停嘱时间"] = System.DBNull.Value;//取消欲停恢复有效长嘱后


                    //如果一组中的医嘱个数大于1
                    if (group_rows != 1)
                    {
                        //[3i2]0 代表第三行是一组医嘱的最后一条，该组医嘱有两条医嘱，status_flag=0
                        this.sPaintLong += "[" + i.ToString() + "i" + group_rows.ToString().Trim() + "]" + myTb.Rows[i - 1]["status_flag"].ToString().Trim();
                    }
                    group_rows = 1;
                    grouprows = 1;
                }
                else
                {
                    try
                    {
                        grouprows++;
                        //如果不是第一行，且本行和上一行的医嘱号一致
                        myTb.Rows[i]["用法"] = System.DBNull.Value;
                        myTb.Rows[i]["频率"] = System.DBNull.Value;
                        myTb.Rows[i]["开始时间"] = System.DBNull.Value;
                        myTb.Rows[i]["首日执行次数"] = System.DBNull.Value;
                        myTb.Rows[i]["末日次数"] = System.DBNull.Value;
                        myTb.Rows[i]["剂数"] = System.DBNull.Value;
                        myTb.Rows[i]["滴量"] = System.DBNull.Value;
                        if (j != grouprows)
                        {
                            myTb.Rows[i]["执行护士"] = System.DBNull.Value;
                            myTb.Rows[i]["执行时间"] = System.DBNull.Value;
                            myTb.Rows[i]["下嘱医生"] = System.DBNull.Value;
                            myTb.Rows[i]["停嘱医生"] = System.DBNull.Value;
                        }
                        if (myTb.Rows[i]["status_flag"].ToString().Trim() == "2") myTb.Rows[i]["停嘱时间"] = System.DBNull.Value;//取消欲停恢复有效长嘱后

                        if (myTb.Rows[i]["类型"].ToString() == "1-西药" || myTb.Rows[i]["类型"].ToString() == "2-中成药" || myTb.Rows[i]["类型"].ToString() == "3-中草药") group_rows += 1;
                        if (i == myTb.Rows.Count - 1 && j > 1 && group_rows != 1)
                        {
                            this.sPaintLong += "[" + Convert.ToString(i + 1) + "i" + group_rows.ToString().Trim() + "]" + myTb.Rows[i]["status_flag"].ToString().Trim();
                        }

                    }
                    catch (System.Data.OleDb.OleDbException err)
                    {
                        MessageBox.Show(err.ToString(), "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                    catch (System.Exception err)
                    {
                        MessageBox.Show(err.ToString(), "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                }
                #endregion

                #region //显示未执行
                //				if (myTb.Rows[i]["c1"].ToString().Trim().IndexOf("X",0,myTb.Rows[i]["c1"].ToString().Trim().Length)>=0)
                //				{
                //					this.sPaintWZXLong+="i"+i.ToString()+"X";
                //				}
                #endregion

                #region 显示皮试
                //if (myTb.Rows[i]["c1"].ToString().Trim().IndexOf("+",0,myTb.Rows[i]["c1"].ToString().Trim().Length)>=0)
                if (myTb.Rows[i]["ps_flag"].ToString() == "2")
                {
                    this.sPaintPSLong += "[" + i.ToString() + "+" + System.Text.Encoding.Default.GetByteCount(myTb.Rows[i]["医嘱内容"].ToString().Trim()) + "]";
                }
                //if (myTb.Rows[i]["c1"].ToString().Trim().IndexOf("-",0,myTb.Rows[i]["c1"].ToString().Trim().Length)>=0)
                if (myTb.Rows[i]["ps_flag"].ToString() == "1")
                {
                    this.sPaintPSLong += "[" + i.ToString() + "-" + System.Text.Encoding.Default.GetByteCount(myTb.Rows[i]["医嘱内容"].ToString().Trim()) + "]" + myTb.Rows[i]["status_flag"].ToString().Trim();
                }
                #endregion
            }
            #endregion

            return myTb.Copy();
        }

        /// <summary>
        /// 获得最大医嘱号
        /// </summary>
        /// <param name="myTb"></param>
        /// <param name="groupID"></param>
        /// <returns></returns>
        private int GetMaxZYnum(DataTable myTb, string groupID)
        {
            int j = 0;
            for (int i = 0; i < myTb.Rows.Count; i++)
            {
                if (myTb.Rows[i]["嘱号"].ToString().Trim() == groupID) j++;
            }
            return j;
        }

        //返回“数量+单位”，检查是否显示小数
        private string GetNumUnit(DataTable myTb, int i)
        {
            string sNum = "";
            if (Convert.ToDecimal(myTb.Rows[i]["剂量"]) == Convert.ToInt32(myTb.Rows[i]["剂量"]))
            {
                sNum = String.Format("{0:F0}", myTb.Rows[i]["剂量"]).Trim();
            }
            else
            {
                sNum = String.Format("{0:F2}", myTb.Rows[i]["剂量"]).Trim();
            }
            if ((sNum == "1" || sNum == "0" || sNum == "") && Convert.ToInt16(myQuery.GetyzTypeCode(GetGroupType(myTb, i))) > 3) return "  ";
            else return "  " + sNum + myTb.Rows[i]["单位"].ToString().Trim();

        }

        private DataTable InsertRow(DataTable myTb_Temp, int nRow)
        {
            //先增加一空行
            int i;
            DataTable myTb = myTb_Temp.Copy();
            DataRow row = myTb.NewRow();
            row["ID"] = Guid.Empty;

            myTb.Rows.InsertAt(row, nRow);
            for (i = 0; i < myTb.Columns.Count - 1; i++)
            {
                myTb.Rows[nRow][i] = row[i];
            }

            return myTb;
        }
        #endregion

        #region 合理用药分析 Modify by zouchihua 2011-12-27
        /// <summary>
        /// 用于药品分析和保存
        /// </summary>
        /// <param name="dge"></param>
        /// <param name="type"></param>
        /// <param name="Tjflag">是否提交 0=不提交到服务器 1=提交到服务器</param>
        /// <returns></returns>
        private bool Hlyyfx(DataGridEx[] dge, int type, int Tjflag)
        {
            if (cfg_6032.Config.Trim() == "0")
                return true;
            if (true)
            {
                try
                {
                    doctor = new Doctor(YS_ID, InstanceForm._database);
                }
                catch (Exception err)
                {
                    //MessageBox.Show(err.Message);
                    //this.Close();
                    //MessageBox.Show(err.Message);
                    doctor = new Doctor();
                    //doctor.TypeID = -1;
                }
            }
            else
                doctor = new Doctor();
            //doctor = new Doctor(YS_ID, InstanceForm._database);
            int zflag = 0;//组标记
            Guid presc_id = Guid.Empty;//Add By Tany 2014-08-05 处方号，和组标记一起赋值及变化

            DataTable tb = (DataTable)dge[0].DataSource;//长期医嘱
            DataTable tb1 = (DataTable)dge[1].DataSource;//临时医嘱
            int flag = 0;

            //int CurIndex = dge.CurrentCell.RowNumber;
            //用于保存一组的信息
            string pc = "";//频次
            string yf = "";//用法
            string kyzsj = "";//开医嘱时间
            DateTime severtime = DateManager.ServerDateTimeByDBType(InstanceForm._database);//取数据库时间;
            try
            {
                // DateTime severtime = DateManager.ServerDateTimeByDBType(InstanceForm._database);//取数据库时间;
                //new Guid(STAG.Substring(0, 40)), Convert.ToInt64(STAG.Substring(40, 10))
                // string sqlbrxx="select * from VI_ZY_VINPATIENT_INFO where INPATIENT_ID='"+new Guid(STAG.Substring(0, 40))+"' and BABY_ID="+ Convert.ToInt64(STAG.Substring(40, 10))+"";
                //DataTable brxx = FrmMdiMain.Database.GetDataTable(sqlbrxx);
                //string hlyytype = GetIniString("hlyy", "name", System.Windows.Forms.Application.StartupPath + "\\Hlyy.ini");
                string xml = "";
                if (strHlyyType == "大通")
                {
                    xml = "<safe><doctor_information job_number='" + FrmMdiMain.CurrentUser.UserID + "' date='" + severtime.ToString("yyyy-MM-dd HH:mm:ss") + "'/><doctor_name>" + doctor.Name + "</doctor_name><doctor_type>" + doctor.TypeID + "</doctor_type>"
                    + "<department_code>" + DeptID + "</department_code><department_name>" + FrmMdiMain.CurrentDept.DeptName + "</department_name><case_id>" + this.patientInfo1.lbID.Text + "</case_id><inhos_code>" + this.patientInfo1.lbID.Text + "</inhos_code>"
                    + "<bed_no>" + this.patientInfo1.lbBed.Text + "</bed_no>"
                     + "<patient_information weight='' height='' birth='" + (Convert.ToDateTime(this.BrxxTb.Rows[0]["BIRTHDAY"])).ToString("yyyy-MM-dd") + "'>"
                     + "<patient_name>" + this.patientInfo1.lbName.Text + "</patient_name><patient_sex>" + this.patientInfo1.lbSex.Text + "</patient_sex><physiological_statms></physiological_statms>"
                     + "<boacterioscopy_effect></boacterioscopy_effect><bloodpressure></bloodpressure><liver_clean></liver_clean><pregnant></pregnant><pdw></pdw>"
                     + "<allergic_history><case><case_code></case_code><case_name></case_name></case> <case><case_code></case_code><case_name></case_name></case><case><case_code></case_code><case_name></case_name></case> </allergic_history>"
                     + "<diagnoses><diagnose type ='0'  name ='" + this.patientInfo1.lbRYZD.Text + "'>" + BrxxTb.Rows[0]["IN_DIAGNOSIS"].ToString().Trim() + "</diagnose>"
                     + "<diagnose type ='0'  name =''></diagnose>"
                     + "<diagnose type ='0'  name =''></diagnose></diagnoses></patient_information>";
                    xml += "<prescriptions>";
                }
                else
                {
                    //新打通
                    xml = "<details_xml ><his_time>" + severtime.ToString("yyyy-MM-dd HH:mm:ss") + "</his_time><hosp_flag>ip</hosp_flag><treat_type>400</treat_type> "
                         + " <treat_code>" + this.patientInfo1.lbID.Text + "</treat_code> <bed_no>" + this.patientInfo1.lbBed.Text + "</bed_no> "
                         + "<patient>"
                         + "  <name>" + this.patientInfo1.lbName.Text + "</name><birth>" + (Convert.ToDateTime(this.BrxxTb.Rows[0]["BIRTHDAY"])).ToString("yyyy-MM-dd") + "</birth><sex>" + this.patientInfo1.lbSex.Text + "</sex>"
                         + "<weight>0</weight><height></height><id_card>" + this.BrxxTb.Rows[0]["SFZH"].ToString() + "</id_card><medical_record>" + this.patientInfo1.lbID.Text + "</medical_record><card_type>9</card_type><card_code></card_code>"
                         + "<pregnant_unit>天</pregnant_unit><pregnant >0</pregnant> "
                         + "<allergic_data>  "
                         + "   <allergic> "
                         + "  <type></type><name></name><code></code></allergic> "
                         + "</allergic_data> "
                         + "  <diagnose_data><diagnose><type>0</type><name>" + this.patientInfo1.lbRYZD.Text + "</name><code>" + BrxxTb.Rows[0]["IN_DIAGNOSIS"].ToString().Trim() + "</code></diagnose></diagnose_data >"
                         + " </patient> ";
                    xml += "<prescription_data>";
                    kyzsj = severtime.ToString("yyyy-MM-dd HH:mm:ss");
                    xml += "<prescription><id></id><reason></reason><is_new>1</is_new><is_current>1</is_current><pres_type>L</pres_type><pres_time>" + kyzsj + "</pres_time>";
                    xml += " <medicine_data>";
                }

                {
                    if (tb == null)
                        tb = new DataTable();
                    for (int i = 0; i < tb.Rows.Count; i++)
                    {
                        type = 0;
                        try
                        {
                            if (tb.Rows[i]["id"] == null || tb.Rows[i]["id"].ToString() == "")
                                continue;
                            if (tb.Rows[i]["xmly"].ToString() == "1")
                            {
                                //如果是一组医嘱的话
                                if (tb.Rows[i]["开始时间"].ToString() != "")
                                {
                                    string tzsj = tb.Rows[i]["停嘱时间"].ToString() == "" ? severtime.AddDays(2).ToShortDateString() : Convert.ToDateTime(tb.Rows[i]["停嘱时间"].ToString()).ToShortDateString();
                                    //当天临时医嘱， 长期医嘱，当天有效果（停止时间是明天以后或者没有停止）
                                    if ((type == 0 && ((Convert.ToDateTime(tzsj) > Convert.ToDateTime(severtime.ToShortDateString()) && tb.Rows[i]["status_flag"].ToString() == "5") || tb.Rows[i]["status_flag"].ToString() != "5"))
                                         || (type == 1 && Convert.ToDateTime(Convert.ToDateTime(tb.Rows[i]["开始时间"].ToString()).ToShortDateString()) == Convert.ToDateTime(severtime.ToShortDateString()))
                                        )
                                    {
                                        flag = 1;
                                        zflag++;
                                        presc_id = Guid.NewGuid();
                                        pc = Getpcid(tb.Rows[i]["频率"].ToString().Trim());
                                        yf = Getyfid(tb.Rows[i]["用法"].ToString().Trim());
                                        kyzsj = (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss");
                                        if (strHlyyType == "大通")
                                        {
                                            //处方处理
                                            //xml += "<prescription  id='" + tb.Rows[i]["id"].ToString() + "' type='" + (type == 0 ? "L" : "T") + "'>" Modify By Tany 2014-08-05 处方号方式改变
                                            xml += "<prescription  id='" + presc_id + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                            + "<medicine suspension='false' judge='true'><group_number>" + zflag.ToString() + "</group_number><general_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</general_name>"
                                            + "<license_number>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</license_number><medicine_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</medicine_name>"
                                            + "<single_dose coef='1'>" + tb.Rows[i]["剂量"].ToString().Trim() + "</single_dose><frequency>" + pc + "</frequency><times></times><unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</unit>"
                                            + "<administer_drugs>" + yf + "</administer_drugs><begin_time>" + (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</begin_time>"
                                            + "<end_time></end_time><prescription_time>" + (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</prescription_time></medicine></prescription>";
                                        }

                                        else
                                        {
                                            //xml += "<prescription><id>" + tb.Rows[i]["id"].ToString() + "</id><reason></reason><is_current>1</is_current><pres_type>L</pres_type><pres_time>" + kyzsj + "</pres_time>"
                                            //      + " <medicine_data>"
                                            //      + "  <medicine><name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                            //      + "<spec>" + tb.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                            //      + " <dose>" + tb.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + kyzsj + "</begin_time> "
                                            //      + " <end_time></end_time><days></days></medicine> "
                                            //      + "</medicine_data> </prescription>";
                                            //大通新 
                                            xml +=// "<prescription><id>" + tb.Rows[i]["id"].ToString() + "</id><reason></reason><is_current>1</is_current><pres_type>L</pres_type><pres_time>" + kyzsj + "</pres_time>"
                                                //" <medicine_data>"
                                                  "  <medicine><name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                                 + "<spec>" + tb.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                                 + " <dose>" + tb.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + kyzsj + "</begin_time> "
                                                 + " <end_time></end_time><days></days></medicine> ";
                                            //+ "</medicine_data> </prescription>";
                                        }
                                    }
                                    else
                                        flag = 0;
                                }
                                else
                                {
                                    string shyzsh = tb.Rows[i - 1]["开始时间"].ToString().Trim() == "" ? "1900-01-01 00:00:00" : tb.Rows[i - 1]["开始时间"].ToString();//上一行医嘱时间
                                    if (flag == 1)//判断上个医嘱时间
                                    {
                                        if (strHlyyType == "大通")
                                        {
                                            //xml += "<prescription  id='" + tb.Rows[i]["id"].ToString().Trim() + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                            xml += "<prescription  id='" + presc_id + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                            + "<medicine suspension='false' judge='true'><group_number>" + zflag.ToString().Trim() + "</group_number><general_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</general_name>"
                                            + "<license_number>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</license_number><medicine_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</medicine_name>"
                                            + "<single_dose coef='1'>" + tb.Rows[i]["剂量"].ToString().Trim() + "</single_dose><frequency>" + pc + "</frequency><times></times><unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</unit>"
                                            + "<administer_drugs>" + yf + "</administer_drugs><begin_time>" + kyzsj + "</begin_time>"
                                            + "<end_time></end_time><prescription_time>" + kyzsj + "</prescription_time></medicine></prescription>";
                                        }
                                        else
                                        {
                                            // if(i==10)


                                            //xml += "<prescription><id>" + tb.Rows[i]["id"].ToString() + "</id><reason></reason><is_current>1</is_current><pres_type>" + (type == 0 ? "L" : "T") + "</pres_type><pres_time>" + kyzsj + "</pres_time>"
                                            //     + " <medicine_data>"
                                            //     + "  <medicine><name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                            //     + "<spec>" + tb.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                            //     + " <dose>" + tb.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + kyzsj + "</begin_time> "
                                            //     + " <end_time></end_time><days></days></medicine> "
                                            //     + "</medicine_data> </prescription>";
                                            //大通新
                                            xml +=
                                                "  <medicine><name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                               + "<spec>" + tb.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                               + " <dose>" + tb.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + kyzsj + "</begin_time> "
                                               + " <end_time></end_time><days></days></medicine> ";
                                            //if (i == tb.Rows.Count - 1 || tb.Rows[i+1]["开始时间"].ToString().Trim() != "")
                                            //{
                                            //       xml += "</medicine_data> </prescription>";
                                            //}
                                        }
                                    }
                                }
                            }

                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(i.ToString() + ex.Message + "cq");
                        }

                    }
                    //临时医嘱

                    for (int i = 0; i < tb1.Rows.Count; i++)
                    {
                        type = 1;
                        try
                        {
                            if (tb1.Rows[i]["id"] == null || tb1.Rows[i]["id"].ToString() == "")
                                continue;
                            if (tb1.Rows[i]["xmly"].ToString() == "1")
                            {
                                //如果是一组医嘱的话
                                if (tb1.Rows[i]["开始时间"].ToString() != "")
                                {
                                    string tzsj = tb1.Rows[i]["停嘱时间"].ToString() == "" ? severtime.AddDays(2).ToShortDateString() : Convert.ToDateTime(tb1.Rows[i]["停嘱时间"].ToString()).ToShortDateString();
                                    //当天临时医嘱， 长期医嘱，当天有效果（停止时间是明天以后或者没有停止）
                                    if ((type == 0 && ((Convert.ToDateTime(tzsj) > Convert.ToDateTime(severtime.ToShortDateString()) && tb1.Rows[i]["status_flag"].ToString() == "5") || tb1.Rows[i]["status_flag"].ToString() != "5"))
                                         || (type == 1 && Convert.ToDateTime(Convert.ToDateTime(tb1.Rows[i]["开始时间"].ToString()).ToShortDateString()) == Convert.ToDateTime(severtime.ToShortDateString()))
                                        )
                                    {
                                        flag = 1;
                                        zflag++;
                                        presc_id = Guid.NewGuid();
                                        pc = Getpcid(tb1.Rows[i]["频率"].ToString().Trim());
                                        yf = Getyfid(tb1.Rows[i]["用法"].ToString().Trim());
                                        kyzsj = (Convert.ToDateTime(tb1.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss");
                                        if (strHlyyType == "大通")
                                        {
                                            //处方处理
                                            //xml += "<prescription  id='" + tb1.Rows[i]["id"].ToString() + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                            xml += "<prescription  id='" + presc_id + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                            + "<medicine suspension='false' judge='true'><group_number>" + zflag.ToString() + "</group_number><general_name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</general_name>"
                                            + "<license_number>" + tb1.Rows[i]["hoitem_id"].ToString().Trim() + "</license_number><medicine_name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</medicine_name>"
                                            + "<single_dose coef='1'>" + tb1.Rows[i]["剂量"].ToString().Trim() + "</single_dose><frequency>" + pc + "</frequency><times></times><unit>" + tb1.Rows[i]["单位"].ToString().Trim() + "</unit>"
                                            + "<administer_drugs>" + yf + "</administer_drugs><begin_time>" + (Convert.ToDateTime(tb1.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</begin_time>"
                                            + "<end_time></end_time><prescription_time>" + (Convert.ToDateTime(tb1.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</prescription_time></medicine></prescription>";
                                        }
                                        else
                                        {
                                            //xml += "<prescription><id>" + tb1.Rows[i]["id"].ToString() + "</id><reason></reason><is_current>1</is_current><pres_type>" + (type == 0 ? "L" : "T") + "</pres_type><pres_time>" + (Convert.ToDateTime(tb1.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</pres_time>"
                                            //      + " <medicine_data>"
                                            //      + "  <medicine><name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb1.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                            //      + "<spec>" + tb1.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb1.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                            //      + " <dose>" + tb1.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + (Convert.ToDateTime(tb1.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</begin_time> "
                                            //      + " <end_time></end_time><days></days></medicine> "
                                            //      + "</medicine_data> </prescription>";
                                            //大通新
                                            xml +=// "<prescription><id>" + tb1.Rows[i]["id"].ToString() + "</id><reason></reason><is_current>1</is_current><pres_type>" + (type == 0 ? "L" : "T") + "</pres_type><pres_time>" + (Convert.ToDateTime(tb1.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</pres_time>"

                                           "  <medicine><name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb1.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                         + "<spec>" + tb1.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb1.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                         + " <dose>" + tb1.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + (Convert.ToDateTime(tb1.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</begin_time> "
                                         + " <end_time></end_time><days></days></medicine> ";
                                            //+ "</medicine_data> </prescription>";
                                        }

                                    }
                                    else
                                        flag = 0;
                                }
                                else
                                {
                                    string shyzsh = tb1.Rows[i - 1]["开始时间"].ToString().Trim() == "" ? "1900-01-01 00:00:00" : tb1.Rows[i - 1]["开始时间"].ToString();//上一行医嘱时间
                                    if (flag == 1)//判断上个医嘱时间
                                    {
                                        if (strHlyyType == "大通")
                                        {
                                            //xml += "<prescription  id='" + tb1.Rows[i]["id"].ToString().Trim() + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                            xml += "<prescription  id='" + presc_id + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                            + "<medicine suspension='false' judge='true'><group_number>" + zflag.ToString().Trim() + "</group_number><general_name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</general_name>"
                                            + "<license_number>" + tb1.Rows[i]["hoitem_id"].ToString().Trim() + "</license_number><medicine_name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</medicine_name>"
                                            + "<single_dose coef='1'>" + tb1.Rows[i]["剂量"].ToString().Trim() + "</single_dose><frequency>" + pc + "</frequency><times></times><unit>" + tb1.Rows[i]["单位"].ToString().Trim() + "</unit>"
                                            + "<administer_drugs>" + yf + "</administer_drugs><begin_time>" + kyzsj + "</begin_time>"
                                            + "<end_time></end_time><prescription_time>" + kyzsj + "</prescription_time></medicine></prescription>";
                                        }
                                        else
                                        {
                                            //xml += "<prescription><id>" + tb1.Rows[i]["id"].ToString() + "</id><reason></reason><is_current>1</is_current><pres_type>" + (type == 0 ? "L" : "T") + "</pres_type><pres_time>" + kyzsj + "</pres_time>"
                                            //     + " <medicine_data>"
                                            //     + "  <medicine><name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb1.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                            //     + "<spec>" + tb1.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb1.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                            //     + " <dose>" + tb1.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + kyzsj + "</begin_time> "
                                            //     + " <end_time></end_time><days></days></medicine> "
                                            //     + "</medicine_data> </prescription>";
                                            //大通新
                                            xml +=
                                                  "  <medicine><name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb1.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                                  + "<spec>" + tb1.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb1.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                                  + " <dose>" + tb1.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + kyzsj + "</begin_time> "
                                                  + " <end_time></end_time><days></days></medicine> ";
                                            //if (i == tb1.Rows.Count - 1 || tb1.Rows[i+1]["开始时间"].ToString().Trim() != "")
                                            //{
                                            //       xml += "</medicine_data> </prescription>";
                                            //}
                                        }
                                    }
                                }
                            }

                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(i.ToString() + ex.Message);
                        }

                    }
                    if (strHlyyType == "大通")
                        xml += "</prescriptions></safe>";
                    else
                        xml += "	</medicine_data></prescription></prescription_data></details_xml>";
                    StringBuilder xmlsb = new StringBuilder(xml.ToString());


                    //StreamWriter sw = new StreamWriter("d:\\dthlyy.txt");
                    //sw.Write(xml);
                    if (hl == null)
                        return false;

                    //Modify by zhujh 2017-01-18
                    int ii = 0;
                    if (strHlyyType == "大通")
                    {
                        ii = hl.DrugAnalysis(xmlsb, 0);
                    }
                    else
                    {
                        if (boHLYYDept)
                        {
                            ii = hl.DrugAnalysis(xmlsb, 0);
                        }
                    }


                    if (cfg6075.Config.Trim() == "1" && ii == 2 && Tjflag == 1)
                    {
                        MessageBox.Show("医嘱中存在不合理的用药，系统强制不允许保存，请您核对医嘱！！", "提示");
                        return false;
                    }
                    if (cfg6075.Config.Trim() == "2" && ii > 0 && Tjflag == 1)
                    {
                        if (ii == 1)
                        {
                            if (MessageBox.Show("医嘱中可能存在不合理的用药，是否继续保存\n\n如果继续保存，请按“确定”\n取消保存，请按“取消”",
                                                    "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1) == DialogResult.Cancel)
                                return false;
                        }
                        else
                        {
                            MessageBox.Show("医嘱中存在不合理的用药，系统强制不允许保存，请您核对医嘱！！", "提示");
                            return false;
                        }
                    }
                    if (Tjflag == 1)
                    {

                        hl.SaveDrug(xmlsb, 0);

                    }
                    hl.SaveXml(xmlsb);
                    // MessageBox.Show(ii.ToString());
                    //提示暂时去掉 2012-01-07 
                    //if (hl.DrugAnalysis(xmlsb) == 0)
                    //    return true;
                    //else
                    //    if (MessageBox.Show("医嘱中可能存在不合理的用药，是否继续保存\n\n如果继续保存，请按“确定”\n取消保存，请按“取消”",
                    //                            "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1) == DialogResult.Cancel)
                    //        return false;
                    //hlyytype = GetIniString("hlyy", "name", System.Windows.Forms.Application.StartupPath + "\\Hlyy.ini");
                    //美康合理用好接口
                    int li_warn = 0; //返回的最大警示值
                    DataGridEx[] dgv = new DataGridEx[2];
                    Ts_Hlyy_Interface.CfInfo[] cf = new CfInfo[2];
                    dgv[0] = dataGrid_LongOrder;
                    dgv[1] = dataGrid_TempOrder;
                    if (strHlyyType == "美康" && Tjflag == 1)
                    {
                        li_warn = hl.recipe_check(1, dgv, severtime, 0, ref cf, 0); //调用用户自定义自动审查函数
                        //如果审查出黑灯，则提示用户是保继续保存、执行医嘱
                        if (li_warn == 3)
                        {
                            if (MessageBox.Show("PASS系统审查出存在黑灯用药？继续保存、执行处方吗？", "PASS安全用药审查提示",
                                MessageBoxButtons.OKCancel, MessageBoxIcon.Question) == DialogResult.Cancel)
                            {
                                return false;
                            }
                        }
                    }


                }
                return true;
            }
            catch (Exception ex)
            {
                MessageBox.Show(" 错误信息：" + ex.Message);
                return true;
            }
        }


        /// <summary>
        /// 用于药品分析和保存
        /// </summary>
        /// <param name="dge"></param>
        /// <param name="type"></param>
        /// <param name="Tjflag">是否提交 0=不提交到服务器 1=提交到服务器</param>
        /// <returns></returns>
        private bool HlyyfxDataGridView(DataGridEx[] dge, int type, int Tjflag)
        {
            if (cfg_6032.Config.Trim() == "0")
                return true;
            if (true)
            {
                try
                {
                    doctor = new Doctor(YS_ID, InstanceForm._database);
                }
                catch (Exception err)
                {
                    //MessageBox.Show(err.Message);
                    //this.Close();
                    //MessageBox.Show(err.Message);
                    doctor = new Doctor();
                    //doctor.TypeID = -1;
                }
            }
            else
                doctor = new Doctor();
            //doctor = new Doctor(YS_ID, InstanceForm._database);
            int zflag = 0;//组标记
            Guid presc_id = Guid.Empty;//Add By Tany 2014-08-05 处方号，和组标记一起赋值及变化

            DataTable tb = (DataTable)dge[0].DataSource;//长期医嘱
            DataTable tb1 = (DataTable)dge[1].DataSource;//临时医嘱
            int flag = 0;

            //int CurIndex = dge.CurrentCell.RowNumber;
            //用于保存一组的信息
            string pc = "";//频次
            string yf = "";//用法
            string kyzsj = "";//开医嘱时间
            DateTime severtime = DateManager.ServerDateTimeByDBType(InstanceForm._database);//取数据库时间;
            try
            {
                // DateTime severtime = DateManager.ServerDateTimeByDBType(InstanceForm._database);//取数据库时间;
                //new Guid(STAG.Substring(0, 40)), Convert.ToInt64(STAG.Substring(40, 10))
                // string sqlbrxx="select * from VI_ZY_VINPATIENT_INFO where INPATIENT_ID='"+new Guid(STAG.Substring(0, 40))+"' and BABY_ID="+ Convert.ToInt64(STAG.Substring(40, 10))+"";
                //DataTable brxx = FrmMdiMain.Database.GetDataTable(sqlbrxx);
                //string hlyytype = GetIniString("hlyy", "name", System.Windows.Forms.Application.StartupPath + "\\Hlyy.ini");
                string xml = "";
                if (strHlyyType == "大通")
                {
                    xml = "<safe><doctor_information job_number='" + FrmMdiMain.CurrentUser.UserID + "' date='" + severtime.ToString("yyyy-MM-dd HH:mm:ss") + "'/><doctor_name>" + doctor.Name + "</doctor_name><doctor_type>" + doctor.TypeID + "</doctor_type>"
                    + "<department_code>" + DeptID + "</department_code><department_name>" + FrmMdiMain.CurrentDept.DeptName + "</department_name><case_id>" + this.patientInfo1.lbID.Text + "</case_id><inhos_code>" + this.patientInfo1.lbID.Text + "</inhos_code>"
                    + "<bed_no>" + this.patientInfo1.lbBed.Text + "</bed_no>"
                     + "<patient_information weight='' height='' birth='" + (Convert.ToDateTime(this.BrxxTb.Rows[0]["BIRTHDAY"])).ToString("yyyy-MM-dd") + "'>"
                     + "<patient_name>" + this.patientInfo1.lbName.Text + "</patient_name><patient_sex>" + this.patientInfo1.lbSex.Text + "</patient_sex><physiological_statms></physiological_statms>"
                     + "<boacterioscopy_effect></boacterioscopy_effect><bloodpressure></bloodpressure><liver_clean></liver_clean><pregnant></pregnant><pdw></pdw>"
                     + "<allergic_history><case><case_code></case_code><case_name></case_name></case> <case><case_code></case_code><case_name></case_name></case><case><case_code></case_code><case_name></case_name></case> </allergic_history>"
                     + "<diagnoses><diagnose type ='0'  name ='" + this.patientInfo1.lbRYZD.Text + "'>" + BrxxTb.Rows[0]["IN_DIAGNOSIS"].ToString().Trim() + "</diagnose>"
                     + "<diagnose type ='0'  name =''></diagnose>"
                     + "<diagnose type ='0'  name =''></diagnose></diagnoses></patient_information>";
                    xml += "<prescriptions>";
                }
                else
                {
                    //新打通
                    xml = "<details_xml ><his_time>" + severtime.ToString("yyyy-MM-dd HH:mm:ss") + "</his_time><hosp_flag>ip</hosp_flag><treat_type>400</treat_type> "
                         + " <treat_code>" + this.patientInfo1.lbID.Text + "</treat_code> <bed_no>" + this.patientInfo1.lbBed.Text + "</bed_no> "
                         + "<patient>"
                         + "  <name>" + this.patientInfo1.lbName.Text + "</name><birth>" + (Convert.ToDateTime(this.BrxxTb.Rows[0]["BIRTHDAY"])).ToString("yyyy-MM-dd") + "</birth><sex>" + this.patientInfo1.lbSex.Text + "</sex>"
                         + "<weight>0</weight><height></height><id_card>" + this.BrxxTb.Rows[0]["SFZH"].ToString() + "</id_card><medical_record>" + this.patientInfo1.lbID.Text + "</medical_record><card_type>9</card_type><card_code></card_code>"
                         + "<pregnant_unit>天</pregnant_unit><pregnant >0</pregnant> "
                         + "<allergic_data>  "
                         + "   <allergic> "
                         + "  <type></type><name></name><code></code></allergic> "
                         + "</allergic_data> "
                         + "  <diagnose_data><diagnose><type>0</type><name>" + this.patientInfo1.lbRYZD.Text + "</name><code>" + BrxxTb.Rows[0]["IN_DIAGNOSIS"].ToString().Trim() + "</code></diagnose></diagnose_data >"
                         + " </patient> ";
                    xml += "<prescription_data>";
                    kyzsj = severtime.ToString("yyyy-MM-dd HH:mm:ss");
                    xml += "<prescription><id></id><reason></reason><is_new>1</is_new><is_current>1</is_current><pres_type>L</pres_type><pres_time>" + kyzsj + "</pres_time>";
                    xml += " <medicine_data>";
                }

                {
                    if (tb == null)
                        tb = new DataTable();
                    for (int i = 0; i < tb.Rows.Count; i++)
                    {
                        type = 0;
                        try
                        {
                            if (tb.Rows[i]["id"] == null || tb.Rows[i]["id"].ToString() == "")
                                continue;
                            if (tb.Rows[i]["xmly"].ToString() == "1")
                            {
                                //如果是一组医嘱的话
                                if (tb.Rows[i]["开始时间"].ToString() != "")
                                {
                                    string tzsj = tb.Rows[i]["停嘱时间"].ToString() == "" ? severtime.AddDays(2).ToShortDateString() : Convert.ToDateTime(tb.Rows[i]["停嘱时间"].ToString()).ToShortDateString();
                                    //当天临时医嘱， 长期医嘱，当天有效果（停止时间是明天以后或者没有停止）
                                    if ((type == 0 && ((Convert.ToDateTime(tzsj) > Convert.ToDateTime(severtime.ToShortDateString()) && tb.Rows[i]["status_flag"].ToString() == "5") || tb.Rows[i]["status_flag"].ToString() != "5"))
                                         || (type == 1 && Convert.ToDateTime(Convert.ToDateTime(tb.Rows[i]["开始时间"].ToString()).ToShortDateString()) == Convert.ToDateTime(severtime.ToShortDateString()))
                                        )
                                    {
                                        flag = 1;
                                        zflag++;
                                        presc_id = Guid.NewGuid();
                                        pc = Getpcid(tb.Rows[i]["频率"].ToString().Trim());
                                        yf = Getyfid(tb.Rows[i]["用法"].ToString().Trim());
                                        kyzsj = (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss");
                                        if (strHlyyType == "大通")
                                        {
                                            //处方处理
                                            //xml += "<prescription  id='" + tb.Rows[i]["id"].ToString() + "' type='" + (type == 0 ? "L" : "T") + "'>" Modify By Tany 2014-08-05 处方号方式改变
                                            xml += "<prescription  id='" + presc_id + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                            + "<medicine suspension='false' judge='true'><group_number>" + zflag.ToString() + "</group_number><general_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</general_name>"
                                            + "<license_number>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</license_number><medicine_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</medicine_name>"
                                            + "<single_dose coef='1'>" + tb.Rows[i]["剂量"].ToString().Trim() + "</single_dose><frequency>" + pc + "</frequency><times></times><unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</unit>"
                                            + "<administer_drugs>" + yf + "</administer_drugs><begin_time>" + (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</begin_time>"
                                            + "<end_time></end_time><prescription_time>" + (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</prescription_time></medicine></prescription>";
                                        }

                                        else
                                        {
                                            //xml += "<prescription><id>" + tb.Rows[i]["id"].ToString() + "</id><reason></reason><is_current>1</is_current><pres_type>L</pres_type><pres_time>" + kyzsj + "</pres_time>"
                                            //      + " <medicine_data>"
                                            //      + "  <medicine><name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                            //      + "<spec>" + tb.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                            //      + " <dose>" + tb.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + kyzsj + "</begin_time> "
                                            //      + " <end_time></end_time><days></days></medicine> "
                                            //      + "</medicine_data> </prescription>";
                                            //大通新 
                                            xml +=// "<prescription><id>" + tb.Rows[i]["id"].ToString() + "</id><reason></reason><is_current>1</is_current><pres_type>L</pres_type><pres_time>" + kyzsj + "</pres_time>"
                                                //" <medicine_data>"
                                                  "  <medicine><name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                                 + "<spec>" + tb.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                                 + " <dose>" + tb.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + kyzsj + "</begin_time> "
                                                 + " <end_time></end_time><days></days></medicine> ";
                                            //+ "</medicine_data> </prescription>";
                                        }
                                    }
                                    else
                                        flag = 0;
                                }
                                else
                                {
                                    string shyzsh = tb.Rows[i - 1]["开始时间"].ToString().Trim() == "" ? "1900-01-01 00:00:00" : tb.Rows[i - 1]["开始时间"].ToString();//上一行医嘱时间
                                    if (flag == 1)//判断上个医嘱时间
                                    {
                                        if (strHlyyType == "大通")
                                        {
                                            //xml += "<prescription  id='" + tb.Rows[i]["id"].ToString().Trim() + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                            xml += "<prescription  id='" + presc_id + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                            + "<medicine suspension='false' judge='true'><group_number>" + zflag.ToString().Trim() + "</group_number><general_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</general_name>"
                                            + "<license_number>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</license_number><medicine_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</medicine_name>"
                                            + "<single_dose coef='1'>" + tb.Rows[i]["剂量"].ToString().Trim() + "</single_dose><frequency>" + pc + "</frequency><times></times><unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</unit>"
                                            + "<administer_drugs>" + yf + "</administer_drugs><begin_time>" + kyzsj + "</begin_time>"
                                            + "<end_time></end_time><prescription_time>" + kyzsj + "</prescription_time></medicine></prescription>";
                                        }
                                        else
                                        {
                                            // if(i==10)


                                            //xml += "<prescription><id>" + tb.Rows[i]["id"].ToString() + "</id><reason></reason><is_current>1</is_current><pres_type>" + (type == 0 ? "L" : "T") + "</pres_type><pres_time>" + kyzsj + "</pres_time>"
                                            //     + " <medicine_data>"
                                            //     + "  <medicine><name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                            //     + "<spec>" + tb.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                            //     + " <dose>" + tb.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + kyzsj + "</begin_time> "
                                            //     + " <end_time></end_time><days></days></medicine> "
                                            //     + "</medicine_data> </prescription>";
                                            //大通新
                                            xml +=
                                                "  <medicine><name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                               + "<spec>" + tb.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                               + " <dose>" + tb.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + kyzsj + "</begin_time> "
                                               + " <end_time></end_time><days></days></medicine> ";
                                            //if (i == tb.Rows.Count - 1 || tb.Rows[i+1]["开始时间"].ToString().Trim() != "")
                                            //{
                                            //       xml += "</medicine_data> </prescription>";
                                            //}
                                        }
                                    }
                                }
                            }

                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(i.ToString() + ex.Message + "cq");
                        }

                    }
                    //临时医嘱

                    for (int i = 0; i < tb1.Rows.Count; i++)
                    {
                        type = 1;
                        try
                        {
                            if (tb1.Rows[i]["id"] == null || tb1.Rows[i]["id"].ToString() == "")
                                continue;
                            if (tb1.Rows[i]["xmly"].ToString() == "1")
                            {
                                //如果是一组医嘱的话
                                if (tb1.Rows[i]["开始时间"].ToString() != "")
                                {
                                    string tzsj = tb1.Rows[i]["停嘱时间"].ToString() == "" ? severtime.AddDays(2).ToShortDateString() : Convert.ToDateTime(tb1.Rows[i]["停嘱时间"].ToString()).ToShortDateString();
                                    //当天临时医嘱， 长期医嘱，当天有效果（停止时间是明天以后或者没有停止）
                                    if ((type == 0 && ((Convert.ToDateTime(tzsj) > Convert.ToDateTime(severtime.ToShortDateString()) && tb1.Rows[i]["status_flag"].ToString() == "5") || tb1.Rows[i]["status_flag"].ToString() != "5"))
                                         || (type == 1 && Convert.ToDateTime(Convert.ToDateTime(tb1.Rows[i]["开始时间"].ToString()).ToShortDateString()) == Convert.ToDateTime(severtime.ToShortDateString()))
                                        )
                                    {
                                        flag = 1;
                                        zflag++;
                                        presc_id = Guid.NewGuid();
                                        pc = Getpcid(tb1.Rows[i]["频率"].ToString().Trim());
                                        yf = Getyfid(tb1.Rows[i]["用法"].ToString().Trim());
                                        kyzsj = (Convert.ToDateTime(tb1.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss");
                                        if (strHlyyType == "大通")
                                        {
                                            //处方处理
                                            //xml += "<prescription  id='" + tb1.Rows[i]["id"].ToString() + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                            xml += "<prescription  id='" + presc_id + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                            + "<medicine suspension='false' judge='true'><group_number>" + zflag.ToString() + "</group_number><general_name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</general_name>"
                                            + "<license_number>" + tb1.Rows[i]["hoitem_id"].ToString().Trim() + "</license_number><medicine_name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</medicine_name>"
                                            + "<single_dose coef='1'>" + tb1.Rows[i]["剂量"].ToString().Trim() + "</single_dose><frequency>" + pc + "</frequency><times></times><unit>" + tb1.Rows[i]["单位"].ToString().Trim() + "</unit>"
                                            + "<administer_drugs>" + yf + "</administer_drugs><begin_time>" + (Convert.ToDateTime(tb1.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</begin_time>"
                                            + "<end_time></end_time><prescription_time>" + (Convert.ToDateTime(tb1.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</prescription_time></medicine></prescription>";
                                        }
                                        else
                                        {
                                            //xml += "<prescription><id>" + tb1.Rows[i]["id"].ToString() + "</id><reason></reason><is_current>1</is_current><pres_type>" + (type == 0 ? "L" : "T") + "</pres_type><pres_time>" + (Convert.ToDateTime(tb1.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</pres_time>"
                                            //      + " <medicine_data>"
                                            //      + "  <medicine><name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb1.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                            //      + "<spec>" + tb1.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb1.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                            //      + " <dose>" + tb1.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + (Convert.ToDateTime(tb1.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</begin_time> "
                                            //      + " <end_time></end_time><days></days></medicine> "
                                            //      + "</medicine_data> </prescription>";
                                            //大通新
                                            xml +=// "<prescription><id>" + tb1.Rows[i]["id"].ToString() + "</id><reason></reason><is_current>1</is_current><pres_type>" + (type == 0 ? "L" : "T") + "</pres_type><pres_time>" + (Convert.ToDateTime(tb1.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</pres_time>"

                                           "  <medicine><name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb1.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                         + "<spec>" + tb1.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb1.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                         + " <dose>" + tb1.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + (Convert.ToDateTime(tb1.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</begin_time> "
                                         + " <end_time></end_time><days></days></medicine> ";
                                            //+ "</medicine_data> </prescription>";
                                        }

                                    }
                                    else
                                        flag = 0;
                                }
                                else
                                {
                                    string shyzsh = tb1.Rows[i - 1]["开始时间"].ToString().Trim() == "" ? "1900-01-01 00:00:00" : tb1.Rows[i - 1]["开始时间"].ToString();//上一行医嘱时间
                                    if (flag == 1)//判断上个医嘱时间
                                    {
                                        if (strHlyyType == "大通")
                                        {
                                            //xml += "<prescription  id='" + tb1.Rows[i]["id"].ToString().Trim() + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                            xml += "<prescription  id='" + presc_id + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                            + "<medicine suspension='false' judge='true'><group_number>" + zflag.ToString().Trim() + "</group_number><general_name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</general_name>"
                                            + "<license_number>" + tb1.Rows[i]["hoitem_id"].ToString().Trim() + "</license_number><medicine_name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</medicine_name>"
                                            + "<single_dose coef='1'>" + tb1.Rows[i]["剂量"].ToString().Trim() + "</single_dose><frequency>" + pc + "</frequency><times></times><unit>" + tb1.Rows[i]["单位"].ToString().Trim() + "</unit>"
                                            + "<administer_drugs>" + yf + "</administer_drugs><begin_time>" + kyzsj + "</begin_time>"
                                            + "<end_time></end_time><prescription_time>" + kyzsj + "</prescription_time></medicine></prescription>";
                                        }
                                        else
                                        {
                                            //xml += "<prescription><id>" + tb1.Rows[i]["id"].ToString() + "</id><reason></reason><is_current>1</is_current><pres_type>" + (type == 0 ? "L" : "T") + "</pres_type><pres_time>" + kyzsj + "</pres_time>"
                                            //     + " <medicine_data>"
                                            //     + "  <medicine><name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb1.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                            //     + "<spec>" + tb1.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb1.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                            //     + " <dose>" + tb1.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + kyzsj + "</begin_time> "
                                            //     + " <end_time></end_time><days></days></medicine> "
                                            //     + "</medicine_data> </prescription>";
                                            //大通新
                                            xml +=
                                                  "  <medicine><name>" + tb1.Rows[i]["医嘱内容"].ToString().Trim() + "</name><his_code>" + tb1.Rows[i]["hoitem_id"].ToString().Trim() + "</his_code><insur_code></insur_code><approval></approval> "
                                                  + "<spec>" + tb1.Rows[i]["规格"].ToString().Trim() + "</spec><group>" + zflag.ToString() + "</group><reason></reason><dose_unit>" + tb1.Rows[i]["单位"].ToString().Trim() + "</dose_unit> "
                                                  + " <dose>" + tb1.Rows[i]["剂量"].ToString().Trim() + "</dose><freq>" + pc + "</freq><administer>" + yf + "</administer><begin_time>" + kyzsj + "</begin_time> "
                                                  + " <end_time></end_time><days></days></medicine> ";
                                            //if (i == tb1.Rows.Count - 1 || tb1.Rows[i+1]["开始时间"].ToString().Trim() != "")
                                            //{
                                            //       xml += "</medicine_data> </prescription>";
                                            //}
                                        }
                                    }
                                }
                            }

                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(i.ToString() + ex.Message);
                        }

                    }
                    if (strHlyyType == "大通")
                        xml += "</prescriptions></safe>";
                    else
                        xml += "	</medicine_data></prescription></prescription_data></details_xml>";
                    StringBuilder xmlsb = new StringBuilder(xml.ToString());


                    //StreamWriter sw = new StreamWriter("d:\\dthlyy.txt");
                    //sw.Write(xml);
                    if (hl == null)
                        return false;

                    //Modify by zhujh 2017-01-18
                    int ii = 0;
                    if (strHlyyType == "大通")
                    {
                        ii = hl.DrugAnalysis(xmlsb, 0);
                    }
                    else
                    {
                        if (boHLYYDept)
                        {
                            if (colBoHlyy)
                            {
                                ii = hl.DrugAnalysis(xmlsb, 0);
                                colBoHlyy = false;
                            }

                        }
                    }


                    if (cfg6075.Config.Trim() == "1" && ii == 2 && Tjflag == 1)
                    {
                        MessageBox.Show("医嘱中存在不合理的用药，系统强制不允许保存，请您核对医嘱！！", "提示");
                        return false;
                    }
                    if (cfg6075.Config.Trim() == "2" && ii > 0 && Tjflag == 1)
                    {
                        if (ii == 1)
                        {
                            if (MessageBox.Show("医嘱中可能存在不合理的用药，是否继续保存\n\n如果继续保存，请按“确定”\n取消保存，请按“取消”",
                                                    "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1) == DialogResult.Cancel)
                                return false;
                        }
                        else
                        {
                            MessageBox.Show("医嘱中存在不合理的用药，系统强制不允许保存，请您核对医嘱！！", "提示");
                            return false;
                        }
                    }
                    if (Tjflag == 1)
                    {

                        hl.SaveDrug(xmlsb, 0);

                    }
                    hl.SaveXml(xmlsb);
                    // MessageBox.Show(ii.ToString());
                    //提示暂时去掉 2012-01-07 
                    //if (hl.DrugAnalysis(xmlsb) == 0)
                    //    return true;
                    //else
                    //    if (MessageBox.Show("医嘱中可能存在不合理的用药，是否继续保存\n\n如果继续保存，请按“确定”\n取消保存，请按“取消”",
                    //                            "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1) == DialogResult.Cancel)
                    //        return false;
                    //hlyytype = GetIniString("hlyy", "name", System.Windows.Forms.Application.StartupPath + "\\Hlyy.ini");
                    //美康合理用好接口
                    int li_warn = 0; //返回的最大警示值
                    DataGridEx[] dgv = new DataGridEx[2];
                    Ts_Hlyy_Interface.CfInfo[] cf = new CfInfo[2];
                    dgv[0] = dataGrid_LongOrder;
                    dgv[1] = dataGrid_TempOrder;
                    if (strHlyyType == "美康" && Tjflag == 1)
                    {
                        li_warn = hl.recipe_check(1, dgv, severtime, 0, ref cf, 0); //调用用户自定义自动审查函数
                        //如果审查出黑灯，则提示用户是保继续保存、执行医嘱
                        if (li_warn == 3)
                        {
                            if (MessageBox.Show("PASS系统审查出存在黑灯用药？继续保存、执行处方吗？", "PASS安全用药审查提示",
                                MessageBoxButtons.OKCancel, MessageBoxIcon.Question) == DialogResult.Cancel)
                            {
                                return false;
                            }
                        }
                    }


                }
                return true;
            }
            catch (Exception ex)
            {
                MessageBox.Show(" 错误信息：" + ex.Message);
                return true;
            }
        }
        #endregion
        public string Getpcid(string name)
        {
            DataTable tb = FrmMdiMain.Database.GetDataTable("select id from JC_FREQUENCY where name='" + name + "'");
            if (tb.Rows.Count > 0)
                return tb.Rows[0]["id"].ToString();
            else
                return "";
        }
        public string Getyfid(string name)
        {
            DataTable tb = FrmMdiMain.Database.GetDataTable("select id from JC_USAGEDICTION where name='" + name + "'");
            if (tb.Rows.Count > 0)
                return tb.Rows[0]["id"].ToString();
            else
                return "";
        }

        /// <summary>
        /// 暂时不使用 保存处方和审核都是用Hlyyfx
        /// </summary>
        /// <param name="dge"></param>
        /// <param name="type"></param>
        #region 合理用药保存处方 Modify by zouchihua 2011-12-27
        private void HlyySavecf(DataGridEx dge, int type)
        {
            if (true)
            {
                try
                {
                    doctor = new Doctor(YS_ID, InstanceForm._database);
                }
                catch (Exception err)
                {
                    //MessageBox.Show(err.Message);
                    //this.Close();
                    //MessageBox.Show(err.Message);
                    doctor = new Doctor();
                    //doctor.TypeID = -1;
                }
            }
            else
                doctor = new Doctor();
            // doctor = new Doctor(YS_ID, InstanceForm._database);
            int zflag = 0;//组标记

            DataTable tb = (DataTable)dge.DataSource;
            int flag = 0;



            int CurIndex = dge.CurrentCell.RowNumber;
            //用于保存一组的信息
            int zh = 0;
            string pc = "";//频次
            string yf = "";//用法
            string kyzsj = "";//开医嘱时间
            try
            {
                DateTime severtime = DateManager.ServerDateTimeByDBType(InstanceForm._database);//取数据库时间;
                //new Guid(STAG.Substring(0, 40)), Convert.ToInt64(STAG.Substring(40, 10))
                // string sqlbrxx="select * from VI_ZY_VINPATIENT_INFO where INPATIENT_ID='"+new Guid(STAG.Substring(0, 40))+"' and BABY_ID="+ Convert.ToInt64(STAG.Substring(40, 10))+"";
                //DataTable brxx = FrmMdiMain.Database.GetDataTable(sqlbrxx);
                string xml = "";
                xml = "<safe><doctor_information job_number='" + FrmMdiMain.CurrentUser.UserID + "' date='" + severtime.ToString("yyyy-MM-dd HH:mm:ss") + "'/><doctor_name>" + doctor.Name + "</doctor_name><doctor_type>" + doctor.TypeID + "</doctor_type>"
                + "<department_code>" + DeptID + "</department_code><department_name>" + FrmMdiMain.CurrentDept.DeptName + "</department_name><case_id>" + this.patientInfo1.lbID.Text + "</case_id><inhos_code>" + this.patientInfo1.lbID.Text + "</inhos_code>"
                + "<bed_no>" + this.patientInfo1.lbBed.Text + "</bed_no>"
                 + "<patient_information weight='' height='' birth='" + (Convert.ToDateTime(this.BrxxTb.Rows[0]["BIRTHDAY"])).ToString("yyyy-MM-dd") + "'>"
                 + "<patient_name>" + this.patientInfo1.lbName.Text + "</patient_name><patient_sex>" + this.patientInfo1.lbSex.Text + "</patient_sex><physiological_statms></physiological_statms>"
                 + "<boacterioscopy_effect></boacterioscopy_effect><bloodpressure></bloodpressure><liver_clean></liver_clean><pregnant></pregnant><pdw></pdw>"
                 + "<allergic_history><case><case_code></case_code><case_name></case_name></case> <case><case_code></case_code><case_name></case_name></case><case><case_code></case_code><case_name></case_name></case> </allergic_history>"
                 + "<diagnoses><diagnose type ='0'  name ='" + this.patientInfo1.lbRYZD.Text + "'>" + BrxxTb.Rows[0]["IN_DIAGNOSIS"].ToString() + "</diagnose>"
                 + "<diagnose type ='0'  name =''></diagnose>"
                 + "<diagnose type ='0'  name =''></diagnose></diagnoses></patient_information>";
                xml += "<prescriptions>";
                //if (tb.Rows[dqh]["id"].ToString() == Guid.Empty.ToString())
                {
                    for (int i = 0; i < tb.Rows.Count; i++)
                    {
                        if (tb.Rows[i]["id"] == null || tb.Rows[i]["id"].ToString() == "")
                            continue;
                        if (tb.Rows[i]["xmly"].ToString() == "1")
                        {

                            //如果是一组医嘱的话
                            if (tb.Rows[i]["开始时间"].ToString() != "")
                            {
                                string tzsj = (tb.Rows[i]["停嘱时间"].ToString() == "" ? severtime.AddDays(2).ToShortDateString() : Convert.ToDateTime(tb.Rows[i]["停嘱时间"].ToString()).ToShortDateString());
                                if ((type == 0 && ((Convert.ToDateTime(Convert.ToDateTime(tzsj).ToShortDateString()) > Convert.ToDateTime(severtime.ToShortDateString()) && tb.Rows[i]["status_flag"].ToString() == "5") || tb.Rows[i]["status_flag"].ToString() != "5"))
                                    || (type == 1 && Convert.ToDateTime(Convert.ToDateTime(tb.Rows[i]["开始时间"].ToString()).ToShortDateString()) == Convert.ToDateTime(severtime.ToShortDateString()))//今天开的所有临时医嘱
                                   )
                                {
                                    zh = Convert.ToInt32(tb.Rows[i]["嘱号"].ToString().Trim());
                                    pc = tb.Rows[i]["频率"].ToString().Trim();
                                    yf = tb.Rows[i]["用法"].ToString();
                                    kyzsj = (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss");
                                    flag = 1;
                                    //处方处理
                                    xml += "<prescription  id='" + tb.Rows[i]["id"].ToString() + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                    + "<medicine suspension='false' judge='true'><group_number>" + tb.Rows[i]["嘱号"].ToString().Trim() + "</group_number><general_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</general_name>"
                                    + "<license_number>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</license_number><medicine_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</medicine_name>"
                                    + "<single_dose coef='1'>" + tb.Rows[i]["剂量"].ToString().Trim() + "</single_dose><frequency>" + tb.Rows[i]["频率"].ToString().Trim().Trim() + "</frequency><times></times><unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</unit>"
                                    + "<administer_drugs>" + tb.Rows[i]["用法"].ToString() + "</administer_drugs><begin_time>" + (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</begin_time>"
                                    + "<end_time></end_time><prescription_time>" + (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</prescription_time></medicine></prescription>";
                                }
                                else
                                    flag = 0;
                            }
                            else//其实这里是废代码，保存后的医嘱都存在开医嘱时间
                            {
                                int lszh = Convert.ToInt32(tb.Rows[i]["嘱号"].ToString().Trim());
                                if (lszh == zh)//判断上个医嘱时间
                                    xml += "<prescription  id='" + tb.Rows[i]["id"].ToString() + "' type='" + (type == 0 ? "L" : "T") + "'>"
                                    + "<medicine suspension='false' judge='true'><group_number>" + tb.Rows[i]["嘱号"].ToString().Trim() + "</group_number><general_name>" + tb.Rows[i]["医嘱内容"].ToString() + "</general_name>"
                                    + "<license_number>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</license_number><medicine_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</medicine_name>"
                                    + "<single_dose coef='1'>" + tb.Rows[i]["剂量"].ToString().Trim() + "</single_dose><frequency>" + pc + "</frequency><times></times><unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</unit>"
                                    + "<administer_drugs>" + yf + "</administer_drugs><begin_time>" + kyzsj + "</begin_time>"
                                    + "<end_time></end_time><prescription_time>" + kyzsj + "</prescription_time></medicine></prescription>";
                            }
                        }
                    }
                    xml += "</prescriptions></safe>";
                    hl.SaveDrug(new StringBuilder(xml), 0);
                    // hl.SaveXml(new StringBuilder(xml));
                    //hl.SaveXml(new StringBuilder(xml));
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }
        #endregion

        private string CporderYz(DataTable tb)
        {
            //临床路径医嘱验证
            if (cfg18005.Config.Trim() == "0")
            {
                string ifqy = ApiFunction.GetIniString("SfQy", "SfQy", Constant.ApplicationDirectory + "\\Cpset.ini");
                if (ifqy == "1")
                {
                    string typename = ApiFunction.GetIniString("Tpype", "typename", Constant.ApplicationDirectory + "\\Cpset.ini");

                    if (typename == "曼德罗")
                    {
                        string fhje = Ts_Clinicalpathway_Factory.Ts_Manadal_path.Yzyz(this.BinID.ToString(), this.BabyID.ToString(), Dept_Br.ToString(), WardID.ToString(), this.patientInfo1.lbID.Text, tb, this.patientInfo1.lbIn_Date.Text);
                        return fhje;
                    }
                }
            }
            return "";
        }
        #region 医嘱保存
        private void btSave_Click(object sender, System.EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;

            //Add By Tany 2015-02-12 保存的时候验证一下病人的费别是否发生了变化，如果变化则刷新掉没保存的
            #region 验证费别变化情况
            //Modify By Tany 2015-03-18 这里加上try catch，出错的话返回
            try
            {
                TrasenHIS.BLL.Judgeorder jo = new TrasenHIS.BLL.Judgeorder(FrmMdiMain.Database);
                string strFb = jo.GetLb(patientInfo1.lbID.Text);
                string oldFb = "";
                DataRow dr = patientInfo1.myRow;
                bool isChangeFb = false;
                if (strFb == "自费")
                {
                    if (strFb != dr["jsfs_name"].ToString().Trim())
                    {
                        isChangeFb = true;
                        oldFb = dr["jsfs_name"].ToString().Trim();
                    }
                }
                else if (strFb == "公费")
                {
                    if (strFb != dr["YBLX_NAME"].ToString().Trim())
                    {
                        isChangeFb = true;
                        oldFb = dr["YBLX_NAME"].ToString().Trim();
                    }
                }
                else
                {
                    if (strFb != dr["XZLX_NAME"].ToString().Trim())
                    {
                        isChangeFb = true;
                        oldFb = dr["XZLX_NAME"].ToString().Trim();
                    }
                }

                //Modify by jchl (毛毛按自费)
                //if (isChangeFb )
                if (isChangeFb && BabyID == 0)
                {
                    string ts = "该病人的费别发生变化！！！\r\n\r\n";
                    ts += "原费别：" + oldFb + "\r\n";
                    ts += "现费别：" + strFb + "\r\n\r\n";
                    ts += "出于数据准确性考虑，在点击确定后，系统将清除所有未保存的医嘱！";
                    MessageBox.Show(ts, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    btRefur_Click(null, null);
                    return;
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
                return;
            }
            #endregion

            #region
            if (!(mz || _tszl))
            {
                //#region//Add by Zouchihua 2011-10-12 判断病人的当前科室是不是属于本院区，主要是为了阻止临时跨院业务的病人操作
                //string[] rtnSql = ts_zyhs_classes.BaseFunc.GetBrzt(BinID);
                //if (rtnSql[0] != "0")
                //{
                //    MessageBox.Show("由于跨院转科或者特殊治疗，该病人记录已经冻结不能允许操作！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                //    return;
                //}
                //if (rtnSql[1] != FrmMdiMain.Jgbm.ToString())
                //{
                //    MessageBox.Show("该病人不属于本院区，不允许操作！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                //    return;
                //}
                //#endregion
            }
            #endregion
            //add by zouchihua 2012-5-30
            if ((mz && cfg6047.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "临时医嘱")
                || (_tszl && cfg6049.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "临时医嘱"))
            {
                if (doctor == null || doctor.CF_Right == false)
                {
                    MessageBox.Show("你没有开处方的权限", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
            }
            //Add By Tany 2010-11-16
            if (!mz && !_hs && !hs && !_tszl)
            {
                if (doctor.CF_Right == false)
                {
                    MessageBox.Show("你没有开处方的权限", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
            }

            #region"保存时进行欠费管理"

            try
            {
                string str6058 = "," + cfg6058.Config.Trim() + ",";
                //add by zouchihua 2012-6-12 特殊治疗进行欠费管理

                if (new SystemCfg(6026, InstanceForm._database).Config == "2" && !str6058.Contains("," + FrmMdiMain.CurrentDept.DeptId.ToString() + ","))
                {
                    //出院及死亡病人判断 Modifuy By Tany 2007-12-05
                    //Modify by zouchihua 2013-12-23 7001 这个参数不在使用 6026
                    //   if (new SystemCfg(7001, InstanceForm._database).Config == "是") 
                    {
                        decimal _ye = 0;

                        _ye = Convert.ToDecimal(patientInfo1.lbYE.Text.Trim() == "" ? "0" : patientInfo1.lbYE.Text.Trim());

                        //Modify By Tany 2010-06-18 如果是医保病人，余额=预交金-总费用*费用比例
                        if (patientInfo1.lbJSLX.Text.IndexOf("医保") >= 0)
                        {
                            //首先判断费用比例是不是小于1，如果等于1，则不需要计算
                            decimal bl = Convert.ToDecimal(Convertor.IsNull(InstanceForm._database.GetDataResult("select b.yjj_bl from zy_inpatient a left join jc_yblx b on a.yblx=b.id where a.dischargetype=1 and a.inpatient_id='" + BinID + "'"), "1"));
                            //Modify By Tany 2010-08-07 比例=0的时候相当于不控制欠费
                            if (bl >= 0 && bl < 1)
                            {
                                decimal fee = 0;
                                decimal yjj = 0;
                                fee = Convert.ToDecimal(patientInfo1.lbWJSFY.Text.Trim() == "" ? "0" : patientInfo1.lbWJSFY.Text.Trim());
                                yjj = Convert.ToDecimal(patientInfo1.lbYJK.Text.Trim() == "" ? "0" : patientInfo1.myRow["YJK"].ToString().Trim());

                                _ye = yjj - (fee * bl);
                            }
                        }
                        //判断病人的余额
                        if (_ye < myFunc.GetPatMinExecYE(BinID))
                        {
                            //Add By Tany 2010-11-27 增加对病人入院时间的判断
                            //7072病人入院？小时后控制欠费（0=立即控制）
                            int _hour = Convert.ToInt32(new SystemCfg(7072, InstanceForm._database).Config);
                            DateTime _rysj = Convert.ToDateTime(InstanceForm._database.GetDataResult("select in_date from zy_inpatient where inpatient_id='" + BinID + "'"));
                            if (_rysj.AddHours(_hour) <= DateManager.ServerDateTimeByDBType(InstanceForm._database))
                            {
                                if (MessageBox.Show(patientInfo1.lbBed.Text.Trim() + " 床病人 " + patientInfo1.lbName.Text.Trim() + " 的余额为 " +
                                    patientInfo1.lbYE.Text.Trim() + " 元，已经欠费，是否继续新开医嘱？", "提问",
                                    MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) == DialogResult.No)
                                {
                                    return;
                                }
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }

            #endregion

            if (outType == true) return;
            checkPage();
            DataGridEx[] dgv = new DataGridEx[2];
            dgv[0] = dataGrid_LongOrder;
            dgv[1] = dataGrid_TempOrder;
            if (tc.SelectedTab.Title.Trim() == "长期医嘱")
            {
                if (jlpl(this.dataGrid_LongOrder, 0) == false) { this.btSave.Enabled = true; return; }
                if (cfg6032 == "1" && hl != null)
                {
                    try
                    {
                        Hlyyfx(dgv, 0, 0);//add by zhujh 2017-2-8
                    }
                    catch
                    { }
                    //if (Hlyyfx(dgv, 0, 1) == false) return;//add by zouchihua 2011-12-28
                }
                if (DataSave(this.dataGrid_LongOrder, 0) == true) loadGrid_LongOrder();//刷新数据 保存上传药品
                Cursor = Cursors.Default;
                //if (cfg6032 == "1")
                // HlyySavecf(this.dataGrid_LongOrder, 0);//保存上传药品
                //如果是护士站使用，保存直接发送
                if (_hs)
                {
                    btSend_Click(null, null);
                }
                if (_tszl || mz)
                {
                    //add by zouchihua 2012-03-26  特殊治疗，手术麻醉保存是否自动发送执行医嘱
                    SystemCfg cfg6039 = new SystemCfg(6039);
                    if (cfg6039.Config.ToString() == "1")
                    {
                        btSend_Click(null, null);
                    }
                }
                return;
            }
            if (tc.SelectedTab.Title.Trim() == "临时医嘱")
            {
                if (jlpl(this.dataGrid_TempOrder, 1) == false) { this.btSave.Enabled = true; return; }
                if (cfg6032 == "1" && hl != null)
                {
                    try
                    {
                        Hlyyfx(dgv, 0, 0);//add by zhujh 2017-2-08 保存上传药品
                        //if (Hlyyfx(dgv, 0, 1) == false) return;//add by zouchihua 2011-12-28 保存上传药品
                    }
                    catch { }
                }
                // DataTable tb = (DataTable)this.dataGrid_TempOrder.DataSource;

                #region "Modify by : jchl  住院医生站临时医嘱参数控制药品是否必须输入频率"

                //住院医生站临时医嘱参数控制药品是否必须输入频率 0=不 1=是  
                //手麻不需要录入频率 Modify By Tany 2015-04-01
                if (cfg6202.Config.Trim().Equals("1") && !mz)
                {
                    int iret = 0;
                    string strMsg = "";
                    if (!DoValiDataFrqncy(dataGrid_TempOrder.DataSource as DataTable, out iret, out  strMsg))
                    {
                        //处理选中行
                        int iCell = dataGrid_TempOrder.TableStyles[0].GridColumnStyles.IndexOf(dataGrid_TempOrder.TableStyles[0].GridColumnStyles["频率"]);
                        //定位
                        FocusCell(dataGrid_TempOrder, iret, iCell);
                        MessageBox.Show("药品‘" + strMsg.Trim() + "’没有‘频率’，请保证医嘱完整！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        return;
                    }
                }
                if (cfg29377.Config.Trim().Equals("1") && !mz)
                {
                    int iret = 0;
                    string strMsg = "";
                    if (!XZLDataFrqncy(dataGrid_TempOrder.DataSource as DataTable, out iret, out  strMsg))
                    {
                        //处理选中行
                        int iCell = dataGrid_TempOrder.TableStyles[0].GridColumnStyles.IndexOf(dataGrid_TempOrder.TableStyles[0].GridColumnStyles["频率"]);
                        //定位
                        FocusCell_xzl(dataGrid_TempOrder, iret, iCell);
                        //dataGrid_TempOrder[iret, iCell] = null;
                        MessageBox.Show("治疗项目‘" + strMsg.Trim() + "’没有‘频率’，请保证医嘱完整！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        //dataGrid_TempOrder[iret, iCell].ToString() ="";

                        return;
                    }
                }


              

                #endregion


                if (DataSave(this.dataGrid_TempOrder, 1) == true) loadGrid_TempOrder();//刷新数据
                // if (cfg6032 == "1")
                // HlyySavecf(this.dataGrid_TempOrder, 1);//保存上传药品
                Cursor = Cursors.Default;

                //如果是护士站使用，保存直接发送
                if (_hs)
                {
                    btSend_Click(null, null);
                }
                if (_tszl || mz)
                {
                    //特殊治疗，手术麻醉保存是否自动发送执行医嘱1=是，0=否
                    SystemCfg cfg6039 = new SystemCfg(6039);
                    if (cfg6039.Config.ToString() == "1")
                    {
                        btSend_Click(null, null);
                    }
                }
                return;
            }
            if (tc.SelectedTab.Title.Trim() == this.sTab0)
            {
                DataGrid_ZD_Save(this.dataGrid_LongZD);
                return;
            }
            if (tc.SelectedTab.Title.Trim() == this.sTab1)
            {
                DataGrid_ZD_Save(this.dataGrid_TempZD);
                return;
            }

            this.btSave.Enabled = true;
        }
        #region 检查医嘱错误，并定位错误

        private bool jlpl(DataGridEx myDataGrid1, int sign)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            if (tc.SelectedTab.Title.Trim() == sTab0 || tc.SelectedTab.Title.Trim() == sTab1)
            {
                if (DataIsOk(myTb, myDataGrid1) == false) return false;

                if (myTb.Rows.Count == 1) return false;

                string sZH = "";
                for (int i = 0; i <= myTb.Rows.Count - 1; i++)
                {
                    if (myTb.Rows[i]["医嘱内容"].ToString().Trim() != "")
                    {
                        sZH = (sZH == "" ? myTb.Rows[i]["嘱号"].ToString() : sZH);
                        if (sZH != myTb.Rows[i]["嘱号"].ToString())
                        {
                            MessageBox.Show(this, "不同嘱号的数据不能保存在一个模板中，保存模板失败！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            myDataGrid1.Select(i);
                            return false;
                        }
                    }
                }
                return true;
            }

            try
            {
                string sSql = "select upper(PY_CODE) AS 代码,name as 用法名称 from JC_UsageDiction ";     //医嘱药品用法
                string sSql2 = "select name as 频率名称 ,execnum as 日执行次数,cycleday as 周期,exectime as 时间点,py_code 代码,type from JC_Frequency ";
                if (usageTb == null) usageTb = InstanceForm._database.GetDataTable(sSql);
                if (frequencyTb == null) frequencyTb = InstanceForm._database.GetDataTable(sSql2);
            }
            catch (System.Exception err)
            {
                MessageBox.Show("数据读取错误！\n" + err.ToString());
                return false;
            }
            for (int i = 0; i < myTb.Rows.Count; i++)
            {
                string nr = myTb.Rows[i]["医嘱内容"].ToString();
                string bz = myTb.Rows[i]["status_flag"].ToString();
                if (System.Text.Encoding.Default.GetBytes(nr).Length >= 90 && bz == "0")
                {
                    MessageBox.Show("[" + nr+"]"+"  该条医嘱内容过长！");
                    return false;
                }
            }
            for (int i = 0; i < myTb.Rows.Count; i++)
            {
                string nr = myTb.Rows[i]["医嘱内容"].ToString();
                string bz = myTb.Rows[i]["status_flag"].ToString();
                string yf = myTb.Rows[i]["用法"].ToString();
                string dl = myTb.Rows[i]["滴量"].ToString().Trim();
                DataTable dt = new DataTable();
                dt = getsy_yf();
                try
                {

                    for (int j = 0; j < dt.Rows.Count;j++ )
                    {
                        if (yf ==dt.Rows[j]["yf"].ToString() && dl == "" && bz == "0")
                        {
                            MessageBox.Show("根据医院规定:输液医嘱需填写滴量");
                            return false;
                        }
                    }
                }
                catch
                {

                }

            }


            bool usage = true;//医嘱用法是否正确	
            bool frequency = true;//医嘱频率是否正确
            int BeginNow = 0;
            for (int i = 0; i <= myTb.Rows.Count - 1; i++)
            {
                try
                {
                    if (myTb.Rows[i]["status_flag"] == System.DBNull.Value) continue;
                    string yzType = myQuery.GetyzTypeCode(GetGroupType(myTb, i));//医嘱类型
                    string yz = myTb.Rows[i]["医嘱内容"].ToString().Trim();
                    if (yz == "术后医嘱" || yz == "产后医嘱" || yz == "转科医嘱") continue;
                    if (Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) < 2 && myTb.Rows[i]["医嘱内容"].ToString().Trim() != "")
                    {
                        #region 是否非法用法
                        usage = false;
                        for (int ii = 0; ii < usageTb.Rows.Count; ii++)
                        {
                            if (usageTb.Rows[ii]["用法名称"].ToString().Trim() == myTb.Rows[i]["用法"].ToString().Trim())
                            {
                                usage = true;
                                break;
                            }
                        }
                        if (!(usage == true || myTb.Rows[i]["用法"].ToString().Trim() == ""))
                        {
                            MessageBox.Show("非法用法！请重新选择用法，不要修改或自录！", "用法错误提示：", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            FocusCell(myDataGrid1, i, 10);//9 没有加警示列
                            return false;
                        }
                        #endregion

                        #region 是否非法频率
                        frequency = false;
                        for (int ii = 0; ii < frequencyTb.Rows.Count; ii++)
                        {
                            if (frequencyTb.Rows[ii]["频率名称"].ToString().Trim() == myTb.Rows[i]["频率"].ToString().Trim())
                            {
                                frequency = true;
                                break;
                            }
                        }
                        if (!(frequency == true || myTb.Rows[i]["频率"].ToString().Trim() == "" || myTb.Rows[i]["ntype"].ToString().Trim() == "0"))
                        {
                            MessageBox.Show("非法频率！请重新选择频率，不要修改或自录！", "频率错误提示：", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            FocusCell(myDataGrid1, i, 11);//10 没有加警示列
                            return false;
                        }
                        #endregion

                        #region"Modify by jchl【中药 颗粒剂 医嘱校验】"

                        if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                        {
                            if (yzType == "3" && myTb.Rows[i]["xmly"].ToString() == "1")
                            {
                                string jxNow = GetYpJx(myTb.Rows[i]["Hoitem_id"].ToString().Trim());

                                if (myTb.Rows[i]["用法"].ToString().Trim().Equals("水煎服") && jxNow.Equals("颗粒剂"))
                                {
                                    MessageBox.Show("中草药颗粒剂不允许使用用法【水煎服】,建议使用【水冲服】！", "用法错误提示：", MessageBoxButtons.OK, MessageBoxIcon.Information);

                                    FocusCell(myDataGrid1, i, 10);//9 没有加警示列
                                    return false;
                                }

                                //同组医嘱
                                if (myTb.Rows[i]["开始时间"].ToString().Trim() == "")
                                {
                                    string jxOld = GetYpJx(myTb.Rows[i - 1]["Hoitem_id"].ToString().Trim());

                                    if (jxNow.Equals("颗粒剂") || jxOld.Equals("颗粒剂"))
                                    {
                                        if (!(jxNow.Equals("颗粒剂") && jxOld.Equals("颗粒剂")))
                                        {
                                            FrmMessageBox.Show("中草药颗粒剂不允许和其他饮片类中药混开！请确认！\n\n" +
                                                "(" + jxOld + ") " + myTb.Rows[i - 1]["医嘱内容"].ToString().Trim() + "\n" +
                                                "(" + jxNow + ") " + myTb.Rows[i]["医嘱内容"].ToString().Trim(),
                                                new Font("宋体", 10.5F), Color.Blue, "警告", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                            FocusCell(myDataGrid1, i, 7);//5 没有加警示列
                                            return false;
                                        }
                                    }
                                }
                            }
                        }

                        #endregion

                        #region//外来药品单位判断
                        if (Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["xmly"], "-1")) == 1 && myTb.Rows[i]["hoitem_id"].ToString().Trim() == "-1"
                            && myTb.Rows[i]["执行科室"].ToString().Trim() == "-1" && myTb.Rows[i]["单位"].ToString().Trim() == "")
                        {
                            FrmMessageBox.Show(myTb.Rows[i]["医嘱内容"].ToString().Trim() + " 没有单位，请输入单位",
                                      new Font("宋体", 10.5F), Color.Blue, "警告", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            FocusCell(myDataGrid1, i, 9);//5 没有加警示列
                            return false;
                        }
                        #endregion

                        if ((yzType == "1" || yzType == "2" || yzType == "3") && myTb.Rows[i]["xmly"].ToString() == "1")//Modify zy zouchihua
                        {
                            if (myTb.Rows[i]["开始时间"].ToString().Trim() == "" && myTb.Rows[i]["xmly"].ToString() == "1")//Modify zy zouchihua
                            {
                                if (((myTb.Rows[i]["类型"].ToString().Substring(1, 1).Trim() == "1" || myTb.Rows[i]["类型"].ToString().Substring(1, 1).Trim() == "2") && myTb.Rows[i - 1]["类型"].ToString().Substring(1, 1).Trim() == "3") ||
                                    ((myTb.Rows[i - 1]["类型"].ToString().Substring(1, 1).Trim() == "1" || myTb.Rows[i - 1]["类型"].ToString().Substring(1, 1).Trim() == "2") && myTb.Rows[i]["类型"].ToString().Substring(1, 1).Trim() == "3"))
                                {
                                    FrmMessageBox.Show("同组药品医嘱的类型必须相同！请确认！\n\n" +
                                        "(" + myTb.Rows[i - 1]["类型"].ToString().Trim().Substring(2) + ") " + myTb.Rows[i - 1]["医嘱内容"].ToString().Trim() + "\n" +
                                        "(" + myTb.Rows[i]["类型"].ToString().Trim().Substring(2) + ") " + myTb.Rows[i]["医嘱内容"].ToString().Trim(),
                                        new Font("宋体", 10.5F), Color.Blue, "警告", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                    FocusCell(myDataGrid1, i, 6);//5 没有加警示列
                                    return false;
                                }
                            }

                            #region 判断药品
                            BeginNow = GetGroupBeginRow(myTb, i);
                            //Modify by zouchihua 
                            if (myTb.Rows[i]["剂量"].ToString() == "" && myTb.Rows[i]["用法"].ToString().Trim() != "皮试")
                            {
                                MessageBox.Show("药品‘" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "’没有‘剂量’，请保证医嘱完整！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                //定位
                                FocusCell(myDataGrid1, i, 8);//7 没有加警示列
                                return false;
                            }
                            if (myTb.Rows[BeginNow]["用法"].ToString().Trim() == "" && !(_tszl || mz))
                            {
                                MessageBox.Show("药品‘" + myTb.Rows[BeginNow]["医嘱内容"].ToString().Trim() + "’缺少‘用法’，请保证医嘱完整！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                //定位
                                FocusCell(myDataGrid1, BeginNow, 10);//9 没有加警示列
                                return false;
                            }
                            if (sign == 0)//长嘱
                            {
                                if (myTb.Rows[BeginNow]["频率"].ToString() == "")
                                {
                                    MessageBox.Show("药品‘" + myTb.Rows[BeginNow]["医嘱内容"].ToString().Trim() + "’的使用缺少‘频率’，请保证医嘱完整！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                    //定位
                                    FocusCell(myDataGrid1, BeginNow, 11);//10 没有加警示列
                                    return false;
                                }
                                if (myTb.Rows[BeginNow]["首日执行次数"].ToString() != "")
                                {
                                    int execNum = -1;
                                    for (int iii = 0; iii < frequencyTb.Rows.Count; iii++)
                                    {
                                        if (frequencyTb.Rows[iii]["频率名称"].ToString().IndexOf(myTb.Rows[BeginNow]["频率"].ToString().Trim()) >= 0)
                                        {
                                            execNum = Convert.ToInt32(frequencyTb.Rows[iii]["日执行次数"]);
                                            break;
                                        }
                                    }
                                    if (execNum > 0)
                                    {
                                        if (Convert.ToInt32(myTb.Rows[BeginNow]["首日执行次数"].ToString()) > execNum)
                                        {
                                            MessageBox.Show("首日执行次数超过频率要求！\n次数请不要超过“" + execNum.ToString() + "”。", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                            myTb.Rows[BeginNow]["首日执行次数"] = execNum;
                                            FocusCell(myDataGrid1, BeginNow, 12);//11 没有加警示列
                                            return false;
                                        }
                                        else if (Convert.ToInt32(myTb.Rows[BeginNow]["首日执行次数"].ToString()) < 0)
                                        {
                                            MessageBox.Show("首日执行次数不能小于“0”！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                            myTb.Rows[BeginNow]["首日执行次数"] = execNum;
                                            FocusCell(myDataGrid1, BeginNow, 12);//11 没有加警示列
                                            return false;
                                        }
                                    }
                                }
                            }

                            if (myTb.Rows[i]["执行科室"].ToString() == "-1" && myTb.Rows[i]["医嘱内容"].ToString().IndexOf("「整盒」") < 0)//by add yaokx 2014-3-06加整盒判断
                            {
                                if (myTb.Rows[i]["医嘱内容"].ToString().IndexOf("「自备") < 0
                                    &&
                                    myTb.Rows[i]["医嘱内容"].ToString().IndexOf("「已备") < 0
                                    )
                                {
                                    MessageBox.Show("药品“" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "”已确认“自备”，请重新输入！", "警告", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                    FocusCell(myDataGrid1, i, 6);//5 没有加警示列
                                    return false;
                                }
                            }

                            decimal jl = 0;
                            string cjid = myTb.Rows[i]["hoitem_id"].ToString().Trim();

                            DataView dv = new DataView();
                            dv = SelectDataView;
                            dv.RowFilter = "xmly=1 and order_id=" + cjid;

                            if (cjid != "" && cjid != "-1")
                            {
                                #region 判断药品名称是否被非法修改
                                if (dv.Count > 0)
                                {
                                    string hoitem = dv[0]["医嘱内容"].ToString().Trim();
                                    //								if(dv[0]["医嘱内容"].ToString().IndexOf(hoitem.Trim(),0)<0)
                                    //Modify By Tany 2005-06-10
                                    if (yz.IndexOf(hoitem.Trim(), 0) < 0)
                                    {
                                        FrmMessageBox.Show("你对“" + hoitem + "”药品名字做了非法修改！\n系统将自动恢复药品名称。\n请重新确认内容！", new Font("宋体", 10.5F), Color.Red, "警告", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                        myTb.Rows[i]["医嘱内容"] = hoitem;
                                        //定位
                                        FocusCell(myDataGrid1, i, 6);//5 没有加警示列
                                        return false;
                                    }
                                }
                                else
                                {
                                    MessageBox.Show("请重新输入“" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "”，因为该型号药品被药房停用。\n如果是通过摸板输入的，有必要重新创建摸板。", "警告", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                    //定位
                                    FocusCell(myDataGrid1, i, 6);//5 没有加警示列
                                    return false;
                                }
                                #endregion

                                #region	判断剂量是否超过它的限量
                                decimal syxl = Convert.ToDecimal(dv[0]["syxl"]);
                                if (syxl > 0)//使用限量<=0不判断
                                {
                                    switch (myTb.Rows[i]["dwlx"].ToString())
                                    {
                                        case "1"://含量单位
                                            jl = Convert.ToDecimal(myTb.Rows[i]["剂量"]);
                                            break;
                                        case "2"://包装单位
                                            jl = Convert.ToDecimal(myTb.Rows[i]["剂量"]) * Convert.ToDecimal(dv[0]["dwhl"]);
                                            break;
                                        case "3"://药库单位
                                            jl = Convert.ToDecimal(myTb.Rows[i]["剂量"]) * Convert.ToDecimal(dv[0]["bzsl"]) * Convert.ToDecimal(dv[0]["dwhl"]);
                                            break;
                                        case "4"://药房单位
                                            jl = (Convert.ToDecimal(myTb.Rows[i]["剂量"]) / Convert.ToDecimal(dv[0]["dwbl"])) * Convert.ToDecimal(dv[0]["bzsl"]) * Convert.ToDecimal(dv[0]["dwhl"]);
                                            break;
                                    }

                                    jl = removeZero(jl);

                                    if (jl > syxl)
                                    {
                                        if (MessageBox.Show("药品" + dv[0]["医嘱内容"].ToString() + "的剂量为'" + jl.ToString() + dv[0]["单位"].ToString().Trim() + "'过大，" +
                                            "\n超过它的限量" + removeZero(syxl) + dv[0]["单位"].ToString().Trim() + "！\n是否修改？按“是”修改，按“否”继续。", "警告", MessageBoxButtons.YesNo, MessageBoxIcon.Warning) == DialogResult.Yes)
                                        {
                                            FocusCell(myDataGrid1, i, 7);//6 没有加警示列
                                            return false;
                                        }
                                    }
                                }
                                #endregion

                                //
                                if (sign == 1 && Convert.ToDouble(Convertor.IsNull(myTb.Rows[i]["总量"], "0")) >= 24)
                                {
                                    if (MessageBox.Show("药品" + dv[0]["医嘱内容"].ToString() + "的总量量为'" + Convert.ToDouble(myTb.Rows[i]["总量"]) + "'大于等于24，" +
                                         "！\n是否修改？按“是”修改，按“否”继续。", "警告", MessageBoxButtons.YesNo, MessageBoxIcon.Warning) == DialogResult.Yes)
                                    {
                                        FocusCell(myDataGrid1, i, 7);//6 没有加警示列
                                        return false;
                                    }
                                }

                                //再次判断该药品库存 Modify By Tany 2011-03-28
                                //库存的判断，仅对药品 Add by Tany 2007-08-30
                                if (Convert.ToInt32(myTb.Rows[i]["执行科室"]) > 0)
                                {
                                    //Modify by zouchihua 2012-7-2 临时医嘱用总量来判断库存
                                    DataTable medTb = new DataTable();
                                    if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                                    {
                                        int dwlx = 0;
                                        if (myTb.Rows[i]["总量"].ToString() == "")
                                        {
                                            myTb.Rows[i]["总量"] = myTb.Rows[i]["剂量"];
                                            if (myTb.Rows[i]["jldwlx"].ToString().Trim() != "")
                                                myTb.Rows[i]["dwlx"] = myTb.Rows[i]["jldwlx"];
                                        }
                                        medTb = myQuery.GetYPInfo(Convert.ToInt32(cjid), Convert.ToDouble(myTb.Rows[i]["总量"]), Convert.ToInt32(myTb.Rows[i]["dwlx"]), Convert.ToInt32(myTb.Rows[i]["执行科室"]));

                                        //Modify By Tany 2015-05-26 如果剂量比总量还大，则提示
                                        if (myTb.Rows[i]["jldwlx"].ToString().Trim() == "")
                                        {
                                            myTb.Rows[i]["jldwlx"] = 1;
                                        }
                                        DataTable medJlTb = myQuery.GetYPInfo(Convert.ToInt32(cjid), Convert.ToDouble(myTb.Rows[i]["剂量"]), Convert.ToInt32(myTb.Rows[i]["jldwlx"]), Convert.ToInt32(myTb.Rows[i]["执行科室"]));
                                        //当总量单位是药库单位时，总量算出来的数量还要乘以ydwbl
                                        if (Convert.ToDecimal(medTb.Rows[0]["yl"]) * (Convert.ToDecimal(myTb.Rows[i]["dwlx"]) == 3 ? Convert.ToDecimal(medJlTb.Rows[0]["ydwbl"]) : 1) < Convert.ToDecimal(medJlTb.Rows[0]["yl"]))
                                        {
                                            string msg = "第" + (i + 1) + "行医嘱 【" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "】\r\n";
                                            msg += "剂量为：" + Convert.ToDouble(myTb.Rows[i]["剂量"]) + myTb.Rows[i]["单位"].ToString().Trim() + "\r\n";
                                            msg += "需领药：" + Convert.ToDouble(medJlTb.Rows[0]["yl"]) + medJlTb.Rows[0]["unit"].ToString().Trim() + "\r\n";
                                            msg += "总量为：" + Convert.ToDouble(myTb.Rows[i]["总量"]) + myTb.Rows[i]["总单位"].ToString().Trim() + "\r\n\r\n";
                                            msg += "剂量领药数大于总量，是否继续？";
                                            if (MessageBox.Show(msg, "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                                            {
                                                FocusCell(myDataGrid1, i, 8);//7 没有加警示列
                                                return false;
                                            }
                                        }

                                        //中草药乘以剂数
                                        if (yzType == "3")
                                            medTb = myQuery.GetYPInfo(Convert.ToInt32(cjid), Convert.ToDouble(myTb.Rows[i]["总量"]) * Convert.ToInt32(myTb.Rows[BeginNow]["剂数"].ToString() == "" ? "1" : myTb.Rows[BeginNow]["剂数"].ToString()), Convert.ToInt32(myTb.Rows[i]["dwlx"]), Convert.ToInt32(myTb.Rows[i]["执行科室"]));
                                    }
                                    if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                                        medTb = myQuery.GetYPInfo(Convert.ToInt32(cjid), Convert.ToDouble(myTb.Rows[i]["剂量"]), Convert.ToInt32(myTb.Rows[i]["dwlx"]), Convert.ToInt32(myTb.Rows[i]["执行科室"]));
                                    decimal _ypkc = Convert.ToDecimal(medTb.Rows[0]["ylkc"]);//Modify by tany 2011-03-28 直接使用药品信息里面的用量库存 myQuery.GetYPNum(Convert.ToInt32(myTb.Rows[nrow]["hoitem_id"]), Convert.ToInt32(myTb.Rows[nrow]["执行科室"]));
                                    if (Convert.ToDecimal(medTb.Rows[0]["yl"]) > _ypkc)
                                    {
                                        MessageBox.Show("该种药品当前库存为： " + _ypkc + " ，医嘱每次需要 " + medTb.Rows[0]["yl"].ToString().Trim() + medTb.Rows[0]["unit"].ToString().Trim() + " 不能满足当前数量，请与相关药房联系！");
                                        FocusCell(myDataGrid1, i, 8);//7 没有加警示列
                                        return false;
                                    }
                                }
                            }
                            #endregion

                            #region //add by zouchihua 2013-9-16 单元格离开判断大剂量
                            if (true)
                            {

                                if ((yzType == "1" || yzType == "2" || yzType == "3") && (Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) < 2 || Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) == 9))//没转抄的药品医嘱
                                {
                                    #region 判断剂量是否太大
                                    cjid = Convertor.IsNull(myTb.Rows[i]["hoitem_id"], "-1");

                                    JL = myQuery.GetDose(cjid.ToString());
                                    //如果是药品，并且是外来用药就不判断 add by zouchihu a2013-11-13
                                    if (cjid == "-1" && JL == 0)
                                        JL = 99999;
                                    //Modify by zouchihua 2012-7-1
                                    if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                                    {
                                        if (JL2 != 0 && myTb.Rows[i]["dwlx"].ToString() != "1")//不是含量单位时，剂量默认是1
                                        {
                                            JL = JL2;
                                        }
                                    }
                                    if (tc.SelectedTab.Title.Trim() == "临时期医嘱")
                                    {
                                        if (JL2 != 0 && myTb.Rows[i]["jldwlx"].ToString() != "1")//不是含量单位时，剂量默认是1
                                        {
                                            JL = JL2;
                                        }
                                    }
                                    if (yzType == "3") JL = 10;

                                    if (myTb.Rows[i]["剂量"] == System.DBNull.Value) { myTb.Rows[i]["剂量"] = 0; }


                                    //超过10倍剂量时提示太大
                                    //Modify by jchl
                                    if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                                    {
                                        if (Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) < 2 &&
                                            ((Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()) > JL * 10 && myTb.Rows[i]["DWLX"].ToString().Trim().Equals("1")) || (Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()) > 10 && !myTb.Rows[i]["DWLX"].ToString().Trim().Equals("1"))))
                                        {
                                            if (cfg6074.Config.Trim() == "1")
                                            {
                                                //MessageBox.Show("第" + (i + 1) + "行医嘱 【" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "】" + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "剂量太大，系统强制不允许开立！", "警告");
                                                //myTb.Rows[i]["剂量"] = Decimal.Round(JL, 2);
                                                //定位
                                                if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                                                {
                                                    FocusCell(myDataGrid1, i, 8);//5 没有加警示列
                                                }
                                                else
                                                    FocusCell(myDataGrid1, i, 8);//5 没有加警示列

                                                MessageBox.Show("第" + (i + 1) + "行医嘱 【" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "】" + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "剂量太大，系统强制不允许开立！", "警告");
                                                return false;
                                            }
                                            if (MessageBox.Show("第" + (i + 1) + "行医嘱 【" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "】" + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "剂量太大，你确定使用这个剂量吗？", "警告", System.Windows.Forms.MessageBoxButtons.YesNo, System.Windows.Forms.MessageBoxIcon.Warning) == System.Windows.Forms.DialogResult.No)
                                            {
                                                if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                                                {
                                                    FocusCell(myDataGrid1, i, 8);//5 没有加警示列
                                                }
                                                else
                                                    FocusCell(myDataGrid1, i, 8);//5 没有加警示列

                                                return false;
                                                // myTb.Rows[i]["剂量"] = Decimal.Round(JL, 2);

                                                // DataGridCell myCell = new DataGridCell(nrow, ncol - 1);
                                                //myDataGrid1.CurrentCell = myCell;
                                                //txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ncol - 1];
                                                //txtCol.TextBox.Text = Decimal.Round(JL, 2).ToString();
                                                //txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;
                                            }
                                        }
                                    }
                                    if (tc.SelectedTab.Title.Trim() == "临时期医嘱")
                                    {
                                        if (Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) < 2 &&
                                            ((Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()) > JL * 10 && myTb.Rows[i]["jldwlx"].ToString().Trim().Equals("1")) || (Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()) > 10 && !myTb.Rows[i]["jldwlx"].ToString().Trim().Equals("1"))))
                                        {
                                            if (cfg6074.Config.Trim() == "1")
                                            {
                                                //MessageBox.Show("第" + (i + 1) + "行医嘱 【" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "】" + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "剂量太大，系统强制不允许开立！", "警告");
                                                //myTb.Rows[i]["剂量"] = Decimal.Round(JL, 2);
                                                //定位
                                                if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                                                {
                                                    FocusCell(myDataGrid1, i, 8);//5 没有加警示列
                                                }
                                                else
                                                    FocusCell(myDataGrid1, i, 8);//5 没有加警示列

                                                MessageBox.Show("第" + (i + 1) + "行医嘱 【" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "】" + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "剂量太大，系统强制不允许开立！", "警告");
                                                return false;
                                            }
                                            if (MessageBox.Show("第" + (i + 1) + "行医嘱 【" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "】" + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "剂量太大，你确定使用这个剂量吗？", "警告", System.Windows.Forms.MessageBoxButtons.YesNo, System.Windows.Forms.MessageBoxIcon.Warning) == System.Windows.Forms.DialogResult.No)
                                            {
                                                if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                                                {
                                                    FocusCell(myDataGrid1, i, 8);//5 没有加警示列
                                                }
                                                else
                                                    FocusCell(myDataGrid1, i, 8);//5 没有加警示列

                                                return false;
                                                // myTb.Rows[i]["剂量"] = Decimal.Round(JL, 2);

                                                // DataGridCell myCell = new DataGridCell(nrow, ncol - 1);
                                                //myDataGrid1.CurrentCell = myCell;
                                                //txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ncol - 1];
                                                //txtCol.TextBox.Text = Decimal.Round(JL, 2).ToString();
                                                //txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;

                                            }
                                        }
                                    }
                                    #endregion
                                }
                            }
                            #endregion
                        }
                        else
                        {
                            #region 判断非药品

                            //超99剂量时强控 Add By jchl 2016-09-20
                            if (Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()) > 99)
                            {
                                MessageBox.Show("第" + (i + 1) + "行医嘱 【" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "】" + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "剂量太大，\r\r根据物价科的规定，单次录入总量不能操过99，请修改剂量！", "警告");
                                return false;
                            }

                            //超过10倍剂量时提示太大 Add By Tany 2015-03-13
                            #region 项目超10倍提示
                            if (Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) < 2 && Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()) > 10)
                            {
                                if (cfg6074.Config.Trim() == "1")
                                {
                                    //MessageBox.Show("第" + (i + 1) + "行医嘱 【" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "】" + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "剂量太大，系统强制不允许开立！", "警告");
                                    //myTb.Rows[i]["剂量"] = Decimal.Round(JL, 2);
                                    //定位
                                    if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                                    {
                                        FocusCell(myDataGrid1, i, 8);//5 没有加警示列
                                    }
                                    else
                                        FocusCell(myDataGrid1, i, 8);//5 没有加警示列

                                    MessageBox.Show("第" + (i + 1) + "行医嘱 【" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "】" + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "剂量太大，系统强制不允许开立！", "警告");
                                    return false;
                                }
                                if (MessageBox.Show("第" + (i + 1) + "行医嘱 【" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "】" + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "剂量太大，你确定使用这个剂量吗？", "警告", System.Windows.Forms.MessageBoxButtons.YesNo, System.Windows.Forms.MessageBoxIcon.Warning) == System.Windows.Forms.DialogResult.No)
                                {
                                    if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                                    {
                                        FocusCell(myDataGrid1, i, 8);//5 没有加警示列
                                    }
                                    else
                                        FocusCell(myDataGrid1, i, 8);//5 没有加警示列

                                    return false;
                                    // myTb.Rows[i]["剂量"] = Decimal.Round(JL, 2);

                                    // DataGridCell myCell = new DataGridCell(nrow, ncol - 1);
                                    //myDataGrid1.CurrentCell = myCell;
                                    //txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ncol - 1];
                                    //txtCol.TextBox.Text = Decimal.Round(JL, 2).ToString();
                                    //txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;

                                }
                            }
                            #endregion

                            string yzTypeStr = myTb.Rows[i]["类型"].ToString();
                            if (yzTypeStr == "5-医技" || yzTypeStr == "4-治疗" || yzTypeStr == "6-手术" || yzTypeStr == "8-护理" || yzTypeStr == "9-其他")
                            //if (yzTypeStr == "5" || yzTypeStr == "4" || yzTypeStr == "6" || yzTypeStr == "8" || yzTypeStr == "9")
                            {
                                //Modify by jchl(清除全局变量SelectDataView的RowsFilter)
                                //wait_jchl
                                //DataView dv = new DataView();
                                //dv = SelectDataView;
                                DataView dv = new DataView(SelectDataView.Table);
                                //dv.RowFilter = "xmly=2";

                                dv.RowFilter = "order_id='" + removeZero(Convert.ToDecimal(myTb.Rows[i]["HOItem_ID"].ToString())).ToString() + "' and xmly=2";

                                //Modify By tany 2014-08-09 开的时候没有停用，再次保存停用，需要判断，暂时放过去
                                if (dv.Count > 0)
                                {
                                    string hoitem = dv[0]["医嘱内容"].ToString().Trim();//myTb.Rows[i]["医嘱内容"].ToString().Trim(); Modify By tany 2011-02-15

                                    if (yz.IndexOf(hoitem.Trim(), 0) < 0)
                                    {
                                        FrmMessageBox.Show("你对医嘱内容 [" + hoitem + "] 做了非法修改！\n系统将自动恢复医嘱内容。\n请重新确认内容！", new Font("宋体", 10.5F), Color.Red, "警告", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                        myTb.Rows[i]["医嘱内容"] = hoitem.Trim();
                                        //定位
                                        FocusCell(myDataGrid1, i, 6);//5没有加警示列
                                        return false;
                                    }
                                }
                                else
                                {
                                    FrmMessageBox.Show(myTb.Rows[i]["医嘱内容"].ToString() + "已停用，请重新开立！", new Font("宋体", 10.5F), Color.Red, "警告", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                    FocusCell(myDataGrid1, i, 6);//5没有加警示列
                                    return false;
                                }
                            }
                            #endregion
                        }
                    }
                    else if (Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) == 2)
                    {
                        //在长期医嘱中不是自备药的药品
                        if ((yzType == "1" || yzType == "2" || yzType == "3") && Convert.ToInt32(myTb.Rows[i]["执行科室"]) != -1 && sign == 0)
                        {
                            //判断有效长嘱中是否有停用药品
                            if (myQuery.StopYP(myTb.Rows[i]["hoitem_id"].ToString(), Convertor.IsNull(myTb.Rows[i]["执行科室"], "-1")))
                            {
                                MessageBox.Show("系统发现在该病人的长期医嘱中“" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "”已被药房停用。\n请停止该医嘱后重新开！否则无法统领药品。\n你可以选用同名的其他型号的药品。", "停嘱提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                //定位
                                FocusCell(myDataGrid1, i, 6);//5 没有加警示列
                                return false;
                            }
                        }
                    }
                }
                catch (System.Exception err)
                {
                    MessageBox.Show(err.ToString(), "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    myQuery.SaveLog(DeptID, YS_ID, "医嘱检查错误", this.BinID.ToString() + "医嘱错误" + sign.ToString() + "(" + Convert.ToString(i + 1) + ")：" + err.ToString().Trim(), 1, 41);
                    //定位
                    FocusCell(myDataGrid1, i, 6);//5 没有加警示列
                    return false;
                }
            }
            return true;
        }

        /// <summary>
        /// 获取药品剂量
        /// </summary>
        /// <param name="cjid"></param>
        /// <returns></returns>
        private string GetYpJx(string cjid)
        {
            string ssql = string.Format(@"select s_ypjx from VI_YP_YPCD where cjid='{0}'", cjid);

            string strJx = InstanceForm._database.GetDataResult(ssql).ToString();

            return strJx;
        }

        #endregion

        #region" modify by : jchl 校验临时医嘱 药品 是否输入频率，如false则定位"

        /// <summary>
        /// 
        /// </summary>
        /// <param name="dt"></param>
        /// <param name="row"></param>
        /// <returns></returns>
        private bool DoValiDataFrqncy(DataTable myTb, out int iRow, out string strMsg)
        {
            string sql = "";
            sql = "select  order_id  from zy_xzl ";
            DataTable dt = InstanceForm._database.GetDataTable(sql);
            string sZH = "";
            for (int i = 0; i <= myTb.Rows.Count - 1; i++)
            {
                if (myTb.Rows[i]["status_flag"] == System.DBNull.Value)
                    continue;

                //是否药品
                if (myTb.Rows[i]["xmly"].ToString() == "1")
                {
                    //判断状态
                    if (myTb.Rows[i]["status_flag"].ToString().Equals("0") || myTb.Rows[i]["status_flag"].ToString().Equals("1"))
                    {
                        int BeginNow = GetGroupBeginRow(myTb, i);
                        //药品必须输入频率
                        if (myTb.Rows[BeginNow]["频率"] == DBNull.Value || string.IsNullOrEmpty(myTb.Rows[BeginNow]["频率"].ToString().Trim()))
                        {
                            strMsg = myTb.Rows[i]["医嘱内容"].ToString().Trim();
                            iRow = i;
                            return false;
                        }
                    }
                }
                //是否小治疗
                //for (int m = 0; m < dt.Rows.Count;m++ )
                //{
                //    if (myTb.Rows[i]["hoitem_id"].ToString() ==dt.Rows[m]["order_id"].ToString())
                //    {
                //        //判断状态
                //        if (myTb.Rows[i]["status_flag"].ToString().Equals("0") || myTb.Rows[i]["status_flag"].ToString().Equals("1"))
                //        {
                //            int BeginNow = GetGroupBeginRow(myTb, i);
                //            //小治疗必须输入频率
                //            if (myTb.Rows[BeginNow]["频率"] == DBNull.Value || string.IsNullOrEmpty(myTb.Rows[BeginNow]["频率"].ToString().Trim()))
                //            {
                //                strMsg = myTb.Rows[i]["医嘱内容"].ToString().Trim();
                //                iRow = i;
                //                return false;
                //            }
                //        }
                //    }
                //}
            }
            iRow = -1;
            strMsg = "";
            return true;
        }

        private bool XZLDataFrqncy(DataTable myTb, out int iRow, out string strMsg)
        {
            string sql = "";
            sql = "select  order_id  from zy_xzl ";
            DataTable dt = InstanceForm._database.GetDataTable(sql);
            string sZH = "";
            for (int i = 0; i <= myTb.Rows.Count - 1; i++)
            {
                if (myTb.Rows[i]["status_flag"] == System.DBNull.Value)
                    continue;

                //是否小治疗
                for (int m = 0; m < dt.Rows.Count;m++ )
                {
                    if (myTb.Rows[i]["hoitem_id"].ToString() ==dt.Rows[m]["order_id"].ToString())
                    {
                        //判断状态
                        if (myTb.Rows[i]["status_flag"].ToString().Equals("0") || myTb.Rows[i]["status_flag"].ToString().Equals("1"))
                        {
                            int BeginNow = GetGroupBeginRow(myTb, i);
                            //小治疗必须输入频率
                            if (myTb.Rows[BeginNow]["频率"] == DBNull.Value || string.IsNullOrEmpty(myTb.Rows[BeginNow]["频率"].ToString().Trim()))
                            {
                                strMsg = myTb.Rows[i]["医嘱内容"].ToString().Trim();
                                iRow = i;
                                return false;
                            }
                        }
                    }
                }
            }
            iRow = -1;
            strMsg = "";
            return true;
        }

        #endregion

        #region 定位网格焦点
        private void FocusCell(DataGridEx myDataGrid1, int nrow, int ncol)
        {
            try
            {
                myDataGrid1.Focus();
                DataGridCell myCell = new DataGridCell(nrow, ncol);
                myDataGrid1.CurrentCell = myCell;
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ncol];
                txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;
            }
            catch { }
        }
        #endregion

        #region 定位网格焦点
        private void FocusCell_xzl(DataGridEx myDataGrid1, int nrow, int ncol)
        {
            try
            {
                myDataGrid1.Focus();
                DataGridCell myCell = new DataGridCell(nrow, ncol);
                myDataGrid1.CurrentCell = myCell;
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ncol];
                txtCol.TextBox.Text = "";
                txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;
            }
            catch { }
        }
        #endregion

        #region 非三步提交保存医嘱（2009-03-03）
        //Modify By Tany 
        private bool DataSaveEx(DataGridEx myDataGrid1, int tab)
        {
            this.statusBar1.Text = hint[9].Trim();
            //变量定义
            int i = 0, OtherGroupNum = 0;
            int BeginNow = 0;
            long Order_Num = 0;
            Order_Num = myQuery.GetYzNum(this.BinID, this.DeptID);
            //得到网格的数据
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            //构成SQL语句
            //			string sSql="";
            string sSqlUpdate = "";
            string updateContext = "";//重新被保存的
            string insertContext = "";//新保存的
            string isExecute = "";//已被转抄不能被重新保存的
            Guid OrderID = Guid.Empty;
            long OrderNumCount = 0;
            long execDept = 0;

            int srcs = 0, ypjs = 0;

            string strJS = "1";

            //医嘱号先加1
            //Order_Num++;
            OrderNumCount = Order_Num;
            int beginrow = 0;
            string newSave = "";

            DateTime tempDate = DateManager.ServerDateTimeByDBType(InstanceForm._database);

            //生成数据库访问对象
            RelationalDatabase _Database = InstanceForm._database;

            //数据库事务开始
            _Database.BeginTransaction();
            try
            {
                //循环保存数据,需要插入的数据
                for (i = 0; i <= myTb.Rows.Count - 1; i++)
                {

                    if (myTb.Rows[i]["医嘱内容"].ToString().Trim() != "" && new Guid(myTb.Rows[i]["ID"].ToString().Trim()) == Guid.Empty)
                    {
                        string FirstRow = myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim());

                        //得到当前组的第一条记录
                        BeginNow = GetGroupBeginRow(myTb, i);
                        if (IsGroupFirstRow(myTb, i) == true || !(FirstRow == "1" || FirstRow == "2" || FirstRow == "3")) //是一组医嘱的首行
                        {
                            OrderNumCount++;//嘱号
                            Order_Num++;
                            beginrow = 0;     //一组医嘱中的序号
                        }
                        else
                            beginrow++;
                        if (myTb.Rows[BeginNow]["剂数"].ToString() == "" || myTb.Rows[BeginNow]["剂数"].ToString() == "0")
                            ypjs = 1;
                        else
                        {
                            strJS = myTb.Rows[BeginNow]["剂数"].ToString();
                            ypjs = Convert.ToInt32(Convert.ToDecimal(strJS));
                        }
                        if (pageType == 0) ypjs = 1;//长嘱剂数=1

                        if (myTb.Rows[BeginNow]["首日执行次数"].ToString() == "")
                            srcs = 1;
                        else
                            srcs = Int32.Parse(myTb.Rows[BeginNow]["首日执行次数"].ToString());
                        if (myTb.Rows[i]["嘱号"].ToString().Trim() != "") Order_Num = Convert.ToInt32(myTb.Rows[i]["嘱号"].ToString());
                        //else Order_Num = 0;
                        ssgl._Order_Num = Order_Num;
                        execDept = Convert.ToInt32(myTb.Rows[i]["执行科室"].ToString());
                        if (execDept == 0 || execDept.ToString() == "") execDept = this.DeptID;

                        //非药品医嘱
                        if (myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "1" && myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "2" && myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "3")
                        {
                            string strType2 = myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim());
                            myQuery.InsertOrderrecord(_Database, OrderID, Order_Num, BinID, this.DeptID, WardID.ToString(), tab, Convert.ToInt32(strType2),
                                this.YS_ID, Convert.ToInt32(myTb.Rows[i]["HOItem_ID"].ToString()), "", 1, myTb.Rows[i]["医嘱内容"].ToString(),
                                Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()), 1, myTb.Rows[i]["单位"].ToString(), myTb.Rows[i]["规格"].ToString(), tempDate, Convert.ToDateTime(myTb.Rows[BeginNow]["开始时间"]),
                                srcs, myTb.Rows[BeginNow]["用法"].ToString(), myTb.Rows[BeginNow]["频率"].ToString(), this.YS_ID, 0, Convert.ToInt16(myTb.Rows[BeginNow]["status_flag"].ToString()),
                                this.BabyID, (Dept_Br == 0 ? this.DeptID : Dept_Br), Convert.ToInt32(execDept), "", beginrow, -1, Guid.Empty, 0, 0, OrderNumCount, FrmMdiMain.Jgbm);
                        }
                        else//药品医嘱
                        {
                            string d1 = "1";
                            if (myTb.Rows[i]["dwlx"] == System.DBNull.Value) myTb.Rows[i]["dwlx"] = d1;
                            int mngNum;
                            if (myTb.Rows[i]["mngtype"] != System.DBNull.Value) mngNum = Convert.ToInt32(myTb.Rows[i]["mngtype"].ToString());
                            else mngNum = tab;

                            string medType = myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString());
                            string hoitemid = Convertor.IsNull(myTb.Rows[i]["HOItem_ID"], "0").ToString();     //如果没有HOItem_ID的项目就为0
                            int medTypeId = 0;
                            if (hoitemid == "0")
                            {
                                medTypeId = 0;
                            }
                            if (medType == "1") medTypeId = 1;
                            else if (medType == "2") medTypeId = 2;
                            else if (medType == "3") medTypeId = 3;
                            else medTypeId = 0;

                            string strType = myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim());
                            myQuery.InsertOrderrecord(_Database, OrderID, Order_Num, BinID, this.DeptID, this.WardID.ToString(), mngNum, Convert.ToInt32(medType),
                                this.YS_ID, Convert.ToInt64(myTb.Rows[i]["HOItem_ID"]), myTb.Rows[i]["HOItem_ID"].ToString(), Convert.ToInt32(myTb.Rows[i]["xmly"]), myTb.Rows[i]["医嘱内容"].ToString(), Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()),
                                ypjs, myTb.Rows[i]["单位"].ToString(), myTb.Rows[i]["规格"].ToString(), tempDate, Convert.ToDateTime(myTb.Rows[BeginNow]["开始时间"]), srcs, myTb.Rows[BeginNow]["用法"].ToString(),
                                myTb.Rows[BeginNow]["频率"].ToString(), this.YS_ID, 0, Convert.ToInt16(myTb.Rows[BeginNow]["status_flag"].ToString()), this.BabyID,
                                (Dept_Br == 0 ? this.DeptID : Dept_Br), Convert.ToInt32(execDept), Convertor.IsNull(myTb.Rows[BeginNow]["滴量"], ""), beginrow, Convert.ToInt16(myTb.Rows[i]["ps_flag"]), new Guid(myTb.Rows[i]["ps_orderid"].ToString()),
                                Convert.ToInt16(myTb.Rows[i]["dwlx"].ToString()), Convert.ToInt16(Convertor.IsNull(myTb.Rows[BeginNow]["jz_flag"], "0")), OrderNumCount, FrmMdiMain.Jgbm);

                        }
                        insertContext += "\n" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "  " + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "  " + myTb.Rows[BeginNow]["频率"].ToString().Trim();
                    }
                    else
                    {
                        OtherGroupNum++;
                        if (OtherGroupNum == 1)
                        {
                            if (Order_Num == OrderNumCount)
                                Order_Num++;
                            OrderNumCount = Order_Num;
                        }
                    }
                }

                _Database.CommitTransaction();
            }
            catch (System.Exception err)
            {
                _Database.RollbackTransaction();
                MessageBox.Show("保存失败！\n\n第" + Convert.ToString(i + 1) + "行医嘱：内容格式错误！ 请重新输入！\n返回。", "错误提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                //定位
                myDataGrid1.Focus();
                DataGridCell myCell = new DataGridCell(i, 7);//5 没有加警示列
                myDataGrid1.CurrentCell = myCell;
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[5];
                txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;
                //保存出错信息
                myQuery.SaveLog(DeptID, YS_ID, "医嘱保存错误", this.BinID.ToString() + "新开医嘱保存错误" + tab.ToString() + "(" + Convert.ToString(i + 1) + ")：" + err.ToString().Trim(), 1, 4);
                return false;
            }

            _Database.BeginTransaction();
            try
            {
                //循环保存数据,需要更新的数据
                long userID = 0;
                for (i = 0; i <= myTb.Rows.Count - 1; i++)
                {
                    if (myTb.Rows[i]["医嘱内容"].ToString().Trim() != "" && new Guid(myTb.Rows[i]["ID"].ToString().Trim()) != Guid.Empty)
                    {
                        if (IsGroupFirstRow(myTb, i) == true)//为一组医嘱的第一行
                        {
                            BeginNow = i;
                            beginrow = 0;
                        }
                        else
                            beginrow++;
                        if (myTb.Rows[BeginNow]["剂数"].ToString() == "" || myTb.Rows[BeginNow]["剂数"].ToString() == "0")
                            ypjs = 1;
                        else
                        {
                            strJS = myTb.Rows[BeginNow]["剂数"].ToString();
                            ypjs = Convert.ToInt32(Convert.ToDecimal(strJS));
                        }
                        if (myTb.Rows[BeginNow]["首日执行次数"].ToString() == "")
                            srcs = 1;
                        else
                            srcs = Int32.Parse(myTb.Rows[BeginNow]["首日执行次数"].ToString());

                        //在医嘱ID不为空的且不为0的情况下，取出status_flag==0即未校对医嘱出来，全部更新一遍
                        OrderID = new Guid(myTb.Rows[i]["ID"].ToString().Trim());

                        execDept = Convert.ToInt32(myTb.Rows[i]["执行科室"].ToString());
                        if (execDept == 0) execDept = this.DeptID;

                        if (OrderID != Guid.Empty)//在不为空行的情况下
                        {
                            //status_flag==0或1的医嘱,即：更新所有未发送及未转抄的医嘱
                            if (Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) == 0 || Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) == 1 || Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) == 9)
                            {
                                //判断是否是本人开的医嘱
                                if (myTb.Rows[i]["Order_Doc"].ToString() == this.YS_ID.ToString() || lg == 3)
                                {
                                    userID = Convert.ToInt64(myTb.Rows[i]["Order_Doc"]);
                                }
                                else
                                {
                                    continue;
                                }
                                //判断已发送的医嘱是否已被转抄执行
                                if (Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) == 1 && myQuery.ISexecute(OrderID))
                                {
                                    isExecute += "\n" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "  " + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "  " + myTb.Rows[BeginNow]["频率"].ToString().Trim();
                                    continue;
                                }
                                string yz = myTb.Rows[i]["医嘱内容"].ToString().Trim();
                                if (yz == "术后医嘱" || yz == "产后医嘱" || yz == "转科医嘱")
                                {
                                    //myTb.Rows[i]["剂量"] = 0;
                                    //myTb.Rows[BeginNow]["用法"] = "";
                                    //myTb.Rows[BeginNow]["频率"] = "";
                                    continue;
                                }
                                //非药品医嘱
                                //								if(char.IsNumber(myTb.Rows[i]["HOItem_ID"].ToString(),0)==true)
                                if (myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "1" && myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "2" && myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "3")
                                {
                                    myQuery.InsertOrderrecord(_Database, OrderID, Order_Num, BinID, this.DeptID, WardID.ToString(), tab, Convert.ToInt32(myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim())),
                                        userID, Convert.ToInt32(myTb.Rows[i]["HOItem_ID"].ToString()), "", 1, myTb.Rows[i]["医嘱内容"].ToString(),
                                        Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()), 1, myTb.Rows[i]["单位"].ToString(), myTb.Rows[i]["规格"].ToString(), tempDate, Convert.ToDateTime(myTb.Rows[BeginNow]["开始时间"]),
                                        srcs, myTb.Rows[BeginNow]["用法"].ToString(), myTb.Rows[BeginNow]["频率"].ToString(), this.YS_ID, 0, Convert.ToInt16(myTb.Rows[BeginNow]["status_flag"].ToString()),
                                        this.BabyID, (Dept_Br == 0 ? this.DeptID : Dept_Br), Convert.ToInt32(execDept), "", beginrow, -1, Guid.Empty, 0, 0, 0, FrmMdiMain.Jgbm);
                                    //sSqlUpdate = "UPDATE ZY_ORDERRECORD set nType=" + myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim()) + "Order_Doc=T.ORDER_DOC,HOItem_ID=" + myTb.Rows[i]["HOItem_ID"] + "," +
                                    //    " Item_Code=T.ITEM_CODE,cjid=T.CJID,Order_context='" + myTb.Rows[i]["医嘱内容"] + "',Num=" + myTb.Rows[i]["剂量"] + ",Dosage=1,Unit='" + myTb.Rows[i]["单位"] + "'," +
                                    //    " order_spec=T.SPEC,Order_bDate='" + myTb.Rows[BeginNow]["开始时间"] + "',First_times=" + srcs + ",Order_Usage='" + myTb.Rows[BeginNow]["用法"] + "'," +
                                    //    " frequency='" + myTb.Rows[BeginNow]["频率"] + "'," + "Operator=" + this.YS_ID.ToString() + ",Delete_Bit=T.DELETE_BIT,baby_id=T.BABY_ID,exec_dept=" + execDept + ",serial_no=" + beginrow +
                                    //    " WHERE Order_ID=" + OrderID.ToString() + " and status_flag in (0,1)";
                                }
                                else//药品医嘱
                                {
                                    //构成SQL语句,并执行,默认婴儿ID为0，医嘱录入人为医生本人，默认病人科室为医生科室,中草药剂量默认为1,操作员为医生本人

                                    string d1 = "1";
                                    if (myTb.Rows[i]["dwlx"] == System.DBNull.Value) myTb.Rows[i]["dwlx"] = d1;
                                    string strItem = "";
                                    string medType = myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim());
                                    int medTypeId = 0;
                                    if (char.IsNumber(myTb.Rows[i]["HOItem_ID"].ToString(), 0) == true)
                                    {
                                        strItem = myTb.Rows[i]["Item_Code"].ToString();
                                        string hoitemid = Convertor.IsNull(myTb.Rows[i]["HOItem_ID"], "0").ToString();     //如果没有HOItem_ID的项目就为0
                                        if (hoitemid == "0")
                                        {
                                            medTypeId = 0;
                                        }
                                    }
                                    else//被更新的药品代码
                                    {
                                        strItem = myTb.Rows[i]["HOItem_ID"].ToString();
                                        if (medType == "1") medTypeId = 1;
                                        else if (medType == "2") medTypeId = 2;
                                        else if (medType == "3") medTypeId = 3;
                                        else medTypeId = 0;
                                    }
                                    myQuery.InsertOrderrecord(_Database, OrderID, Order_Num, BinID, this.DeptID, this.WardID.ToString(), tab, Convert.ToInt32(medType),
                                        userID, Convert.ToInt64(myTb.Rows[i]["HOItem_ID"]), strItem, Convert.ToInt32(myTb.Rows[i]["xmly"]), myTb.Rows[i]["医嘱内容"].ToString(), Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()),
                                        ypjs, myTb.Rows[i]["单位"].ToString(), myTb.Rows[i]["规格"].ToString(), tempDate, Convert.ToDateTime(myTb.Rows[BeginNow]["开始时间"]), srcs, myTb.Rows[BeginNow]["用法"].ToString(),
                                        myTb.Rows[BeginNow]["频率"].ToString(), this.YS_ID, 0, Convert.ToInt16(myTb.Rows[BeginNow]["status_flag"].ToString()), this.BabyID,
                                        (Dept_Br == 0 ? this.DeptID : Dept_Br), Convert.ToInt32(execDept), myTb.Rows[BeginNow]["滴量"].ToString(), beginrow, Convert.ToInt16(myTb.Rows[i]["ps_flag"]), new Guid(myTb.Rows[i]["ps_orderid"].ToString()),
                                        Convert.ToInt16(myTb.Rows[i]["dwlx"].ToString()), Convert.ToInt16(Convertor.IsNull(myTb.Rows[i]["jz_flag"], "0")), OrderNumCount, FrmMdiMain.Jgbm);
                                    //sSqlUpdate = "UPDATE ZY_ORDERRECORD set nType=" + myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim()) + ",Item_Code='" + strItem + "'," +
                                    //    " Order_context='" + myTb.Rows[i]["医嘱内容"] + "',Num=" + myTb.Rows[i]["剂量"] + ",Dosage=" + ypjs + ",Unit='" + myTb.Rows[i]["单位"] + "'," +
                                    //    " Order_bDate='" + myTb.Rows[BeginNow]["开始时间"] + "',First_times=" + srcs + ",Order_Usage='" + myTb.Rows[BeginNow]["用法"] + "'," +
                                    //    " frequency='" + myTb.Rows[BeginNow]["频率"] + "',dropsper='" + myTb.Rows[BeginNow]["滴量"].ToString() + "',Operator=" + this.YS_ID.ToString() + ",exec_dept=" + execDept + ",serial_no=" + beginrow + "," +
                                    //    " c1='" + myTb.Rows[i]["c1"] + "',d1=" + myTb.Rows[i]["d1"] + " WHERE Order_ID=" + OrderID.ToString() + " and status_flag in (0,1)";
                                }

                                updateContext += "\n" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "  " + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "  " + myTb.Rows[BeginNow]["频率"].ToString().Trim();
                                //_Database.DoCommand(sSqlUpdate);
                            }
                        }
                    }
                }

                _Database.CommitTransaction();

                if (insertContext != "") newSave += "\n\n⊙以下新增医嘱被保存：" + insertContext;
                if (updateContext != "") newSave += "\n\n⊙以下医嘱被重新保存：" + updateContext;
                if (isExecute != "") newSave += "\n\n⊙以下医嘱已被护士站执行，保存无效：" + isExecute;
                MessageBox.Show("保存完成！" + newSave, "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);

            }
            catch (System.Exception err)
            {
                _Database.RollbackTransaction();

                if (insertContext != "") newSave += "⊙以下新增医嘱保存成功！：" + insertContext;

                string errStr = "\n修改医嘱保存失败！！！\n";

                MessageBox.Show(newSave + errStr + "\n第" + Convert.ToString(i + 1) + "行医嘱：内容格式错误！ 请重新输入！\n返回。", "错误提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                //定位
                myDataGrid1.Focus();
                DataGridCell myCell = new DataGridCell(i, 7);//5 没有加警示列
                myDataGrid1.CurrentCell = myCell;
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[5];
                txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;
                //保存出错信息
                myQuery.SaveLog(DeptID, YS_ID, "医嘱修改错误", this.BinID.ToString() + "医嘱修改保存错误" + tab.ToString() + "(" + Convert.ToString(i + 1) + ")：" + err.ToString().Trim(), 1, 4);
                return true;
            }
            finally
            {
                updateXH(myTb);//在医嘱组中重新排序（因为有插入的记录）
            }
            return true;
        }
        #endregion

        #region 账单保存的方法
        /// <summary>
        /// 账单保存的方法
        /// </summary>
        /// <param name="myDataGrid1"></param>
        /// <param name="tab"></param>
        /// <returns></returns>
        private void DataGrid_ZD_Save(DataGridEx datagrid1)
        {
            DataTable myTb = (DataTable)datagrid1.DataSource;
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            if (myTb.Rows.Count <= 0)
            {
                MessageBox.Show("填入的数据不完整，不能保存，请检查", "提示！", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                return;
            }
            if (BinID == Guid.Empty)
            {
                MessageBox.Show("没有找到病人信息，请重新确认！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                return;
            }
            //Modify by zouchihfua 2011-11-16  病人所在科室机构编码
            string[] rtnSql = ts_zyhs_classes.BaseFunc.GetBrzt(BinID);
            int BrJgbm = Convert.ToInt32(rtnSql[1]);
            int i, serial_no = 0, iYZH = 0;
            int yztype = (tc.SelectedTab.Title.Trim() == sTab0 ? 2 : 3);
            string sSql = "";

            this.DataGrid_ZD_ZL(datagrid1);  //整理账单的方法

            //数据正确性判断
            if (DataIsOk(myTb, datagrid1) == false) return;

            //初始化医嘱
            sSql = @"select max(Group_Id) as YZH " +
                "  from Zy_OrderRecord " +
                " where inpatient_id='" + BinID + "'" +
                "       and baby_id=" + BabyID + "";

            DataTable myTempTb = InstanceForm._database.GetDataTable(sSql);
            if (myTempTb.Rows[0]["YZH"].ToString().Trim() == "")
            {
                iYZH = 0;
            }
            else
            {
                iYZH = Convert.ToInt32(myTempTb.Rows[0]["YZH"]);
            }
            //Modify by zouchihfua 2011-10-31 

            //2手术申请 需要修改


            //3 转科
            if (Apply_type == 0)
            {
                string zk = "select id from ZY_TRANSFER_DEPT where INPATIENT_ID='" + BinID + "' and  CANCEL_BIT=0 and FINISH_BIT=1 order by TRANSFER_DATE desc";//最近一次转科
                DataTable temptb = FrmMdiMain.Database.GetDataTable(zk);
                if (temptb.Rows.Count > 0)
                {
                    tsapply_id = new Guid(temptb.Rows[0]["id"].ToString());
                    Apply_type = 3;
                }
            }

            InstanceForm._database.BeginTransaction();
            try
            {
                #region 循环保存数据
                for (i = 0; i <= myTb.Rows.Count - 1; i++)
                {
                    if (myTb.Rows[i]["医嘱内容"].ToString().Trim() != "")
                    {
                        //首次
                        int j = 1;
                        if (myTb.Rows[i]["首次"].ToString() != "")
                        {
                            j = Convert.ToInt16(myTb.Rows[i]["首次"]);
                        }

                        //取医嘱号
                        if ((i == 0) || (i > 0 && myTb.Rows[i]["嘱号"].ToString() != myTb.Rows[i - 1]["嘱号"].ToString()))
                        {
                            iYZH += 1;
                            serial_no = 0;
                        }
                        else serial_no += 1;

                        decimal v_price = myTb.Rows[i]["单价"].ToString().Trim() == myTb.Rows[i]["oldprice"].ToString().Trim() ? 0 : Convert.ToDecimal(myTb.Rows[i]["单价"].ToString().Trim());
                        //Add By Tany 2015-01-07
                        decimal zfbl = decimal.Parse(myTb.Rows[i]["zfbl"].ToString().Trim() == "" ? "1" : myTb.Rows[i]["zfbl"].ToString().Trim());
                        //构成SQL语句,并执行
                        //Modify By Tany 2004-10-23 加入price 主要针对单价为0的项目
                        sSql = @"INSERT INTO ZY_ORDERRECORD( " +
                            "ORDER_ID,INPATIENT_ID,Baby_ID,WARD_ID,DEPT_BR,DEPT_ID, " +
                            "MNGTYPE,ORDER_BDATE,GROUP_ID,NTYPE, " +
                            "HOITEM_ID,XMLY,ORDER_CONTEXT,NUM,DOSAGE,UNIT,ORDER_USAGE,FREQUENCY, " +
                            "EXEC_DEPT,FIRST_TIMES,STATUS_FLAG, " +
                            "AUDITING_USER,AUDITING_DATE,OPERATOR,BOOK_DATE,SERIAL_NO,price,jgbm,iskdksly,tsapply_id,Apply_type,zfbl) " +
                            "VALUES('" + PubStaticFun.NewGuid() + "' ,'" +
                            BinID + "'," + BabyID + ",'" + new Department(Dept_Br, InstanceForm._database).WardId + "'," + Dept_Br + "," + DeptID + "," +
                            GetMngType(tc.SelectedTab.Title.Trim()) + ",GetDate()," + iYZH.ToString() + "," + myTb.Rows[i]["类型"].ToString().Substring(0, 1) + "," +
                            myTb.Rows[i]["HOItem_ID"] + ",2,'" + myTb.Rows[i]["医嘱内容"] + "'," + myTb.Rows[i]["剂量"] + ",1,'" + myTb.Rows[i]["单位"] + "','" + myTb.Rows[i]["用法"] + "','" + myTb.Rows[i]["频率"] + "'," +
                            myTb.Rows[i]["Exec_Dept"] + "," + j + ",2," +
                            InstanceForm._currentUser.EmployeeId + ",getdate() ," + InstanceForm._currentUser.EmployeeId + ",getdate()," + serial_no.ToString() +
                            "," + v_price + "," + BrJgbm + "," + _iskdksly + ",'" + tsapply_id + "'," + Apply_type + "," + zfbl + ")";

                        InstanceForm._database.DoCommand(sSql);
                    }
                }
                #endregion

                InstanceForm._database.CommitTransaction();
                MessageBox.Show(this, "保存数据成功", "OK", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }
            catch (System.Data.OleDb.OleDbException err)
            {
                InstanceForm._database.RollbackTransaction();
                MessageBox.Show(this, "保存数据失败！（" + err.ToString() + "）", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            catch (Exception err)
            {
                InstanceForm._database.RollbackTransaction();
                MessageBox.Show(this, "保存数据失败！（" + err.ToString() + "）", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            if (tc.SelectedTab.Title.Trim() == sTab0)
            {
                InitGrd_LongZD();
            }
            if (tc.SelectedTab.Title.Trim() == sTab1)
            {
                InitGrd_TempZD();
                //手术麻醉直接发送
                if (mz || _tszl)
                {
                    SystemCfg cfg6041 = new SystemCfg(6041);
                    if (cfg6041.Config.Trim() == "1")
                        myFunc.ExecOrdersWithData(this.DeptID, InstanceForm._currentDept.WardId, InstanceForm._currentDept.WardDeptId, this.YS_ID, this.BinID, this.BabyID, DateManager.ServerDateTimeByDBType(InstanceForm._database), BrJgbm);
                }
            }
        }

        private int GetMngType(string _tabPageName)
        {
            int _mngType = 2;

            switch (_tabPageName)
            {
                case "长期账单":
                    _mngType = 2;
                    break;
                case "临时账单":
                    _mngType = 3;
                    break;
            }
            return _mngType;
        }
        //数据是否为空
        private bool DataIsOk(DataTable myTb, DataGridEx myDataGrid)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //只有一行，而且医嘱内容为空值，返回错误
            if (myTb.Rows.Count == 1 && myTb.Rows[0]["医嘱内容"].ToString().Trim() == "")
            {
                MessageBox.Show(this, "第1行数据错误！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                myDataGrid.Select(0);
                return false;
            }

            for (int nrow = 0; nrow <= myTb.Rows.Count - 1; nrow++)
            {
                int j = nrow + 1;

                if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim() == "") continue;

                if (myTb.Rows[nrow]["嘱号"].ToString().Trim() != "" && myTb.Rows[nrow]["类型"].ToString().Trim() != ""
                    //					&& myTb.Rows[nrow]["HOItem_ID"].ToString().Trim()!=""  
                    && myTb.Rows[nrow]["医嘱内容"].ToString().Trim() != ""
                    && myTb.Rows[nrow]["剂量"].ToString().Trim() != "" && Convert.ToDouble(myTb.Rows[nrow]["剂量"].ToString()) >= 0
                    && myTb.Rows[nrow]["单价"].ToString().Trim() != "" && Convert.ToDouble(myTb.Rows[nrow]["单价"].ToString()) > 0
                    //					&& myTb.Rows[nrow]["执行科室"].ToString().Trim()!=""   && myTb.Rows[nrow]["Exec_Dept"].ToString().Trim()!="" 
                    && ((tc.SelectedTab.Title.Trim() == sTab0
                    && myTb.Rows[nrow]["首次"].ToString().Trim() != "" && Convert.ToSingle(myTb.Rows[nrow]["首次"]) >= 0
                    //					&& Convert.ToSingle(myTb.Rows[nrow]["首次"]) <= Convert.ToSingle(myTb.Rows[nrow]["times_defalut"])
                    && myTb.Rows[nrow]["频率"].ToString().Trim() != "")
                    || (tc.SelectedTab.Title.Trim() == sTab1)))
                {
                    DataTable tmpTb = new DataTable();
                    string tmpSql = "";
                    if (myTb.Rows[nrow]["用法"].ToString().Trim() != "")
                    {
                        tmpSql = "select 1 from JC_USAGEDICTION where name='" + myTb.Rows[nrow]["用法"].ToString().Trim() + "'";
                        tmpTb = InstanceForm._database.GetDataTable(tmpSql);
                        if (tmpTb == null || tmpTb.Rows.Count == 0)
                        {
                            MessageBox.Show(this, "第 " + j.ToString() + " 行" + "用法数据错误，请检查！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            myDataGrid.Select(nrow);
                            return false;
                        }
                    }
                    if (myTb.Rows[nrow]["频率"].ToString().Trim() != "")
                    {
                        tmpSql = "select 1 from JC_FREQUENCY where name='" + myTb.Rows[nrow]["频率"].ToString().Trim() + "'";
                        tmpTb = InstanceForm._database.GetDataTable(tmpSql);
                        if (tmpTb == null || tmpTb.Rows.Count == 0)
                        {
                            MessageBox.Show(this, "第 " + j.ToString() + " 行" + "频率数据错误，请检查！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            myDataGrid.Select(nrow);
                            return false;
                        }
                    }
                    continue;
                }
                else
                {
                    MessageBox.Show(this, "第 " + j.ToString() + " 行" + "数据错误，请检查！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    myDataGrid.Select(nrow);
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region 用三步递交保存医嘱（2005-4-21修改）
        private bool DataSave(DataGridEx myDataGrid1, int tab)
        {
            this.statusBar1.Text = hint[9].Trim();
            //变量定义
            int i = 0;
            int BeginNow = 0;
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //得到网格的数据
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            Guid newguid = Guid.NewGuid();

            string sSqlUpdate = "";
            string updateContext = "";//重新被保存的
            string insertContext = "";//新保存的
            string isExecute = "";//已被转抄不能被重新保存的
            Guid OrderID = Guid.Empty;
            long OrderNumCount = 0;//自定义组号
            long Order_Num = 0;//新加记录=0，在已保存医嘱组中插入新记录为当前组的组号
            string outStr = "";
            long execDept = 0;

            int srcs = 0, ypjs = 0;

            string strJS = "1";

            int beginrow = 0;
            string newSave = "";

            DateTime tempDate = DateManager.ServerDateTimeByDBType(InstanceForm._database);
            string erStr = "";
            //Modify by zouchihfua 2011-11-16  病人所在科室机构编码
            string[] rtnSql = ts_zyhs_classes.BaseFunc.GetBrzt(BinID);
            int BrJgbm = Convert.ToInt32(rtnSql[1]);
            int jsd = -1;
            //2手术申请 需要修改

            //3 转科
            if (Apply_type == 0)
            {
                string zk = "select id from ZY_TRANSFER_DEPT where INPATIENT_ID='" + BinID + "' and  CANCEL_BIT=0 and FINISH_BIT=1 order by TRANSFER_DATE desc";//最近一次转科
                DataTable temptb = FrmMdiMain.Database.GetDataTable(zk);
                if (temptb.Rows.Count > 0)
                {
                    tsapply_id = new Guid(temptb.Rows[0]["id"].ToString());
                    Apply_type = 3;
                }
            }
            //int jsd= 

            //第一步
            try
            {
                //医嘱验证
                if (CporderYz(myTb).Contains("操作取消"))
                {
                    MessageBox.Show("医嘱保存没有成功,请输入变异理由!");
                    return false;
                }
                //modify by jchl(整合加入zfbl)
                erStr = myQuery.CommitOrderrecord(InstanceForm._database, Guid.Empty, 0, BinID, 0, "", 0, 0, 0, 0, "", 1, "", 0, 0, "", "", tempDate, tempDate, 0, "", "", 0, 0, 0, 0, 0, 0, "", 0, -1, Guid.Empty, 0, 0, 0, 1, outStr, BrJgbm, _iskdksly, tsapply_id, Apply_type, -1, 1, 0, "", "1", newguid, price, 1,"0");
            }
            catch (Exception err)
            {
                MessageBox.Show(erStr + err.ToString(), "错误提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return false;
            }
            int ts = 1;
            decimal zsl = 0;
            string zsldw = "";
            string jldwlx = "1";
            //第二步
            try
            {
                //DataTable dtDia = GetDiagnosis();

                #region 循环保存数据,需要插入的数据

                for (i = 0; i <= myTb.Rows.Count - 1; i++)
                {
                    int d = myTb.Rows.Count;
                    BeginNow = GetGroupBeginRow(myTb, i);
                    if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                    {
                        if (myTb.Rows[i]["HOitem_ID"].ToString() != "")
                        {
                            DataTable _dt = InstanceForm._database.GetDataTable("select * from vi_yp_ypcd where cjid = " + myTb.Rows[i]["HOitem_ID"] + " ");
                            if (_dt.Rows.Count != 0)
                            {
                                if (cfg6094.Config != "")
                                {
                                    if (_dt.Rows[0]["mzyp"].ToString() == "True")
                                    {
                                        if (Convert.ToInt32(myTb.Rows[i]["天数"].ToString()) > Convert.ToInt32(cfg6094.Config))
                                        {
                                            MessageBox.Show("第" + Convert.ToString(i + 1) + "行医嘱：麻醉药品天数不能大于" + cfg6094.Config);
                                            return false;

                                        }
                                    }
                                }
                            }
                        }
                    }
                    if (myTb.Rows[i]["医嘱内容"].ToString().Trim() != "" && new Guid(myTb.Rows[i]["ID"].ToString().Trim()) == Guid.Empty)
                    {
                        decimal zfbl = decimal.Parse(myTb.Rows[i]["zfbl"].ToString().Trim() == "" ? "1" : myTb.Rows[i]["zfbl"].ToString().Trim());
                        string ss = myTb.Rows[i]["ID"].ToString().Trim();
                        string FirstRow = myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim());
                        if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                        {
                            //add by zouchihua 2012-6-21 临时医嘱改造
                            if (myTb.Rows[i]["天数"].ToString().Trim() != "" && myTb.Rows[i]["天数"].ToString().Trim() != "0")
                                ts = int.Parse(myTb.Rows[i]["天数"].ToString().Trim());
                            //if(myTb.Rows[BeginNow]["总量"].ToString().Trim() != "" )

                            #region //add by zochihua 2013-7-19 如果是项目那就再次判断总量
                            DataTable tb = FrmMdiMain.Database.GetDataTable("select EXECNUM from JC_FREQUENCY where NAME='" + myTb.Rows[BeginNow]["频率"].ToString() + "'");
                            int pc = 1;
                            if (tb != null && tb.Rows.Count > 0)
                            {
                                pc = int.Parse(tb.Rows[0]["EXECNUM"].ToString());
                            }
                            if (myTb.Rows[i]["xmly"].ToString() == "2")
                            {

                                myTb.Rows[i]["总量"] = pc * decimal.Parse(myTb.Rows[i]["剂量"].ToString().Trim()) * ts;
                            }
                            #endregion
                            #region 获取总量
                            if (myTb.Rows[i]["xmly"].ToString() != "2" && Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) <= 1)
                            {
                                //总动换算药房单位
                                string _dwlx = "1";
                                if (myTb.Rows[i]["jldwlx"].ToString().Trim() != "")
                                    _dwlx = myTb.Rows[i]["jldwlx"].ToString().Trim();

                                string _num = "";
                                //Modify By Tany 2014-07-28 如果是草药，不判断频次
                                if (FirstRow == "3")
                                {
                                    _num = myTb.Rows[i]["剂量"].ToString().Trim();
                                }
                                else
                                {
                                    _num = (pc * decimal.Parse(myTb.Rows[i]["剂量"].ToString().Trim()) * ts).ToString();
                                }

                                string _cjid = myTb.Rows[i]["hoitem_id"].ToString();
                                string _execdeptID = myTb.Rows[i]["执行科室"].ToString();//执行科室为-1跳出
                                //如果是药库单位
                                if (_dwlx != "3")
                                {
                                    _dwlx = _dwlx.Replace("9", "");
                                    if (_dwlx.Trim() == "")
                                        _dwlx = "1";
                                    string sSql = "EXEC SP_FUN_DW_NUM " + _dwlx + "," + _num + ",1,1,1," + _cjid + "," + _execdeptID + ",0";
                                    DataTable yp = FrmMdiMain.Database.GetDataTable(sSql);
                                    if (yp != null && yp.Rows.Count > 0)
                                    {
                                        decimal yl = decimal.Parse(yp.Rows[0]["yl"].ToString());
                                        decimal zl = decimal.Parse(myTb.Rows[i]["总量"].ToString());

                                        //Modify by jchl（直接屏蔽）
                                        //if (zl < yl && decimal.Parse(myTb.Rows[i]["剂量"].ToString()) != zl)
                                        //{
                                        //    MessageBox.Show("第" + Convert.ToString(i + 1) + "行医嘱：剂量不能大于总量!");

                                        //    return false;
                                        //}
                                    }
                                }
                            }
                            #endregion
                            try
                            {
                                zsl = decimal.Parse(myTb.Rows[i]["总量"].ToString().Trim());
                            }
                            catch
                            {
                                zsl = decimal.Parse(myTb.Rows[i]["剂量"].ToString().Trim());
                            }
                            if (myTb.Rows[i]["总单位"].ToString().Trim() != "")
                                zsldw = (myTb.Rows[i]["总单位"].ToString().Trim());
                            else
                                zsldw = (myTb.Rows[i]["单位"].ToString().Trim());
                            if (myTb.Rows[i]["jldwlx"].ToString().Trim() != "")
                                jldwlx = myTb.Rows[i]["jldwlx"].ToString().Trim();
                            else
                                jldwlx = "1";

                            //增加判断总量为零时，更改为剂量
                            if (zsl == 0)
                            {
                                zsldw = (myTb.Rows[i]["单位"].ToString().Trim());
                                zsl = decimal.Parse(myTb.Rows[i]["剂量"].ToString().Trim());
                                myTb.Rows[i]["dwlx"] = jldwlx;
                            }


                            //药品增加判断  add by zouchihua 2012-10-24
                            if (!(myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "1" && myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "2" && myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "3"))
                            {
                                try
                                {
                                    DataTable tempypdw = FrmMdiMain.Database.GetDataTable("exec SP_YF_SELECT_DW " + Convert.ToInt64(myTb.Rows[i]["HOItem_ID"]) + "," + Convert.ToInt32(myTb.Rows[i]["执行科室"].ToString()) + "");
                                    if (tempypdw.Rows.Count > 0)
                                    { //临时医嘱 总单位与单位类型是否匹配
                                        string dwlx = myTb.Rows[i]["dwlx"].ToString().Replace("9", "").Trim();
                                        if (dwlx == "")
                                            dwlx = "1";
                                        DataRow[] r = tempypdw.Select("dwlx=" + dwlx + " and ypdw='" + myTb.Rows[i]["总单位"].ToString().Trim() + "'");
                                        if (r == null || r.Length <= 0)//没有匹配的药品单位和药品单位类型
                                        {
                                            zsl = decimal.Parse(myTb.Rows[i]["剂量"].ToString().Trim());
                                            zsldw = (myTb.Rows[i]["单位"].ToString().Trim());
                                            if (myTb.Rows[i]["dwlx"].ToString().IndexOf("9") > 0)
                                            {
                                                if (jldwlx.IndexOf("9") > 0)
                                                    myTb.Rows[i]["dwlx"] = jldwlx;
                                                else
                                                    myTb.Rows[i]["dwlx"] = "9" + jldwlx;
                                            }
                                            else
                                                myTb.Rows[i]["dwlx"] = jldwlx;
                                        }
                                        // MessageBox.Show("dfd");
                                    }
                                }
                                catch
                                { }
                            }
                        }
                        //MessageBox.Show(myTb.Rows[i]["dwlx"].ToString());
                        //得到当前组的第一条记录
                        BeginNow = GetGroupBeginRow(myTb, i);
                        if (IsGroupFirstRow(myTb, i) == true || !(FirstRow == "1" || FirstRow == "2" || FirstRow == "3")) //是一组医嘱的首行
                        {
                            OrderNumCount++;//嘱号
                            beginrow = 0;     //一组医嘱中的序号
                        }
                        else
                            beginrow++;
                        if (myTb.Rows[BeginNow]["剂数"].ToString() == "" || myTb.Rows[BeginNow]["剂数"].ToString() == "0")
                            ypjs = 1;
                        else
                        {
                            strJS = myTb.Rows[BeginNow]["剂数"].ToString();
                            ypjs = Convert.ToInt32(Convert.ToDecimal(strJS));
                        }
                        if (pageType == 0) ypjs = 1;//长嘱剂数=1

                        if (myTb.Rows[BeginNow]["首日执行次数"].ToString() == "")
                            srcs = 1;
                        else
                            srcs = Int32.Parse(myTb.Rows[BeginNow]["首日执行次数"].ToString());
                        if (myTb.Rows[i]["嘱号"].ToString().Trim() != "") Order_Num = Convert.ToInt32(myTb.Rows[i]["嘱号"].ToString());
                        else Order_Num = 0;
                        ssgl._Order_Num = Order_Num;
                        execDept = Convert.ToInt32(myTb.Rows[i]["执行科室"].ToString());
                        if (execDept == 0 || execDept.ToString() == "")
                        {
                            execDept = this.DeptID;
                        }
                        jsd = -1;//默认为-1
                        jsd = Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["警示灯"], "-1"));

                        //非药品医嘱
                        if (myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "1" && myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "2" && myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "3")
                        {
                            string strType2 = myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim());
                            //Add By tany 2011-05-20 手工开医嘱的时候，如果是医技类的，检查一下是否有标本
                            short dwlx = 0;
                            if (Convert.ToInt32(strType2) == 5)
                            {
                                if (myTb.Rows[i]["dwlx"].ToString().Trim() == "" || int.Parse(myTb.Rows[i]["dwlx"].ToString().Trim()) <= 0)
                                {
                                    dwlx = Convert.ToInt16(Convertor.IsNull(InstanceForm._database.GetDataResult("select bbid from jc_assay where yzid=" + myTb.Rows[i]["HOItem_ID"].ToString()), "0"));
                                }
                                else
                                {
                                    dwlx = Convert.ToInt16(myTb.Rows[i]["dwlx"].ToString().Trim());
                                }
                            }
                            if (zsl == 0 && cfg6061.Config.Trim() == "1")//增加参数判断 项目是否默认为零
                                zsl = 1;
                            //by add yaokx 2014-04-18 非药品的一组项目用法不要以第一条为准，各保存各的用法由以前的myTb.Rows[BeginNow]["用法"].ToString()改为现在的myTb.Rows[i]["用法"].ToString()
                            //End Add   
                            //modify by jchl(整合加入zfbl)
                            myQuery.CommitOrderrecord(InstanceForm._database, OrderID, Order_Num, BinID, this.DeptID, WardID.ToString(), tab, Convert.ToInt32(strType2),
                                this.YS_ID, Convert.ToInt32(myTb.Rows[i]["HOItem_ID"].ToString()), "", Convert.ToInt32(myTb.Rows[i]["xmly"].ToString()), myTb.Rows[i]["医嘱内容"].ToString(),
                                Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()), 1, myTb.Rows[i]["单位"].ToString(), myTb.Rows[i]["规格"].ToString(), tempDate, Convert.ToDateTime(myTb.Rows[BeginNow]["开始时间"]),
                                srcs, myTb.Rows[i]["用法"].ToString(), myTb.Rows[i]["频率"].ToString(), this.YS_ID, 0, Convert.ToInt16(myTb.Rows[BeginNow]["status_flag"].ToString()),
                                this.BabyID, (Dept_Br == 0 ? this.DeptID : Dept_Br), Convert.ToInt32(execDept), Convertor.IsNull(myTb.Rows[BeginNow]["滴量"], ""), beginrow, -1, Guid.Empty, dwlx, 0, OrderNumCount, 2, outStr, BrJgbm, _iskdksly, tsapply_id, Apply_type, jsd,
                                 ts, zsl, zsldw, jldwlx, newguid, price, zfbl,"0");
                        }
                        else//药品医嘱   
                        {
                            string d1 = "1";

                            if (myTb.Rows[i]["dwlx"] == System.DBNull.Value) myTb.Rows[i]["dwlx"] = d1;
                            int mngNum;
                            if (myTb.Rows[i]["mngtype"] != System.DBNull.Value) mngNum = Convert.ToInt32(myTb.Rows[i]["mngtype"].ToString());
                            else mngNum = tab;

                            string medType = myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim());
                            string hoitemid = Convertor.IsNull(myTb.Rows[i]["HOItem_ID"], "0").ToString();     //如果没有HOItem_ID的项目就为0
                            int medTypeId = 0;
                            if (hoitemid == "0")
                            {
                                medTypeId = 0;
                            }
                            if (medType == "1") medTypeId = 1;
                            else if (medType == "2") medTypeId = 2;
                            else if (medType == "3") medTypeId = 3;
                            else medTypeId = 0;
                            //string psypbm = myTb.Rows[i]["psypbm"].ToString();
                            //modify by jchl(整合加入zfbl)
                            if (myTb.Rows[i]["用法"].ToString()=="皮试")
                            {
                                myQuery.CommitOrderrecord(InstanceForm._database, OrderID, Order_Num, BinID, this.DeptID, this.WardID.ToString(), mngNum, Convert.ToInt32(medType),
                                    this.YS_ID, Convert.ToInt64(myTb.Rows[i]["HOItem_ID"]), myTb.Rows[i]["HOItem_ID"].ToString(), Convert.ToInt32(myTb.Rows[i]["xmly"]), myTb.Rows[i]["医嘱内容"].ToString(), Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()),
                                    ypjs, myTb.Rows[i]["单位"].ToString(), myTb.Rows[i]["规格"].ToString(), tempDate, Convert.ToDateTime(myTb.Rows[BeginNow]["开始时间"]), srcs, myTb.Rows[BeginNow]["用法"].ToString(),
                                    myTb.Rows[BeginNow]["频率"].ToString(), this.YS_ID, 0, Convert.ToInt16(myTb.Rows[BeginNow]["status_flag"].ToString()), this.BabyID,
                                    (Dept_Br == 0 ? this.DeptID : Dept_Br), Convert.ToInt32(execDept), Convertor.IsNull(myTb.Rows[BeginNow]["滴量"], ""), beginrow, Convert.ToInt16(myTb.Rows[i]["ps_flag"]), new Guid(myTb.Rows[i]["ps_orderid"].ToString()),
                                    Convert.ToInt16(myTb.Rows[i]["dwlx"].ToString()), Convert.ToInt16(Convertor.IsNull(myTb.Rows[BeginNow]["jz_flag"], "0")), OrderNumCount, 2, outStr, BrJgbm, _iskdksly, tsapply_id, Apply_type, jsd,
                                    ts, zsl, zsldw, jldwlx, newguid, price, zfbl, myTb.Rows[i]["psypbm"].ToString());
                            }
                            else
                            {
                                myQuery.CommitOrderrecord(InstanceForm._database, OrderID, Order_Num, BinID, this.DeptID, this.WardID.ToString(), mngNum, Convert.ToInt32(medType),
                                    this.YS_ID, Convert.ToInt64(myTb.Rows[i]["HOItem_ID"]), myTb.Rows[i]["HOItem_ID"].ToString(), Convert.ToInt32(myTb.Rows[i]["xmly"]), myTb.Rows[i]["医嘱内容"].ToString(), Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()),
                                    ypjs, myTb.Rows[i]["单位"].ToString(), myTb.Rows[i]["规格"].ToString(), tempDate, Convert.ToDateTime(myTb.Rows[BeginNow]["开始时间"]), srcs, myTb.Rows[BeginNow]["用法"].ToString(),
                                    myTb.Rows[BeginNow]["频率"].ToString(), this.YS_ID, 0, Convert.ToInt16(myTb.Rows[BeginNow]["status_flag"].ToString()), this.BabyID,
                                    (Dept_Br == 0 ? this.DeptID : Dept_Br), Convert.ToInt32(execDept), Convertor.IsNull(myTb.Rows[BeginNow]["滴量"], ""), beginrow, Convert.ToInt16(myTb.Rows[i]["ps_flag"]), new Guid(myTb.Rows[i]["ps_orderid"].ToString()),
                                    Convert.ToInt16(myTb.Rows[i]["dwlx"].ToString()), Convert.ToInt16(Convertor.IsNull(myTb.Rows[BeginNow]["jz_flag"], "0")), OrderNumCount, 2, outStr, BrJgbm, _iskdksly, tsapply_id, Apply_type, jsd,
                                    ts, zsl, zsldw, jldwlx, newguid, price, zfbl,"0");
                            }

                            //int iRet = -1;
                            //bool bFzyy = DoInsertCheckInfo(myTb.Rows[i]["xmly"].ToString().Trim(),
                            //    myTb.Rows[i]["HOItem_ID"].ToString().Trim(), dtDia, out iRet);

                            //if (bFzyy)
                            //{
                            //}
                            //else
                            //{
                            //    //modify by jchl(整合加入zfbl,以及辅助用药相关控制)
                            //    //匹配不成功
                            //    int iFzyy_bit = 1;
                            //    int iCheck_bit = iRet;

                            //    myQuery.CommitOrderrecord(InstanceForm._database, OrderID, Order_Num, BinID, this.DeptID, this.WardID.ToString(), mngNum, Convert.ToInt32(medType),
                            //        this.YS_ID, Convert.ToInt64(myTb.Rows[i]["HOItem_ID"]), myTb.Rows[i]["HOItem_ID"].ToString(), Convert.ToInt32(myTb.Rows[i]["xmly"]), myTb.Rows[i]["医嘱内容"].ToString(), Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()),
                            //        ypjs, myTb.Rows[i]["单位"].ToString(), myTb.Rows[i]["规格"].ToString(), tempDate, Convert.ToDateTime(myTb.Rows[BeginNow]["开始时间"]), srcs, myTb.Rows[BeginNow]["用法"].ToString(),
                            //        myTb.Rows[BeginNow]["频率"].ToString(), this.YS_ID, 0, Convert.ToInt16(myTb.Rows[BeginNow]["status_flag"].ToString()), this.BabyID,
                            //        (Dept_Br == 0 ? this.DeptID : Dept_Br), Convert.ToInt32(execDept), Convertor.IsNull(myTb.Rows[BeginNow]["滴量"], ""), beginrow, Convert.ToInt16(myTb.Rows[i]["ps_flag"]), new Guid(myTb.Rows[i]["ps_orderid"].ToString()),
                            //        Convert.ToInt16(myTb.Rows[i]["dwlx"].ToString()), Convert.ToInt16(Convertor.IsNull(myTb.Rows[BeginNow]["jz_flag"], "0")), OrderNumCount, 2, outStr, BrJgbm, _iskdksly, tsapply_id, Apply_type, jsd,
                            //        ts, zsl, zsldw, jldwlx, newguid, price, zfbl, iFzyy_bit, iCheck_bit);
                            //}
                        }
                        insertContext += "\n" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "  " + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "  " + myTb.Rows[BeginNow]["频率"].ToString().Trim();
                    }
                }
                #endregion
            }
            catch (System.Exception err)
            {
                MessageBox.Show(err.Message + "第" + Convert.ToString(i + 1) + "行医嘱：内容格式错误！ 请重新输入！\n返回。", "错误提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                //定位
                myDataGrid1.Focus();
                DataGridCell myCell = new DataGridCell(i, 7);//5 没有加警示列
                myDataGrid1.CurrentCell = myCell;
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[5];
                txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;
                //保存出错信息
                myQuery.SaveLog(DeptID, YS_ID, "医嘱保存错误", this.BinID.ToString() + "新开医嘱保存错误" + tab.ToString() + "(" + Convert.ToString(i + 1) + ")：" + err.ToString().Trim(), 1, 41);
                return false;
            }
            try
            {
                #region 循环保存数据,需要更新的数据
                long userID = 0;
                for (i = 0; i <= myTb.Rows.Count - 1; i++)
                {

                    if (myTb.Rows[i]["医嘱内容"].ToString().Trim() != "" && new Guid(myTb.Rows[i]["ID"].ToString().Trim()) != Guid.Empty)
                    {
                        decimal zfbl = decimal.Parse(myTb.Rows[i]["zfbl"].ToString().Trim() == "" ? "1" : myTb.Rows[i]["zfbl"].ToString().Trim());
                        if (IsGroupFirstRow(myTb, i) == true)//为一组医嘱的第一行
                        {
                            BeginNow = i;
                            beginrow = 0;
                        }
                        else
                            beginrow++;
                        if (myTb.Rows[BeginNow]["剂数"].ToString() == "" || myTb.Rows[BeginNow]["剂数"].ToString() == "0")
                            ypjs = 1;
                        else
                        {
                            strJS = myTb.Rows[BeginNow]["剂数"].ToString();
                            ypjs = Convert.ToInt32(Convert.ToDecimal(strJS));
                        }
                        if (myTb.Rows[BeginNow]["首日执行次数"].ToString() == "")
                            srcs = 1;
                        else
                            srcs = Int32.Parse(myTb.Rows[BeginNow]["首日执行次数"].ToString());

                        //在医嘱ID不为空的且不为0的情况下，取出status_flag==0即未校对医嘱出来，全部更新一遍
                        OrderID = new Guid(myTb.Rows[i]["ID"].ToString().Trim());

                        execDept = Convert.ToInt32(myTb.Rows[i]["执行科室"].ToString());
                        if (execDept == 0) execDept = this.DeptID;

                        if (OrderID != Guid.Empty)//在不为空行的情况下
                        {
                            if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                            {
                                //add by zouchihua 2012-6-21 临时医嘱改造
                                if (myTb.Rows[i]["天数"].ToString().Trim() != "")
                                {

                                    ts = int.Parse(myTb.Rows[i]["天数"].ToString().Trim());

                                }
                                #region //add by zochihua 2013-7-19 如果是项目那就再次判断总量
                                DataTable tb = FrmMdiMain.Database.GetDataTable("select EXECNUM from JC_FREQUENCY where NAME='" + myTb.Rows[BeginNow]["频率"].ToString() + "'");
                                int pc = 1;
                                string FirstRow = myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim());
                                if (tb != null && tb.Rows.Count > 0)
                                {
                                    pc = int.Parse(tb.Rows[0]["EXECNUM"].ToString());
                                }
                                if (myTb.Rows[i]["xmly"].ToString() == "2")
                                {
                                    myTb.Rows[i]["总量"] = pc * decimal.Parse(myTb.Rows[i]["剂量"].ToString().Trim()) * ts;
                                }
                                #endregion

                                #region 获取总量
                                if (myTb.Rows[i]["xmly"].ToString() != "2" && Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) <= 1)
                                {
                                    //总动换算药房单位
                                    string _dwlx = "1";
                                    if (myTb.Rows[i]["jldwlx"].ToString().Trim() != "")
                                        _dwlx = myTb.Rows[i]["jldwlx"].ToString().Trim();


                                    string _num = "";
                                    //Modify By Tany 2014-07-28 如果是草药，不判断频次
                                    if (FirstRow == "3")
                                    {
                                        _num = myTb.Rows[i]["剂量"].ToString().Trim();
                                    }
                                    else
                                    {
                                        _num = (pc * decimal.Parse(myTb.Rows[i]["剂量"].ToString().Trim()) * ts).ToString();
                                    }
                                    string _cjid = myTb.Rows[i]["hoitem_id"].ToString();
                                    string _execdeptID = myTb.Rows[i]["执行科室"].ToString();//执行科室为-1跳出
                                    //如果是药库单位
                                    if (_dwlx != "3")
                                    {
                                        _dwlx = _dwlx.Replace("9", "");
                                        if (_dwlx.Trim() == "")
                                            _dwlx = "1";
                                        string sSql = "EXEC SP_FUN_DW_NUM " + _dwlx + "," + _num + ",1,1,1," + _cjid + "," + _execdeptID + ",0";
                                        DataTable yp = FrmMdiMain.Database.GetDataTable(sSql);
                                        if (yp != null && yp.Rows.Count > 0)
                                        {
                                            decimal yl = decimal.Parse(yp.Rows[0]["yl"].ToString());
                                            decimal zl = decimal.Parse(myTb.Rows[i]["总量"].ToString());

                                            //Modify by jchl（直接屏蔽）
                                            //if (zl < yl && decimal.Parse(myTb.Rows[i]["剂量"].ToString()) != zl)
                                            //{
                                            //    MessageBox.Show("第" + Convert.ToString(i + 1) + "行医嘱：剂量不能大于总量!");
                                            //    return false;
                                            //}
                                        }
                                    }
                                }
                                #endregion

                                if (myTb.Rows[i]["总量"].ToString().Trim() != "")
                                    zsl = decimal.Parse(myTb.Rows[i]["总量"].ToString().Trim());
                                if (myTb.Rows[i]["总单位"].ToString().Trim() != "")
                                    zsldw = (myTb.Rows[i]["总单位"].ToString().Trim());
                                else
                                    zsldw = (myTb.Rows[i]["单位"].ToString().Trim());
                                if (myTb.Rows[i]["jldwlx"].ToString().Trim() != "")
                                    jldwlx = myTb.Rows[i]["jldwlx"].ToString().Trim();
                                else
                                    jldwlx = "1";
                                //增加判断总量为零时，更改为剂量
                                if (zsl == 0)
                                {
                                    zsldw = (myTb.Rows[i]["单位"].ToString().Trim());
                                    zsl = decimal.Parse(myTb.Rows[i]["剂量"].ToString().Trim());
                                    myTb.Rows[i]["dwlx"] = jldwlx;
                                }
                            }
                            jsd = Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["警示灯"], "-1"));
                            //status_flag==0或1的医嘱,即：更新所有未发送及未转抄的医嘱
                            if (Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) == 0 || Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) == 1 || Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) == 9)
                            {
                                //判断是否是本人开的医嘱
                                if (myTb.Rows[i]["Order_Doc"].ToString() == this.YS_ID.ToString() || lg == 3)
                                {
                                    userID = Convert.ToInt64(myTb.Rows[i]["Order_Doc"]);
                                }
                                else
                                {
                                    continue;
                                }
                                //判断已发送的医嘱是否已被转抄执行
                                if (Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) == 1 && myQuery.ISexecute(OrderID))
                                {
                                    isExecute += "\n" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "  " + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "  " + myTb.Rows[BeginNow]["频率"].ToString().Trim();
                                    continue;
                                }
                                string yz = myTb.Rows[i]["医嘱内容"].ToString().Trim();
                                if (yz == "术后医嘱" || yz == "产后医嘱" || yz == "转科医嘱")
                                {
                                    continue;
                                }
                                //非药品医嘱
                                if (myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "1" && myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "2" && myQuery.GetyzTypeCode(GetGroupType(myTb, i)) != "3")
                                {
                                    //Add By tany 2011-05-20 手工开医嘱的时候，如果是医技类的，检查一下是否有标本
                                    //重新保存的时候，dwlx使用已有的，如果没有，则再次验证一下
                                    short dwlx = Convert.ToInt16(Convertor.IsNull(myTb.Rows[i]["dwlx"], "0"));
                                    if (dwlx < 1 && Convert.ToInt32(myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim())) == 5)
                                    {
                                        dwlx = Convert.ToInt16(Convertor.IsNull(InstanceForm._database.GetDataResult("select bbid from jc_assay where yzid=" + myTb.Rows[i]["HOItem_ID"].ToString()), "0"));
                                    }
                                    if (zsl == 0 && cfg6061.Config.Trim() == "1")//增加参数判断 项目是否默认为零
                                        zsl = 1;
                                    //End Add
                                    //modify by jchl(整合加入zfbl)
                                    myQuery.CommitOrderrecord(InstanceForm._database, OrderID, Order_Num, BinID, this.DeptID, WardID.ToString(), tab, Convert.ToInt32(myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim())),
                                        userID, Convert.ToInt32(myTb.Rows[i]["HOItem_ID"].ToString()), "", Convert.ToInt32(myTb.Rows[i]["xmly"]), myTb.Rows[i]["医嘱内容"].ToString(),
                                        Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()), 1, myTb.Rows[i]["单位"].ToString(), myTb.Rows[i]["规格"].ToString(), tempDate, Convert.ToDateTime(myTb.Rows[BeginNow]["开始时间"]),
                                        srcs, myTb.Rows[i]["用法"].ToString(), myTb.Rows[i]["频率"].ToString(), this.YS_ID, 0, Convert.ToInt16(myTb.Rows[BeginNow]["status_flag"].ToString()),
                                        this.BabyID, (Dept_Br == 0 ? this.DeptID : Dept_Br), Convert.ToInt32(execDept), Convertor.IsNull(myTb.Rows[BeginNow]["滴量"], ""), beginrow, -1, Guid.Empty, dwlx, 0, 0, 2, outStr, BrJgbm, _iskdksly, tsapply_id, Apply_type, jsd,
                                        ts, zsl, zsldw, jldwlx, newguid, price, zfbl,"0");
                                }
                                else//药品医嘱
                                {
                                    //构成SQL语句,并执行,默认婴儿ID为0，医嘱录入人为医生本人，默认病人科室为医生科室,中草药剂量默认为1,操作员为医生本人

                                    string d1 = "1";
                                    if (myTb.Rows[i]["dwlx"] == System.DBNull.Value) myTb.Rows[i]["dwlx"] = d1;
                                    string strItem = "";
                                    string medType = myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim());
                                    int medTypeId = 0;
                                    if (char.IsNumber(myTb.Rows[i]["HOItem_ID"].ToString(), 0) == true) //没有更新药品 
                                    {
                                        strItem = myTb.Rows[i]["Item_Code"].ToString();
                                        string hoitemid = Convertor.IsNull(myTb.Rows[i]["HOItem_ID"], "0").ToString();     //如果没有HOItem_ID的项目就为0
                                        if (hoitemid == "0")
                                        {
                                            medTypeId = 0;
                                        }
                                    }
                                    else //被更新的药品代码
                                    {
                                        strItem = myTb.Rows[i]["HOItem_ID"].ToString();
                                        if (medType == "1") medTypeId = 1;
                                        else if (medType == "2") medTypeId = 2;
                                        else if (medType == "3") medTypeId = 3;
                                        else medTypeId = 0;
                                    }

                                    //modify by jchl(整合加入zfbl)
                                    if (myTb.Rows[i]["用法"].ToString() == "皮试")
                                    {
                                        myQuery.CommitOrderrecord(InstanceForm._database, OrderID, Order_Num, BinID, this.DeptID, this.WardID.ToString(), tab, Convert.ToInt32(medType),
                                            this.YS_ID, Convert.ToInt64(myTb.Rows[i]["HOItem_ID"]), myTb.Rows[i]["HOItem_ID"].ToString(), Convert.ToInt32(myTb.Rows[i]["xmly"]), myTb.Rows[i]["医嘱内容"].ToString(), Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()),
                                            ypjs, myTb.Rows[i]["单位"].ToString(), myTb.Rows[i]["规格"].ToString(), tempDate, Convert.ToDateTime(myTb.Rows[BeginNow]["开始时间"]), srcs, myTb.Rows[BeginNow]["用法"].ToString(),
                                            myTb.Rows[BeginNow]["频率"].ToString(), this.YS_ID, 0, Convert.ToInt16(myTb.Rows[BeginNow]["status_flag"].ToString()), this.BabyID,
                                            (Dept_Br == 0 ? this.DeptID : Dept_Br), Convert.ToInt32(execDept), Convertor.IsNull(myTb.Rows[BeginNow]["滴量"], ""), beginrow, Convert.ToInt16(myTb.Rows[i]["ps_flag"]), new Guid(myTb.Rows[i]["ps_orderid"].ToString()),
                                            Convert.ToInt16(myTb.Rows[i]["dwlx"].ToString()), Convert.ToInt16(Convertor.IsNull(myTb.Rows[BeginNow]["jz_flag"], "0")), OrderNumCount, 2, outStr, BrJgbm, _iskdksly, tsapply_id, Apply_type, jsd,
                                            ts, zsl, zsldw, jldwlx, newguid, price, zfbl, myTb.Rows[i]["psypbm"].ToString());
                                    }
                                    else
                                    {
                                        myQuery.CommitOrderrecord(InstanceForm._database, OrderID, Order_Num, BinID, this.DeptID, this.WardID.ToString(), tab, Convert.ToInt32(medType),
                                            userID, Convert.ToInt64(myTb.Rows[i]["HOItem_ID"]), strItem, Convert.ToInt32(myTb.Rows[i]["xmly"]), myTb.Rows[i]["医嘱内容"].ToString(), Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()),
                                            ypjs, myTb.Rows[i]["单位"].ToString(), myTb.Rows[i]["规格"].ToString(), tempDate, Convert.ToDateTime(myTb.Rows[BeginNow]["开始时间"]), srcs, myTb.Rows[BeginNow]["用法"].ToString(),
                                            myTb.Rows[BeginNow]["频率"].ToString(), this.YS_ID, 0, Convert.ToInt16(myTb.Rows[BeginNow]["status_flag"].ToString()), this.BabyID,
                                            (Dept_Br == 0 ? this.DeptID : Dept_Br), Convert.ToInt32(execDept), myTb.Rows[BeginNow]["滴量"].ToString(), beginrow, Convert.ToInt16(myTb.Rows[i]["ps_flag"]), new Guid(myTb.Rows[i]["ps_orderid"].ToString()),
                                            Convert.ToInt16(myTb.Rows[i]["dwlx"].ToString()), Convert.ToInt16(Convertor.IsNull(myTb.Rows[i]["jz_flag"], "0")), OrderNumCount, 2, outStr, BrJgbm, _iskdksly, tsapply_id, Apply_type, jsd,
                                            ts, zsl, zsldw, jldwlx, newguid, price, zfbl, "0");
                                    }
                                }
                                updateContext += "\n" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "  " + myTb.Rows[i]["剂量"].ToString() + myTb.Rows[i]["单位"].ToString().Trim() + "  " + myTb.Rows[BeginNow]["频率"].ToString().Trim();
                            }
                            else
                            {
                                //每次都更新等的状态
                                //if (cfg6032 == "1")
                                //{
                                //    //add by zouchihua 2012-2-10 更新灯的状态
                                //    string sql = "update ZY_ORDERRECORD set jsd=" + jsd + " where order_id='" + OrderID + "'";
                                //    FrmMdiMain.Database.DoCommand(sql);
                                //}
                            }
                            #region //add by zouchihua 2014-4-27 如果是发送了的医嘱更改了，还是要重新插入
                            if (myTb.Rows[i]["类型"].ToString() == "5-医技")
                            {
                                myQuery.insertJY(InstanceForm._database, this.BinID, this.BabyID, OrderID);
                                //Add by zouhichua 2011-12-01生成zy_jc_record表
                                //Guid.NewGuid().ToString();// DateManager.ServerDateTimeByDBType(InstanceForm._database).ToString("yyyyMMddHHmmssffffff");
                                string sql = "select yzid from JC_ASSAY(nolock) where YZID=" + myTb.Rows[i]["hoitem_id"].ToString();//检验项目
                                DataTable tmtb = FrmMdiMain.Database.GetDataTable(sql);
                                if (tmtb.Rows.Count == 0)//不是检验项目
                                {
                                    //if (Oldgroupid == 0)
                                    //{
                                    //    Oldgroupid = Convert.ToInt32(myTb.Rows[i]["group_id"].ToString());
                                    //}
                                    string ss = "select * from ZY_JC_RECORD(nolock) where inpatient_id='" + BinID + "' and group_id=" + myTb.Rows[i]["嘱号"].ToString() + " and hoitem_id=" + myTb.Rows[i]["hoitem_id"].ToString();
                                    DataTable tbtb1 = FrmMdiMain.Database.GetDataTable(ss);
                                    if (tbtb1.Rows.Count <= 0)
                                    {
                                        //Modify By Tany 2015-05-05 把检查NO放在需要的地方，避免增长过大
                                        string jc_no = DbQuery.UpdateNowNoAndGetNewNo(13, InstanceForm._database).ToString();
                                        string sSql = "insert into zy_jc_record (" +
                   "id,group_id,inpatient_id,hoitem_id,place,place_num,SYMPTOM ,IN_DIAGNOSIS,jc_no,jgbm) " +
                   "values('" + PubStaticFun.NewGuid() + "'," + myTb.Rows[i]["嘱号"].ToString() + ",'" + this.BinID.ToString() + "'," + myTb.Rows[i]["hoitem_id"].ToString() + ",''," +
                   "1,'','','" + jc_no + "'," + BrJgbm.ToString() + ")";//dbo.FUN_ZY_SEEKJCNO('" + this.BinID + "','" + printType + "')
                                        InstanceForm._database.DoCommand(sSql);

                                    }
                                }

                                ////									myQuery.insertJY(this.BinID,OrderID);
                                //myQuery.apply(InstanceForm._database, this.BinID, OrderID, FrmMdiMain.Jgbm); Modify By tany 2010-01-23 不再使用医生站医技申请，改成护士站执行是生成
                                ////									myQuery.apply(this.BinID,OrderID);

                            }
                            #endregion
                        }
                    }


                }
                #endregion
            }
            catch (System.Exception err)
            {
                MessageBox.Show(err.ToString());
                string errStr = "\n修改医嘱保存失败！！！\n";

                MessageBox.Show(errStr + "\n第" + Convert.ToString(i + 1) + "行医嘱：内容格式错误！ 请重新输入！\n返回。", "错误提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                //定位
                myDataGrid1.Focus();
                DataGridCell myCell = new DataGridCell(i, 7);//5 没有加警示列
                myDataGrid1.CurrentCell = myCell;
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[5];
                txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;
                //保存出错信息
                myQuery.SaveLog(DeptID, YS_ID, "医嘱修改错误", this.BinID.ToString() + "医嘱修改保存错误" + tab.ToString() + "(" + Convert.ToString(i + 1) + ")：" + err.ToString().Trim(), 1, 41);
                return false;
            }
            //第三步
            try
            {
                //modify by jchl(整合加入zfbl)
                myQuery.CommitOrderrecord(InstanceForm._database, Guid.Empty, 0, BinID, 0, "", 0, 0, 0, 0, "", 1, "", 0, 0, "", "", tempDate, tempDate, 0, "", "", 0, 0, 0, 0, 0, 0, "", 0, -1, Guid.Empty, 0, 0, 0, 3, outStr, BrJgbm, _iskdksly, tsapply_id, Apply_type, jsd,
                    ts, zsl, zsldw, jldwlx, newguid, price, 1,"0");
                #region//add by zouchihua 2012-02-24  修改警示灯值
                if (cfg6032 == "1")
                {

                    for (int ii = 0; ii < myTb.Rows.Count; ii++)
                    {
                        if (myTb.Rows[ii]["医嘱内容"].ToString().Trim() != "")
                        {
                            jsd = Convert.ToInt32(Convertor.IsNull(myTb.Rows[ii]["警示灯"], "-1"));
                            //全部的警示灯更新一遍
                            OrderID = (myTb.Rows[ii]["ID"] == null || myTb.Rows[ii]["ID"].ToString() == "") ? Guid.Empty : new Guid(myTb.Rows[ii]["ID"].ToString());
                            //每次都更新等的状态

                            //add by zouchihua 2012-2-10 更新灯的状态
                            string sql = "update ZY_ORDERRECORD set jsd=" + jsd + " where order_id='" + OrderID + "'";
                            FrmMdiMain.Database.DoCommand(sql);
                            // MessageBox.Show(sql);//*********************                  
                        }
                    }
                }
                #endregion
                if (cfg6070.Config.Trim() == "1")
                {
                    //add by zouchihua 2013-8-4 如果存在了模版id
                    string sql = "select  PS_ORDERID,GROUP_ID,INPATIENT_ID from ZY_ORDERRECORD a where  INPATIENT_ID='" + BinID + "' and NTYPE=3 and DELETE_BIT=0 " +
                                " and (PS_ORDERID is not null and PS_ORDERID<>dbo.FUN_GETEMPTYGUID() ) " +
                                " and  exists( select  PS_ORDERID,STATUS_FLAG,*,MEMO from ZY_ORDERRECORD where  INPATIENT_ID='" + BinID + "' and NTYPE=3 and DELETE_BIT=0 " +
                                " and  (PS_ORDERID is  null or PS_ORDERID=dbo.FUN_GETEMPTYGUID())  and GROUP_ID=a.GROUP_ID ) group by PS_ORDERID,GROUP_ID,INPATIENT_ID ";
                    DataTable tbmb = FrmMdiMain.Database.GetDataTable(sql);
                    if (tbmb.Rows.Count > 0)
                    {
                        for (i = 0; i < tbmb.Rows.Count; i++)
                        {
                            sql = "update ZY_ORDERRECORD set PS_ORDERID='" + tbmb.Rows[i]["PS_ORDERID"].ToString() + "' where INPATIENT_ID='" + BinID + "' and NTYPE=3 and DELETE_BIT=0 and GROUP_ID=" + tbmb.Rows[i]["GROUP_ID"].ToString() + "";
                            FrmMdiMain.Database.DoCommand(sql);
                        }
                    }
                }

                //modify by jchl(关闭事务)
                

                if (insertContext != "") newSave += "\n\n⊙以下新增医嘱被保存：" + insertContext;
                if (updateContext != "") newSave += "\n\n⊙以下医嘱被重新保存：" + updateContext;
                if (isExecute != "") newSave += "\n\n⊙以下医嘱已被护士站执行，保存无效：" + isExecute;
                MessageBox.Show("保存完成！" + newSave, "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            catch (Exception err)
            {
                MessageBox.Show("保存失败！\n" + err.ToString(), "错误提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return false;
            }
            finally
            {
                updateXH(myTb);//在医嘱组中重新排序（因为有插入的记录）

            }
            return true;

        }
        #endregion
        /// <summary>
        /// 验证是否存在标本
        /// </summary>
        /// <param name="tb"></param>
        private ArrayList Yzbb(DataTable myTb, out string strts)
        {
            //add by zouchihua 2013-8-10获得医技信息
            strts = "";
            ArrayList arraylist = new ArrayList();
            for (int nrow = 0; nrow < myTb.Rows.Count; nrow++)
            {
                if (myTb.Rows[nrow]["ntype"].ToString() == "5" && new Guid(myTb.Rows[nrow]["id"].ToString()) != Guid.Empty && (int.Parse(myTb.Rows[nrow]["status_flag"].ToString()) <= 1 || int.Parse(myTb.Rows[nrow]["status_flag"].ToString()) == 9))
                {
                    string sql = "select * from JC_ASSAY(nolock) where yzid='" + myTb.Rows[nrow]["hoitem_id"].ToString() + "'";
                    DataTable tbbb = FrmMdiMain.Database.GetDataTable(sql);
                    if (tbbb.Rows.Count > 0)
                    {
                        //Ts_zyys_jysq.FrmJyBb_fjsm frm = new Ts_zyys_jysq.FrmJyBb_fjsm(myTb.Rows[nrow]["id"].ToString());
                        //frm.ShowDialog();
                        //if (frm.DialogResult == DialogResult.OK)
                        //{
                        //    sql = "update zy_orderrecord set dwlx='" + frm.bb + "' ,memo='" + frm.fjsm + "★', ORDER_CONTEXT='" + frm.fjsm + "'+SUBSTRING(ORDER_CONTEXT,CHARINDEX(ORDER_NAME,ORDER_CONTEXT,1),LEN(ORDER_CONTEXT))   from  zy_orderrecord a join JC_HOITEMDICTION b on a.HOITEM_ID=b.ORDER_ID where a.order_id='" + myTb.Rows[nrow]["id"].ToString() + "'";
                        //    FrmMdiMain.Database.DoCommand(sql);
                        //    loadGrid_TempOrder();
                        //}
                        //判断是否没有设置标本类型
                        if (myTb.Rows[nrow]["dwlx"].ToString().Trim() == "" || int.Parse(myTb.Rows[nrow]["dwlx"].ToString().Trim()) <= 0)
                        {
                            strts += "第" + Convert.ToString(nrow + 1) + "行医嘱：【" + myTb.Rows[nrow]["医嘱内容"].ToString().Trim() + "】\r\n";
                            arraylist.Add(nrow);
                        }
                    }
                }
            }
            if (strts != "")
            {
                strts = "以下医嘱没有设置标本将不允许发送，请【双击行表头】设置标本！！\r\n" + strts;
                // MessageBox.Show(strts);
                //return false;
            }
            return arraylist;
        }

        #region 在医嘱组中重新排序
        private void updateXH(DataTable myTb)
        {
            int GroupNum = 0, GroupNo = -1;
            int serialNo = 0;
            string sSql = "";

            InstanceForm._database.BeginTransaction();
            try
            {
                for (int i = 0; i < myTb.Rows.Count; i++)
                {
                    if (myTb.Rows[i]["status_flag"] == System.DBNull.Value) continue;
                    if (Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) == 0 || Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) == 1)
                    {
                        if (myTb.Rows[i]["嘱号"] == System.DBNull.Value) myTb.Rows[i]["嘱号"] = -1;
                        GroupNum = Convert.ToInt32(myTb.Rows[i]["嘱号"].ToString().Trim());
                        if (GroupNo != GroupNum) serialNo = 0;
                        else serialNo++;
                        sSql = "update zy_orderrecord set serial_No=" + serialNo.ToString() + " where inpatient_id='" + this.BinID.ToString() + "' and delete_bit=0 and order_context='" + myTb.Rows[i]["医嘱内容"].ToString() + "' and group_id=" + myTb.Rows[i]["嘱号"].ToString().Trim();
                        InstanceForm._database.DoCommand(sSql);
                        GroupNo = GroupNum;
                    }
                }
                InstanceForm._database.CommitTransaction();
            }
            catch (Exception err)
            {
                InstanceForm._database.RollbackTransaction();
                MessageBox.Show(err.ToString(), "错误提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        #endregion
        #endregion

        #region 医嘱审核,发送
        private void btSend_Click(object sender, System.EventArgs e)
            {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //add by zouchihua 2012-5-30  手术室录入医嘱是否控制只有开处方权限医生才可以录入 0=否 1=是
            if ((mz && cfg6047.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "临时医嘱")
                || (_tszl && cfg6049.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "临时医嘱"))
            {
                if (doctor == null || doctor.CF_Right == false)
                {
                    MessageBox.Show("你没有开处方的权限", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
            }

            //Add By Tany 2010-11-16
            if (!mz && !_hs && !hs && !_tszl)
            {
                if (doctor.CF_Right == false)
                {
                    MessageBox.Show("你没有开处方的权限", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
            }

            //Add by Zhujh 2017-02-16                    
            //判断医生是否在已维护H7N9开单权限控制里面

            //查询维护的医嘱  
            DataTable dtSearchHoitemIds = SearchHoitemIds();
            if (dtSearchHoitemIds != null && dtSearchHoitemIds.Rows.Count > 0)
            {
                DataTable dtLogOrder = (DataTable)this.dataGrid_LongOrder.DataSource;
                DataTable dtTempOrder = (DataTable)this.dataGrid_TempOrder.DataSource;
                if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                {
                    //判断长期医嘱
                    for (int i = 0; i < dtLogOrder.Rows.Count; i++)
                    {

                        for (int j = 0; j < dtSearchHoitemIds.Rows.Count; j++)
                        {
                            if (dtLogOrder.Rows[i]["hoitem_id"].ToString().Trim() == dtSearchHoitemIds.Rows[j]["hoitem_id"].ToString())
                            {
                                if (IsDoctorH7N9() == false)
                                {
                                    MessageBox.Show("您没有“" + dtTempOrder.Rows[i]["医嘱内容"].ToString() + "”开单权限！\r\n如需要开此项目，请联系医务处，如果不需要，则将该项目删除!");
                                    return;
                                }
                            }
                        }
                    }
                }
                if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                {
                    //判断临时医嘱
                    for (int i = 0; i < dtTempOrder.Rows.Count; i++)
                    {
                        for (int j = 0; j < dtSearchHoitemIds.Rows.Count; j++)
                        {
                            if (dtTempOrder.Rows[i]["hoitem_id"].ToString().Trim() == dtSearchHoitemIds.Rows[j]["hoitem_id"].ToString())
                            {
                                if (IsDoctorH7N9() == false)
                                {
                                    MessageBox.Show("您没有“" + dtTempOrder.Rows[i]["医嘱内容"].ToString() + "”开单权限！\r\n如需要开此项目，请联系医务处，如果不需要，则将该项目删除!");
                                    return;
                                }
                            }
                        }
                    }
                }
            }


            //add by zouchihua 2012-3-26 
            if (mz)
            {
                //add by zouchihua 2012-03-26   手术麻醉 医嘱管理，是否只有护士长才可以发送医嘱 1=是，0=否
                SystemCfg cfg6040 = new SystemCfg(6040);
                if (cfg6040.Config.ToString() == "1")
                {
                    bool isHSZ = myFunc.IsHSZ(FrmMdiMain.CurrentUser.EmployeeId);
                    if (isHSZ == false)
                    {
                        MessageBox.Show("只有护士长才可以发送！！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                        return;
                    }
                }
            }

            if (outType == true) return;
            Cursor = PubStaticFun.WaitCursor();
            checkPage();

            #region 医嘱发送？？？不应该写在这里，恢复成原来写在DataCheck里面 Modify By Tany 2007-09-03
            /*
			if(tc.SelectedTab.Title.Trim() == sTab0 || tc.SelectedTab.Title.Trim() == sTab1)
			{
				if(BinID==0)
				{
					MessageBox.Show("没有找到病人信息，请重新确认！","提示",MessageBoxButtons.OK,MessageBoxIcon.Asterisk);
					return;
				}
				if(MessageBox.Show(this, "您确认检查完毕吗?", "审核", MessageBoxButtons.YesNo,MessageBoxIcon.Question)==DialogResult.No  )
				{
					return;
				}


				#region 权限确认
				string dlgvalue=DlgPW.Show();
				string pwStr= dlgvalue; //YS.Password;
				bool bOk = InstanceForm._currentUser.CheckPassword(pwStr);
				if(!bOk) 
				{
					FrmMessageBox.Show("你没有通过权限确认，不能发送医嘱！",new Font("宋体",12f),Color.Red,"Sorry！",MessageBoxButtons.OK,MessageBoxIcon.Warning);
					return;
				}
				#endregion

				//发送
				System.DateTime ExecDate=DateManager.ServerDateTimeByDBType(InstanceForm._database);
				Cursor=PubStaticFun.WaitCursor(); 

				//			//生成数据访问对象
				try
				{
					bool _qfExeCurDeptOrder=false;//欠费是否能够发送本科室医嘱

					if(new SystemCfg(11001).Config=="是")
					{
						//判断病人的余额
						if(Convert.ToDecimal(patientInfo1.lbYE.Text.Trim()==""?"0":patientInfo1.lbYE.Text.Trim())<GetMinExecYE(DeptID))
						{
							if(isHSZ==false)
							{
								if(new SystemCfg(11021).Config=="是")
								{
									_qfExeCurDeptOrder=true;
									MessageBox.Show(patientInfo1.lbBed.Text.Trim()+" 床病人 "+patientInfo1.lbName.Text.Trim()+" 的余额为 "+
										patientInfo1.lbYE.Text.Trim() +" 元，将只能发送该病人本科执行的医嘱！\n\n如果需要全部发送，请使用护士长权限登陆！","提示",
										MessageBoxButtons.OK,MessageBoxIcon.Warning);
								}
								else
								{
									MessageBox.Show(patientInfo1.lbBed.Text.Trim()+" 床病人 "+patientInfo1.lbName.Text.Trim()+" 的余额为 "+
										patientInfo1.lbYE.Text.Trim() +" 元，将不能发送该病人医嘱！\n\n如果需要发送，请使用护士长权限登陆！","提示",
										MessageBoxButtons.OK,MessageBoxIcon.Warning);
									return;
								}
							}
						}
					}

                    //发送所有医嘱
                    myFunc.ExecOrdersWithData(InstanceForm._currentDept.DeptId,InstanceForm._currentDept.WardId,InstanceForm._currentUser.EmployeeId, Convert.ToInt64(ClassStatic.Current_BinID), Convert.ToInt64(ClassStatic.Current_BabyID), ExecDate);
				}
				catch(Exception err)
				{
					//写错误日志 Add By Tany 2005-01-12
					SystemLog _systemErrLog=new SystemLog(-1,InstanceForm._currentDept.DeptId,InstanceForm._currentUser.EmployeeId,"程序错误","执行账单错误："+err.Message+"  Source："+err.Source,DateManager.ServerDateTimeByDBType(InstanceForm._database),1,"主机名："+System.Environment.MachineName,39);
					_systemErrLog.Save();
					_systemErrLog=null;

					MessageBox.Show("错误："+err.Message+"\n"+"Source："+err.Source+"\n数据已经回滚，请检查后重新执行！","错误",MessageBoxButtons.OK,MessageBoxIcon.Error);
//					progressBar1.Value=0;
//					ShowOrderDate();
					return;
				}

				MessageBox.Show("发送成功！","提示",MessageBoxButtons.OK,MessageBoxIcon.Asterisk);
				Cursor=Cursors.Default;	
//				ShowOrderDate();
				return;
			}
            */
            #endregion

            //对病人信息进行验证 Modify By Tany 2015-01-20
            #region
            if (!TrasenHIS.BLL.CheckPatientInfo.Check(patientInfo1.lbID.Text, FrmMdiMain.Database))
            {
                return;
            }
            #endregion

            DataGridEx[] dgv = new DataGridEx[2];
            dgv[0] = dataGrid_LongOrder;
            dgv[1] = dataGrid_TempOrder;

            if (tc.SelectedTab.Title.Trim() == "长期医嘱")
            {
                if (Change((DataTable)this.dataGrid_LongOrder.DataSource) == true || XG1 == true)
                {
                    MessageBox.Show("还有未保存(或修改)的长期医嘱\n请先保存!", "保存提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    this.dataGrid_LongOrder.Focus();
                    Cursor = Cursors.Arrow;
                    return;
                }
                loadGrid_LongOrder();//刷新数据
                DataCheck(this.dataGrid_LongOrder, 0);
                loadGrid_LongOrder();//刷新数据
                #region"modify by jchl"
                if (bDataCheck)
                {
                    try
                    {
                        if (strHlyyType == "大通新")
                        {
                            Hlyyfx(dgv, 0, 1);//add by zhujh 2017-01-18 保存药品
                        }
                    }
                    catch
                    { }
                    MessageBox.Show("医嘱审核发送完毕！" + _msg, "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
                #endregion
                Cursor = Cursors.Default;
                return;
            }
            if (tc.SelectedTab.Title.Trim() == "临时医嘱")
            {
                if (Change((DataTable)this.dataGrid_TempOrder.DataSource) == true || XG2 == true)
                {
                    MessageBox.Show("还有未保存(或修改)的临时医嘱\n请先保存!", "保存提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    this.dataGrid_TempOrder.Focus();
                    Cursor = Cursors.Default;
                    return;
                }

                //Modify by jchl 2016-09-07  手术麻醉hrp扫描记账医嘱需要发送重刷比例
                try
                {
                    if (false)
                    {
                        if (mz)//手术麻醉
                        {
                            loadGrid_TempOrder();//刷新数据

                            TrasenHIS.BLL.Judgeorder jo = new TrasenHIS.BLL.Judgeorder(FrmMdiMain.Database);
                            jo.ReComputeRate_HrpInfo(BinID.ToString(), patientInfo1.lbID.Text);
                        }
                    }
                }
                catch { }

                loadGrid_TempOrder();//刷新数据
                DataCheck(this.dataGrid_TempOrder, 1);
                loadGrid_TempOrder();//刷新数据
                #region"modify by jchl"
                if (bDataCheck)
                {
                    try
                    {
                        if (strHlyyType == "大通新")
                        {
                            Hlyyfx(dgv, 0, 1);//add by zhujh 2017-01-18 保存药品
                        }
                    }
                    catch { }
                    MessageBox.Show("医嘱审核发送完毕！" + _msg, "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
                #endregion
            }

            Cursor = Cursors.Default;
        }

        #region 得到该科室医嘱执行的最小余额
        /// <summary>
        /// 得到该科室医嘱执行的最小余额
        /// </summary>
        /// <param name="myTb"></param>
        /// <returns></returns>
        public decimal GetMinExecYE(long Dept_Id)
        {
            decimal rtnYE = 0;

            string sSql = "select * from JC_WARDRDEPT where dept_id=" + Dept_Id + "";
            DataTable myTb = InstanceForm._database.GetDataTable(sSql);

            if (myTb == null || myTb.Rows.Count == 0)
            {
                rtnYE = 0;
            }
            else
            {
                rtnYE = Convert.ToDecimal(myTb.Rows[0]["MINEXECYE"]);
            }

            return rtnYE;
        }
        #endregion

        /// <summary>
        /// 是否护士长
        /// </summary>
        /// <param name="emp_id"></param>
        /// <returns></returns>
        //public bool IsHSZ(int emp_id)
        //{
        //    bool YesOrNo = false;

        //    Nurse _nurse = new Nurse(emp_id, InstanceForm._database);
        //    if (_nurse == null)
        //    {
        //        YesOrNo = false;
        //    }
        //    else if (_nurse.Nurse_Type == TrasenClasses.GeneralClasses.NurseType.护士长)
        //    {
        //        YesOrNo = true;
        //    }

        //    return YesOrNo;
        //}

        private bool Change(DataTable myTb)
        {
            for (int i = 0; i < myTb.Rows.Count; i++)
            {
                if (myTb.Rows[i]["医嘱内容"].ToString().Trim() != "" && myTb.Rows[i]["ID"].ToString().Trim() != "")
                {
                    if (new Guid(myTb.Rows[i]["ID"].ToString().Trim()) == Guid.Empty) return true;
                }
            }
            return false;
        }
        #region 抗菌药物使用目的
        private bool CheckTjmd(DataGridEx myDataGrid1, bool send)
        {
            try
            {
                DataTable myTb = (DataTable)myDataGrid1.DataSource;
                if (myTb == null) return true;
                if (myTb.Rows.Count == 0) return true;

                DataTable newdt = new DataTable();
                newdt = myTb.Clone();
                DataRow[] dr;
                if (send)//发送时
                {
                    dr = myTb.Select("status_flag=0 or status_flag=9 ");
                    //add by zouchihua 2013-5-21 控制是否可以发送其它医生开立的医嘱
                    if (cfg6068.Config.Trim() == "0")
                        dr = myTb.Select("(status_flag=0 or status_flag=9) and  order_doc=" + FrmMdiMain.CurrentUser.EmployeeId.ToString().Trim());
                }
                else
                {
                    string selectstr = "";
                    if (cfg6068.Config.Trim() == "0")
                        selectstr = "order_doc=" + FrmMdiMain.CurrentUser.EmployeeId.ToString().Trim();
                    dr = myTb.Select(selectstr);
                }
                if (dr.Length == 0) return true;
                string strOrderId = "";
                try
                {

                    for (int i = 0; i < dr.Length; i++)
                    {
                        string strHoitemId = dr[i]["HOITEM_ID"].ToString();
                        strOrderId = dr[i]["ID"].ToString();
                        if (strOrderId.Trim() == "")
                            continue;
                        string strSql = string.Format(@"SELECT COUNT(*) FROM ZY_ORDERRECORD WHERE ORDER_ID='{0}' AND HOITEM_ID IN 
                                                                 (select cjid from  vi_yp_ypcd where  kssdjid>0
                                                                 )  and xmly=1  AND ISNULL(KJYWZY,0)=0", strOrderId);
                        if (send == false)
                            strSql = string.Format(@"SELECT COUNT(*) FROM ZY_ORDERRECORD WHERE ORDER_ID='{0}' AND HOITEM_ID IN 
                                                                 (select cjid from  vi_yp_ypcd where  kssdjid>0
                                                                 )  and  xmly=1 ", strOrderId);
                        int iReturn = Convert.ToInt32(FrmMdiMain.Database.GetDataResult(strSql, 30).ToString());
                        if (iReturn > 0)
                            newdt.ImportRow((DataRow)dr[i]);
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message + "  错误" + strOrderId);
                }
                if (newdt.Rows.Count > 0)
                {
                    FrmKJMD frmAction = new FrmKJMD(newdt);
                    frmAction.ShowDialog();
                    if (frmAction.DialogResult == DialogResult.OK)
                        return true;
                    else
                        return false;
                }
                else
                {
                    return true;
                }
            }
            catch (Exception ex)
            {
                // 
                //   MessageBox.Show("请保存医嘱后，再操作");
                MessageBox.Show(ex.Message);
                return false;
            }
        }
        #endregion
        private void DataCheck(DataGridEx myDataGrid1, int tab)
        {
            bDataCheck = false;
            ArrayList jyorderlist = new ArrayList();//add by zouchihua 获得是检验项目的医嘱 2014-4-27

            this.statusBar1.Text = hint[10].Trim();
            //变量定义
            int i;
            int BeginNow = 0, ypjs = 0;
            long Order_Num = 0;
            Order_Num = myQuery.GetYzNum(this.BinID, this.DeptID);
            //得到网格的数据
            DataTable myTb = (DataTable)myDataGrid1.DataSource;

            DataTable tbjy = myTb.Clone();//add by zouchihua 获得是检验项目的医嘱 2014-4-27

            //构成SQL语句
            string sSqlUpdate = "";
            string strShow = "";
            int S = 0;
            Guid OrderID = Guid.Empty;
            long OrderNumCount = 0;
            bool IsErr = false;//发送是否有错误
            if (MessageBox.Show(this, "您确认检查完毕吗?", "审核", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
            {
                return;
            }

            string[] rtnSql = ts_zyhs_classes.BaseFunc.GetBrzt(BinID);
            //Modify by zouchihfua 2011-11-16  病人所在科室机构编码
            //string[] rtnSql = ts_zyhs_classes.BaseFunc.GetBrzt(BinID);
            int BrJgbm = Convert.ToInt32(rtnSql[1]);

            #region 权限确认
            string pwStr = "";
            //Modify By Tany 2010-06-08 是否使用密码确认 0=使用 1=不使用
            if (new SystemCfg(6023, InstanceForm._database).Config == "0")
            {
                string dlgvalue = DlgPW.Show();
                pwStr = dlgvalue; //YS.Password;
                bool bOk = InstanceForm._currentUser.CheckPassword(pwStr);
                //if (System.Configuration.ConfigurationManager.AppSettings["Qybz"] == "否" && !bOk)
                if (!bOk)
                {
                    FrmMessageBox.Show("你没有通过权限确认，不能发送医嘱！", new Font("宋体", 12f), Color.Red, "Sorry！", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    Cursor = Cursors.Default;
                    return;
                }
            }
            #endregion

            //Ca认证
            if (System.Configuration.ConfigurationManager.AppSettings["Qybz"] == "是")
            {
                string ordercontext = GetCaOrdercontex(myTb);

                if (ordercontext.Trim() != "")
                {
                    if (System.Configuration.ConfigurationManager.AppSettings["CAType"] == "P7")
                    {
                        string strmsg = "";
                        ts_ca_Interface.InterfaceCA ca = ts_ca_Interface.CAFactory.CreateCA();
                        bool yz = ca.SignOrderItemP7(ordercontext,
                            TrasenHIS.BLL.HisFunctions.ConvertNewhisidToOldHisid(TrasenHIS.BLL.HisFunctions.DataMapType.JC_EMPLOYEE_PROPERTY, FrmMdiMain.CurrentUser.UserID.ToString(), FrmMdiMain.Database),
                            pwStr, out strmsg);
                        if (yz == false)
                        {
                            MessageBox.Show(pwStr + "发送失败\r\n" + strmsg);
                            return;
                        }
                    }
                    if (System.Configuration.ConfigurationSettings.AppSettings["CAType"] == "P1")
                    {
                        string strmsg = "";
                        ts_ca_Interface.InterfaceCA ca = ts_ca_Interface.CAFactory.CreateCA();
                        bool yz = ca.SignOrderItemP1(ordercontext,
                            TrasenHIS.BLL.HisFunctions.ConvertNewhisidToOldHisid(TrasenHIS.BLL.HisFunctions.DataMapType.JC_EMPLOYEE_PROPERTY, FrmMdiMain.CurrentUser.UserID.ToString(), FrmMdiMain.Database),
                            pwStr, out strmsg);
                        if (yz == false)
                        {
                            MessageBox.Show("发送失败\r\n" + strmsg);
                            return;
                        }
                    }
                }
            }

            //医嘱号先加1
            Order_Num++; OrderNumCount = Order_Num;

            DateTime dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);//取数据库时间


            int status_flag = mz || _tszl ? 2 : 1;//医嘱状态，麻醉站发送直接更改为2

            //生成数据库访问对象
            //			RelationalDatabase _Database=RelationalDatabase.GetDatabase(DatabaseType.IbmDb2ZY);
            //			InstanceForm._database.Initialize("");
            //			InstanceForm._database.Open();
            //			IDbCommand cmd=InstanceForm._database.GetCommand();

            #region"********Modify by : jchl(2016-10-10)[辅助用药]***********"

            DataTable dtDia = GetDiagnosis();

            DataTable dtNeedTable_Fzyy = new DataTable();//非抗生素
            DataTable notNeed_Fzyy = new DataTable();//待登记抗生素
            DataTable sucNeed_Fzyy = new DataTable();//已通过未发送的抗生素医嘱

            for (int iFzyy = 0; iFzyy <= myTb.Rows.Count - 1; iFzyy++)
            {
                if (myTb.Rows[iFzyy]["医嘱内容"].ToString().Trim() != "" && myTb.Rows[iFzyy]["ID"].ToString().Trim() != "")
                {
                    if (IsGroupFirstRow(myTb, iFzyy) == true)//为一组医嘱的第一行
                    {
                        BeginNow = iFzyy;
                    }

                    //在医嘱ID不为空的且不为0的情况下，取出status_flag==0即未校对医嘱出来
                    Guid fzyy_orderid = new Guid(myTb.Rows[iFzyy]["ID"].ToString().Trim());
                    if (fzyy_orderid != Guid.Empty)//在不为空行的情况下
                    {
                        //status_flag==0的医嘱
                        string iFzyy_flag = Convertor.IsNull(myTb.Rows[iFzyy]["status_flag"], "-1").Trim();
                        if ((!iFzyy_flag.Equals("0")) && (!iFzyy_flag.Equals("9")))
                        {
                            continue;
                        }

                        int iRet = -1;
                        bool bFzyy = DoInsertCheckInfo(myTb.Rows[iFzyy]["xmly"].ToString().Trim(),
                            myTb.Rows[iFzyy]["HOItem_ID"].ToString().Trim(), dtDia, myTb.Rows[iFzyy]);

                        string fzyyMsg = "辅助用药：【" + myTb.Rows[iFzyy]["医嘱内容"].ToString().Trim() + "】,这组医嘱不能发送\r\r与病例系统入院诊断不匹配,需要科主任审批后才能发送成功！\r\r如果入院诊断已经修改,则需要删除该辅助用药医嘱后,重新开立！";

                        if (!bFzyy)
                        {
                            //辅助用药与诊断不符合
                            //删除dtNeedTable中于该抗生素同组的已新增的row
                            string iGrpFzyy = myTb.Rows[iFzyy]["嘱号"].ToString().Trim();
                            if (myTb.Rows.Count > 0)
                            {
                                string ordBegDate = "";

                                DataRow[] delRows = myTb.Select("嘱号=" + iGrpFzyy);
                                if (delRows.Length > 0)
                                {
                                    for (int delNum = 0; delNum < delRows.Length; delNum++)
                                    {
                                        if (!string.IsNullOrEmpty(delRows[delNum]["开始时间"].ToString().Trim()))
                                        {
                                            ordBegDate = delRows[delNum]["开始时间"].ToString().Trim();
                                        }

                                        object[] myArr = delRows[delNum].ItemArray;
                                        //notNeed.Rows.Add(myArr);
                                        //notNeed.Rows[notNeed.Rows.Count - 1]["MEMO"] = myDt.Rows[0]["CFJB"];

                                        myTb.Rows.Remove(delRows[delNum]);
                                    }
                                    myTb.AcceptChanges();
                                }

                                MessageBox.Show(fzyyMsg, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            }

                            ////处理myTb
                            //string strFzyy = string.Format(@"select GROUP_ID,* from ZY_FZYY_SH where INPATIENT_ID='{0}' and BABY_ID='{1}'  and DEL_BIT=0 and SHBZ=0",
                            //    BinID.ToString(), BabyID.ToString());

                            //DataTable dtFzyy = InstanceForm._database.GetDataTable(strFzyy);

                            //if (dtFzyy == null)
                            //{
                            //    throw new Exception("查询病人待审核的辅助用药信息失败");
                            //}


                        }
                    }
                }
            }

            #endregion

            #region"********Modify by : jchl(07-10)[抗生素]***********"

            //
            DataTable dtNeedTable = new DataTable();//非抗生素
            DataTable notNeed = new DataTable();//待登记抗生素
            DataTable sucNeed = new DataTable();//已通过未发送的抗生素医嘱

            string strDept = string.Format(@"select COUNT(1) as Num from V_JC_KSS_DEPT where dept_id='{0}' ", InstanceForm._currentDept.DeptId);

            int iDeptSx = 0;
            try
            {
                iDeptSx = int.Parse(InstanceForm._database.GetDataResult(strDept).ToString().Trim());
            }
            catch
            { }

            if (iDeptSx > 0)
            {
                if (cfg6204.Config.Trim().Equals("1"))
                {
                    //拷贝所有数据（删除不能开的抗生素组的医嘱）
                    dtNeedTable = myTb.Copy();
                    notNeed = myTb.Clone();
                    long TypeID = -1;

                    //取出所有通过的医嘱组放到dtNeedTable中
                    for (i = 0; i <= myTb.Rows.Count - 1; i++)
                    {
                        string grpID = "";
                        string strCjid = "";

                        //不为保存状态  并且   不为补录状态
                        if ((!Convertor.IsNull(myTb.Rows[i]["status_flag"], "-1").Trim().Equals("0")) && (!Convertor.IsNull(myTb.Rows[i]["status_flag"], "-1").Trim().Equals("9")))
                        {
                            continue;
                        }

                        if (myTb.Rows[i]["XMLY"].ToString().Trim().Equals("1"))
                        {
                            strCjid = myTb.Rows[i]["HOITEM_ID"].ToString().Trim();
                        }

                        if (grpID.Equals(myTb.Rows[i]["嘱号"].ToString().Trim()))
                        {
                            //同组医嘱开2个抗生素问题?
                            //回填了未通过验证的groupid   (同一个病人id和婴儿id)
                            //不在新增以后未保存的 该组 的其他医嘱
                            continue;
                        }

                        Doctor docKss = new Doctor(long.Parse(myTb.Rows[i]["order_doc"].ToString().Trim()), InstanceForm._database);

                        //过滤掉项目
                        if (!string.IsNullOrEmpty(strCjid) && !strCjid.Equals("-1"))
                        {
                            string strSql = "select t2.CFJB,t2.kssdjid from yp_ypcjd t1,YP_YPGGD t2 where CJID=" + strCjid + " and t1.GGID=t2.GGID";
                            DataTable myDt = InstanceForm._database.GetDataTable(strSql);
                            try
                            {
                                TypeID = docKss.TypeID;
                            }
                            catch { }
                            if (myDt.Rows.Count > 0)
                            {
                                int iCfJb = int.Parse(myDt.Rows[0]["CFJB"].ToString());
                                int iKssDj = int.Parse(myDt.Rows[0]["kssdjid"].ToString());
                                string kssOrdId = myTb.Rows[i]["ID"].ToString();

                                //抗生素kssdjid>0 才进行登记
                                if (iKssDj > 0)
                                {
                                    //校验该医嘱是否登记过
                                    strSql = string.Format(@"select count(1) as NUM from ZY_KSS_DJ where order_id='{0}' and del_bit='0'", kssOrdId);
                                    int iKssCnt = int.Parse(InstanceForm._database.GetDataResult(strSql).ToString().Trim());

                                    if (iKssCnt > 0)
                                    {
                                        //已经登记过
                                        //6205打开后如果越级是否审核
                                        //6206打开后如果特殊抗菌药物是否审核

                                        //未越级并且不是特殊
                                        if (TypeID <= iCfJb && iKssDj != 3)
                                        {
                                            continue;
                                        }

                                        bool yjys = false;//越级并且未审则为false，否则则为true
                                        bool tsys = false;//特殊并且未审则为false，否则则为true

                                        //越级
                                        if (TypeID > iCfJb)
                                        {
                                            strSql = string.Format(@"select count(1) as NUM from ZY_KSS_SH where order_id='{0}' and del_bit='0' and shbz='1'", kssOrdId);
                                            int iKssYjShCnt = int.Parse(InstanceForm._database.GetDataResult(strSql).ToString().Trim());

                                            if (iKssYjShCnt > 0)
                                            {
                                                yjys = true;
                                            }
                                        }
                                        else
                                        {
                                            yjys = true;
                                        }

                                        //特殊
                                        if (iKssDj == 3)
                                        {
                                            strSql = string.Format(@"select count(1) as NUM from zy_kss_sqb where order_id='{0}' and del_bit='0' and shbz='1'", kssOrdId);
                                            int iKssTsCnt = int.Parse(InstanceForm._database.GetDataResult(strSql).ToString().Trim());

                                            if (iKssTsCnt > 0)
                                            {
                                                tsys = true;
                                            }
                                        }
                                        else
                                        {
                                            tsys = true;
                                        }

                                        if (yjys && tsys)
                                        {
                                            continue;
                                        }
                                    }

                                    //删除dtNeedTable中于该抗生素同组的已新增的row
                                    grpID = myTb.Rows[i]["嘱号"].ToString().Trim();
                                    if (dtNeedTable.Rows.Count > 0)
                                    {
                                        string ordBegDate = "";

                                        DataRow[] delRows = dtNeedTable.Select("嘱号=" + grpID);
                                        if (delRows.Length > 0)
                                        {
                                            for (int delNum = 0; delNum < delRows.Length; delNum++)
                                            {
                                                if (!string.IsNullOrEmpty(delRows[delNum]["开始时间"].ToString().Trim()))
                                                {
                                                    ordBegDate = delRows[delNum]["开始时间"].ToString().Trim();
                                                }

                                                object[] myArr = delRows[delNum].ItemArray;
                                                //notNeed.Rows.Add(myArr);
                                                //notNeed.Rows[notNeed.Rows.Count - 1]["MEMO"] = myDt.Rows[0]["CFJB"];

                                                dtNeedTable.Rows.Remove(delRows[delNum]);
                                            }
                                            dtNeedTable.AcceptChanges();
                                            //notNeed.AcceptChanges();

                                            notNeed.Rows.Add(myTb.Rows[i].ItemArray);
                                            notNeed.Rows[notNeed.Rows.Count - 1]["MEMO"] = myDt.Rows[0]["CFJB"];
                                            notNeed.Rows[notNeed.Rows.Count - 1]["开始时间"] = ordBegDate;
                                            notNeed.AcceptChanges();
                                        }
                                    }
                                }
                            }
                        }
                    }


                    //FrmKssLoad frm = new FrmKssLoad();
                    if (notNeed.Rows.Count > 0)
                    {
                        FrmKssLoad frm = new FrmKssLoad(BinID.ToString(), BabyID.ToString(), notNeed, patientInfo1);
                        frm.StartPosition = FormStartPosition.CenterScreen;
                        frm.ShowDialog();
                    }

                    //保存并通过校验的抗生素【不从前台取数据,担心有通过的医嘱发送出错,登记数据保存成功,医嘱却是保存状态】
                    string strPassKss = string.Format(@"select a.order_id,d.GROUP_ID from zy_kss_dj a 
                                                            left join ZY_KSS_SH b on a.order_id=b.ORDER_ID and b.DEL_BIT=0
                                                            left join zy_kss_sqb c on a.order_id=c.ORDER_ID and c.DEL_BIT=0
                                                            inner join ZY_ORDERRECORD d on a.order_id=d.ORDER_ID and d.DELETE_BIT=0 
                                                            where a.inpatient_id='{0}' and a.baby_id='{1}' and a.del_bit=0
                                                            and ((a.type_id>a.cfjb_id and b.SHBZ=1) or '{2}'='0'or a.type_id<=a.cfjb_id)
                                                            and ((a.kssdjid=3 and c.shbz=1) or '{3}'='0' or a.kssdjid<>3)
                                                            and d.STATUS_FLAG=0", BinID.ToString(), BabyID.ToString(), cfg6205.Config.Trim(), cfg6206.Config.Trim());

                    sucNeed = InstanceForm._database.GetDataTable(strPassKss);


                    #region"新增已通过的抗生素组到发送列表中"

                    DataTable myTbAll = myTb.Copy();
                    myTb.Rows.Clear();
                    myTb = dtNeedTable.Copy();//具备权限开立的所有组 医嘱myTb，不具备权限开立的所有组 医嘱notNeed

                    for (int iPassKss = 0; iPassKss < sucNeed.Rows.Count; iPassKss++)
                    {
                        string passGrp = sucNeed.Rows[iPassKss]["GROUP_ID"].ToString();

                        DataRow[] drPassKss = myTb.Select("嘱号='" + passGrp + "'");

                        if (drPassKss.Length == 0)
                        {
                            DataRow[] drAddKss = myTbAll.Select("嘱号='" + passGrp + "'");

                            for (int nDr = 0; nDr < drAddKss.Length; nDr++)
                            {
                                //把通过的医嘱组 添加到可发送数组中
                                myTb.Rows.Add(drAddKss[nDr].ItemArray);
                            }
                        }
                    }

                    myTb.AcceptChanges();
                    #endregion
                }
            }

            #endregion

            #region"********Modify by : jchl(2015-05-10)[医保智审接口]***********"

            if (_bAuditCheck)
            {
                bool bYbVal = DoVaildYbOrder(BinID.ToString(), this.patientInfo1.lbID.Text.Trim(), myTb);
                if ((!bYbVal))
                {
                    if (cfg6221.Config.Equals("0"))
                        return;
                    else
                    {
                        if (MessageBox.Show("上传中公网费用出错,可能会影响医保控费提示,确定是否继续发送医嘱？", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Information, MessageBoxDefaultButton.Button2) == DialogResult.Cancel)
                            return;
                    }
                }
            }

            #endregion

            //数据库事务开始
            btSend.Enabled = false;
            AR_OrderId.Clear();//清空数据 modify by zouchihua
            int Oldgroupid = 0;

            int qflag = 0;
            string str6058 = "," + cfg6058.Config.Trim() + ",";
            //add by zouchihua 2012-6-12 特殊治疗进行欠费管理
            if (_tszl && cfg6054.Config.Trim() == "1" && !str6058.Contains("," + FrmMdiMain.CurrentDept.DeptId.ToString() + ","))
            {
                Crownwood.Magic.Controls.TabControl tc = null;
                tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
                #region 医嘱发送特殊治疗增加欠费判断

                //add by zouchihua 特殊治疗
                if (new SystemCfg(7001).Config == "是")
                {
                    decimal _ye = 0;

                    _ye = Convert.ToDecimal(patientInfo1.lbYE.Text.Trim() == "" ? "0" : patientInfo1.lbYE.Text.Trim());

                    //Modify By Tany 2010-06-18 如果是医保病人，余额=预交金-总费用*费用比例
                    if (patientInfo1.lbJSLX.Text.IndexOf("医保") >= 0)
                    {
                        decimal fee = 0;
                        decimal yjj = 0;
                        if (cfg7186.Config.Trim() == "0")
                        {
                            //首先判断费用比例是不是小于1，如果等于1，则不需要计算
                            decimal bl = Convert.ToDecimal(Convertor.IsNull(InstanceForm._database.GetDataResult("select b.yjj_bl from zy_inpatient a left join jc_yblx b on a.yblx=b.id where a.dischargetype=1 and a.inpatient_id='" + BinID + "'"), "1"));
                            //Modify By Tany 2010-08-07 比例=0的时候相当于不控制欠费
                            if (bl >= 0 && bl < 1)
                            {

                                fee = Convert.ToDecimal(patientInfo1.lbWJSFY.Text.Trim() == "" ? "0" : patientInfo1.lbWJSFY.Text.Trim());
                                yjj = Convert.ToDecimal(patientInfo1.lbYJK.Text.Trim() == "" ? "0" : patientInfo1.myRow["YJK"].ToString().Trim());

                                _ye = yjj - (fee * bl);
                            }
                        }
                        else
                        {

                            #region  add by zouchihua 2014-3-10按照医保试算进行控制
                            string ybfy = @"select isnull(SUM(XJZF),0) fee from 
                                (
                                select top 1 XJZF from ZY_YB_JSB_RJJL where DELETE_BIT=0 and inpatient_id='" + ClassStatic.Current_BinID + @"'  order by YBJS_DATE desc
                                 union all
                                select top 1 XJZF from zy_yb_jsb where delete_bit=0 and cz_flag=0 and DISCHARGE_BIT=0 and inpatient_id='" + ClassStatic.Current_BinID + @"'
                                ) aa
                                ";
                            DataTable tbybfy = InstanceForm._database.GetDataTable(ybfy);
                            if (tbybfy.Rows.Count > 0)
                            {
                                fee = decimal.Parse(tbybfy.Rows[0]["fee"].ToString());
                            }
                            _ye = yjj - (fee);
                            #endregion
                        }
                    }
                    //判断病人的余额
                    if (_ye < myFunc.GetPatMinExecYE(BinID))
                    {
                        //Add By Tany 2010-11-27 增加对病人入院时间的判断
                        //7072病人入院？小时后控制欠费（0=立即控制）
                        int _hour = Convert.ToInt32(new SystemCfg(7072).Config);
                        DateTime _rysj = Convert.ToDateTime(InstanceForm._database.GetDataResult("select in_date from zy_inpatient where inpatient_id='" + BinID + "'"));
                        if (_rysj.AddHours(_hour) <= DateManager.ServerDateTimeByDBType(InstanceForm._database))
                        {
                            MessageBox.Show(patientInfo1.lbBed.Text.Trim() + " 床病人 " + patientInfo1.lbName.Text.Trim() + " 的余额为 " +
                               patientInfo1.lbYE.Text.Trim() + " 元，已经欠费，医嘱将不能发送！", "提示",
                               MessageBoxButtons.OK, MessageBoxIcon.Information);
                            {
                                qflag = 1;
                                return;
                            }
                        }
                    }
                }

                #endregion
            }
            SystemCfg cfg6062 = new SystemCfg(6062);
            string qz = "";
            if (cfg6062.Config.Trim() == "1")
                qz = "【补】";
            try
            {
                if (cfg6085.Config.Trim() == "1" && CheckTjmd(myDataGrid1, true) == false)
                {
                    btSend.Enabled = true;
                    return;
                }
            }
            catch { }


            //Modify By jchl 2015-11-12 获取病人医保类型
            int yblx = Convert.ToInt32(InstanceForm._database.GetDataResult("select yblx from zy_inpatient where inpatient_id='" + BinID + "'"));

            InstanceForm._database.BeginTransaction();
            string ts = "";
            string bbtsstr = "";
            string jzyzxx = "";
            try
            {

                //add by zouchihua 2013-8-12验证是否有标本
                ArrayList arrow = Yzbb(myTb, out bbtsstr);
                #region 修改当前时间以第一条为准
                if (cfg6089.Config.Trim() == "1")
                {
                    DataTable newdt = new DataTable();
                    newdt = myTb.Clone();
                    DataRow[] dr = myTb.Select("status_flag=0");
                    for (int ii = 0; ii < dr.Length; ii++)
                    {
                        newdt.ImportRow((DataRow)dr[ii]);
                        break;
                    }
                    if (newdt.Rows.Count > 0)
                        dTime = Convert.ToDateTime(newdt.Rows[0]["开始时间"].ToString());
                }
                #endregion
                #region 循环更新数据,需要更新的数据

                #region"********Modify by : jchl(07-10)【过滤未过关并且未审核的药品】【作废】***********"

                /*

                myTb.Rows.Clear();
                myTb = dtNeedTable.Copy();//具备权限开立的所有组 医嘱myTb，不具备权限开立的所有组 医嘱notNeed

                //将notNeed数据插入审核流程表
                //Doctor doc = new Doctor(InstanceForm._currentUser.EmployeeId, InstanceForm._database); Modify By Tany 2015-03-26 没用
                string strName = InstanceForm._currentUser.Name;

                int iReturn = -1;

                if (cfg6205.Config.ToString().Equals("0"))
                {
                    //不走审核流程
                    for (int iCfg = 0; iCfg <= notNeed.Rows.Count - 1; iCfg++)
                    {
                        string id = TrasenClasses.GeneralClasses.PubStaticFun.NewGuid().ToString();
                        DataRow dr = notNeed.Rows[iCfg];
                        string orderID = dr["ID"].ToString();
                        string cjid = dr["HOITEM_ID"].ToString().Trim();
                        string S_YPPM = dr["医嘱内容"].ToString();
                        string CFJB = dr["MEMO"].ToString();
                        string shbz = "1";
                        string babyId = cmbChild.SelectedValue == null ? "0" : cmbChild.SelectedValue.ToString();
                        string myGrp = dr["嘱号"].ToString().Trim();

                        string mysql = string.Format(@"insert into zy_kss_sh (ID,ORDER_ID,CJID,S_YPPM,CFJB,EMPLOYEE_ID,YS_TYPEID,SHBZ,SHR,SHSJ,DJR,DJSJ,DEPT_ID,INPATIENT_ID,BABY_ID,GROUP_ID) values 
                                                                ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}')"
                                                                            , id, orderID, cjid, S_YPPM, CFJB, InstanceForm._currentUser.EmployeeId, TypeID, shbz, frm.SHR, frm.SHSJ, InstanceForm._currentUser.EmployeeId, DateTime.Now, InstanceForm._currentDept.DeptId, BinID, babyId, myGrp);

                        iReturn = FrmMdiMain.Database.DoCommand(mysql);
                        if (iReturn <= 0)
                        {
                            //事务回收
                            FrmMdiMain.Database.RollbackTransaction();
                            btSend.Enabled = true;
                            MessageBox.Show("操作失败！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            return;
                        }

                        //审核添加到可发送数组中
                        myTb.Rows.Add(dr.ItemArray);
                    }
                }
                else if (cfg6205.Config.ToString().Equals("1"))
                {
                    //走审核流程
                    //未输入密码
                    if (!frm.chkMima.Checked)
                    {
                        for (int iCfg = 0; iCfg <= notNeed.Rows.Count - 1; iCfg++)
                        {
                            string id = TrasenClasses.GeneralClasses.PubStaticFun.NewGuid().ToString();
                            DataRow dr = notNeed.Rows[iCfg];
                            string orderID = dr["ID"].ToString();
                            string cjid = dr["HOITEM_ID"].ToString().Trim();
                            string S_YPPM = dr["医嘱内容"].ToString();
                            string CFJB = dr["MEMO"].ToString();
                            string shbz = "0";
                            string babyId = cmbChild.SelectedValue == null ? "0" : cmbChild.SelectedValue.ToString();
                            string myGrp = dr["嘱号"].ToString().Trim();

                            //是否在未审核记录中
                            string mysql = string.Format(@"select count(1) as NUM from zy_kss_sh where ORDER_ID='{0}'", orderID);
                            DataTable valDt = InstanceForm._database.GetDataTable(mysql);
                            if (valDt.Rows.Count > 0 && valDt.Rows[0]["NUM"].ToString().Trim().Equals("1"))
                            {
                                continue;
                            }

                            mysql = string.Format(@"insert into zy_kss_sh (ID,ORDER_ID,CJID,S_YPPM,CFJB,EMPLOYEE_ID,YS_TYPEID,SHBZ,DJR,DJSJ,DEPT_ID,INPATIENT_ID,BABY_ID,GROUP_ID) values 
                                                                ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')"
                                                                                , id, orderID, cjid, S_YPPM, CFJB, InstanceForm._currentUser.EmployeeId, TypeID, shbz,
                                                                                InstanceForm._currentUser.EmployeeId, DateTime.Now, InstanceForm._currentDept.DeptId, BinID, babyId, myGrp);

                            iReturn = FrmMdiMain.Database.DoCommand(mysql);
                            if (iReturn <= 0)
                            {
                                //事务回收
                                FrmMdiMain.Database.RollbackTransaction();
                                btSend.Enabled = true;
                                MessageBox.Show("操作失败！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                return;
                            }
                        }
                    }
                    else
                    {
                        //输入密码
                        //校验身份
                        string mysql = string.Format(@"select count(1) as NUM from Pub_User where Employee_Id='{0}' and password='{1}'", frm.SHR, frm.Mima);
                        DataTable valDt = InstanceForm._database.GetDataTable(mysql);

                        if (valDt.Rows.Count > 0 && valDt.Rows[0]["NUM"].ToString().Trim().Equals("1"))
                        {
                            //密码验证成功
                            for (int iCfg = 0; iCfg <= notNeed.Rows.Count - 1; iCfg++)
                            {
                                string id = TrasenClasses.GeneralClasses.PubStaticFun.NewGuid().ToString();
                                DataRow dr = notNeed.Rows[iCfg];
                                string orderID = dr["ID"].ToString();
                                string cjid = dr["HOITEM_ID"].ToString().Trim();
                                string S_YPPM = dr["医嘱内容"].ToString();
                                string CFJB = dr["MEMO"].ToString();
                                string shbz = "1";
                                string babyId = cmbChild.SelectedValue == null ? "0" : cmbChild.SelectedValue.ToString();
                                string myGrp = dr["嘱号"].ToString().Trim();

                                string mysql1 = string.Format(@"insert into zy_kss_sh (ID,ORDER_ID,CJID,S_YPPM,CFJB,EMPLOYEE_ID,YS_TYPEID,SHBZ,SHR,SHSJ,DJR,DJSJ,DEPT_ID,INPATIENT_ID,BABY_ID,GROUP_ID) values 
                                                                ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}')"
                                                                                    , id, orderID, cjid, S_YPPM, CFJB, InstanceForm._currentUser.EmployeeId, TypeID, shbz, frm.SHR, frm.SHSJ,
                                                                                    InstanceForm._currentUser.EmployeeId, DateTime.Now, InstanceForm._currentDept.DeptId, BinID, babyId, myGrp);

                                iReturn = FrmMdiMain.Database.DoCommand(mysql1);
                                if (iReturn <= 0)
                                {
                                    //事务回收
                                    FrmMdiMain.Database.RollbackTransaction();
                                    btSend.Enabled = true;
                                    MessageBox.Show("操作失败！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                    return;
                                }

                                //审核添加到可发送数组中
                                myTb.Rows.Add(dr.ItemArray);
                            }
                        }
                        else
                        {
                            //事务回收
                            FrmMdiMain.Database.RollbackTransaction();
                            btSend.Enabled = true;
                            MessageBox.Show("账户验证不通过，请确认输入的用户名、密码是否正确！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            return;
                        }
                    }
                }

                #region 新增登记记录

                if (cfg6206.Config.Equals("1"))
                {

                    //新增登记记录
                    if (frmKss._isOk && dtKss.Rows.Count > 0)
                    {
                        foreach (KeyValuePair<string, Entity_KjSq> kvp in frmKss.myEntity)
                        {
                            Entity_KjSq entity = kvp.Value;
                            entity.baby_id = cmbChild.SelectedValue == null ? "0" : cmbChild.SelectedValue.ToString();
                            entity.INPATIENT_ID = BinID.ToString();

                            string strKssSql = string.Format(@"insert into zy_kss_sqb(DJID,
                                                                                   INPATIENT_ID		,
                                                                                   baby_id			,
                                                                                   order_id			,
                                                                                   group_id			,
                                                                                   dept_id			,
                                                                                   zyzd				,
                                                                                   shyj				,
                                                                                   apply_id			,
                                                                                   apply_time		,
                                                                                   shr				,
                                                                                   shsj				,
                                                                                   purp_1			,
                                                                                   purp_1_memo		,
                                                                                   purp_2			,
                                                                                   purp_2_memo		,
                                                                                   purp_3			,
                                                                                   purp_3_memo		,
                                                                                   purp_4			,
                                                                                   purp_4_memo		,
                                                                                   purp_5_memo) VALUES
                                                                ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}','{16}','{17}','{18}','{19}','{20}')",
                                                   entity.DJID, entity.INPATIENT_ID, entity.baby_id, entity.order_id, entity.group_id, entity.dept_id, entity.zyzd.Replace("'", "''"), entity.shyj.Replace("'", "''"), entity.apply_id, entity.apply_time,
                                                   entity.shr, entity.shsj, entity.purp_1, entity.purp_1_memo.Replace("'", "''"), entity.purp_2, entity.purp_2_memo.Replace("'", "''"), entity.purp_3, entity.purp_3_memo.Replace("'", "''"), entity.purp_4, entity.purp_4_memo.Replace("'", "''"), entity.purp_5_memo.Replace("'", "''"));

                            iReturn = FrmMdiMain.Database.DoCommand(strKssSql);

                            if (iReturn <= 0)
                            {
                                FrmMdiMain.Database.RollbackTransaction();
                                MessageBox.Show("操作失败！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                return;
                            }
                        }
                    }
                }

                #endregion

                myTb.AcceptChanges();

                */

                #endregion

                for (i = 0; i <= myTb.Rows.Count - 1; i++)
                {

                    for (int j = 0; j < sameDTlist.Count; j++)
                    {
                        string dd = Convert.ToDateTime(sameDTlist[j].ToString()).ToString("yyyy-MM-dd HH:mm:00");
                        if (myTb.Rows[i]["开始时间"].ToString() != "")
                        {
                            string ss = Convert.ToDateTime(myTb.Rows[i]["开始时间"].ToString()).ToString("yyyy-MM-dd HH:mm:00");
                            if (dd == ss)
                            {
                                dTime = Convert.ToDateTime(sameDTlist[j].ToString());
                                break;
                            }
                        }
                    }

                    #region  修改录入时间
                    for (int j = 0; j < startDTlist.Count; j++)
                    {
                        string dd = Convert.ToDateTime(startDTlist[j].ToString()).ToString("yyyy-MM-dd HH:mm:00");
                        if (myTb.Rows[i]["开始时间"].ToString() != "")
                        {
                            string ss = Convert.ToDateTime(myTb.Rows[i]["开始时间"].ToString()).ToString("yyyy-MM-dd HH:mm:00");
                            if (dd == ss)
                            {
                                dTime = Convert.ToDateTime(startDTlist[j].ToString());
                                break;
                            }
                        }

                    }
                    for (int j = 0; j < startDTlistT.Count; j++)
                    {
                        string dd = Convert.ToDateTime(startDTlistT[j].ToString()).ToString("yyyy-MM-dd HH:mm:00");
                        if (myTb.Rows[i]["开始时间"].ToString() != "")
                        {
                            string ss = Convert.ToDateTime(myTb.Rows[i]["开始时间"].ToString()).ToString("yyyy-MM-dd HH:mm:00");
                            if (dd == ss)
                            {
                                dTime = Convert.ToDateTime(startDTlistT[j].ToString());
                                break;
                            }
                        }

                    }
                    #endregion

                    if (arrow.IndexOf(i) >= 0)
                        continue;

                    if (myTb.Rows[i]["医嘱内容"].ToString().Trim() != "" && myTb.Rows[i]["ID"].ToString().Trim() != "")
                    {
                        if (IsGroupFirstRow(myTb, i) == true)//为一组医嘱的第一行
                        {
                            BeginNow = i;
                        }
                        if (myTb.Rows[BeginNow]["剂数"].ToString() == "")
                            ypjs = 1;
                        else
                            ypjs = Int32.Parse(myTb.Rows[BeginNow]["剂数"].ToString());

                        //在医嘱ID不为空的且不为0的情况下，取出status_flag==0即未校对医嘱出来，全部更新一遍
                        OrderID = new Guid(myTb.Rows[i]["ID"].ToString().Trim());
                        if (OrderID != Guid.Empty)//在不为空行的情况下
                        {
                            //status_flag==0的医嘱,即：更新所有未校对的医嘱
                            if (Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) == 0 || myTb.Rows[i]["status_flag"].ToString() == "9")
                            {
                                //add by zouchihua 2013-5-21 控制是否可以发送其它医生开立的医嘱
                                if (cfg6068.Config.Trim() == "0" && myTb.Rows[i]["order_doc"].ToString().Trim() != FrmMdiMain.CurrentUser.EmployeeId.ToString().Trim())
                                {
                                    ts += " 医嘱 【" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "】| 开立医生【" + myTb.Rows[i]["下嘱医生"].ToString().Trim() + "】\r\n";
                                    continue;
                                }
                                //add by zouchihua 2013-8-15 加急医嘱发送消息
                                if (myTb.Rows[i]["医嘱内容"].ToString().Trim().IndexOf("急") >= 0 && myTb.Rows[i]["医嘱内容"].ToString().Trim().IndexOf("急查") < 0)
                                {
                                    jzyzxx += "【" + myTb.Rows[i]["医嘱内容"].ToString() + "】 |";
                                }

                                //modify by zouchihua 2011-09-14    保存新增医嘱
                                AR_OrderId.Add(myTb.Rows[i]["id"].ToString());

                                //补录的发送
                                if (myTb.Rows[BeginNow]["status_flag"].ToString() == "9")
                                {
                                    //sSqlUpdate = "UPDATE ZY_ORDERRECORD set status_flag=" + status_flag + ",Dosage=" + ypjs + " WHERE Order_ID='" + OrderID.ToString() + "'";
                                    #region add by zouchihua 2012-9-27 补录也一样要处理中草药的情况
                                    string dw = myTb.Rows[BeginNow]["dwlx"].ToString().Trim().Substring(0, 1);
                                    if (dw == "9" && myTb.Rows[BeginNow]["ntype"].ToString().Trim() == "3")//需要煎药费(草药)
                                    {
                                        //如果单位类型长度大于1，那么取第二位
                                        string ydw = "1";
                                        if (myTb.Rows[BeginNow]["dwlx"].ToString().Trim().Length > 1)
                                        {
                                            ydw = myTb.Rows[BeginNow]["dwlx"].ToString().Trim().Substring(1, 1);
                                        }
                                        //add by zouchihua 2013-01-11 如果原单位类型为9改为1
                                        if (ydw == "9")
                                            ydw = "1";
                                        sSqlUpdate = "UPDATE ZY_ORDERRECORD set ORDER_CONTEXT='" + qz + "'+ORDER_CONTEXT,  status_flag=" + status_flag + ",Dosage=" + ypjs + ",Operator=" + this.YS_ID.ToString() + ",dwlx=" + ydw + " WHERE Order_ID='" + OrderID.ToString() + "'";
                                        if (myTb.Rows[i]["开始时间"].ToString() != "")
                                        {
                                            Guid n_id = PubStaticFun.NewGuid();
                                            long iYZH = 0;

                                            //首先插入一条记录
                                            InstanceForm._database.DoCommand("insert into zy_decoct (id,inpatient_id,group_id,order_id,jgbm)values('" + n_id + "','" + this.BinID.ToString() + "'," + myTb.Rows[BeginNow]["嘱号"].ToString() + ",'" + Guid.Empty + "'," + BrJgbm + ")");

                                            //Modify By Tany 2010-03-03 煎药费账单在医嘱保存时就产生
                                            #region 煎药费
                                            //取组号
                                            string sSql = @"select max(Group_Id) as YZH " +
                                                "  from Zy_OrderRecord " +
                                                " where inpatient_id='" + this.BinID.ToString() + "'" +
                                                "       and baby_id=" + this.BabyID;//+
                                            //										"       and mngtype=3";
                                            DataTable myTempTb = InstanceForm._database.GetDataTable(sSql);
                                            if (myTempTb.Rows[0]["YZH"].ToString().Trim() == "")
                                            {
                                                iYZH = 0;
                                            }
                                            else
                                            {
                                                iYZH = Convert.ToInt32(myTempTb.Rows[0]["YZH"]) + 1;
                                            }

                                            //取煎药费
                                            if (yblx == 3)
                                            {
                                                sSql = @"Select a.order_id,a.order_name,a.order_unit,a.order_type,a.default_dept " +
                                                    " from jc_hoitemdiction a " +
                                                    " where a.order_id=" + new SystemCfg(6225, InstanceForm._database).Config;
                                            }
                                            else
                                            {
                                                sSql = @"Select a.order_id,a.order_name,a.order_unit,a.order_type,a.default_dept " +
                                                    " from jc_hoitemdiction a " +
                                                    " where a.order_id=" + new SystemCfg(7014, InstanceForm._database).Config;
                                            }
                                            myTempTb.Clear();
                                            myTempTb = InstanceForm._database.GetDataTable(sSql);
                                            //如果没有设置煎药费代码，将不插入煎药费
                                            if (myTempTb.Rows.Count == 0 || myTempTb == null)
                                            {
                                                MessageBox.Show("没有设置煎药费代码，请手工输入煎药费！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Stop);
                                            }
                                            else
                                            {
                                                decimal v_hoitem_id = Convert.ToDecimal(myTempTb.Rows[0]["order_id"].ToString());
                                                string v_order_context = myTempTb.Rows[0]["order_name"].ToString().Trim();
                                                string v_unit = myTempTb.Rows[0]["order_unit"].ToString().Trim();
                                                int v_order_type = Convert.ToInt32(myTempTb.Rows[0]["order_type"].ToString().Trim());
                                                long v_exec_dept = 0;

                                                //如果没有执行科室，则是病人科室
                                                if (myTempTb.Rows[0]["default_dept"].ToString().Trim() == ""
                                                    || myTempTb.Rows[0]["default_dept"].ToString().Trim() == "0"
                                                    || myTempTb.Rows[0]["default_dept"].ToString().Trim() == "-1"
                                                    || myTempTb.Rows[0]["default_dept"].ToString().Trim() == "1")
                                                {
                                                    v_exec_dept = Convert.ToInt64(this.DeptID);
                                                }
                                                else
                                                {
                                                    v_exec_dept = Convert.ToInt64(myTempTb.Rows[0]["default_dept"]);
                                                }
                                                try
                                                {

                                                    Guid v_O_id = PubStaticFun.NewGuid();
                                                    //插入医嘱记录表
                                                    sSql = @"INSERT INTO ZY_ORDERRECORD( " +
                                                        "order_id,jgbm,INPATIENT_ID,Baby_ID,WARD_ID,DEPT_BR,DEPT_ID, " +
                                                        "MNGTYPE,ORDER_BDATE,GROUP_ID,NTYPE, " +
                                                        "HOITEM_ID,xmly,ORDER_CONTEXT,NUM,DOSAGE,UNIT,ORDER_USAGE,FREQUENCY, " +
                                                        "EXEC_DEPT,FIRST_TIMES,STATUS_FLAG, " +
                                                        "AUDITING_USER,AUDITING_DATE,OPERATOR,BOOK_DATE,SERIAL_NO,TsApply_id,Apply_type,zsldw,jldwlx,ORDER_DOC) " +
                                                        "VALUES( '" + v_O_id + "'," + BrJgbm + ",'" +
                                                        this.BinID + "'," + this.BabyID +
                                                        ",'" + new Department(this.Dept_Br, InstanceForm._database).WardId + "'," + this.Dept_Br + "," + this.DeptID +
                                                        ",3,getdate()," + iYZH.ToString() + "," + v_order_type + "," +
                                                        v_hoitem_id + ",2,'" + v_order_context + "'," + myTb.Rows[BeginNow]["剂数"] + ",1,'" + v_unit + "','',''," +
                                                        v_exec_dept + ", 1,2," +
                                                        InstanceForm._currentUser.EmployeeId.ToString() + ",getdate() ," + InstanceForm._currentUser.EmployeeId.ToString() + ",getdate(),0,'" + tsapply_id + "'," + Apply_type + ",'" + v_unit + "','1'," + InstanceForm._currentUser.EmployeeId.ToString() + ")";

                                                    InstanceForm._database.DoCommand(sSql);

                                                    if (v_O_id == null || v_O_id == Guid.Empty)
                                                    {
                                                        throw new Exception("没有生成Order_id，无法更新数据！");
                                                    }

                                                    sSql = "update zy_decoct set order_id='" + v_O_id + "' where id='" + n_id + "'";
                                                    InstanceForm._database.DoCommand(sSql);
                                                }
                                                catch (Exception err)
                                                {
                                                    //写错误日志 Add By Tany 2005-01-12
                                                    SystemLog _systemErrLog = new SystemLog(-1, InstanceForm._currentDept.DeptId, Convert.ToInt32(InstanceForm._currentUser.EmployeeId), "程序错误", "医嘱转抄错误：" + err.Message + "  Source：" + err.Source, DateManager.ServerDateTimeByDBType(InstanceForm._database), 1, "主机名：" + System.Environment.MachineName, 39);
                                                    _systemErrLog.Save();
                                                    _systemErrLog = null;

                                                    MessageBox.Show("错误：将煎药费插入临时账单错误，请手工生成煎药费！\n系统：" + err.Message, "提示", MessageBoxButtons.OK, MessageBoxIcon.Stop);
                                                }
                                            }
                                            #endregion
                                        }
                                    }
                                    else
                                    {

                                        sSqlUpdate = "UPDATE ZY_ORDERRECORD set  ORDER_CONTEXT='" + qz + "'+ORDER_CONTEXT,  status_flag=" + status_flag + ",Dosage=" + ypjs + ",Operator=" + this.YS_ID.ToString() + " WHERE Order_ID='" + OrderID.ToString() + "'";
                                    }
                                    #endregion
                                }
                                else
                                {
                                    string dw = myTb.Rows[BeginNow]["dwlx"].ToString().Trim().Substring(0, 1);
                                    if (dw == "9" && myTb.Rows[BeginNow]["ntype"].ToString().Trim() == "3")//需要煎药费(草药)
                                    {
                                        //如果单位类型长度大于1，那么取第二位
                                        string ydw = "1";
                                        if (myTb.Rows[BeginNow]["dwlx"].ToString().Trim().Length > 1)
                                        {
                                            ydw = myTb.Rows[BeginNow]["dwlx"].ToString().Trim().Substring(1, 1);
                                        }
                                        //add by zouchihua 2013-01-11 如果原单位类型为9改为1
                                        if (ydw == "9")
                                            ydw = "1";

                                        //Modify by jchl (6215参数控制医嘱发送不更新医嘱时间 0=不 1=是  )
                                        if (cfg6215.Config.ToString().Trim().Equals("1"))
                                        {
                                            sSqlUpdate = "UPDATE ZY_ORDERRECORD set order_bDate='" + dTime.ToString() + "',status_flag=" + status_flag + ",Dosage=" + ypjs + ",Operator=" + this.YS_ID.ToString() + ",dwlx=" + ydw + " WHERE Order_ID='" + OrderID.ToString() + "'";

                                        }
                                        else
                                        {
                                            sSqlUpdate = "UPDATE ZY_ORDERRECORD set status_flag=" + status_flag + ",Dosage=" + ypjs + ",Operator=" + this.YS_ID.ToString() + ",dwlx=" + ydw + " WHERE Order_ID='" + OrderID.ToString() + "'";

                                        }

                                        if (myTb.Rows[i]["开始时间"].ToString() != "")
                                        {
                                            Guid n_id = PubStaticFun.NewGuid();
                                            long iYZH = 0;

                                            //首先插入一条记录
                                            InstanceForm._database.DoCommand("insert into zy_decoct (id,inpatient_id,group_id,order_id,jgbm)values('" + n_id + "','" + this.BinID.ToString() + "'," + myTb.Rows[BeginNow]["嘱号"].ToString() + ",'" + Guid.Empty + "'," + BrJgbm + ")");

                                            //Modify By Tany 2010-03-03 煎药费账单在医嘱保存时就产生
                                            #region 煎药费
                                            //取组号
                                            string sSql = @"select max(Group_Id) as YZH " +
                                                "  from Zy_OrderRecord " +
                                                " where inpatient_id='" + this.BinID.ToString() + "'" +
                                                "       and baby_id=" + this.BabyID;//+
                                            //										"       and mngtype=3";
                                            DataTable myTempTb = InstanceForm._database.GetDataTable(sSql);
                                            if (myTempTb.Rows[0]["YZH"].ToString().Trim() == "")
                                            {
                                                iYZH = 0;
                                            }
                                            else
                                            {
                                                iYZH = Convert.ToInt32(myTempTb.Rows[0]["YZH"]) + 1;
                                            }

                                            //取煎药费
                                            if (yblx == 3)
                                            {
                                                sSql = @"Select a.order_id,a.order_name,a.order_unit,a.order_type,a.default_dept " +
                                                    " from jc_hoitemdiction a " +
                                                    " where a.order_id=" + new SystemCfg(6225, InstanceForm._database).Config;
                                            }
                                            else
                                            {
                                                sSql = @"Select a.order_id,a.order_name,a.order_unit,a.order_type,a.default_dept " +
                                                    " from jc_hoitemdiction a " +
                                                    " where a.order_id=" + new SystemCfg(7014, InstanceForm._database).Config;
                                            }
                                            ////取煎药费
                                            //sSql = @"Select a.order_id,a.order_name,a.order_unit,a.order_type,a.default_dept " +
                                            //    " from jc_hoitemdiction a " +
                                            //    " where a.order_id=" + new SystemCfg(7014, InstanceForm._database).Config;
                                            myTempTb.Clear();
                                            myTempTb = InstanceForm._database.GetDataTable(sSql);
                                            //如果没有设置煎药费代码，将不插入煎药费
                                            if (myTempTb.Rows.Count == 0 || myTempTb == null)
                                            {
                                                MessageBox.Show("没有设置煎药费代码，请手工输入煎药费！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Stop);
                                            }
                                            else
                                            {
                                                decimal v_hoitem_id = Convert.ToDecimal(myTempTb.Rows[0]["order_id"].ToString());
                                                string v_order_context = myTempTb.Rows[0]["order_name"].ToString().Trim();
                                                string v_unit = myTempTb.Rows[0]["order_unit"].ToString().Trim();
                                                int v_order_type = Convert.ToInt32(myTempTb.Rows[0]["order_type"].ToString().Trim());
                                                long v_exec_dept = 0;

                                                //如果没有执行科室，则是病人科室
                                                if (myTempTb.Rows[0]["default_dept"].ToString().Trim() == ""
                                                    || myTempTb.Rows[0]["default_dept"].ToString().Trim() == "0"
                                                    || myTempTb.Rows[0]["default_dept"].ToString().Trim() == "-1"
                                                    || myTempTb.Rows[0]["default_dept"].ToString().Trim() == "1")
                                                {
                                                    v_exec_dept = Convert.ToInt64(this.DeptID);
                                                }
                                                else
                                                {
                                                    v_exec_dept = Convert.ToInt64(myTempTb.Rows[0]["default_dept"]);
                                                }

                                                try
                                                {

                                                    Guid v_O_id = PubStaticFun.NewGuid();
                                                    //插入医嘱记录表
                                                    sSql = @"INSERT INTO ZY_ORDERRECORD( " +
                                                        "order_id,jgbm,INPATIENT_ID,Baby_ID,WARD_ID,DEPT_BR,DEPT_ID, " +
                                                        "MNGTYPE,ORDER_BDATE,GROUP_ID,NTYPE, " +
                                                        "HOITEM_ID,xmly,ORDER_CONTEXT,NUM,DOSAGE,UNIT,ORDER_USAGE,FREQUENCY, " +
                                                        "EXEC_DEPT,FIRST_TIMES,STATUS_FLAG, " +
                                                        "AUDITING_USER,AUDITING_DATE,OPERATOR,BOOK_DATE,SERIAL_NO,TsApply_id,Apply_type,zsldw,jldwlx,ORDER_DOC) " +
                                                        "VALUES( '" + v_O_id + "'," + BrJgbm + ",'" +
                                                        this.BinID + "'," + this.BabyID +
                                                        ",'" + new Department(this.Dept_Br, InstanceForm._database).WardId + "'," + this.Dept_Br + "," + this.DeptID +
                                                        ",3,getdate()," + iYZH.ToString() + "," + v_order_type + "," +
                                                        v_hoitem_id + ",2,'" + v_order_context + "'," + myTb.Rows[BeginNow]["剂数"] + ",1,'" + v_unit + "','',''," +
                                                        v_exec_dept + ", 1,2," +
                                                        InstanceForm._currentUser.EmployeeId.ToString() + ",getdate() ," + InstanceForm._currentUser.EmployeeId.ToString() + ",getdate(),0,'" + tsapply_id + "'," + Apply_type + ",'" + v_unit + "','1'," + InstanceForm._currentUser.EmployeeId.ToString() + ")";

                                                    InstanceForm._database.DoCommand(sSql);

                                                    if (v_O_id == null || v_O_id == Guid.Empty)
                                                    {
                                                        throw new Exception("没有生成Order_id，无法更新数据！");
                                                    }

                                                    sSql = "update zy_decoct set order_id='" + v_O_id + "' where id='" + n_id + "'";
                                                    InstanceForm._database.DoCommand(sSql);
                                                }
                                                catch (Exception err)
                                                {
                                                    //写错误日志 Add By Tany 2005-01-12
                                                    SystemLog _systemErrLog = new SystemLog(-1, InstanceForm._currentDept.DeptId, Convert.ToInt32(InstanceForm._currentUser.EmployeeId), "程序错误", "医嘱转抄错误：" + err.Message + "  Source：" + err.Source, DateManager.ServerDateTimeByDBType(InstanceForm._database), 1, "主机名：" + System.Environment.MachineName, 39);
                                                    _systemErrLog.Save();
                                                    _systemErrLog = null;

                                                    MessageBox.Show("错误：将煎药费插入临时账单错误，请手工生成煎药费！\n系统：" + err.Message, "提示", MessageBoxButtons.OK, MessageBoxIcon.Stop);
                                                }
                                            }
                                            #endregion
                                        }
                                    }
                                    else
                                    {

                                        //Modify by jchl (6215参数控制医嘱发送不更新医嘱时间 0=不 1=是  )
                                        if (cfg6215.Config.ToString().Trim().Equals("1"))
                                        {
                                            sSqlUpdate = "UPDATE ZY_ORDERRECORD set order_bDate='" + dTime.ToString() + "',status_flag=" + status_flag + ",Dosage=" + ypjs + ",Operator=" + this.YS_ID.ToString() + " WHERE Order_ID='" + OrderID.ToString() + "'";

                                        }
                                        else
                                        {
                                            sSqlUpdate = "UPDATE ZY_ORDERRECORD set status_flag=" + status_flag + ",Dosage=" + ypjs + ",Operator=" + this.YS_ID.ToString() + " WHERE Order_ID='" + OrderID.ToString() + "'";

                                        }
                                    }
                                }

                                //拒绝流程新增处理  add by jchl
                                if (!DoRefuse(myTb.Rows[i]["ID"].ToString()))
                                {
                                    //事务回收
                                    FrmMdiMain.Database.RollbackTransaction();
                                    btSend.Enabled = true;
                                    MessageBox.Show("操作失败！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                    return;
                                }

                                //发送到医技站
                                if (myTb.Rows[i]["类型"].ToString() == "5-医技")
                                {
                                    myQuery.insertJY(InstanceForm._database, this.BinID, this.BabyID, OrderID);
                                    //Add by zouhichua 2011-12-01生成zy_jc_record表
                                    // Guid.NewGuid().ToString();// DateManager.ServerDateTimeByDBType(InstanceForm._database).ToString("yyyyMMddHHmmssffffff");
                                    string sql = "select yzid from JC_ASSAY(nolock) where YZID=" + myTb.Rows[i]["hoitem_id"].ToString();//检验项目
                                    DataTable tmtb = FrmMdiMain.Database.GetDataTable(sql);
                                    if (tmtb.Rows.Count == 0)//不是检验项目
                                    {
                                        //if (Oldgroupid == 0)
                                        //{
                                        //    Oldgroupid = Convert.ToInt32(myTb.Rows[i]["group_id"].ToString());
                                        //}
                                        string ss = "select * from ZY_JC_RECORD(nolock) where inpatient_id='" + BinID + "' and group_id=" + myTb.Rows[i]["嘱号"].ToString() + " and hoitem_id=" + myTb.Rows[i]["hoitem_id"].ToString();
                                        DataTable tbtb1 = FrmMdiMain.Database.GetDataTable(ss);
                                        if (tbtb1.Rows.Count <= 0)
                                        {
                                            //Modify By Tany 2015-05-05 把检查NO放在需要的地方，避免增长过大
                                            string jc_no = DbQuery.UpdateNowNoAndGetNewNo(13, InstanceForm._database).ToString();
                                            string sSql = "insert into zy_jc_record (" +
                       "id,group_id,inpatient_id,hoitem_id,place,place_num,SYMPTOM ,IN_DIAGNOSIS,jc_no,jgbm) " +
                       "values('" + PubStaticFun.NewGuid() + "'," + myTb.Rows[i]["嘱号"].ToString() + ",'" + this.BinID.ToString() + "'," + myTb.Rows[i]["hoitem_id"].ToString() + ",''," +
                       "1,'','','" + jc_no + "'," + BrJgbm.ToString() + ")";//dbo.FUN_ZY_SEEKJCNO('" + this.BinID + "','" + printType + "')
                                            InstanceForm._database.DoCommand(sSql);

                                        }
                                    }
                                    else
                                    {
                                        //如果是检验项目add by zouchihu 2014-4-27
                                        jyorderlist.Add(OrderID);
                                        tbjy.Rows.Add(myTb.Rows[i].ItemArray);
                                    }

                                    ////									myQuery.insertJY(this.BinID,OrderID);
                                    //myQuery.apply(InstanceForm._database, this.BinID, OrderID, FrmMdiMain.Jgbm); Modify By tany 2010-01-23 不再使用医生站医技申请，改成护士站执行是生成
                                    ////									myQuery.apply(this.BinID,OrderID);

                                }
                                //**jchl**copy
                                if (myTb.Rows[i]["开始时间"].ToString() != "")
                                {
                                    S++;
                                    strShow += "\n(" + S.ToString() + ")" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "  " + myTb.Rows[i]["剂量"].ToString().Trim() + myTb.Rows[i]["单位"].ToString().Trim() + "  " + myTb.Rows[i]["用法"].ToString().Trim() + " " + myTb.Rows[i]["频率"].ToString().Trim();
                                }
                                else
                                {
                                    strShow += "\n    " + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "  " + myTb.Rows[i]["剂量"].ToString().Trim() + myTb.Rows[i]["单位"].ToString().Trim();
                                }

                                InstanceForm._database.DoCommand(sSqlUpdate);
                            }
                            else
                                //add by zouchihua 2012-6-26 如果是发送状态，并且是医技的话 更新ZY_JY_PRINT
                                if (Convert.ToInt32(myTb.Rows[i]["status_flag"].ToString()) == 1 && myTb.Rows[i]["类型"].ToString() == "5-医技")
                                {
                                    myQuery.insertJY(InstanceForm._database, this.BinID, this.BabyID, OrderID);
                                    //Modify by zouchihua 2013-8-21 不再更新
                                    //string sql = " update ZY_JY_PRINT set ORDER_CONTEXT='" + myTb.Rows[i]["医嘱内容"].ToString() + "' where order_id='" + OrderID + "'";
                                    //InstanceForm._database.DoCommand(sql);
                                }
                        }
                    }
                }
                #endregion

                //把下面LIS接口要赋值的变量放在事务内，避免变量出错而导致数据不能回滚 Modify By Tany 2015-03-31
                //Modify By Tany 2014-05-19 出生日期取病人信息控件的值，brxxtb只有合理用药开启后才有值
                string lis_csrq = this.patientInfo1.myRow["BIRTHDAY"].ToString();
                lis_csrq = (Convert.ToDateTime(lis_csrq)).ToString("yyyy-MM-dd");
                string lis_zyh = this.patientInfo1.lbID.Text;
                string lis_zd = this.patientInfo1.lbRYZD.Text;
                Guid lis_inpatient_id = BinID;
                long lis_baby_id = BabyID;
                string lis_xb = this.patientInfo1.lbSex.Text;
                string lis_ch = this.patientInfo1.lbBed.Text;
                string lis_brxm = this.patientInfo1.lbName.Text.Trim();

                InstanceForm._database.CommitTransaction();
                btSend.Enabled = true;
                try
                {
                    //武汉中心医院，要先调去lis接口后，在插入 放到事物外面
                    DataTable tbjyjk = myQuery.UpdateSqdh(tbjy, lis_zyh, lis_zd, InstanceForm._database, lis_inpatient_id, lis_baby_id, lis_xb, lis_csrq, lis_ch, lis_brxm);
                }
                catch (Exception ex)
                {
                    MessageBox.Show("检验医嘱发送失败！" + ex.Message, "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    sameDTlist.Clear();
                    startDTlist.Clear();
                    Cursor = Cursors.Default;
                    return;
                }

                string messageshow = "";
                if (strShow != "") messageshow = "\n\n有下面医嘱被发送：\n" + strShow;
                else messageshow = "\n\n没有医嘱被发送！";
                #region "modify by : jchl"
                //MessageBox.Show("医嘱审核发送完毕！" + messageshow, "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                _msg = messageshow;
                #endregion
                if (tab == 0) messageshow = "长期医嘱";
                else messageshow = "临时医嘱";
                sameDTlist.Clear();
                startDTlist.Clear();
                Cursor = Cursors.Default;
                //				myQuery.sendMessage(this.BinID,this.YS_ID,this.DeptID,strShow);				
            }
            catch (Exception err)
            {
                InstanceForm._database.RollbackTransaction();
                btSend.Enabled = true;
                IsErr = true;
                MessageBox.Show("医嘱审核发送失败" + err.ToString(), "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                //保存出错信息
                myQuery.SaveLog(DeptID, YS_ID, "医嘱发送错误", this.BinID.ToString() + "：" + err.ToString().Trim(), 1, 41);
            }
            ///////////////////////////////////////////////
            finally
            {

                //恢复这里执行医嘱 Modify By Tany 2007-09-03
                //如果是手术麻醉站发送，就不经过护士站直接执行
                if ((mz || _tszl) && strShow != "" && !IsErr)
                {
                    //特殊治疗还是要直接发送的 Modify By tany 2015-06-04
                    if (qflag == 0
                        && _tszl)//Modify By Tany 2015-03-25 武汉中心医院手麻不直接发送
                    {
                        //baseFunc.ExecOrdersWithData(this.DeptID, (new Deptment(this.DeptID)).Ward_ID, this.YS_ID, this.BinID, this.BabyID, dTime);
                        myFunc.ExecOrdersWithData(this.DeptID, InstanceForm._currentDept.WardId, InstanceForm._currentDept.WardDeptId, this.YS_ID, this.BinID, this.BabyID, dTime, BrJgbm);
                    }
                    if (_tszl && qflag == 0)
                    {
                        #region modify by zouchihua 修改执行时间 临时医嘱
                        frmExecTime frmET = new frmExecTime(InstanceForm._currentUser.UserID, InstanceForm._database);
                        frmET.ShowDialog();
                        DateTime _execTime;
                        long _employeeId;
                        if (frmET.DialogResult == DialogResult.OK)
                        {
                            _execTime = frmET._execTime;
                            _employeeId = frmET._employeeId;
                            for (i = 0; i < AR_OrderId.Count; i++)

                            //if (i == 0 || (i != 0 && myTb.Rows[i]["Group_id"].ToString().Trim() != myTb.Rows[i - 1]["Group_id"].ToString().Trim()))
                            {
                                //更新医嘱执行表
                                string sSql = "update zy_orderexec set realexecdate='" + _execTime + "',realexeuser=" + _employeeId +
                                      " where order_id='" + AR_OrderId[i].ToString() + "'";
                                InstanceForm._database.DoCommand(sSql);
                                sSql = " update ZY_ORDERRECORD set LASTEXECDATE='" + _execTime + "'"
                                        + " where order_id='" + AR_OrderId[i].ToString() + "'";
                                //InstanceForm._database.DoCommand(sSql);
                                //更新医嘱打印表
                                sSql = "update zy_tmporderprt set execdate='" + _execTime + "',exeuser=" + _employeeId +
                                    "where order_id='" + AR_OrderId[i].ToString() + "'";
                                InstanceForm._database.DoCommand(sSql);

                                //写日志 Add By Tany 2005-01-12
                                SystemLog _systemLog = new SystemLog(-1, InstanceForm._currentDept.DeptId, InstanceForm._currentUser.EmployeeId, "更新执行时间", "将病人" + ClassStatic.Current_BinID + " " + ClassStatic.Current_BabyID + " order_id=" + AR_OrderId[i].ToString() + " 的医嘱执行时间更新为 " + _execTime.ToString() + " " + _employeeId, DateManager.ServerDateTimeByDBType(InstanceForm._database), 1, "主机名：" + System.Environment.MachineName, 39);
                                _systemLog.Save();
                                _systemLog = null;
                            }
                        }

                        #endregion
                    }
                }
                else if (!mz && strShow != "" && !IsErr && chk_TZ.Checked)
                {
                    string msg_wardid = InstanceForm._currentDept.WardId;
                    long msg_deptid = 0;
                    long msg_empid = 0;
                    string msg_sender = FrmMdiMain.CurrentDept.DeptName + "：" + FrmMdiMain.CurrentUser.Name;
                    string msg_msg = patientInfo1.lbBed.Text + " 床 " + patientInfo1.lbName.Text + " 有新开医嘱，请处理！";
                    TrasenFrame.Classes.WorkStaticFun.SendMessage(true, SystemModule.住院护士站, msg_wardid, msg_deptid, msg_empid, msg_sender, msg_msg);
                }
                Cursor = Cursors.Arrow;
                if (ts.Trim() != "")
                    ts = "由于系统控制不能发送非本人开立的医嘱,以下医嘱没有发送成功：\r\n\r\n" + ts + "\r\n";
                if (bbtsstr.Trim() != "")
                    ts = ts + bbtsstr;
                if (ts.Trim() != "")
                    MessageBox.Show(ts);
                if (!(mz || _tszl || _hzsq) && jzyzxx.Trim() != "")
                {
                    try
                    {
                        //add by zouchihua 2013-8-15
                        jzyzxx = "以下医嘱为加急医嘱，请及时处理:\r\n" + patientInfo1.lbBed.Text + " 床 " + jzyzxx;
                        MessageInfo msg = new MessageInfo();
                        msg.ReciveDeptId = FrmMdiMain.CurrentDept.WardDeptId;
                        //msg.ReciveStaffer =InstanceF;
                        msg.FontColor = Color.Red;
                        msg.ReciveSystem = null;
                        //msg.ReciveWardId = 0;// FrmMdiMain.CurrentDept.WardId;
                        msg.Summary = jzyzxx;
                        //msg.SendTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);

                        //msg.AssemblyParameter = "1 2 3";
                        msg.AssemblyFuncationName = "Fun_ts_zyhs_yzzc";
                        msg.AssemblyDLL = "ts_zyhs_yzzc";
                        msg.AssemblyFormText = "医嘱转抄";
                        msg.IsMustRead = true;
                        WorkStaticFun.SendMessage(msg);
                    }
                    catch (Exception ex)
                    {

                    }
                }

            }
            bDataCheck = true;
        }

        #region //获得ca验证医嘱内容
        private string GetCaOrdercontex(DataTable myTb)
        {
            DataRow[] dr;
            dr = myTb.Select("status_flag=0 or status_flag=9 ");
            //add by zouchihua 2013-5-21 控制是否可以发送其它医生开立的医嘱
            if (cfg6068.Config.Trim() == "0")
                dr = myTb.Select("(status_flag=0 or status_flag=9) and  order_doc=" + FrmMdiMain.CurrentUser.EmployeeId.ToString().Trim());
            string order_context = "";
            if (dr.Length == 0)
                return "";
            for (int i = 0; i < dr.Length; i++)
            {
                order_context = order_context + dr[i]["医嘱内容"].ToString().Trim() + "||";
            }
            order_context = order_context.Substring(0, order_context.Length - 2);
            return order_context;
        }
        #endregion

        #endregion

        #region 停止医嘱
        private void btStopOrder_Click(object sender, System.EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //add by zouchihua 2012-5-30  手术室录入医嘱是否控制只有开处方权限医生才可以录入 0=否 1=是
            if ((mz && cfg6047.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "临时医嘱")
                 || (_tszl && cfg6049.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "临时医嘱"))
            {
                if (doctor == null || doctor.CF_Right == false)
                {
                    MessageBox.Show("你没有开处方的权限", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
            }
            //Add By Tany 2010-11-16
            if (!mz && !_hs && !hs && !_tszl)
            {
                if (doctor.CF_Right == false)
                {
                    MessageBox.Show("你没有开处方的权限", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
            }
            if (this.lg == 0 || this.lg == 4) return;
            checkPage();
            if (pageType == 0) StopOrders(this.dataGrid_LongOrder);
            else
            {
                //				MessageBox.Show("医嘱选择错误！\n请选择有效长嘱。","提示",MessageBoxButtons.OK,MessageBoxIcon.Information);
                return;
            }

        }

        private void StopOrders(DataGridEx myDataGrid1)
        {
            this.statusBar1.Text = hint[8].Trim();
            //得到网格的数据
            DataTable myTb = (DataTable)myDataGrid1.DataSource;

            int nrow = myDataGrid1.CurrentCell.RowNumber;
            if (myTb.Rows[nrow]["status_flag"].ToString() == "") return;

            int groupId = Int32.Parse(myTb.Rows[nrow]["嘱号"].ToString());
            //窗体
            if (this.btStopOrder.Text == "停嘱F6")
            {
                if (!(Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString().Trim()) == 2))
                {
                    MessageBox.Show("医嘱选择错误！\n请选择有效长嘱。", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return;
                }
                else
                {
                    if (myTb.Rows[nrow]["用法"].ToString().Trim() == "静滴")
                    {
                        MessageBox.Show("该组医嘱用法是“静滴”，停嘱后请选择其他组续滴液体作为“静滴”。", "修改用法提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                }
                FrmStopGroup fl = new FrmStopGroup();
                fl.BinID = this.BinID;
                fl.BabyID = this.BabyID;
                fl.YS_ID = this.YS_ID;
                fl.YS = this.YS;
                fl.GroupID = Int32.Parse(myTb.Rows[nrow]["嘱号"].ToString());
                fl.Frequency = Convertor.IsNull(myTb.Rows[nrow]["频率"], "Qd");
                fl.ShowDialog();
                //通知护士站
                if (fl.IsStop && chk_TZ.Checked)
                {
                    myQuery.InformHS(this.WardIP_table, " " + patientInfo1.lbBed.Text.Trim() + "床 " + patientInfo1.lbName.Text.Trim() + " 有新停医嘱，请处理。");
                }
            }
            else //取消欲停
            {
                //Modify By Tany 2010-06-08 是否使用密码确认 0=使用 1=不使用
                if (new SystemCfg(6023, InstanceForm._database).Config == "0")
                {
                    string dlgvalue = DlgPW.Show();
                    string pwStr = dlgvalue; //YS.Password;
                    bool bOk = InstanceForm._currentUser.CheckPassword(pwStr);
                    if (!bOk)
                    {
                        FrmMessageBox.Show("你没有通过权限确认，不能取消欲停医嘱！", new Font("宋体", 12f), Color.Red, "Sorry！", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                        return;
                    }
                }
                myQuery.StopOrders(YS_ID, 0, groupId, Guid.Empty, BinID, BabyID, 1);
            }

            loadGrid_LongOrder();//刷新数据
            Cursor = Cursors.Default;
        }

        #endregion

        #region 插入一行
        private void btInsert_Click(object sender, System.EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            checkPage();
            if (tc.SelectedTab.Title.Trim() == "长期医嘱")
            {
                InsertRow(this.dataGrid_LongOrder, 0);
                return;
            }
            if (tc.SelectedTab.Title.Trim() == "临时医嘱")
            {
                InsertRow(this.dataGrid_TempOrder, 0);
                return;
            }
            if (tc.SelectedTab.Title.Trim() == sTab0)
            {
                InsertRow(this.dataGrid_LongZD, 0);
                return;
            }
            else InsertRow(this.dataGrid_TempZD, 0);
        }

        private void InsertRow(DataGridEx myDataGrid1, int tab)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            this.statusBar1.Text = hint[3].Trim();

            //得到网格信息前需要刷新
            if (pageType == 0)
            {
                //loadGrid_LongOrder();
            }
            else if (pageType == 1)
            {
                //loadGrid_TempOrder();//刷新数据
            }

            //首先得到基本的网格信息
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            if (myTb.Rows.Count == 0) return;

            //			if(IsGroupFirstRow(myTb,nrow)==true)return;
            //判断是否可以插入
            if (tc.SelectedTab.Title.Trim() == sTab0 || tc.SelectedTab.Title.Trim() == sTab1)
            {
                DataRow row = myTb.NewRow();
                myTb.Rows.Add(myTb.NewRow());

                //循环下移DATATABLE中的数据，与具体某一列无关
                for (int i = myTb.Rows.Count - 1; i > nrow; i--)
                {
                    for (int j = 0; j <= myTb.Columns.Count - 1; j++)
                    {
                        myTb.Rows[i][j] = myTb.Rows[i - 1][j];
                    }
                }

                for (int j = 0; j <= myTb.Columns.Count - 1; j++)
                {
                    myTb.Rows[nrow][j] = row[j];
                }
                myDataGrid1.DataSource = myTb;
                return;
            }
            if (myTb.Rows[nrow]["ID"].ToString().Trim() == "")//|| myTb.Rows[nrow]["xmly"].ToString().Trim() == "2"
            {
                return;
            }
            if ((new Guid(myTb.Rows[nrow]["ID"].ToString()) == Guid.Empty && myTb.Rows[nrow]["医嘱内容"].ToString() != "")
                || ((myTb.Rows[nrow]["status_flag"].ToString() == "0")
                // ||(myTb.Rows[nrow]["status_flag"].ToString() == "1")
                || (myTb.Rows[nrow]["status_flag"].ToString() == "9"))  //补录也要插入 add by zouchihua 2013-11-14 
                )
            {
                DataRow myRow = myTb.NewRow();
                myRow["嘱号"] = myTb.Rows[nrow]["嘱号"];
                myTb.Rows.InsertAt(myRow, nrow + 1);//插到指定位置的下一行

                DataTable ttb = myTb.Copy();
                myDataGrid1.DataSource = null;//必须先清空,否则有不可预知的错误
                myDataGrid1.DataSource = ttb;
                myDataGrid1.CurrentCell = new DataGridCell(nrow + 1, 7);
            }
        }
        #endregion

        #region 医嘱删除，取消
        private void btDel_Click(object sender, System.EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //add by zouchihua 2012-5-30  手术室录入医嘱是否控制只有开处方权限医生才可以录入 0=否 1=是
            if ((mz && cfg6047.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "临时医嘱")
                || (_tszl && cfg6049.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "临时医嘱"))
            {
                if (doctor == null || doctor.CF_Right == false)
                {
                    MessageBox.Show("你没有开处方的权限", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
            }
            //Add By Tany 2010-11-16
            if (!mz && !_hs && !hs && !_tszl)
            {
                if (doctor.CF_Right == false)
                {
                    MessageBox.Show("你没有开处方的权限", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
            }

            if (this.lg == 0 || this.lg == 4) return;
            checkPage();


            if (tc.SelectedTab.Title.ToString() == "长期医嘱")
            {
                DeleteOrder(this.dataGrid_LongOrder, 0, -1);
                return;
            }
            if (tc.SelectedTab.Title.ToString() == "临时医嘱")
            {
                DeleteOrder(this.dataGrid_TempOrder, 0, -1);
                return;
            }
            if (tc.SelectedTab.Title.ToString() == sTab0)
            {
                DeleteOrder(this.dataGrid_LongZD, 0, -1);
                return;
            }
            else
            {
                DeleteOrder(this.dataGrid_TempZD, 0, -1);
            }
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="myDataGrid1"></param>
        /// <param name="tab"></param>
        /// <param name="Delrow">如果delrow=-1那么就是当前行或者组</param>
        private int DeleteOrder(DataGridEx myDataGrid1, int tab, int Delrow)//tab 为0 删一条记录，2 删一组医嘱
        {
            int returnvalue = -1;
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            #region 删除长期账单和临时账单内容
            if (tc.SelectedTab.Title.ToString() == sTab0 || tc.SelectedTab.Title.ToString() == sTab1)
            {
                string sSql = "";
                string sMsg = "";
                string sGroup_id = "";
                Guid sOrder_id = Guid.Empty;
                int j = 1;
                try
                {
                    DataTable myTb0 = (DataTable)myDataGrid1.DataSource;
                    if (tc.SelectedTab.Title.ToString() == sTab0 || tc.SelectedTab.Title.ToString() == sTab1)
                    {
                        int nrow1 = myDataGrid1.CurrentCell.RowNumber;
                        int ncol1 = myDataGrid1.CurrentCell.ColumnNumber;

                        if (nrow1 == 0)
                        {
                            MessageBox.Show("第一行数据包含重要信息，不能删除！如果需要删除，请清空后重新输入！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            return returnvalue;
                        }
                        myTb0.Rows[nrow1].Delete();
                        myDataGrid1.DataSource = myTb0;
                    }
                    else
                    {
                        if (myTb0.Rows[myDataGrid1.CurrentCell.RowNumber]["发送时间"].ToString().Trim() != "")
                        {
                            MessageBox.Show(this, "账单已经执行，不能删除！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            return returnvalue;
                        }
                        sGroup_id = myTb0.Rows[myDataGrid1.CurrentCell.RowNumber]["group_id"].ToString().Trim();
                        sOrder_id = new Guid(myTb0.Rows[myDataGrid1.CurrentCell.RowNumber]["order_id"].ToString().Trim());
                        for (int ii = 0; ii < myTb0.Rows.Count; ii++)
                        {
                            if (myTb0.Rows[ii]["group_id"].ToString().Trim() == sGroup_id)
                            {
                                sMsg += "(" + j.ToString() + ") " + myTb0.Rows[ii]["医嘱内容"].ToString().Trim() + "\n";
                                j = j + 1;
                            }
                        }
                        //如果只有1条记录则j==2
                        if (j > 2)
                        {
                            if (MessageBox.Show(this, "是否删除该组账单内容？\n该组账单包含：\n" + sMsg, "删除", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.Yes)
                            {
                                sSql = "update zy_orderrecord set delete_bit=1,order_euser=" + InstanceForm._currentUser.EmployeeId +
                                    ",order_eudate='" + DateManager.ServerDateTimeByDBType(InstanceForm._database) + "' where inpatient_id='" + BinID + "'" +
                                    " and baby_id=" + BabyID + " and group_id=" + Convert.ToInt32(sGroup_id) +
                                    " and mngtype=" + GetMNGType();
                            }
                        }
                        if (sSql == "")
                        {
                            if (MessageBox.Show(this, "是否删除账单 " + myTb0.Rows[myDataGrid1.CurrentCell.RowNumber]["医嘱内容"].ToString().Trim() + " ？", "删除", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                                return returnvalue;
                            else
                                sSql = "update zy_orderrecord set delete_bit=1,order_euser=" + InstanceForm._currentUser.EmployeeId +
                                    ",order_eudate='" + DateManager.ServerDateTimeByDBType(InstanceForm._database) + "' where inpatient_id='" + BinID + "'" +
                                    " and baby_id=" + BabyID + " and order_id='" + sOrder_id + "'";
                        }

                        #region 权限确认
                        //Modify By Tany 2010-06-08 是否使用密码确认 0=使用 1=不使用
                        if (new SystemCfg(6023, InstanceForm._database).Config == "0")
                        {
                            string dlgvalue = DlgPW.Show();
                            string pwStr = dlgvalue; //YS.Password;
                            bool bOk = InstanceForm._currentUser.CheckPassword(pwStr);
                            if (!bOk)
                            {
                                FrmMessageBox.Show("你没有通过权限确认，不能发送医嘱！", new Font("宋体", 12f), Color.Red, "Sorry！", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                return returnvalue;
                            }
                        }
                        #endregion

                        InstanceForm._database.DoCommand(sSql);
                        MessageBox.Show(this, "执行成功！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        Cursor = Cursors.Default;

                        //写日志 Add By Tany 2005-01-12
                        SystemLog _systemLog = new SystemLog(-1, InstanceForm._currentDept.DeptId, InstanceForm._currentUser.EmployeeId, "删除账单", "删除" + BinID + " " + BabyID + "的账单Group_id=" + sGroup_id + " Order_id=" + sOrder_id, DateManager.ServerDateTimeByDBType(InstanceForm._database), 1, "主机名：" + System.Environment.MachineName, 39);
                        _systemLog.Save();
                        _systemLog = null;

                        //						ShowOrderDate();
                    }
                }
                catch (Exception err)
                {
                    //写错误日志 Add By Tany 2005-01-12
                    SystemLog _systemErrLog = new SystemLog(-1, InstanceForm._currentDept.DeptId, InstanceForm._currentUser.EmployeeId, "程序错误", "删除账单错误：" + err.Message + "  Source：" + err.Source, DateManager.ServerDateTimeByDBType(InstanceForm._database), 1, "主机名：" + System.Environment.MachineName, 39);
                    _systemErrLog.Save();
                    _systemErrLog = null;

                    MessageBox.Show("错误：" + err.Message + "\n" + "Source：" + err.Source, "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                return returnvalue;
            }
            #endregion

            #region  删除长期医嘱和临时医嘱项
            this.statusBar1.Text = hint[4].Trim();
            //首先得到基本的网格信息
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            this.btDel.Focus();

            DataTable myTb1 = (DataTable)this.dataGrid_TempOrder.DataSource;
            DataTable myTb2 = (DataTable)this.dataGrid_LongOrder.DataSource;
            //Modifyb by zouchihua 2012-11-08
            if (Delrow != -1)
            {
                nrow = Delrow;
            }
            int i = 0;
            int beginNum = nrow, endNum = nrow;
            //			Regex r=new Regex("转*病");
            //			Match m = r.Match(myTb.Rows[nrow]["医嘱内容"].ToString().Trim());

            if (myTb.Rows.Count == 0) return returnvalue;

            if (myTb.Rows.Count <= nrow) return returnvalue;//Add By tany 2014-12-09 如果要删除的行已经大于最大行数，则跳过

            //add  by zouchihua 2013-8-15 非本人医嘱不可以删除
            //Modify by jchl 出院医嘱和死亡医嘱可以非本人删除（参数控制副主任以上级别是否可以删除所有医嘱 0=不 1=是  ）
            if (!(myTb.Rows[nrow]["ntype"].ToString().Trim() == "0" && (myTb.Rows[nrow]["医嘱内容"].ToString().Trim().Contains("死亡") || myTb.Rows[nrow]["医嘱内容"].ToString().Trim().Contains("出院"))))
            {
                if (cfg6219.Config.Trim().Equals("1"))
                {
                    if (doctor != null && (doctor.TypeID == 1 || doctor.TypeID == 2))
                    {

                    }
                    else
                    {
                        if (!(myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim() == "" || long.Parse(myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim()) <= 0) && myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim() != InstanceForm._currentUser.EmployeeId.ToString().Trim())
                        {
                            MessageBox.Show("对不起，非本人开立的医嘱，需要副主任及以上医师才能删除！！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            return returnvalue;
                        }
                    }
                }
                else
                {
                    if (!(myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim() == "" || long.Parse(myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim()) <= 0) && myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim() != InstanceForm._currentUser.EmployeeId.ToString().Trim())
                    {
                        MessageBox.Show("对不起，非本人开立的医嘱不允许删除！！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        return returnvalue;
                    }
                }
            }

            if (myTb.Rows[nrow]["医嘱内容"] == System.DBNull.Value || myTb.Rows[nrow]["status_flag"] == System.DBNull.Value)
            {
                myTb.Rows[nrow].Delete();
                return 1;
            }
            #region //Modify by Zouchihua  2011-10-15 特殊治疗医嘱和手术医嘱不能取消 必须取消特殊治疗和手术申请才能取消
            if (myTb.Rows[nrow]["memo"].ToString().Trim().IndexOf("特殊治疗", 0) >= 0)//&& myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("病",0)>=0)
            {
                MessageBox.Show("对不起，特殊治疗医嘱不能取消。\n如需取消，请取消特殊治疗！！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return returnvalue;
            }
            if (myTb.Rows[nrow]["memo"].ToString().Trim().IndexOf("手术申请", 0) >= 0)//&& myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("病",0)>=0)
            {
                MessageBox.Show("对不起，手术申请医嘱不能取消。\n如需取消，请取消手术申请！！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return returnvalue;
            }
            #endregion
            if (Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString()) > 1 && myTb.Rows[nrow]["status_flag"].ToString().Trim() != "9")
            {
                MessageBox.Show("【" + myTb.Rows[nrow]["医嘱内容"].ToString() + "】" + "该医嘱已发送，不能取消！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return returnvalue;
            }
            else if (Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString()) == 1)
            {
                if (myQuery.OrderFlag(new Guid(myTb.Rows[nrow]["id"].ToString())))
                {
                    MessageBox.Show("【" + myTb.Rows[nrow]["医嘱内容"].ToString() + "】" + "该医嘱已执行，不能取消！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return returnvalue;
                }
            }

            if (myTb.Rows[nrow]["status_flag"].ToString().Trim() == "1")
            {
                //Modify by jchl 老系统交互，ser_no处理，发送医嘱只能同时删除一组医嘱
                //不需要判断是否新护士站是否上线，老系统同步全部遵守该规则
                //Modify By Tany 2014-12-09 不在此进行强制转换，在最后执行的时候，不改变变量值，否则会引起误删或报错
                //暂时还是放出来，按照这样改 再想办法 Tany 2014-12-10
                if (cfg6207.Config.Equals("1"))
                {
                    tab = 1;
                }

                if (myTb.Rows[nrow]["ntype"].ToString().Trim() == "0" && myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("转", 0) >= 0)//&& myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("病",0)>=0)
                {
                    if (MessageBox.Show("你确定要取消转科吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                    {
                        myDataGrid1.CurrentCell = new DataGridCell(nrow, ncol);
                        return returnvalue;
                    }
                }
                else if (myTb.Rows[nrow]["ntype"].ToString().Trim() == "0" && myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("出院", 0) >= 0)
                {
                    if (MessageBox.Show("你确定要取消出院吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                    {
                        myDataGrid1.CurrentCell = new DataGridCell(nrow, ncol);
                        return returnvalue;
                    }
                }
                else if (myTb.Rows[nrow]["ntype"].ToString().Trim() == "0" && myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("病人死亡", 0) >= 0)
                {
                    if (MessageBox.Show("你确定要取消病人死亡吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                    {
                        myDataGrid1.CurrentCell = new DataGridCell(nrow, ncol);
                        return returnvalue;
                    }
                }
                else if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("会诊", 0) >= 0 && myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("邀请", 0) >= 0)
                {
                    if (MessageBox.Show("你确定要取消会诊吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                    {
                        myDataGrid1.CurrentCell = new DataGridCell(nrow, ncol);
                        return returnvalue;
                    }
                }
                else
                {
                    //Modify by zouchihua 2012-11-08 选择删除时不提示
                    if (Delrow == -1)
                    {
                        if (tab == 0)
                        {
                            if (MessageBox.Show(this, "您确认取消这条记录吗?", "取消提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No) return returnvalue;
                        }
                        else if (MessageBox.Show(this, "您确认取消这组医嘱吗?", "取消提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No) return returnvalue;
                    }
                }

                //Modify By Tany 2010-06-08 是否使用密码确认 0=使用 1=不使用
                if (new SystemCfg(6023, InstanceForm._database).Config == "0" && Delrow == -1)
                {
                    string dlgvalue = DlgPW.Show();
                    string pwStr = dlgvalue; //YS.Password;
                    bool bOk = InstanceForm._currentUser.CheckPassword(pwStr);
                    if (!bOk)
                    {
                        FrmMessageBox.Show("你没有通过权限确认，不能取消医嘱！", new Font("宋体", 12f), Color.Red, "Sorry！", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                        return returnvalue;
                    }
                }

                //判断是否已被护士转抄
                if (myQuery.ISexecute(new Guid(myTb.Rows[nrow]["ID"].ToString())))
                {
                    MessageBox.Show("【" + myTb.Rows[nrow]["医嘱内容"].ToString() + "】" + "对不起，该医嘱已被转抄，不能取消。\n请“保存”或“刷新”页面后核对。", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return returnvalue;
                }
            }
            else
            {
                //Modify by zouchihua 2012-11-08 选择删除时不提示
                if (Delrow == -1)
                {
                    if (tab == 0)
                    {
                        if (MessageBox.Show(this, "您确认删除这条记录吗?", "删除", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No) return returnvalue;
                    }
                    else if (MessageBox.Show(this, "您确认删除这组医嘱吗?", "删除提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No) return returnvalue;
                }
            }
            //未经护士审核医嘱才能删除
            //			if(myTb.Rows[nrow]["status_flag"].ToString().Trim()=="1" )
            //			{
            ////				if(myQuery.ISexecute(Convert.ToInt32(myTb.Rows[nrow]["ID"].ToString()))) 
            ////				{
            ////					MessageBox.Show("对不起，该医嘱已被转抄，不能取消。\n请“保存”或“刷新”页面后核对。","提示" ,MessageBoxButtons.OK,MessageBoxIcon.Information);
            ////					return;
            ////				}
            //			}

            if (IsGroupFirstRow(myTb, nrow) == true && myTb.Rows[nrow]["医嘱内容"].ToString().Trim() != "" && tab == 0)
            {
                if (nrow < myTb.Rows.Count - 1)
                {
                    if (myTb.Rows[nrow + 1]["医嘱内容"].ToString().Trim() != "" && myTb.Rows[nrow + 1]["开始时间"].ToString() == "")
                    {
                        //通过判断，可以肯定这条医嘱是一组医嘱的第一条，且这一组医嘱多于一条
                        myTb.Rows[nrow + 1]["类型"] = myTb.Rows[nrow]["类型"];
                        myTb.Rows[nrow + 1]["开始时间"] = myTb.Rows[nrow]["开始时间"];
                        myTb.Rows[nrow + 1]["用法"] = myTb.Rows[nrow]["用法"];
                        myTb.Rows[nrow + 1]["频率"] = myTb.Rows[nrow]["频率"];
                        myTb.Rows[nrow + 1]["首日执行次数"] = myTb.Rows[nrow]["首日执行次数"];
                        if (myTb.Rows[nrow]["dwlx"].ToString() == "9") myTb.Rows[nrow + 1]["dwlx"] = 9;
                    }
                }
            }

            if (myTb.Rows[nrow]["用法"].ToString().Trim() == "皮试")
            {
                //去除后台的皮试关联
                if (myQuery.DelPS(this.BinID, new Guid(myTb.Rows[nrow]["ps_orderid"].ToString())) > 0)
                {
                    MessageBox.Show("皮试关联被取消。", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    myDataGrid1.Focus();
                }
                //去除前台的皮试关联
                if (new Guid(myTb.Rows[nrow]["ps_orderid"].ToString()) != Guid.Empty)
                {
                    if (pageType == 1)
                    {
                        for (i = 0; i < myTb1.Rows.Count; i++)
                        {
                            if (i != nrow && myTb1.Rows[i]["ps_orderid"].ToString() == myTb.Rows[nrow]["ps_orderid"].ToString())
                            {
                                myTb1.Rows[i]["ps_orderid"] = Guid.Empty;
                                break;
                            }
                        }
                    }
                    else if (pageType == 0)
                    {
                        for (int j = 0; j < myTb2.Rows.Count; j++)
                        {
                            if (myTb2.Rows[j]["ps_orderid"].ToString() == myTb.Rows[nrow]["ps_orderid"].ToString())
                            {
                                myTb2.Rows[j]["ps_orderid"] = Guid.Empty;
                                break;
                            }
                        }
                    }
                }
            }

            if (new Guid(myTb.Rows[nrow]["ID"].ToString().Trim()) != Guid.Empty && myTb.Rows[nrow]["医嘱内容"].ToString().Trim() != "" && (myTb.Rows[nrow]["status_flag"].ToString().Trim() == "0" || myTb.Rows[nrow]["status_flag"].ToString().Trim() == "1" || myTb.Rows[nrow]["status_flag"].ToString().Trim() == "9"))//只删除有医嘱的行
            {
                //取消转科
                if (myTb.Rows[nrow]["ntype"].ToString().Trim() == "0" && myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("转", 0) >= 0 && myTb.Rows[nrow]["status_flag"].ToString().Trim() == "1")
                {
                    if (myQuery.DelTurn(this.BinID, this.DeptID, this.YS_ID) == false) return returnvalue;
                    else
                    {
                        outType = false;
                        Ts_zyys_main.frmMain.outflag = false;
                    }
                }
                //取消出院、死亡
                else if (myTb.Rows[nrow]["ntype"].ToString().Trim() == "0" && (myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("出院", 0) >= 0 || myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("病人死亡", 0) >= 0) && myTb.Rows[nrow]["status_flag"].ToString().Trim() == "1")
                {
                    if (myQuery.DelOut(this.BinID, this.DeptID, this.BabyID, this.YS_ID) == false) return returnvalue;
                    else
                    {
                        outType = false;
                        Ts_zyys_main.frmMain.outflag = false;
                    }
                }
                //取消会诊
                else if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("会诊", 0) >= 0 && myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("邀请", 0) >= 0)
                {
                    myQuery.DelCon(new Guid(myTb.Rows[nrow]["ID"].ToString()), this.DeptID, this.YS_ID);
                }
                //取消该条医嘱
                //if (new Guid(myTb.Rows[nrow]["ps_orderid"].ToString()) != Guid.Empty && myTb.Rows[nrow]["用法"].ToString()!="皮试")
                //{
                //    for (int m = 0; m < myTb.Rows.Count;m++ )
                //    {
                //        if (myTb.Rows[m]["ps_orderid"].ToString() == myTb.Rows[nrow]["ps_orderid"].ToString())
                //        {
                //            myQuery.DeleOrders(new Guid(myTb.Rows[m]["ID"].ToString()), Int32.Parse(myTb.Rows[m]["嘱号"].ToString()), BinID, tab);//暂时改回来cfg6207.Config.Equals("1") ? 1 : Modify By Tany 2014-12-09 不改变tab原值，判断
                //            //myQuery.DeleOrders(new Guid(myTb.Rows[m]["ID"].ToString()), Int32.Parse(myTb.Rows[m]["嘱号"].ToString()), BinID, tab);
                //        }

                //    }
                //    myQuery.DelPS(this.BinID, new Guid(myTb.Rows[nrow]["ps_orderid"].ToString()));
                
                //}
                //else
                //{
                    myQuery.DeleOrders(new Guid(myTb.Rows[nrow]["ID"].ToString()), Int32.Parse(myTb.Rows[nrow]["嘱号"].ToString()), BinID, tab);//暂时改回来cfg6207.Config.Equals("1") ? 1 : Modify By Tany 2014-12-09 不改变tab原值，判断
                //}

                if (myTb.Rows[nrow]["ntype"].ToString().Trim() == "0" && (myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("转", 0) >= 0 || myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("出院", 0) >= 0 || myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("病人死亡", 0) >= 0))
                {
                    //Modify by jchl 取消转科/出院 临时医嘱刷新
                    loadGrid_TempOrder();//取消转科/出院后刷新
                    loadGrid_LongOrder();//取消转科/出院后刷新
                    return 1;
                }

                if (myTb.Rows[nrow]["类型"].ToString() == "5-医技" && myTb.Rows[nrow]["status_flag"].ToString().Trim() == "1")
                {
                    //取消检验申请医嘱（zy_jc_print中的记录）
                    myQuery.DelJY(new Guid(myTb.Rows[nrow]["ID"].ToString()));
                    //取消医技申请
                    myQuery.DelApply(this.YS_ID, new Guid(myTb.Rows[nrow]["ID"].ToString()));

                }
                myQuery.DelJCrecord(this.BinID, Int32.Parse(myTb.Rows[nrow]["嘱号"].ToString()));

                #region"Modify by : jchl_0717"

                //同步删除越级审核信息
                myQuery.DeleKssSh(new Guid(myTb.Rows[nrow]["ID"].ToString()), Int32.Parse(myTb.Rows[nrow]["嘱号"].ToString()), BinID, tab);

                //同步删除特殊抗菌药物登记信息
                myQuery.DeleKssDj(new Guid(myTb.Rows[nrow]["ID"].ToString()), Int32.Parse(myTb.Rows[nrow]["嘱号"].ToString()), BinID);

                //同步删除普通抗菌药物登记信息
                myQuery.DelePtKssDj(new Guid(myTb.Rows[nrow]["ID"].ToString()), Int32.Parse(myTb.Rows[nrow]["嘱号"].ToString()), BinID);

                //同步删除辅助用药申请信息
                myQuery.DeleFzyyApply(new Guid(myTb.Rows[nrow]["ID"].ToString()), Int32.Parse(myTb.Rows[nrow]["嘱号"].ToString()), BinID);

                DoRefuse(myTb.Rows[nrow]["ID"].ToString());

                #endregion

                if (tab == 0)
                {
                    //if (myTb.Rows[nrow]["ps_flag"].ToString() == "0")//&& myTb.Rows[nrow]["用法"].ToString()=="皮试")
                    //{
                    //    myTb.Rows.RemoveAt(nrow);
                    //    for (int n = 0; n < myTb1.Rows.Count; n++)
                    //    {
                    //        if (myTb1.Rows[n]["ps_orderid"].ToString().Trim() != "" && myTb1.Rows[n]["ps_orderid"].ToString() == myTb1.Rows[nrow]["ps_orderid"].ToString())
                    //        {
                    //            myTb1.Rows.RemoveAt(n);
                    //            break;
                    //        }
                    //    }
                    //}
                    //else
                    //{
                        myTb.Rows.RemoveAt(nrow);
                    //}
                }
                else
                {
                    for (i = nrow; i <= myTb.Rows.Count - 1; i++)
                    {
                        if (i + 1 == myTb.Rows.Count) break;
                        if (myTb.Rows[i + 1]["开始时间"].ToString() == "" && myTb.Rows[i + 1]["医嘱内容"].ToString() != "") endNum = i + 1;
                        else break;
                    }
                    for (i = nrow; i >= 0; i--)
                    {
                        if (i == 0) break;
                        if (myTb.Rows[i]["开始时间"].ToString() == "") beginNum = i - 1;
                        else break;
                    }
                    for (i = beginNum; i <= endNum; i++)
                    {
                        myTb.Rows.RemoveAt(beginNum);//必须是beginNum,不能用i
                    }
                }
                myDataGrid1.DataSource = myTb;
                //定位光标
                myDataGrid1.CurrentCell = new DataGridCell(beginNum, ncol);
            }
            else if (new Guid(myTb.Rows[nrow]["ID"].ToString().Trim()) == Guid.Empty)
            {
                string ps = "";
                Guid ps_orderid = Guid.Empty;
                if (myTb.Rows[nrow]["ps_flag"] != System.DBNull.Value)
                {
                    ps = myTb.Rows[nrow]["ps_flag"].ToString();
                    ps_orderid = new Guid(myTb.Rows[nrow]["ps_orderid"].ToString());
                }

                if (tab == 0) myTb.Rows.RemoveAt(nrow);
                else
                {
                    for (i = nrow; i <= myTb.Rows.Count - 1; i++)
                    {
                        if (i + 1 == myTb.Rows.Count) break;
                        if (myTb.Rows[i + 1]["开始时间"].ToString() == "" && myTb.Rows[i + 1]["医嘱内容"].ToString() != "") endNum = i + 1;
                        else break;
                    }
                    for (i = nrow; i >= 0; i--)
                    {
                        if (i == 0) break;
                        if (myTb.Rows[i]["开始时间"].ToString() == "") beginNum = i - 1;
                        else break;
                    }
                    for (i = beginNum; i <= endNum; i++)
                    {
                        myTb.Rows.RemoveAt(beginNum);
                    }
                }
                if (ps == "0")//&& myTb.Rows[nrow]["用法"].ToString()=="皮试")
                {
                    for (i = 0; i < myTb1.Rows.Count; i++)
                    {
                        if (myTb1.Rows[i]["ps_orderid"].ToString().Trim() != "" && new Guid(myTb1.Rows[i]["ps_orderid"].ToString()) == ps_orderid && myTb1.Rows[i]["用法"].ToString() == "皮试")
                        {
                            myTb1.Rows.RemoveAt(i);
                            break;
                        }
                    }
                }
                myDataGrid1.DataSource = null;
                myDataGrid1.DataSource = myTb.Copy();
                //定位光标 modify by zouchihua 2011-12-25 增加了警示灯列，所以定位网格不同
                if (tc.SelectedTab.Title.ToString() == sTab0 || tc.SelectedTab.Title.ToString() == sTab1)
                    myDataGrid1.CurrentCell = new DataGridCell(beginNum, 5);
                else
                    myDataGrid1.CurrentCell = new DataGridCell(beginNum, 7);
            }
            myDataGrid1.Focus();
            #endregion
            //如果运行到这里，说明已经删除记录了
            returnvalue = 1;
            return returnvalue;

        }
        #endregion

        #region 选项卡
        private void InitGrdSel()
        {
            this.GrdSel = new DataGridEx();
            this.dataGridTableStyle3 = new System.Windows.Forms.DataGridTableStyle();
            ((System.ComponentModel.ISupportInitialize)(this.GrdSel)).BeginInit();
            // 
            // GrdSel
            // 
            this.GrdSel.AllowSorting = false;
            this.GrdSel.AlternatingBackColor = Color.AliceBlue;
            this.GrdSel.BackgroundColor = Color.AliceBlue;//System.Drawing.SystemColors.Window;
            this.GrdSel.CaptionVisible = false;
            this.GrdSel.DataMember = "";
            this.GrdSel.HeaderForeColor = Color.Navy;//System.Drawing.SystemColors.ControlText;
            this.GrdSel.HeaderBackColor = Color.Gainsboro;
            this.GrdSel.Location = new System.Drawing.Point(192, 64);
            this.GrdSel.Name = "GrdSel";
            this.GrdSel.Size = new System.Drawing.Size(460, 200);//(408, 200);
            this.GrdSel.RowHeaderWidth = 20;
            this.GrdSel.TabIndex = 0;

            this.GrdSel.TableStyles.AddRange(new System.Windows.Forms.DataGridTableStyle[] {
			this.dataGridTableStyle3});
            this.GrdSel.ReadOnly = true;
            this.GrdSel.Visible = false;
            this.GrdSel.myKeyDown += new myDelegate(this.GrdSel_myKeyDown);
            this.GrdSel.CurrentCellChanged += new System.EventHandler(this.GrdSel_CurrentCellChanged);
            this.GrdSel.Paint += new PaintEventHandler(GrdSel_Paint);
            this.GrdSel.DoubleClick += new EventHandler(GrdSel_DoubleClick);

            // 
            // dataGridTableStyle3
            // 
            this.dataGridTableStyle3.DataGrid = this.GrdSel;
            this.dataGridTableStyle3.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            this.dataGridTableStyle3.MappingName = "";

            this.Controls.Add(this.GrdSel);
            ((System.ComponentModel.ISupportInitialize)(this.GrdSel)).EndInit();
        }
        #endregion

        #region 选择列表输入处理
        private bool GrdSel_myKeyDown(ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //变量付初始值
            if (tc.SelectedTab.Title.ToString() == "长期医嘱") return GetKeyDown(keyData, this.dataGrid_LongOrder);
            if (tc.SelectedTab.Title.ToString() == "临时医嘱") return GetKeyDown(keyData, this.dataGrid_TempOrder);
            if (tc.SelectedTab.Title.ToString() == sTab0) return GetKeyDowns(keyData, dataGrid_LongZD);
            else return GetKeyDowns(keyData, dataGrid_TempZD);
        }
        private bool GetKeyDown(System.Windows.Forms.Keys keyData, DataGridEx dataGrid1)
        {
            //变量定义
            long keyInt = Convert.ToInt32(keyData);
            int nrow, ncol;
            string ColumnName = "";
            Crownwood.Magic.Controls.TabControl tc = null;
            if (tabControl1.SelectedIndex == 0)
            {
                if (tabbedGroups1.ActiveLeaf != null)
                    tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            }

            // Did we find a current tab control?
            if (tc != null)
            {
                // Does it have a selected tab?
                if (tc.SelectedTab.Title.ToString() == "长期医嘱") pageType = 0;
                if (tc.SelectedTab.Title.ToString() == "临时医嘱") pageType = 1;
            }
            else
            {
                pageType = 0;
            }

            DataTable myTb = ((DataTable)dataGrid1.DataSource);
            nrow = dataGrid1.CurrentCell.RowNumber;
            ncol = dataGrid1.CurrentCell.ColumnNumber;
            ColumnName = dataGrid1.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();
            int nSelRow = this.GrdSel.CurrentCell.RowNumber;

            if (keyInt == 27)
            {
                dataGrid1.Focus();
                GrdSel.Visible = false;
                return true;
            }
            if (keyInt == 13)
            {
                if (ColumnName == "医嘱内容")
                {
                    GetCardData(nSelRow, dataGrid1);
                }
                else if (ColumnName == "用法")
                {
                    GetCardDataUsage(nSelRow, dataGrid1);
                }
                else if (ColumnName == "频率")
                {
                    GetCardDataFrequency(nSelRow, dataGrid1);

                }

                dataGrid1.Focus();
                if (myTb.Rows[nrow]["医嘱内容"].ToString() != "")
                {
                    //add by zouchihua 2012-6-22 如果是临时医嘱，并且GrdSel获得焦点
                    if (tc.SelectedTab.Title.ToString() == "临时医嘱" && ColumnName != "用法")
                    {
                        SendKeys.Send("{Enter}"); //跳格
                        //SendKeys.Send("{tab}"); //跳格
                    }
                    else
                        if (tc.SelectedTab.Title.ToString() == "长期医嘱" && ColumnName == "滴量")//add by zouchihua 2013-5-29 如果是滴量回车
                        {
                            //if (myTb.Rows[nrow]["用法"].ToString() == "iv drip" || myTb.Rows[nrow]["用法"].ToString() == "iv" || myTb.Rows[nrow]["用法"].ToString() == "im" || myTb.Rows[nrow]["用法"].ToString() == "ih" || myTb.Rows[nrow]["用法"].ToString() == "H" && myTb.Rows[nrow]["滴量"].ToString() != "")
                            //{
                                SendKeys.Send("{Enter}"); //跳格
                            //}
                            //else
                            //{
                            //    MessageBox.Show("输液医嘱必须填滴量！");
                            //    return false;

                            //}
                        }
                        else
                            SendKeys.Send("{tab}"); //跳格
                }

                return true;
            }
            if (keyInt == 40 || keyInt == 38) return false;

            return true;
        }

        //// ----------------账单-------------------------------////
        private bool GetKeyDowns(System.Windows.Forms.Keys keyData, DataGridEx dataGrid1)
        {
            long keyInt = Convert.ToInt32(keyData);
            int nrow, ncol;
            string ColumnName = "";

            //变量付初始值
            DataTable myTb = (DataTable)dataGrid1.DataSource;
            nrow = dataGrid1.CurrentCell.RowNumber;
            ncol = dataGrid1.CurrentCell.ColumnNumber;
            ColumnName = dataGrid1.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();

            if (keyInt == 27)   //ESC
            {
                this.GrdSel.Visible = false;
                //this.GrdSel.Dispose();
                dataGrid1.Focus();
            }

            if (ColumnName == "医嘱内容")
            {
                if (keyInt == 13)
                {
                    GetCardDatas(this.GrdSel.CurrentCell.RowNumber + 48, dataGrid1);
                    dataGrid1.Select();
                    SendKeys.Send("{Tab}");
                }
                //为英文字母
                if ((keyInt >= 65 && keyInt <= 90) || (keyInt >= 48 && keyInt <= 57) || (keyInt >= 96 && keyInt <= 105))
                {
                    //需要重复的代码
                    dataGrid1.Select();
                    DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)dataGrid1.TableStyles[0].GridColumnStyles[ncol];
                    txtCol.TextBox.SelectionStart = txtCol.TextBox.TextLength;
                    if (keyInt >= 65 && keyInt <= 90) SendKeys.Send(keyData.ToString().ToLower());
                    else if ((keyInt >= 48 && keyInt <= 57))
                        SendKeys.Send(Convert.ToString(keyInt - 48));
                    else
                        SendKeys.Send(Convert.ToString(keyInt - 96));
                }
            }

            else if (ColumnName == "用法")
            {
                if (keyInt == 13)
                {
                    GetCardDataUsages(this.GrdSel.CurrentCell.RowNumber, dataGrid1);
                    dataGrid1.Select();
                    SendKeys.Send("{Tab}");

                }
                //为英文字母
                if ((keyInt >= 65 && keyInt <= 90) || (keyInt >= 48 && keyInt <= 57) || (keyInt >= 96 && keyInt <= 105))
                {
                    //需要重复的代码
                    dataGrid1.Select();
                    DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)dataGrid1.TableStyles[0].GridColumnStyles[ncol];
                    txtCol.TextBox.SelectionStart = txtCol.TextBox.TextLength;
                    if (keyInt >= 65 && keyInt <= 90) SendKeys.Send(keyData.ToString().ToLower());
                    else if ((keyInt >= 48 && keyInt <= 57))
                        SendKeys.Send(Convert.ToString(keyInt - 48));
                    else
                        SendKeys.Send(Convert.ToString(keyInt - 96));
                }
            }

            else if (ColumnName == "频率")
            {
                if (keyInt == 13)
                {
                    GetCardDataPL(this.GrdSel.CurrentCell.RowNumber, dataGrid1);
                    dataGrid1.Select();
                    SendKeys.Send("{Tab}");
                }
                //为英文字母
                if ((keyInt >= 65 && keyInt <= 90) || (keyInt >= 48 && keyInt <= 57) || (keyInt >= 96 && keyInt <= 105))
                {
                    //需要重复的代码
                    dataGrid1.Select();
                    DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)dataGrid1.TableStyles[0].GridColumnStyles[ncol];
                    txtCol.TextBox.SelectionStart = txtCol.TextBox.TextLength;
                    if (keyInt >= 65 && keyInt <= 90) SendKeys.Send(keyData.ToString().ToLower());
                    else if ((keyInt >= 48 && keyInt <= 57))
                        SendKeys.Send(Convert.ToString(keyInt - 48));
                    else
                        SendKeys.Send(Convert.ToString(keyInt - 96));
                }
            }

            else if (ColumnName == "执行科室")
            {
                if (keyInt == 13)
                {
                    GetCardDataDept(this.GrdSel.CurrentCell.RowNumber, dataGrid1);
                    dataGrid1.Select();
                }
                //为英文字母
                if ((keyInt >= 65 && keyInt <= 90) || (keyInt >= 48 && keyInt <= 57) || (keyInt >= 96 && keyInt <= 105))
                {
                    //需要重复的代码
                    dataGrid1.Select();
                    DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)dataGrid1.TableStyles[0].GridColumnStyles[ncol];
                    txtCol.TextBox.SelectionStart = txtCol.TextBox.TextLength;
                    if (keyInt >= 65 && keyInt <= 90) SendKeys.Send(keyData.ToString().ToLower());
                    else if ((keyInt >= 48 && keyInt <= 57))
                        SendKeys.Send(Convert.ToString(keyInt - 48));
                    else
                        SendKeys.Send(Convert.ToString(keyInt - 96));
                }
            }

            if (keyInt == 40 || keyInt == 38) return false;
            return true;
        }

        private void GetCardDataDept(int theSel, DataGridEx dataGrid1)
        {
            //变量付初始值
            int nrow, ncol;
            DataTable myTb = (DataTable)dataGrid1.DataSource;
            nrow = dataGrid1.CurrentCell.RowNumber;
            ncol = dataGrid1.CurrentCell.ColumnNumber;

            int nSelRow;
            DataTable mySelTbTemp = (DataTable)this.GrdSel.DataSource;
            nSelRow = theSel;

            //判断选择的有效性
            if (nSelRow <= mySelTbTemp.Rows.Count - 1)
            {
                //给网格安全的付值
                myTb.Rows[nrow]["执行科室"] = mySelTbTemp.Rows[nSelRow]["科室名称"];
                myTb.Rows[nrow]["exec_dept"] = mySelTbTemp.Rows[nSelRow]["dept_id"];

                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)dataGrid1.TableStyles[0].GridColumnStyles[ncol];
                txtCol.TextBox.Text = mySelTbTemp.Rows[nSelRow]["科室名称"].ToString().Trim();
                dataGrid1.DataSource = myTb;
                this.GrdSel.Visible = false;
            }
            else
            {
                myTb.Rows[nrow]["执行科室"] = "";
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)dataGrid1.TableStyles[0].GridColumnStyles[ncol];
                txtCol.TextBox.Text = "";
                dataGrid1.DataSource = myTb;
                this.GrdSel.Visible = false;
            }
        }
        private void GrdSelTextBox_Click(object sender, EventArgs e)
        {
            GrdSel_DoubleClick(null, null);
        }
        private void GrdSel_DoubleClick(object sender, EventArgs e)
        {
            int nSelRow = this.GrdSel.CurrentCell.RowNumber;
            DataGridEx dataGrid1;

            checkPage();
            if (pageType == 0) dataGrid1 = this.dataGrid_LongOrder;
            else dataGrid1 = this.dataGrid_TempOrder;

            DataTable myTb = ((DataTable)dataGrid1.DataSource);
            int nrow = dataGrid1.CurrentCell.RowNumber;
            int ncol = dataGrid1.CurrentCell.ColumnNumber;
            string ColumnName = dataGrid1.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();



            if (ColumnName == "医嘱内容")
            {
                GetCardData(nSelRow, dataGrid1);
                //GetCardDataUsage(nSelRow, dataGrid1);
            }
            else if (ColumnName == "用法")
            {
                GetCardDataUsage(nSelRow, dataGrid1);
            }
            else if (ColumnName == "频率")
            {
                GetCardDataFrequency(nSelRow, dataGrid1);
            }

            dataGrid1.Focus();
            if (myTb.Rows[nrow]["医嘱内容"].ToString() != "")
                SendKeys.Send("{tab}"); //跳格	

        }

        private void GrdSel_CurrentCellChanged(object sender, System.EventArgs e)
        {
            try
            {
                this.GrdSel.Select(this.GrdSel.CurrentCell.RowNumber);

                DataGridEx dataGrid1;
                //Modify By Tany 2010-03-21
                if (pageType == 0)
                {
                    dataGrid1 = this.dataGrid_LongOrder;
                }
                else if (pageType == 1)
                {
                    dataGrid1 = this.dataGrid_TempOrder;
                }
                else if (pageType == 2)
                {
                    dataGrid1 = this.dataGrid_LongZD;
                }
                else if (pageType == 3)
                {
                    dataGrid1 = this.dataGrid_TempZD;
                }
                else
                {
                    return;
                }

                DataTable myTb = (DataTable)dataGrid1.DataSource;
                int col = dataGrid1.CurrentCell.ColumnNumber;
                string ColName = dataGrid1.TableStyles[0].GridColumnStyles[col].MappingName.Trim();
                if (ColName != "医嘱内容") return;//不是医嘱内容选择框就退出

                DataView mySelView = (DataView)this.GrdSel.DataSource;
                int nrow = this.GrdSel.CurrentCell.RowNumber;
                int ncol = this.GrdSel.CurrentCell.ColumnNumber;
                if (pageType == 0 || pageType == 1)
                {
                    DataGridTextBoxColumn dgtb = (DataGridTextBoxColumn)this.GrdSel.TableStyles[0].GridColumnStyles["deptName"];
                    dgtb.TextBox.Controls.Clear();//清除编辑框中的控件
                    if (mySelView[nrow]["type"].ToString() == "1" || mySelView[nrow]["type"].ToString() == "2" || mySelView[nrow]["type"].ToString() == "3") return;

                    string ColumnName = this.GrdSel.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();
                    if (ColumnName == "deptName") this.addDeptCmb(mySelView[nrow]["order_id"].ToString(), Convert.ToInt64(Convertor.IsNull(mySelView[nrow]["default_dept"], "0")), mySelView[nrow]["deptName"].ToString());
                }
                else if (pageType == 2 || pageType == 3)
                {
                    DataGridTextBoxColumn dgtb = (DataGridTextBoxColumn)this.GrdSel.TableStyles[0].GridColumnStyles["执行科室"];
                    dgtb.TextBox.Controls.Clear();//清除编辑框中的控件
                    if (mySelView[nrow]["type"].ToString() == "1" || mySelView[nrow]["type"].ToString() == "2" || mySelView[nrow]["type"].ToString() == "3") return;

                    string ColumnName = this.GrdSel.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();
                    if (ColumnName == "执行科室") this.addDeptCmbs(mySelView[nrow]["医嘱编号"].ToString());
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }
        #endregion

        #region 增加执行科室下拉选择框
        /// <summary>
        /// 增加执行科室下拉选择框
        /// </summary>
        #region 增加执行科室下拉选择框
        private void addDeptCmbs(string orderStr)
        {
            if (orderStr == "") return;
            //string sSql = "select b.exec_dept_id dept_id,c.name  " +
            //    "from (select * from jc_hoi_hdi where hoitem_id=" + orderStr + ") a inner join " +
            //    "      jc_hsitem_dept b on a.hditem_id=b.hsitem_id and a.tcid=b.tcid left join " +
            //    "      jc_dept_property c on b.exec_dept_id=c.dept_id";
            string sSql = "select a.exec_dept dept_id,c.name  " +
                "from (select * from jc_hoi_dept where order_id=" + orderStr + ") a left join " +
                "      jc_dept_property c on a.exec_dept=c.dept_id";
            DataTable myTb = InstanceForm._database.GetDataTable(sSql);

            if (myTb.Rows.Count < 2) return;

            ComboBox cmb = new ComboBox();

            cmb.Items.Clear();

            cmb.DisplayMember = "name";
            cmb.ValueMember = "DEPT_ID";
            cmb.DataSource = myTb;

            cmb.DropDownStyle = ComboBoxStyle.DropDownList;
            cmb.Dock = DockStyle.Fill;
            cmb.Cursor = Cursors.Hand;
            cmb.DropDownWidth = 90;
            cmb.BackColor = Color.LightCyan;
            cmb.SelectionChangeCommitted += new EventHandler(cmbDept_SelectionChangeCommitted);
            DataGridTextBoxColumn dgtb = (DataGridTextBoxColumn)this.GrdSel.TableStyles[0].GridColumnStyles["执行科室"];
            dgtb.TextBox.Controls.Clear();//必须先清空
            dgtb.TextBox.Controls.Add(cmb);
        }
        #endregion
        #endregion

        #region 右键菜单
        public Crownwood.Magic.Common.VisualStyle Style
        {
            get { return _topMenu.Style; }
        }
        protected void LoadResources()
        {
            _images = ResourceHelper.LoadBitmapStrip(this.GetType(),
                "Ts_zyys_yzgl.SampleImages.bmp",
                new Size(16, 16),
                new Point(0, 0));
        }
        protected void popMenu(DataGridEx grid, MouseEventArgs e)
        {
            //Modify by jchl(武汉中心医院右击序号界面直接屏蔽：静滴/续滴、小儿静滴/续滴、增加皮试、住院保留、查看pacs结果、查看心电结果、打印中药)
            //s5、s12、s8、s11、s16、s31、s27
            MenuCommand s13 = new MenuCommand("查看明细", _images, 0, new EventHandler(OnShowOrderFee));
            MenuCommand s14 = new MenuCommand("-");
            MenuCommand s0 = new MenuCommand("插入一行", _images, 0, new EventHandler(OnInsLineSelected));
            MenuCommand s1 = new MenuCommand("删除一行", _images, 1, new EventHandler(OnDelLineSelected));
            MenuCommand s4 = new MenuCommand("删除一组", _images, 2, new EventHandler(OnDelGroupSelected));
            MenuCommand s29 = new MenuCommand("选择删除(Ctrl+D)", _images, 2, new EventHandler(JugByselectdel));//add by zouchihua 2012-11-08
            MenuCommand s2 = new MenuCommand("-");
            MenuCommand s5 = new MenuCommand("静滴/续滴", _images, 4, new EventHandler(OnChangeUsage));
            MenuCommand s12 = new MenuCommand("小儿静滴/续滴", _images, 4, new EventHandler(OnChangeXeUsage));
            MenuCommand s6 = new MenuCommand("-");
            MenuCommand s8 = new MenuCommand("增加皮试", _images, 6, new EventHandler(OnInsertPSYZ));
            MenuCommand s9 = new MenuCommand("-");
            MenuCommand s7 = new MenuCommand("存为模板", _images, 5, new EventHandler(OnSaveAsModelSelected));
            MenuCommand s10 = new MenuCommand("-");
            MenuCommand s11 = new MenuCommand("出院保留", _images, 3, new EventHandler(OnHoldorder));
            //Modify By Tany 2010-05-11 查看pacs结果
            MenuCommand s15 = new MenuCommand("-");
            MenuCommand s16 = new MenuCommand("查看PACS结果", _images, 0, new EventHandler(OnShowPacs));
            //Modify By Tany 2011-09-03 实际执行时间
            MenuCommand s17 = new MenuCommand("-");
            MenuCommand s18 = new MenuCommand("实际执行时间", _images, 0, new EventHandler(OnExecTime));
            //add by zouchihua 2012-2-8 美康合理用药手动审核
            MenuCommand s26 = new MenuCommand("合理用药右击菜单", _images, 0, new EventHandler(HlyySssh));
            s26.Visible = false;
            if (cfg6032 == "1")
            {
                // string strHlyyType = GetIniString("hlyy", "name", System.Windows.Forms.Application.StartupPath + "\\Hlyy.ini");
                //美康合理用好接口
                if (strHlyyType == "美康")
                {
                    s26.Visible = true;
                }
            }

            //Modify By zouchihua 2010-11-01 复制长期医嘱到临时医嘱
            MenuCommand s19 = new MenuCommand("-");
            MenuCommand s25 = new MenuCommand("复制医嘱", _images, 0);
            MenuCommand s33 = new MenuCommand("选择复制医嘱(Ctrl+H)", _images, 0, new EventHandler(SelectYZ));//add by YAOKX 2014-06-05
            MenuCommand s27 = new MenuCommand("打印中药", _images, 0, new EventHandler(Zycf_print));

            MenuCommand s28 = new MenuCommand("修改为药库单位", _images, 0, new EventHandler(ChangeDw));

            //add by zouchihua 2013-8-4
            MenuCommand s30 = new MenuCommand("中草药处方名称", _images, 0, new EventHandler(UpdateZcyCfmc));
            if (cfg6070.Config.Trim() != "1")
                s30.Visible = false;
            MenuCommand s20 = new MenuCommand("复制一行医嘱", _images, 0, new EventHandler(OnCopyLine));
            MenuCommand s21 = new MenuCommand("复制一组医嘱", _images, 0, new EventHandler(OnCopyGroup));
            MenuCommand s22 = new MenuCommand("-");
            Crownwood.Magic.Controls.TabControl tc = null;
            MenuCommand s23;
            MenuCommand s24;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            if (tc.SelectedTab.Title.ToString() == "长期医嘱")
            {
                s23 = new MenuCommand("复制一行医嘱到临时医嘱", _images, 0, new EventHandler(OnCopyLine_Other));
                s24 = new MenuCommand("复制一组医嘱到临时医嘱", _images, 0, new EventHandler(OnCopyGroup_Other));
                s28.Visible = false;
            }
            else
            {
                s23 = new MenuCommand("复制一行医嘱到长期医嘱", _images, 0, new EventHandler(OnCopyLine_Other));
                s24 = new MenuCommand("复制一组医嘱到长期医嘱", _images, 0, new EventHandler(OnCopyGroup_Other));
                s28.Visible = true;
            }
            if (tabnum == 2)
            {
                s11.Enabled = false;//临嘱不可用 modify by jchl
                s18.Enabled = true;//只有临嘱才能用
                //s19.Enabled = false;
            }
            else
            {
                s18.Enabled = false;
            }

            MenuCommand s32 = new MenuCommand("修改用药目的", _images, 0, new EventHandler(Onyfmd));
            if (cfg6085.Config.Trim() == "1")
                s32.Visible = true;
            else
                s32.Visible = false;
            //增加心电查看
            MenuCommand s31 = new MenuCommand("查看心电结果", _images, 0, new EventHandler(OnShowXd));

            //Add By Tany 2015-02-03 增加病理结果查看
            MenuCommand s36 = new MenuCommand("查看病理结果", _images, 0, new EventHandler(OnShowBl));

            MenuCommand s37 = new MenuCommand("-");
            MenuCommand s38 = new MenuCommand("查看药品说明书", _images, 0, new EventHandler(OnShowYPSM));
            MenuCommand s39 = new MenuCommand("审方未通过原因", _images, 0, new EventHandler(Onsfreson));
            try
            {
                string sfqy = ApiFunction.GetIniString("bl", "是否启用", Constant.ApplicationDirectory + "\\bl.ini");
                if (sfqy == "1")
                {
                    s36.Visible = true;
                }
                else
                {
                    s36.Visible = false;
                }
            }
            catch
            {
            }

            //			s0.Shortcut = Shortcut.Ins ;
            //			s1.Shortcut = Shortcut.Del;
            //			s3.Shortcut = Shortcut.F5;
            //			s7.Shortcut = Shortcut.CtrlS;

            // Create the popup menu object
            s25.MenuCommands.AddRange(new MenuCommand[] { s20, s21, s22, s23, s24 });
            PopupMenu popMenu = new PopupMenu();

            //Define the properties to get appearance to match MenuControl
            popMenu.Style = this.Style;// (Crownwood.Magic.Common.VisualStyle)Crownwood.DotNetMagic.Common.VisualStyle.Office2003;

            #region"Modify by jchl"
            MenuCommand s34 = new MenuCommand("-");
            MenuCommand s35 = new MenuCommand("取消转抄", _images, 0, new EventHandler(OnCancerZhuanChao));
            // Define the list of menu commands
            //s5、s12、s8、s11、s16、s31、s27  ['-':2/6/10/15]
            //MenuCommand[] mcs = new MenuCommand[] { s13, s14, s0, s1, s4, s29, s2, s5, s12, s6, s8, s9, s7, s10, s11, s15, s16, s31, s17, s18, s26, s19, s25, s27, s28, s30, s32, s33 };
            //Modify By Tany 2015-01-30 开放中草药处方打印
            if (cfg6220.Config.Trim() == "1" || myQuery.IsDeptOk(DeptID.ToString()))
            {
                MenuCommand[] mcs = new MenuCommand[] { s13, s14, s0, s1, s4, s29, s6, s8, s9, s7, s17, s18, s26, s19, s25, s27, s28, s30, s32, s33, s36, s37, s38, s39 };
                popMenu.MenuCommands.AddRange(mcs);
            }
            else
            {
                MenuCommand[] mcs = new MenuCommand[] { s13, s14, s0, s1, s4, s29, s9, s7, s17, s18, s26, s19, s25, s27, s28, s30, s32, s33, s34, s35, s36, s37, s38, s39 };
                popMenu.MenuCommands.AddRange(mcs);
            }
            #endregion


            // Show it!
            popMenu.TrackPopup(grid.PointToScreen(new Point(e.X, e.Y)));
            grid.Refresh();
        }

        //add by jchl(取消转抄)
        private void OnCancerZhuanChao(object sender, EventArgs e)
        {
            //ntype=7||(xmly=1&&Exec_dept==-1)的才能取消
            try
            {
                checkPage();
                string tmpSql = "";
                DataGridEx dgex = pageType == 0 ? dataGrid_LongOrder : pageType == 1 ? dataGrid_TempOrder : null;

                if (dgex == null)
                    return;

                DataTable myTb = dgex.DataSource as DataTable;
                DataTable decoctTb = new DataTable();
                if (myTb == null) return;
                if (myTb.Rows.Count == 0) return;

                int i = 0;
                string sSql = "";
                bool isSelect = false;
                //this.myDataGrid1.CurrentCell = new DataGridCell(0, 0);
                int mngType1 = GetMNGType();
                int mngType2 = -1;

                if (mngType1 == 1)
                    mngType2 = 5;
                else
                    mngType2 = mngType1;

                //获取要取消转抄的医嘱组号
                string grpNo = myTb.Rows[dgex.CurrentRowIndex]["嘱号"].ToString();
                string yznr = myTb.Rows[dgex.CurrentRowIndex]["医嘱内容"].ToString();

                string btName = (sender as Crownwood.Magic.Menus.MenuCommand).Description;

                //wait_jchl（进行ntype=7||(xmly=1&&Exec_dept==-1)的才能取消的信息过滤）
                if (!(myTb.Rows[dgex.CurrentRowIndex]["NTYPE"].ToString().Trim().Equals("7")
                    || (myTb.Rows[dgex.CurrentRowIndex]["XMLY"].ToString().Trim().Equals("1") && myTb.Rows[dgex.CurrentRowIndex]["Exec_dept".ToUpper()].ToString().Trim().Equals("-1"))))
                {
                    MessageBox.Show("不允许取消转抄", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return;
                }

                if (MessageBox.Show(this, "确认针对该药品“" + yznr + "”这一组进行“" + btName + "”吗？", "确认", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No) return;

                //Modify By Tany 2010-06-08 是否使用密码确认 0=使用 1=不使用
                if (new SystemCfg(7066).Config == "0")
                {
                    frmInPassword f1 = new frmInPassword();
                    f1.ShowDialog();
                    if (f1.isLogin == false) return;
                }
                string sSql1;
                string tmpSql1 = "";
                DataTable hltb = FrmMdiMain.Database.GetDataTable("select b.ORDER_NAME,TENDLEVEL,a.HOITEM_ID from JC_HOI_HL a left join JC_HOITEMDICTION  b on a.HOITEM_ID=b.ORDER_ID");
                for (i = 0; i <= myTb.Rows.Count - 1; i++)
                {
                    sSql1 = "";
                    tmpSql1 = "";
                    if (myTb.Rows[i]["医嘱内容"].ToString().Trim() != "" && myTb.Rows[i]["嘱号"].ToString().Equals(grpNo))
                    {
                        switch (btName)
                        {
                            case "取消转抄":
                                #region 判断该医嘱是否没有转抄、是否执行过
                                if (Convert.ToInt16(myTb.Rows[i]["Status_flag"]) == 1)
                                {
                                    MessageBox.Show(this, "对不起，医嘱“" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "”还没有转抄！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                    return;
                                }
                                //暂时取消  Modify By Tany 2004-11-11
                                //							if (myTb.Rows[i]["AUDITING_USER"].ToString().Trim()!=InstanceForm.BCurrentUser.EmployeeId)
                                //							{
                                //								MessageBox.Show(this,"对不起，医嘱“"+myTb.Rows[i]["医嘱内容"].ToString().Trim()+"”不是您转抄的，您无权取消！", "错误", MessageBoxButtons.OK,MessageBoxIcon.Warning);
                                //								return;
                                //							}
                                int nPs = Convert.ToInt16(myTb.Rows[i]["ps_flag"]);
                                if (nPs == 1 || nPs == 2)
                                {
                                    MessageBox.Show(this, "对不起，该条医嘱已经设置了皮试结果！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                    return;
                                }
                                sSql = "select * from zy_orderrecord " +
                                    "where order_id in (select order_id from zy_orderexec)" +
                                    "      and group_id=" + myTb.Rows[i]["嘱号"].ToString().Trim() +
                                    "      and (mngtype=" + mngType1 + " or mngtype=" + mngType2 + ")" +
                                    "      and inpatient_id='" + ClassStatic.Current_BinID + "' and baby_id=" + ClassStatic.Current_BabyID +
                                    "      and not (ntype=0)";//Modify By Tany 2005-11-05 出院医嘱等可以任意取消
                                DataTable myTempTb = InstanceForm._database.GetDataTable(sSql);
                                if (myTempTb.Rows.Count != 0)
                                {
                                    MessageBox.Show(this, "对不起，医嘱“" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "”已经执行，不允许取消！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                    return;
                                }

                                #endregion
                                #region //Add by zouchihua 取消转抄时遍历护理信息 2012-7-18
                                DataRow[] row = hltb.Select("HOITEM_ID=" + myTb.Rows[i]["HOITEM_ID"].ToString());
                                if (row != null && row.Length > 0)// && myTb.Rows[i]["Order_ID"].ToString().Trim() == myTb.Rows[i]["order_hl"].ToString().Trim())
                                {
                                    sSql1 = "ORDER_HL=null,ORDER_HL_SPEC='',ORDER_TENDLEVEL=0";
                                    //Add By Tany 2005-01-12
                                    //如果是停护理级别还要看和现在护理记录表里面的级别是不是一致
                                    //主要是防止先开新护理，后停老护理的时候会把新护理记录清除
                                    tmpSql1 = " order_tendlevel=" + row[0]["TENDLEVEL"] + " and ";
                                }
                                if (myTb.Rows[i]["医嘱内容"].ToString().IndexOf("病重") >= 0)
                                {
                                    sSql1 += sSql1 == "" ? "" : ",";
                                    sSql1 += "ORDER_BZ=null"; ;
                                }
                                if (myTb.Rows[i]["医嘱内容"].ToString().IndexOf("病危") >= 0)//&& myTb.Rows[i]["Order_ID"].ToString().Trim() == myTb.Rows[i]["order_bw"].ToString().Trim())
                                {
                                    sSql1 += sSql1 == "" ? "" : ",";
                                    sSql1 += "ORDER_BW=null";
                                }
                                if (myTb.Rows[i]["医嘱内容"].ToString().IndexOf("饮食") >= 0 || myTb.Rows[i]["医嘱内容"].ToString().IndexOf("禁食") >= 0 || myTb.Rows[i]["医嘱内容"].ToString().IndexOf("普食") >= 0)// && myTb.Rows[i]["Order_ID"].ToString().Trim() == myTb.Rows[i]["order_ys"].ToString().Trim())
                                {
                                    sSql1 += sSql1 == "" ? "" : ",";
                                    sSql1 += "ORDER_YS=null,ORDER_YS_SPEC=''";
                                }
                                #endregion
                                break;
                        }
                        isSelect = true;
                        if (sSql1 != "")
                        {
                            sSql = "update zy_inpatient_hl set " + sSql1 + " where " + tmpSql1 +
                                " inpatient_id='" + ClassStatic.Current_BinID + "' and baby_id=" + ClassStatic.Current_BabyID;

                            try
                            {
                                InstanceForm._database.DoCommand(sSql);
                            }
                            catch (Exception err)
                            {
                                //写错误日志 Add By Tany 2005-01-12
                                SystemLog _systemErrLog = new SystemLog(-1, InstanceForm._currentDept.DeptId, Convert.ToInt32(InstanceForm._currentUser.EmployeeId), "程序错误", "更新护理记录错误：" + err.Message + "  Source：" + err.Source, DateManager.ServerDateTimeByDBType(InstanceForm._database), 1, "主机名：" + System.Environment.MachineName, 39);
                                _systemErrLog.Save();
                                _systemErrLog = null;

                                MessageBox.Show("错误：更新护理记录时出错！\n系统：" + err.Message, "提示", MessageBoxButtons.OK, MessageBoxIcon.Stop);
                            }
                        }
                    }
                }

                if (isSelect == false)
                {
                    MessageBox.Show(this, "对不起，没有选择医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }

                #region 取消操作
                string sGroupId = "";
                for (i = 0; i <= myTb.Rows.Count - 1; i++)
                {
                    if (i != 0 && myTb.Rows[i]["嘱号"].ToString().Trim() == myTb.Rows[i - 1]["嘱号"].ToString().Trim())
                        continue;

                    if (myTb.Rows[i]["医嘱内容"].ToString().Trim() != "" && myTb.Rows[i]["嘱号"].ToString().Equals(grpNo))
                    {
                        //判断是不是有煎药费，如果有则把煎药费的临时账单取消
                        //Add By Tany 2004-10-22
                        //-------------------------------------------------------------------------------------------------------------
                        Guid n_id = Guid.Empty;
                        Guid n_order_id = Guid.Empty;
                        string strSql = "select id,order_id from zy_decoct where inpatient_id='" + ClassStatic.Current_BinID + "'" +
                            " and group_id=" + Convert.ToDecimal(myTb.Rows[i]["嘱号"].ToString().Trim()) + " and order_id is not null";
                        decoctTb = InstanceForm._database.GetDataTable(strSql);

                        if (decoctTb.Rows.Count > 0)
                        {
                            n_id = new Guid(decoctTb.Rows[0]["id"].ToString().Trim());
                            n_order_id = new Guid(decoctTb.Rows[0]["order_id"].ToString().Trim());
                            if (MessageBox.Show("该组医嘱有煎药费，是否自动删除煎药费？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                            {
                                //取煎药费信息
                                sSql = @"select * from zy_orderrecord where delete_bit=0 and order_id='" + n_order_id + "'";
                                DataTable myTempTb = InstanceForm._database.GetDataTable(sSql);
                                //如果煎药费已经发送，则手工冲正
                                if (myTempTb.Rows.Count == 0 || myTempTb == null || myTempTb.Rows[0]["status_flag"].ToString().Trim() == "5")
                                {
                                    MessageBox.Show("未找到煎药费或者煎药费已经发送，请手工冲正煎药费！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Stop);
                                }
                                else
                                {
                                    //								//生成数据访问对象
                                    //								RelationalDatabase database=RelationalDatabase.GetDatabase(DatabaseType.IbmDb2ZY);
                                    //								database.Initialize("");
                                    //								database.Open();
                                    //								//开始一个事务
                                    //								database.BeginTransaction();

                                    InstanceForm._database.BeginTransaction();

                                    try
                                    {
                                        //删除煎药费
                                        strSql = "update zy_orderrecord set delete_bit=1,order_euser=" + InstanceForm._currentUser.EmployeeId +
                                            ",order_eudate=getdate() where order_id='" + n_order_id + "'";
                                        InstanceForm._database.DoCommand(strSql);

                                        //清除煎药费账单信息
                                        //Modify by jchl 不清除煎药信息
                                        //strSql = "update zy_decoct set order_id=DBO.FUN_GETEMPTYGUID() where id='" + n_id + "'";
                                        //InstanceForm._database.DoCommand(strSql);

                                        InstanceForm._database.CommitTransaction();
                                    }
                                    catch (Exception err)
                                    {
                                        InstanceForm._database.RollbackTransaction();

                                        //写错误日志 Add By Tany 2005-01-12
                                        SystemLog _systemErrLog = new SystemLog(-1, InstanceForm._currentDept.DeptId, InstanceForm._currentUser.EmployeeId, "程序错误", "取消转抄错误：" + err.Message + "  Source：" + err.Source, DateManager.ServerDateTimeByDBType(InstanceForm._database), 1, "主机名：" + System.Environment.MachineName, 39);
                                        _systemErrLog.Save();
                                        _systemErrLog = null;

                                        MessageBox.Show("错误：将煎药费从临时账单中删除时出现错误，请手工删除煎药费！\n系统：" + err.Message, "提示", MessageBoxButtons.OK, MessageBoxIcon.Stop);
                                    }
                                    //								finally
                                    //								{
                                    //									database.Close();
                                    //								}
                                }
                            }
                        }

                        //-------------------------------------------------------------------------------------------------------------
                        //InstanceForm.BDatabase.BeginTransaction();
                        sSql = @"update zy_OrderRecord ";
                        try
                        {
                            //add by zouchihua 发送消息到住院 2013-8-14
                            string msg_wardid = "";
                            long msg_deptid = 0;// long.Parse(myTb.Rows[i]["EXEC_DEPT"].ToString().Trim());
                            long msg_empid = 0;
                            string msg_sender = FrmMdiMain.CurrentDept.DeptName + "：" + FrmMdiMain.CurrentUser.Name;
                            string msg_msg = "";
                            switch (btName)
                            {
                                case "取消转抄":

                                    //add by zouchihua 2012-2-21
                                    #region 是否使用虚拟库存，转抄时。临时医嘱减虚拟库存，长期医嘱剪当天的虚拟库存
                                    try
                                    {
                                        string cfg6035 = new SystemCfg(6035).Config.Trim();
                                        if (cfg6035 == "1")
                                        {
                                            myFunc.OprateXnkc(ClassStatic.Current_BinID, ClassStatic.Current_BabyID, Guid.Empty, int.Parse(myTb.Rows[i]["嘱号"].ToString().Trim()), 1);
                                        }
                                    }
                                    catch (Exception ex)
                                    {
                                        throw ex;
                                    }
                                    #endregion
                                    //Modify by Tany 2010-04-19 如果是手术麻醉或特殊治疗，取消转抄直接取消到为0的状态
                                    int _flag = 0;
                                    sSql += " set status_flag=" + _flag + ", Auditing_User=null, Auditing_Date=null ";
                                    //取消转抄的时候把医嘱打印记录也删除 Add By Tany 2004-12-30 
                                    if (GetMNGType() == 0)
                                    {
                                        tmpSql = "delete from zy_logorderprt where group_id>=" + myTb.Rows[i]["嘱号"].ToString().Trim() +
                                            "       and inpatient_id='" + ClassStatic.Current_BinID + "' and baby_id=" + ClassStatic.Current_BabyID;
                                    }
                                    else if (GetMNGType() == 1)
                                    {
                                        tmpSql = "delete from zy_tmporderprt where group_id>=" + myTb.Rows[i]["嘱号"].ToString().Trim() +
                                            "       and inpatient_id='" + ClassStatic.Current_BinID + "' and baby_id=" + ClassStatic.Current_BabyID;
                                    }
                                    //add by zouchihua 发送消息到住院 2013-8-14
                                    msg_msg = "[" + patientInfo1.lbDQKS.Text.Trim() + "] 科室 " + patientInfo1.lbBed.Text + "床[" + patientInfo1.lbName.Text.Trim() + "] 的";
                                    msg_msg += "【" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "】已经取消转抄\r\n";
                                    try
                                    {
                                        TrasenFrame.Classes.WorkStaticFun.SendMessage(false, SystemModule.住院护士站, InstanceForm._currentDept.WardId, msg_deptid, msg_empid, msg_sender, msg_msg);
                                    }
                                    catch (Exception)
                                    { }
                                    break;
                            }
                            string babyId = cmbChild.SelectedValue == null ? "0" : cmbChild.SelectedValue.ToString();
                            sSql += " where group_id=" + myTb.Rows[i]["嘱号"].ToString().Trim() +
                                  "       and inpatient_id='" + BinID + "' and baby_id=" + babyId;
                            InstanceForm._database.DoCommand(sSql);

                            //删除医嘱打印信息 Modify By Tany 2005-01-18
                            if (tmpSql.Trim() != "")
                            {
                                InstanceForm._database.DoCommand(tmpSql);
                            }
                            //InstanceForm.BDatabase.CommitTransaction();
                            sGroupId += myTb.Rows[i]["嘱号"].ToString().Trim() + ",";
                            //MessageBox.Show("success");
                        }
                        catch (Exception ex)
                        {
                            //InstanceForm.BDatabase.RollbackTransaction();
                            MessageBox.Show(ex.Message);
                        }

                    }
                }
                #endregion

                //写日志 Add By Tany 2005-01-12
                SystemLog _systemLog = new SystemLog(-1, InstanceForm._currentDept.DeptId, InstanceForm._currentUser.EmployeeId, btName, "将inpatient_id=" + ClassStatic.Current_BinID + " and baby_id=" + ClassStatic.Current_BabyID + "的病人group_id=" + sGroupId + btName, DateManager.ServerDateTimeByDBType(InstanceForm._database), 1, "主机名：" + System.Environment.MachineName, 39);
                _systemLog.Save();
                _systemLog = null;

                if (pageType == 0)
                {
                    loadGrid_LongOrder();//刷新数据
                }
                else
                {
                    loadGrid_TempOrder();
                }

                //this.ShowDate();
            }
            catch { }
        }

        private void Onyfmd(object sender, EventArgs e)
        {
            DataGridEx dataGrid = new DataGridEx();
            if (tabnum == 1)
            {
                dataGrid = this.dataGrid_LongOrder;

            }

            if (tabnum == 2)
            {
                dataGrid = this.dataGrid_TempOrder;

            }
            if (CheckTjmd(dataGrid, false))
                btRefur_Click(null, null);

        }
        private void OnShowXd(object sender, EventArgs e)
        {
            if (ApiFunction.GetIniString("Xd", "是否启用", Constant.ApplicationDirectory + "\\XdInterface.ini").Trim() != "1")
            {
                MessageBox.Show("对不起，暂未启用心电接口！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            if (BinID == null || BinID == Guid.Empty)
            {
                MessageBox.Show("没有找到病人信息，请重新确认！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }

            DataTable myTb = new DataTable();
            DataGridEx dataGrid = new DataGridEx();
            int mngtype = 0;

            if (tabnum == 1)
            {
                dataGrid = this.dataGrid_LongOrder;
                mngtype = 0;
            }

            if (tabnum == 2)
            {
                dataGrid = this.dataGrid_TempOrder;
                mngtype = 1;
            }

            myTb = (DataTable)dataGrid.DataSource;
            if (myTb == null) return;
            if (myTb.Rows.Count == 0) return;

            int nrow = 0;
            nrow = dataGrid.CurrentCell.RowNumber;

            //如果医嘱ID为空
            if (myTb.Rows[nrow]["嘱号"].ToString() == "") return;
            try
            {
                string XdName = ApiFunction.GetIniString("Xd", "Xd类型", Constant.ApplicationDirectory + "\\XdInterface.ini");
                ts_Xd_interface.InterFace_Xd _xd = ts_Xd_interface.XdFactory.Xd(XdName);
                _xd.ShowXdInfo(new Guid(myTb.Rows[nrow]["id"].ToString()), ts_Xd_interface.PatientSource.住院);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }

        }
        private void OnShowBl(object sender, EventArgs e) //Add By Tany 2015-02-03 查看病理结果
        {
            try
            {
                string sfqy = ApiFunction.GetIniString("bl", "是否启用", Constant.ApplicationDirectory + "\\bl.ini");
                if (sfqy == "1")
                {
                    Ts_Bl_interface.BlFactory bf = new Ts_Bl_interface.BlFactory();
                    bf.Create("").ShowPatBlInfo(BinID, Ts_Bl_interface.PatientSource.住院);
                    //bf.Create("").ShowBlSq(sBinID, Ts_Bl_interface.PatientSource.住院);
                }
                else
                {
                    MessageBox.Show("没有开启病理接口，请联系管理员");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        /// <summary>
        /// 查看合理用药提示
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void OnShowYPSM(object sender, EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            DataGridEx mydgv;
            if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                mydgv = this.dataGrid_LongOrder;
            else
                mydgv = this.dataGrid_TempOrder;
            DataTable tb = (DataTable)mydgv.DataSource;

            Rectangle rc = mydgv.GetCellBounds(mydgv.CurrentCell.RowNumber, mydgv.CurrentCell.ColumnNumber);
            int crow = mydgv.CurrentCell.RowNumber;
            Point po = Cursor.Position;
            try
            {
                string strCs = " <details_xml><hosp_flag>ip</hosp_flag><medicine><his_code>" + tb.Rows[crow]["HOITEM_ID"].ToString().Trim() + "</his_code><his_name>" + tb.Rows[crow]["医嘱内容"].ToString() + "</his_name></medicine></details_xml> ";
                hl.ShowPoint(new StringBuilder(strCs));//大通新的合理用药条用
                //hl.ShowPoint(new StringBuilder(Convert.ToInt32(this.Width - po.X - 350).ToString() + "," + Convert.ToInt32(this.Height - po.Y - 230).ToString() + "," + po.X + "," + Convert.ToInt32(po.Y + 20) + "," + tb.Rows[crow]["hoitem_id"].ToString() + "," + tb.Rows[crow]["医嘱内容"].ToString()));
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void UpdateZcyCfmc(object sender, EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            DataGridEx mydgex = null;
            int mngtype = 1;
            try
            {
                if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                {
                    mydgex = dataGrid_LongOrder;
                    mngtype = 0;
                }
                else
                {
                    mydgex = dataGrid_TempOrder;
                    mngtype = 1;
                }
                DataTable tb = (DataTable)mydgex.DataSource;
                int cudindex = mydgex.CurrentCell.RowNumber;
                if (tb.Rows[cudindex]["NTYPE"].ToString() != "3")
                {
                    MessageBox.Show("请选择中药处方");
                    return;
                }
                if (tb.Rows[cudindex]["医嘱内容"].ToString().Trim() == "" || new Guid(tb.Rows[cudindex]["ID"].ToString().Trim()) == Guid.Empty)
                {
                    MessageBox.Show("请选择保存了的中草药处方！！");
                    return;
                }
                string sql = "select case when rtrim(isnull(A.MEMO,''))!=''   then '【'+isnull(A.MEMO,'')+'】'else isnull((select top 1 '【'+MBMC+'】' from  jc_cfmb where MBXH=A.PS_ORDERID),'') end    mc  from ZY_ORDERRECORD a where inpatient_id='" + this.BinID.ToString() + "' and ntype=3 and group_id='" + tb.Rows[cudindex]["嘱号"].ToString() + "'";
                DataTable tmp = InstanceForm._database.GetDataTable(sql);
                TrasenFrame.Forms.DlgInputBox input;
                if (tmp.Rows.Count > 0)
                {
                    input = new DlgInputBox("", "中草药处方名称备注(原)：【" + tmp.Rows[0]["mc"].ToString() + "】\r\n请填写将要修改的名称备注到下方的录入框中", "中草药处方名称备注");
                }
                else
                    input = new DlgInputBox("", "中草药处方名称备注(原)：【】,\r\n请填写将要修改的名称备注到下方的录入框中", "中草药处方名称备注");
                input.ShowDialog();
                if (DlgInputBox.DlgResult)
                {
                    string upstr = "update ZY_ORDERRECORD set MEMO='" + DlgInputBox.DlgValue + "' where inpatient_id='" + this.BinID.ToString() + "' and ntype=3 and group_id=" + tb.Rows[cudindex]["嘱号"].ToString() + "";
                    InstanceForm._database.DoCommand(upstr);
                    //同时更改医嘱打印表的数据
                    if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                        upstr = "update ZY_LOGORDERPRT set ORDER_CONTEXT=substring(ORDER_CONTEXT,1,(case when charindex('【',ORDER_CONTEXT)>0 then charindex('【',ORDER_CONTEXT) else len(ORDER_CONTEXT) end) -1)+'【" + DlgInputBox.DlgValue + "】' where inpatient_id='" + this.BinID.ToString() + "' and ntype=3 and group_id=" + tb.Rows[cudindex]["嘱号"].ToString() + " and   ORDER_CONTEXT like '%中草药%'";
                    else
                        upstr = "update ZY_TMPORDERPRT set ORDER_CONTEXT=substring(ORDER_CONTEXT,1,(case when charindex('【',ORDER_CONTEXT)>0 then charindex('【',ORDER_CONTEXT) else len(ORDER_CONTEXT) end) -1)+'【" + DlgInputBox.DlgValue + "】' where inpatient_id='" + this.BinID.ToString() + "' and ntype=3 and group_id=" + tb.Rows[cudindex]["嘱号"].ToString() + " and   ORDER_CONTEXT like '%中草药%'";
                    InstanceForm._database.DoCommand(upstr);
                }
                else
                {
                    input.Dispose();
                    return;
                }
                if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                {

                    //DataCheck(this.dataGrid_LongOrder, 0);
                    loadGrid_LongOrder();//刷新数据
                }
                if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                {
                    //DataCheck(this.dataGrid_TempOrder, 1);
                    loadGrid_TempOrder();//刷新数据
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "提示信息");
            }
        }
        /// <summary>
        /// 根据条件删除
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void JugByselectdel(object sender, EventArgs e)
        {
            //add By Tany 2012-10-08 是否使用密码确认 0=使用 1=不使用
            if (new SystemCfg(6023, InstanceForm._database).Config == "0")
            {
                string dlgvalue = DlgPW.Show();
                string pwStr = dlgvalue; //YS.Password;
                bool bOk = InstanceForm._currentUser.CheckPassword(pwStr);
                if (!bOk)
                {
                    FrmMessageBox.Show("你没有通过权限确认，不能取消医嘱！", new Font("宋体", 12f), Color.Red, "Sorry！", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }
            }
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            FrmDel fdel = new FrmDel();
            fdel.Textstr = 0;
            fdel.ShowDialog();
            if (fdel.DialogResult == DialogResult.OK)
            {
                //Modify by jchl 老系统交互，ser_no处理，发送医嘱只能同时删除一组医嘱
                //不需要判断是否新护士站是否上线，老系统同步全部遵守该规则
                if (cfg6207.Config.Equals("1"))
                {
                    if (MessageBox.Show("您是否要删除【" + fdel.beginrow.ToString() + "】 行到 【" + fdel.endrow.ToString() + "】行所在组的所有的医嘱吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) == DialogResult.No)
                        return;
                }
                else
                {
                    if (MessageBox.Show("您是否要删除【" + fdel.beginrow.ToString() + "】 行到 【" + fdel.endrow.ToString() + "】行的医嘱吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) == DialogResult.No)
                        return;
                }

                //删除医嘱
                int beginrow = fdel.beginrow - 1;
                int endrow = fdel.endrow - 1;
                if (beginrow < 0)
                    beginrow = 0;
                if (endrow < 0)
                    return;
                DataTable temp;
                if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                {
                    temp = (DataTable)this.dataGrid_LongOrder.DataSource;
                    if (endrow >= temp.Rows.Count - 1)
                        endrow = temp.Rows.Count - 1;
                }
                if (tc.SelectedTab.Title.ToString() == "临时医嘱")
                {
                    temp = (DataTable)this.dataGrid_TempOrder.DataSource;
                    if (endrow >= temp.Rows.Count - 1)
                        endrow = temp.Rows.Count - 1;
                }
                for (int i = beginrow; i <= endrow; i++)
                {
                    if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                    {
                        if (DeleteOrder(this.dataGrid_LongOrder, 0, beginrow) == -1)
                        {
                            beginrow++;
                        }
                    }
                    if (tc.SelectedTab.Title.ToString() == "临时医嘱")
                    {
                        if (DeleteOrder(this.dataGrid_TempOrder, 0, beginrow) == -1)
                        {
                            beginrow++;
                        }
                    }
                }
                if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                {
                    DataTable myTbBk = (DataTable)dataGrid_LongOrder.DataSource;
                    this.dataGrid_LongOrder.CurrentRowIndex = myTbBk.Rows.Count - 1;
                }
                if (tc.SelectedTab.Title.ToString() == "临时医嘱")
                {
                    DataTable myTbBk = (DataTable)dataGrid_TempOrder.DataSource;
                    this.dataGrid_TempOrder.CurrentRowIndex = myTbBk.Rows.Count - 1;
                }
            }
        }
        /// <summary>
        /// 根据条件复制
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void SelectYZ(object sender, EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            FrmDel fdel = new FrmDel();
            fdel.Textstr = 1;
            fdel.ShowDialog();
            if (fdel.DialogResult == DialogResult.OK)
            {
                int beginrow = fdel.beginrow - 1;
                int endrow = fdel.endrow - 1;
                if (beginrow < 0)
                    beginrow = 0;
                if (endrow < 0)
                    return;
                DataTable temp = null;
                string groupid = "";
                if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                {
                    temp = (DataTable)this.dataGrid_LongOrder.DataSource;
                    if (endrow >= temp.Rows.Count - 1)
                        endrow = temp.Rows.Count - 1;
                }
                if (tc.SelectedTab.Title.ToString() == "临时医嘱")
                {
                    temp = (DataTable)this.dataGrid_TempOrder.DataSource;
                    if (endrow >= temp.Rows.Count - 1)
                        endrow = temp.Rows.Count - 1;
                }
                for (int i = beginrow; i <= endrow; i++)
                {
                    if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                    {
                        if (groupid != temp.Rows[beginrow]["嘱号"].ToString())
                        {
                            groupid = temp.Rows[beginrow]["嘱号"].ToString();
                            CopyOrder(this.dataGrid_LongOrder, 0, 0, 0, beginrow);
                        }
                        beginrow++;
                    }
                    if (tc.SelectedTab.Title.ToString() == "临时医嘱")
                    {
                        if (groupid != temp.Rows[beginrow]["嘱号"].ToString())
                        {
                            groupid = temp.Rows[beginrow]["嘱号"].ToString();
                            CopyOrder(this.dataGrid_TempOrder, 1, 0, 0, beginrow);
                        }
                        beginrow++;
                    }
                }
                if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                {
                    DataTable myTbBk = (DataTable)dataGrid_LongOrder.DataSource;
                    this.dataGrid_LongOrder.CurrentRowIndex = myTbBk.Rows.Count - 1;
                }
                if (tc.SelectedTab.Title.ToString() == "临时医嘱")
                {
                    DataTable myTbBk = (DataTable)dataGrid_TempOrder.DataSource;
                    this.dataGrid_TempOrder.CurrentRowIndex = myTbBk.Rows.Count - 1;
                }
            }

        }
        private void Zycf_print(object sender, EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            DataGridEx mydgex = null;
            int mngtype = 1;
            try
            {
                if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                {
                    mydgex = dataGrid_LongOrder;
                    mngtype = 0;
                }
                else
                {
                    mydgex = dataGrid_TempOrder;
                    mngtype = 1;
                }
                DataTable tb = (DataTable)mydgex.DataSource;
                int cudindex = mydgex.CurrentCell.RowNumber;
                if (tb.Rows[cudindex]["NTYPE"].ToString() != "3")
                {
                    MessageBox.Show("请选择中药处方");
                    return;
                }
                PubClass.PrintCf(this.BinID.ToString(), tb.Rows[cudindex]["mngtype"].ToString(), tb.Rows[cudindex]["嘱号"].ToString(), FrmMdiMain.Database);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "提示信息");
            }
        }
        /// <summary>
        /// 改变总量单位为药库单位
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void ChangeDw(object sender, EventArgs e)
        {
            bYkDw = false;
            DataTable tb = (DataTable)dataGrid_TempOrder.DataSource;
            int cudindex = dataGrid_TempOrder.CurrentCell.RowNumber;
            string status_falg = tb.Rows[cudindex]["status_flag"].ToString().Trim() == "" ? "0" : tb.Rows[cudindex]["status_flag"].ToString().Trim();

            if (!(status_falg.Equals("0") || status_falg.Equals("9")))
            {
                MessageBox.Show("只有保存状态的医嘱才能进行 修改药库单位 操作!", "提示", MessageBoxButtons.OK, MessageBoxIcon.Error);
                bYkDw = false;
                return;
            }

            //参数控制 补录医嘱9 是否允许修改为药库单位 Modify by jchl 2014-08-23
            bool canBl = cfg6212.Config.ToString().Trim().Equals("0") ? (Convert.ToInt32(status_falg) < 2) : (Convert.ToInt32(status_falg) < 2 || Convert.ToInt32(status_falg) == 9);

            if (tb.Rows[cudindex]["医嘱内容"].ToString().Trim() != "" && tb.Rows[cudindex]["xmly"].ToString().Trim() == "1" && canBl && tb.Rows[cudindex]["dwlx"].ToString().IndexOf("4") >= 0)//药房单位的药品
            {
                string sql = "select BZSL,c.DWMC from   YP_YPGGD  a left join YF_KCMX b  on a.GGID=b.GGID left join YP_YPDW c on a.YPDW=c.ID where b.CJID= " + tb.Rows[cudindex]["hoitem_id"].ToString() + " and b.DEPTID=" + tb.Rows[cudindex]["执行科室"].ToString();
                DataTable mytb = FrmMdiMain.Database.GetDataTable(sql);
                if (mytb.Rows.Count > 0)
                {
                    tb.Rows[cudindex]["dwlx"] = tb.Rows[cudindex]["dwlx"].ToString().Replace("4", "3");
                    tb.Rows[cudindex]["总单位"] = mytb.Rows[0]["DWMC"].ToString();
                    int zl = 0;
                    if (Math.Floor(decimal.Parse(tb.Rows[cudindex]["总量"].ToString()) / Convert.ToInt32(mytb.Rows[0]["BZSL"].ToString())) == decimal.Parse(tb.Rows[cudindex]["总量"].ToString()) / Convert.ToInt32(mytb.Rows[0]["BZSL"].ToString()))
                        zl = (int)(decimal.Parse(tb.Rows[cudindex]["总量"].ToString()) / Convert.ToInt32(mytb.Rows[0]["BZSL"].ToString()));
                    else
                        zl = (int)(decimal.Parse(tb.Rows[cudindex]["总量"].ToString()) / Convert.ToInt32(mytb.Rows[0]["BZSL"].ToString())) + 1;
                    tb.Rows[cudindex]["总量"] = zl;
                }
            }
            bYkDw = true;
        }
        /// <summary>
        /// 合理用药右击菜单
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void HlyySssh(object sender, EventArgs e)
        {
            ////add by zouchihua 2012-02-06
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            DataGridEx mydgv;
            if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                mydgv = this.dataGrid_LongOrder;
            else
                mydgv = this.dataGrid_TempOrder;
            //string hlyytype = GetIniString("hlyy", "name", System.Windows.Forms.Application.StartupPath + "\\Hlyy.ini");
            //美康合理用好接口
            DateTime severtime = DateManager.ServerDateTimeByDBType(InstanceForm._database);//取数据库时间;
            DataTable tb = (DataTable)mydgv.DataSource;
            if (tb == null || tb.Rows.Count == 0) return;
            int crow = mydgv.CurrentCell.RowNumber;
            int li_warn = 0; //返回的最大警示值
            if (strHlyyType == "美康")
            {
                if (tb.Rows[crow]["xmly"].ToString() == "1")
                {
                    string ss = tb.Rows[crow]["hoitem_id"].ToString() + "," + tb.Rows[crow]["医嘱内容"].ToString() + "," + tb.Rows[crow]["单位"].ToString() + "," + tb.Rows[crow]["用法"].ToString();
                    药物临床信息参考ToolStripMenuItem.Enabled = (hl.GetCszt(101, ss) == 1);

                    药品说明书ToolStripMenuItem.Enabled = hl.GetCszt(102, ss) == 1;
                    中国药典ToolStripMenuItem.Enabled = hl.GetCszt(107, ss) == 1;
                    病人用药教育ToolStripMenuItem.Enabled = hl.GetCszt(103, ss) == 1;
                    药物检验值ToolStripMenuItem.Enabled = hl.GetCszt(104, ss) == 1;
                    临床检验信息参考ToolStripMenuItem.Enabled = hl.GetCszt(220, ss) == 1;
                    医药信息中心ToolStripMenuItem.Enabled = hl.GetCszt(106, ss) == 1;
                    药品配对信息ToolStripMenuItem.Enabled = hl.GetCszt(13, ss) == 1;
                    给药途径配对信息ToolStripMenuItem.Enabled = hl.GetCszt(14, ss) == 1;
                    医院药品信息ToolStripMenuItem.Enabled = hl.GetCszt(105, ss) == 1;
                    用药研究ToolStripMenuItem.Enabled = hl.GetCszt(12, ss) == 1;
                    系统设置ToolStripMenuItem.Enabled = hl.GetCszt(11, ss) == 1;

                    药物药物相互作用ToolStripMenuItem.Enabled = hl.GetCszt(201, ss) == 1;
                    药物食物相互作用ToolStripMenuItem.Enabled = hl.GetCszt(202, ss) == 1;
                    国内注射剂体外配伍ToolStripMenuItem.Enabled = hl.GetCszt(203, ss) == 1;
                    国外注射剂体外配伍ToolStripMenuItem.Enabled = hl.GetCszt(204, ss) == 1;
                    禁忌症ToolStripMenuItem.Enabled = hl.GetCszt(205, ss) == 1;
                    副作用ToolStripMenuItem.Enabled = hl.GetCszt(206, ss) == 1;
                    老年人用药ToolStripMenuItem.Enabled = hl.GetCszt(207, ss) == 1;
                    儿童用药ToolStripMenuItem.Enabled = hl.GetCszt(208, ss) == 1;
                    妊娠期用药ToolStripMenuItem.Enabled = hl.GetCszt(209, ss) == 1;
                    哺乳期用药ToolStripMenuItem.Enabled = hl.GetCszt(210, ss) == 1;

                    //  li_warn = hl.recipe_check(3, mydgv, severtime); //调用用户自定义自动审查函数 3 手动审查
                    //如果审查出黑灯，则提示用户是保继续保存、执行医嘱
                }
                else
                {
                    药物临床信息参考ToolStripMenuItem.Enabled = false;

                    药品说明书ToolStripMenuItem.Enabled = false;
                    中国药典ToolStripMenuItem.Enabled = false;
                    //病人用药教育ToolStripMenuItem.Enabled = false;
                    药物检验值ToolStripMenuItem.Enabled = false;
                    临床检验信息参考ToolStripMenuItem.Enabled = false;
                    医药信息中心ToolStripMenuItem.Enabled = false;
                    药品配对信息ToolStripMenuItem.Enabled = false;
                    给药途径配对信息ToolStripMenuItem.Enabled = false;
                    医院药品信息ToolStripMenuItem.Enabled = false;
                    用药研究ToolStripMenuItem.Enabled = false;
                    //系统设置ToolStripMenuItem.Enabled = false;

                    药物药物相互作用ToolStripMenuItem.Enabled = false;
                    药物食物相互作用ToolStripMenuItem.Enabled = false;
                    国内注射剂体外配伍ToolStripMenuItem.Enabled = false;
                    国外注射剂体外配伍ToolStripMenuItem.Enabled = false;
                    禁忌症ToolStripMenuItem.Enabled = false;
                    副作用ToolStripMenuItem.Enabled = false;
                    老年人用药ToolStripMenuItem.Enabled = false;
                    儿童用药ToolStripMenuItem.Enabled = false;
                    妊娠期用药ToolStripMenuItem.Enabled = false;
                    哺乳期用药ToolStripMenuItem.Enabled = false;
                }
                contextMenuStrip2.Show(Cursor.Position.X, Cursor.Position.Y - contextMenuStrip2.Height / 2);
            }
            mydgv.Refresh();


        }
        /// <summary>
        /// 复制一条医嘱到临时医嘱 add by zouchihua 2011-11-01
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void OnCopyLine(object sender, EventArgs e)
        {
            //DataTable temp = (DataTable)this.dataGrid_LongOrder.DataSource;
            //int curindex = this.dataGrid_LongOrder.CurrentCell.RowNumber;
            //order_arr.Add(temp.Rows[curindex]);

            //tc.SelectedIndex = 1;
            //btn_NewGroup();
            //DataTable mytb = (DataTable)this.dataGrid_TempOrder.DataSource;
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                CopyOrder(dataGrid_LongOrder, 0, 1, 0, -1);
            else
                CopyOrder(dataGrid_TempOrder, 1, 1, 0, -1);
            // //得到当前编辑网格的位置
            //int  nrow = dataGrid_TempOrder.CurrentCell.RowNumber;
            // //ncol = dataGrid_TempOrder.CurrentCell.ColumnNumber;
            // // //库存的判断，仅对药品 Add by Tany 2007-08-30

            // if ((Convert.ToString(temp.Rows[curindex]["类型"]) == "1-西药"
            //     || Convert.ToString(temp.Rows[curindex]["类型"]) == "2-中成药"
            //     || Convert.ToString(temp.Rows[curindex]["类型"]) == "3-中草药")
            //     && Convert.ToInt32(temp.Rows[curindex]["xmly"]) == 1
            //     && Convert.ToInt32(temp.Rows[curindex]["执行科室"]) > 0)
            // {
            //     DataTable medTb = myQuery.GetYPInfo(Convert.ToInt32(temp.Rows[curindex]["hoitem_id"]), Convert.ToDouble(temp.Rows[curindex]["剂量"]), Convert.ToInt32(temp.Rows[curindex]["dwlx"]), Convert.ToInt32(temp.Rows[curindex]["执行科室"]));
            //     decimal _ypkc = Convert.ToDecimal(medTb.Rows[0]["ylkc"]);//Modify by tany 2011-03-28 直接使用药品信息里面的用量库存 myQuery.GetYPNum(Convert.ToInt32(myTb.Rows[nrow]["hoitem_id"]), Convert.ToInt32(myTb.Rows[nrow]["执行科室"]));
            //     if (Convert.ToDecimal(medTb.Rows[0]["yl"]) > _ypkc)
            //     {
            //         MessageBox.Show("该种药品当前库存为： " + _ypkc + " ，医嘱每次需要 " + medTb.Rows[0]["yl"].ToString().Trim() + medTb.Rows[0]["unit"].ToString().Trim() + " 不能满足当前数量，请与相关药房联系！");
            //         DeleteOrder(dataGrid_TempOrder, 0);
            //         return;
            //     }
            // }

        }
        /// <summary>
        /// 复制医嘱到非本类型医嘱
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void OnCopyLine_Other(object sender, EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                CopyOrder(dataGrid_LongOrder, 0, 1, 1, -1);
            else
                CopyOrder(dataGrid_TempOrder, 1, 1, 1, -1);
        }
        private void OnCopyGroup_Other(object sender, EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                CopyOrder(dataGrid_LongOrder, 0, 0, 1, -1);
            else
                CopyOrder(dataGrid_TempOrder, 1, 0, 1, -1);
        }
        private void OnCopyGroup(object sender, EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                CopyOrder(dataGrid_LongOrder, 0, 0, 0, -1);
            else
                CopyOrder(dataGrid_TempOrder, 1, 0, 0, -1);
        }
        /// <summary>
        /// 复制医嘱 
        /// </summary>
        /// <param name="myDataGrid1"></param>
        /// <param name="tab"></param>
        /// <param name="Type">0=一组，1=行</param>
        /// <param name="isother">0=不是，1代表复制到另外类型医嘱</param>
        private void CopyOrder(DataGridEx myDataGrid1, int tab, int Type, int isother, int _nrow)
        {
            //add by zouchihua 2013-5-21控制是否可以录入医嘱
            Yxlyz();
            this.statusBar1.Text = hint[2].Trim();
            int i, NullRowCount = 0;
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            DataTable myTb = new DataTable();

            myTb = (DataTable)myDataGrid1.DataSource;


            //首先得到基本的网格信息			

            int nrow = myDataGrid1.CurrentCell.RowNumber;
            if (_nrow >= 0)
            {
                nrow = _nrow;
            }
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;

            if (myTb.Rows[nrow]["NTYPE"].ToString() == "6" || myTb.Rows[nrow]["NTYPE"].ToString() == "0" || myTb.Rows[nrow]["NTYPE"].ToString() == "7" || myTb.Rows[nrow]["NTYPE"].ToString() == "5")
            {
                MessageBox.Show("出院，转科，手术医嘱和说明医嘱,医技医嘱不能复制！！");
                return;
            }


            int cqyz = 0;//是否为长期医嘱

            if (myTb.Rows[nrow]["status_flag"].ToString() == "1" || myTb.Rows[nrow]["status_flag"].ToString() == "2" || myTb.Rows[nrow]["status_flag"].ToString() == "3" || myTb.Rows[nrow]["status_flag"].ToString() == "4" || myTb.Rows[nrow]["status_flag"].ToString() == "5")
            {
                //取得需要召回的医嘱
                int groupId = Int32.Parse(myTb.Rows[nrow]["嘱号"].ToString());
                DataTable myRecallTb = myQuery.GetOrdersRecall(tab, this.BinID, groupId, new Guid(myTb.Rows[nrow]["id"].ToString()), Type);
                //
                if (isother == 0)
                    myTb = (DataTable)myDataGrid1.DataSource;
                else
                {
                    if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                        myTb = (DataTable)this.dataGrid_TempOrder.DataSource;
                    else
                        myTb = (DataTable)this.dataGrid_LongOrder.DataSource;
                }
                //定位行于最后一组医嘱以下的第二行
                int tbCount = myTb.Rows.Count - 1;
                for (i = myTb.Rows.Count - 1; i >= 0; i--)
                {
                    if (myTb.Rows[i]["医嘱内容"].ToString() == "")
                    {
                        //继续
                        NullRowCount++;
                    }
                    else
                    {
                        //跳出
                        break;
                    }
                }
                for (i = NullRowCount; i >= 1; i--) myTb.Rows.RemoveAt(tbCount--);

                for (i = 0; i <= myRecallTb.Rows.Count - 1; i++)
                {
                    string strMsg = "";
                    bool bValideMed = ValideMedOrder(myRecallTb.Rows[i]["xmly"].ToString(), myRecallTb.Rows[i]["HOITEM_ID"].ToString(), myRecallTb.Rows[i]["医嘱内容"].ToString(), out strMsg);//myRecallTb.Rows[i]["HOITEM_ID"].ToString()//myRecallTb.Rows[i]["xmly"].ToString()

                    if (!bValideMed)
                    {
                        return;
                    }

                    DataRow myRow = myTb.NewRow();

                    #region//武汉中心医院(Modify by jchl)
                    if (this.fylb != "" && this.fylb != "自费")
                    {
                        if (!myTb.Columns.Contains("zfbl"))
                        {
                            myTb.Columns.Add("zfbl", typeof(System.Decimal));
                        }
                        int type = 0;
                        if (this.fylb.Contains("公费"))
                            type = 1;
                        else
                            type = 2;
                        decimal zfbl = 1;
                        if (!myRecallTb.Rows[i]["NTYPE"].ToString().Equals("7"))
                        {

                            try
                            {
                                //2,001064725,1276,2,特殊视力检查(点视力表）,
                                if (!myQuery.GetGfxx(type, this.patientInfo1.lbID.Text.Trim(), myRecallTb.Rows[i]["HOITEM_ID"].ToString(),
                                     myRecallTb.Rows[i]["xmly"].ToString(), myRecallTb.Rows[i]["医嘱内容"].ToString(), this.fylb, ref zfbl))
                                {
                                    //this.GrdSel.Visible = false;
                                    //myTb.Rows[nrow]["医嘱内容"] = "";
                                    ////txtCol.TextBox.Text = "";
                                    //myDataGrid1.Focus();
                                    //myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                    return;
                                }
                                else
                                {
                                    myRow["zfbl"] = zfbl;
                                }
                            }
                            catch (Exception ex)//Modify By Tany 2015-03-18 加上捕获错误并返回，不继续操作
                            {
                                MessageBox.Show(ex.Message);
                                return;
                            }
                        }
                        else
                        {
                            myRow["zfbl"] = 1;
                        }
                    }
                    #endregion

                    if (i == 0)
                    {
                        if (Blbj == 1)
                            myRow["开始时间"] = blsj;
                        else
                            myRow["开始时间"] = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                        myRow["用法"] = myRecallTb.Rows[i]["用法"];

                        //Modify by jchl (长期复制到频率)
                        //if (!(isother == 1 && (tc.SelectedTab.Title.ToString() == "长期医嘱")))//长期复制到临时 不需要频率
                        //    myRow["频率"] = myRecallTb.Rows[i]["频率"];

                        myRow["剂数"] = myRecallTb.Rows[i]["付数"];
                        myRow["首日执行次数"] = myRecallTb.Rows[i]["首日执行次数"];
                        //						myRow["嘱号"]=0;
                    }

                    myRow["类型"] = myRecallTb.Rows[i]["类型"];
                    myRow["医嘱内容"] = myRecallTb.Rows[i]["医嘱内容"].ToString().Replace("「交病人」", "");
                    myRow["剂量"] = myRecallTb.Rows[i]["剂量"];
                    myRow["单位"] = myRecallTb.Rows[i]["单位"];
                    myRow["dwlx"] = myRecallTb.Rows[i]["dwlx"];
                    myRow["规格"] = myRecallTb.Rows[i]["规格"];
                    myRow["剂数"] = myRecallTb.Rows[i]["付数"];
                    myRow["xmly"] = myRecallTb.Rows[i]["xmly"];
                    if (isother == 0 && tc.SelectedTab.Title.ToString() == "临时医嘱")
                    { //add by zouchihua 2012-6-21 增加总量
                        myRow["总量"] = myRecallTb.Rows[i]["总量"];
                        myRow["总单位"] = myRecallTb.Rows[i]["总单位"];
                        myRow["天数"] = myRecallTb.Rows[i]["天数"];
                        myRow["jldwlx"] = myRecallTb.Rows[i]["jldwlx"];
                        //myRow["jldwlx"] = myRecallTb.Rows[i]["jldwlx"];
                    }
                    if (isother == 0 && tc.SelectedTab.Title.ToString() == "长期医嘱")
                        cqyz = 1;
                    if (isother == 1 && tc.SelectedTab.Title.ToString() == "长期医嘱")//长期医嘱复制到临时医嘱
                    {

                        // 
                        myRow["jldwlx"] = myRecallTb.Rows[i]["dwlx"];
                        // myRow["总单位"] = myRecallTb.Rows[i]["单位"];
                        // myRow["总量"] = myRecallTb.Rows[i]["剂量"];
                    }
                    if (isother == 1 && tc.SelectedTab.Title.ToString() == "临时医嘱")//临时医嘱复制到长期医嘱
                    {
                        cqyz = 1;
                        if (myRecallTb.Rows[i]["jldwlx"].ToString().Trim() != "")
                            myRow["dwlx"] = myRecallTb.Rows[i]["jldwlx"];
                        else
                            myRow["dwlx"] = myRecallTb.Rows[i]["dwlx"];
                    }
                    if (cqyz == 1 && myRecallTb.Rows[i]["xmly"].ToString().Trim() == "2")
                    {
                        if (cfg6082.Config.Trim() == "1" && myQuery.IsExsitsorderid(myTb, myRecallTb.Rows[i]["HOitem_ID"].ToString(), DateManager.ServerDateTimeByDBType(InstanceForm._database), this.BinID.ToString(), this.BabyID.ToString()))
                            if (MessageBox.Show("已经开了相同的【" + myRecallTb.Rows[i]["医嘱内容"] + "】！是否继续开此医嘱？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                            {
                                continue;
                            }
                    }
                    try
                    {
                        //提示是否收取煎药费 Add by zouchihua 2012-10-22
                        if (i == 0 && myRecallTb.Rows[i]["NTYPE"].ToString().Trim() == "3")//Modify by zouchihua 2012-2-21  myTb.Rows[nrow]["NTYPE"].ToString().Trim() == "3")
                        {
                            #region"Modify by :Jchl 如果7014参数为空则默认不收取煎药费"

                            if (!string.IsNullOrEmpty(cfg7014.Config.Trim()))
                            {
                                //该中草药处方是否需要（代煎）?如需要（代煎）,将默认用法为【水煎服】！
                                if (MessageBox.Show("该中草药处方是否需要（代煎）？\r\r如需要（代煎）,默认用法为【水煎服】！", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) == DialogResult.Yes)
                                {
                                    myRow["用法"] = "水煎服";
                                    myRow["dwlx"] = "9" + myRow["dwlx"];
                                    //保存收取煎药费的日志信息 add by zouchihua 2012-12-28
                                    myQuery.SaveLog(DeptID, YS_ID, "收取煎药费", this.BinID.ToString() + "的医嘱【" + myRow["医嘱内容"] + "】收取煎药费", 0, 41);
                                }
                            }
                            #endregion

                        }
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message);
                    }
                    myRow["status_flag"] = 0;
                    myRow["执行科室"] = myRecallTb.Rows[i]["执行科室"];
                    myRow["ID"] = Guid.Empty;
                    myRow["ps_flag"] = -1;
                    myRow["ps_orderid"] = Guid.Empty;

                    if (myQuery.GetyzTypeCode(myRecallTb.Rows[i]["类型"].ToString()) == "1" || myQuery.GetyzTypeCode(myRecallTb.Rows[i]["类型"].ToString()) == "2" || myQuery.GetyzTypeCode(myRecallTb.Rows[i]["类型"].ToString()) == "3")
                    {
                        #region//Add by zouchihua 是否启用要比控制 2013-5-2
                        string ts = GetYPkz(FrmMdiMain.CurrentDept.DeptId, 1);
                        if (ts.Trim() != "")
                        {
                            MessageBox.Show(ts, "温馨提示");
                            return;
                        }
                        //add by zouchihua 2013-7-18 药品科室限制
                        DataTable tbksxz = FrmMdiMain.Database.GetDataTable("select * from jc_ypksxz  where  delete_bit=0 and dept_id=" + InstanceForm._currentDept.DeptId + " and cjid=" + myRecallTb.Rows[i]["HOITEM_ID"].ToString() + "");
                        if (tbksxz.Rows.Count > 0)
                        {
                            string Jbkz = "对不起，药品【" + myRecallTb.Rows[i]["医嘱内容"].ToString() + "】在本科室受限制，请联系管理员";
                            FrmMessageBox.Show(Jbkz + "\n", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            return;
                        }
                        #endregion
                        //add by zouchihua 2012-5-25  中草药权限控制
                        if (cfg6046.Config.Trim() == "1" && myQuery.GetyzTypeCode(myRecallTb.Rows[i]["类型"].ToString()) == "3" && doctor.ZY_Right == false)
                        {
                            FrmMessageBox.Show("【" + myRecallTb.Rows[i]["医嘱内容"].ToString().Trim() + "】，此药品为中药，受级别限制，不允许你开此药品！\n", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            //Jbkz = "【" + myRecallTb.Rows[i]["医嘱内容"].ToString().Trim() + "】，此药品为中药，受级别限制，不允许你开此药品！\n";
                            //continue;
                            return;
                        }
                        //add by zouchihua 2012-01-13 模板中加级别控制
                        #region 判断本人是否可以开该药品医嘱（药品分级控制,临时医嘱不受限制）
                        if (!mz && !_hs && !hs && !_tszl)//&& ((isother==0 &&tc.SelectedTab.Title.Trim() == "长期医嘱") || (isother==1&&tc.SelectedTab.Title.Trim() == "临时医嘱")))//非手术麻醉站和护士站
                        {
                            DataTable _dt = InstanceForm._database.GetDataTable("select * from vi_yp_ypcd where cjid = " + myRecallTb.Rows[i]["HOitem_ID"] + " and (mzyp != 0 or djyp != 0 or JSYP != 0)");
                            DataTable _dt1 = InstanceForm._database.GetDataTable("select * from JC_ROLE_DOCTOR a left join JC_DOCTOR_TYPE b on a.YS_TYPEID=b.TYPE_ID where employee_id = '" + YS_ID + "'");

                            if (_dt.Rows.Count != 0 && _dt1.Rows.Count != 0)
                            {
                                if (doctor.MZ_Right != true || doctor.DM_Right != true)
                                {
                                    if (doctor.MZ_Right == false && Convert.ToInt32(_dt.Rows[0]["mzyp"]) != Convert.ToInt32(_dt1.Rows[0]["mz_right"]))
                                    {
                                        FrmMessageBox.Show("此药品为麻醉药品，受级别限制，不允许你开此药品！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                        //Jbkz = "【" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + "】，此药品为麻醉药品，受级别限制，不允许你开此药品！\n";
                                        return;
                                    }
                                    if (doctor.DM_Right == false && Convert.ToInt32(_dt.Rows[0]["djyp"]) != Convert.ToInt32(_dt1.Rows[0]["dm_right"]))
                                    {
                                        FrmMessageBox.Show("此药品为毒剧药品，受级别限制，不允许你开此药品！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                        //Jbkz = "【" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + "】，此药品为毒剧药品，受级别限制，不允许你开此药品！\n";
                                        return;
                                    }
                                }


                            }
                            _dt = InstanceForm._database.GetDataTable("select * from vi_yp_ypcd where cjid = " + myRecallTb.Rows[i]["HOitem_ID"] + " ");
                            if (_dt.Rows.Count != 0 && _dt1.Rows.Count != 0)
                            {
                                //wait_jchl
                                //Modify by Zouchihua 增加药品分级控制的参数
                                if (new SystemCfg(19004).Config == "1" && (cfg6053.Config.Trim() == "1" || ((isother == 0 && tc.SelectedTab.Title.Trim() == "长期医嘱") || (isother == 1 && tc.SelectedTab.Title.Trim() == "临时医嘱"))))
                                {
                                    //Modify by zouchihua doctor.TypeID 改为zcjb 2012-10-10
                                    long TypeID = long.Parse(_dt1.Rows[0]["YS_TYPEID"].ToString());
                                    if (TypeID > Convert.ToInt64(_dt.Rows[0]["CFJB"]))//(pageType == 0 && doctor.TypeID > Convert.ToInt64(_dt.Rows[0]["CFJB"]))
                                    {
                                        //Modify by jchl
                                        //FrmMessageBox.Show("此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                        //// Jbkz = "【" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + "】，此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！\n";
                                        //// to do relse
                                        //return;
                                        if (!IsCanMadeHighTypeHosItem())
                                            return;
                                    }
                                }
                            }
                            //add by yaokx 2014-05-13
                            if ((new SystemCfg(6093, InstanceForm._database)).Config == "1" && _dt.Rows.Count > 0)
                            {
                                if (Convert.ToBoolean(_dt.Rows[0]["mzyp"].ToString()) == true ||
                                    Convert.ToBoolean(_dt.Rows[0]["djyp"].ToString()) == true ||
                                    Convert.ToBoolean(_dt.Rows[0]["JSYP"].ToString()) == true)
                                {
                                    FrmMessageBox.Show("毒麻精神类药品必须凭当日处方取药，过期处方无效且不能取药！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                }
                            }
                        }

                        #endregion

                        myRow["HOitem_ID"] = myRecallTb.Rows[i]["HOitem_ID"];

                        #region 设置执行科室
                        DataView dv = new DataView();
                        dv = SelectDataView;
                        dv.RowFilter = "xmly=1 and order_id=" + myRow["HOitem_ID"].ToString();

                        if (myRow["HOitem_ID"].ToString().Trim() != "" && myRow["HOitem_ID"].ToString().Trim() != "-1")
                        {
                            if (dv.Count > 0)
                            {
                                if (myRow["执行科室"].ToString() == "-1")
                                {
                                    if (MessageBox.Show("“" + dv[0]["医嘱内容"].ToString().Trim() + "”是否作为自备药？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
                                    {
                                        myRow["医嘱内容"] = dv[0]["医嘱内容"];
                                        //modify by zouchihua  先找到复制医嘱相同的医嘱
                                        DataRow[] rowexedept = SelectDataView.Table.Select("xmly=1 and order_id=" + myRow["HOitem_ID"].ToString() + " and default_dept=" + myRow["执行科室"].ToString());
                                        if (rowexedept.Length > 0)
                                            myRow["执行科室"] = rowexedept[0]["default_dept"];
                                        else
                                            myRow["执行科室"] = dv[0]["default_dept"];
                                    }
                                }
                                else
                                {
                                    //modify by zouchihua  先找到复制医嘱相同的医嘱
                                    DataRow[] rowexedept = SelectDataView.Table.Select("xmly=1 and order_id=" + myRow["HOitem_ID"].ToString() + " and default_dept=" + myRow["执行科室"].ToString());
                                    if (rowexedept.Length > 0)
                                        myRow["执行科室"] = rowexedept[0]["default_dept"];
                                    else
                                        myRow["执行科室"] = dv[0]["default_dept"];
                                }
                            }
                            else
                            {
                                if (myRow["执行科室"].ToString() != "-1")
                                {
                                    MessageBox.Show("请重新输入“" + myRow["医嘱内容"].ToString().Trim() + "”，因为该型号药品被药房停用。", "警告", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                    return;
                                }
                            }
                        }


                        dv = null;
                        #endregion
                    }
                    else
                    {
                        myRow["HOitem_ID"] = myRecallTb.Rows[i]["HOitem_ID"];
                        //设置项目执行科室 Modify by zouchihua 2012-08-04
                        DataView dv = new DataView();
                        dv = SelectDataView;
                        dv.RowFilter = "xmly=2 and order_id=" + myRow["HOitem_ID"].ToString();
                        if (dv.Count > 0)
                        {
                            myRow["医嘱内容"] = dv[0]["医嘱内容"];
                            //modify by zouchihua  先找到复制医嘱相同的医嘱
                            DataRow[] rowexedept = SelectDataView.Table.Select("xmly=2 and order_id=" + myRow["HOitem_ID"].ToString() + " and default_dept=" + myRow["执行科室"].ToString());
                            if (rowexedept.Length > 0)
                                myRow["执行科室"] = rowexedept[0]["default_dept"];
                            else
                                myRow["执行科室"] = dv[0]["default_dept"];
                            //myRow["执行科室"] = dv[0]["default_dept"];
                        }
                    }

                    myTb.Rows.Add(myRow);
                }
                if (isother == 0)
                {
                    myTb.Rows.Add(myTb.NewRow());
                    myDataGrid1.DataSource = myTb.Copy();
                    //为防止失去焦点
                    DataGridCell myCell = new DataGridCell(nrow, ncol);
                    myDataGrid1.CurrentCell = myCell;
                    myDataGrid1.CurrentRowIndex = myTb.Rows.Count;
                }
                else
                {
                    //myTb.Rows.Add(myTb.NewRow());
                    //myDataGrid1.DataSource = myTb.Copy();
                    if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                    {
                        this.dataGrid_TempOrder.DataSource = null;
                        this.dataGrid_TempOrder.DataSource = myTb.Copy();
                        dataGrid_TempOrder.CurrentRowIndex = myTb.Rows.Count;
                    }
                    else
                    {
                        this.dataGrid_LongOrder.DataSource = null;
                        this.dataGrid_LongOrder.DataSource = myTb.Copy();
                        dataGrid_LongOrder.CurrentRowIndex = myTb.Rows.Count;
                    }

                    //为防止失去焦点
                    //DataGridCell myCell = new DataGridCell(nrow, ncol);
                    //myDataGrid1.CurrentCell = myCell;
                    // myDataGrid1.CurrentRowIndex = myTb.Rows.Count;
                }
            }
        }

        #region 复制医嘱 //Add by zouchihua 2011-11-02
        private void loadModel_ex(DataGridEx myDataGrid1)
        {
            bool JBR = false;//是否交病人
            bool KCF = false;//是否在长嘱上开草药处方
            string strQY = "";//缺药内容
            string strTY = "";//停药内容
            bool TY = false;//是否被停药
            int i, NullRowCount = 0;
            //首先得到基本的网格信息			
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            //得到选择的模板的基本信息
            string MODEL_NAME = this.listView1.FocusedItem.Text.Trim();
            string str = this.lb_Model.Text.Trim().Substring(0, 2);//this.listView1.FocusedItem.SubItems[1].Text.Trim();
            DataTable myTb_Model = new DataTable();
            if (str == "本人") myTb_Model = myQuery.GetModel(MODEL_NAME, this.DeptID, this.YS_ID, 2);
            else if (str == "科室") myTb_Model = myQuery.GetModel(MODEL_NAME, this.DeptID, this.YS_ID, 1);
            else myTb_Model = myQuery.GetModel(MODEL_NAME, this.DeptID, this.YS_ID, 0);

            //如果在长期医嘱上开中草药处方，给予提示
            if (myTb_Model.Rows[0]["ntype"].ToString() == "3" && myDataGrid1 == this.dataGrid_LongOrder && KCF == false)
            {
                if (MessageBox.Show("你确定要在长期医嘱上开中草药处方吗?", "警告", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning) == DialogResult.Cancel) return;
                KCF = true;
            }

            //定位行于最后一组医嘱以下的第二行
            int tbCount = myTb.Rows.Count - 1;
            for (i = myTb.Rows.Count - 1; i >= 0; i--)
            {
                if (myTb.Rows[i]["医嘱内容"].ToString() == "")
                {
                    //继续
                    NullRowCount++;
                }
                else
                {
                    //跳出
                    break;
                }
            }
            for (i = NullRowCount; i > 0; i--) myTb.Rows.RemoveAt(tbCount--);
            //modify by zouchihua  补录模板时，时间改为补录时间；
            DateTime dTime;
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //if (new SystemCfg(6028).Config=) 
            //add by zouchihua  控制医嘱补录 2011-11-23

            string Config = new SystemCfg(6028).Config;
            Config = string.IsNullOrEmpty(Config) ? "0" : Config;
            switch (new SystemCfg(6028).Config)
            {
                case "0"://不允许补录
                    dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                    break;
                case "1":
                    {
                        if (this.Blbj == 1 && tc.SelectedTab.Title.Trim() == "长期医嘱")//只有长期医嘱补录模板
                            dTime = this.DtpbeginDate.Value;
                        else
                            dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                    }
                    break;
                case "2":
                    {
                        if (this.Blbj == 1 && tc.SelectedTab.Title.Trim() == "临时医嘱")//只有临时医嘱补录模板
                            dTime = this.DtpbeginDate.Value;
                        else
                            dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                    }
                    break;
                case "3":
                    if (this.Blbj == 1 && (tc.SelectedTab.Title.Trim() == "长期医嘱" || tc.SelectedTab.Title.Trim() == "临时医嘱"))
                        dTime = this.DtpbeginDate.Value;
                    else
                        dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                    break;
                default:
                    dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                    break;
            }


            //if (this.Blbj == 1 && tc.SelectedTab.Title.Trim() == "临时医嘱")//只有临时医嘱补录模板
            //    dTime = this.DtpbeginDate.Value;
            //else
            //    dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);

            string sSql = "select a.dept_id warddept,b.dept_id " +
                         "from JC_ward a " +
                         " left join " +
                         " JC_wardrdept b on a.ward_id=b.ward_id and b.dept_id=" + this.DeptID +
                         " order by b.dept_id ";

            DataTable temptb = (str == "本人" || str == "全院") ? InstanceForm._database.GetDataTable(sSql) : null;

            sSql = "select a.DEPT_ID from JC_EMP_DEPT_ROLE a inner join JC_wardrdept b on a.dept_id=b.dept_id where a.employee_id=" + this.YS_ID;

            DataTable temptb2 = (str == "本人" || str == "全院") ? InstanceForm._database.GetDataTable(sSql) : null;
            int Olddwlx = 0;
            for (i = 0; i <= myTb_Model.Rows.Count - 1; i++)
            {
                DataRow myRow = myTb.NewRow();
                #region 判断执行科室是否正确
                if (str == "本人" || str == "全院")
                {
                    //药品
                    if (myTb_Model.Rows[i]["nType"].ToString().Trim() == "1" || myTb_Model.Rows[i]["nType"].ToString().Trim() == "2" || myTb_Model.Rows[i]["nType"].ToString().Trim() == "3")
                    {
                        try
                        {
                            for (int j = 0; j < temptb.Rows.Count; j++)
                            {
                                if (myTb_Model.Rows[i]["执行科室"].ToString() == temptb.Rows[j]["warddept"].ToString())
                                {
                                    for (int k = 0; k < this.SelectDataView.Table.Rows.Count; k++)
                                    {
                                        if (myTb_Model.Rows[i]["hoitem_id"].ToString() == this.SelectDataView.Table.Rows[k]["hoitem_id"].ToString()
                                            && myTb_Model.Rows[i]["xmly"].ToString() == this.SelectDataView.Table.Rows[k]["xmly"].ToString())
                                        {
                                            myTb_Model.Rows[i]["执行科室"] = this.SelectDataView.Table.Rows[k]["default_dept"];
                                            break;
                                        }
                                    }
                                    break;
                                }
                            }
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(ex.Message + ex.StackTrace.ToString());
                        }
                    }
                    //说明类
                    else if (myTb_Model.Rows[i]["nType"].ToString().Trim() == "7")
                    {
                        myTb_Model.Rows[i]["执行科室"] = this.Dept_Br;
                    }
                    //治疗、医技、手术类
                    else
                    {
                        for (int j = 0; j < temptb2.Rows.Count; j++)
                        {

                            if (myTb_Model.Rows[i]["执行科室"].ToString() == temptb2.Rows[j]["DEPT_ID"].ToString() && !this.mz)
                            {
                                myTb_Model.Rows[i]["执行科室"] = this.Dept_Br;
                                break;
                            }
                        }
                    }
                }
                #endregion
                if (myTb_Model.Rows[i]["开始时间"].ToString() != "")
                {
                    if (myTb_Model.Rows[i]["ntype"].ToString() == "3" && KCF == false)
                    {
                        if (MessageBox.Show("该模板是中草药处方，是否需要（代煎）？\r\r如需要（代煎）,默认用法为【水煎服】！", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) == DialogResult.Yes)
                        {
                            myRow["用法"] = "水煎服";
                            myRow["dwlx"] = 9;
                            Olddwlx = 9;
                            //保存收取煎药费的日志信息 add by zouchihua 2012-12-28
                            myQuery.SaveLog(DeptID, YS_ID, "收取煎药费", this.BinID.ToString() + "的医嘱【" + myRow["医嘱内容"] + "】收取煎药费", 0, 41);
                        }
                        else
                        {
                            JBR = true;
                            //Modiby by zouchihua 2011-09-22 增加交病人显示判断
                            string IsJbr = "0";
                            try
                            {
                                IsJbr = new SystemCfg(19001).Config;
                            }
                            catch (Exception ex)
                            {
                                MessageBox.Show(ex.Message);
                            }
                            if (IsJbr == "0")
                            {
                                myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim();// +"「交病人」"; Modify By tany 2011-06-29 不要默认交病人
                                myRow["dwlx"] = 1;
                                Olddwlx = 1;
                            }
                            else
                            {
                                myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + "「交病人」"; //Modify By tany 2011-06-29 不要默认交病人
                                myRow["dwlx"] = 1;
                                Olddwlx = 1;
                            }


                        }
                    }
                    if (KCF == true)
                    {
                        myRow["dwlx"] = 9;//在长嘱上开中草药处方要收煎药费，不交病人
                        Olddwlx = 9;
                    }
                    myRow["开始时间"] = dTime;
                    myRow["用法"] = myTb_Model.Rows[i]["用法"];
                    myRow["频率"] = myTb_Model.Rows[i]["频率"];
                    myRow["剂数"] = myTb_Model.Rows[i]["付数"];
                    myRow["首日执行次数"] = myTb_Model.Rows[i]["首日执行次数"];
                    if (myRow["医嘱内容"].ToString().Trim() == "") myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim();
                }
                else
                {
                    myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim();
                    //add by zouchihua 2012-5-7
                    if (myTb_Model.Rows[i]["ntype"].ToString() == "3")
                    {
                        myRow["dwlx"] = Olddwlx;
                    }
                }

                if (JBR == true)
                {
                    myRow["mngtype"] = 5;
                }
                myRow["类型"] = myTb_Model.Rows[i]["类型"];
                myRow["剂量"] = myTb_Model.Rows[i]["剂量"];
                myRow["单位"] = myTb_Model.Rows[i]["单位"];
                #region modify by zouchihua  补录模板处理
                if (this.Blbj == 1 && tc.SelectedTab.Title.Trim() == "临时医嘱")//只有临时医嘱补录模板
                    myRow["status_flag"] = 9;
                else
                    myRow["status_flag"] = 0;
                #endregion
                myRow["执行科室"] = myTb_Model.Rows[i]["执行科室"];
                myRow["ID"] = Guid.Empty;
                myRow["xmly"] = myTb_Model.Rows[i]["xmly"];
                myRow["ps_flag"] = -1;
                myRow["ps_orderid"] = Guid.Empty;
                myRow["规格"] = myTb_Model.Rows[i]["规格"];//Add By Tany 2011-02-28
                if (myTb_Model.Rows[i]["nType"].ToString().Trim() == "1" || myTb_Model.Rows[i]["nType"].ToString().Trim() == "2" || myTb_Model.Rows[i]["nType"].ToString().Trim() == "3")
                {
                    if (myRow["医嘱内容"].ToString().IndexOf("「交病人」") > 0 ||
                        myRow["医嘱内容"].ToString().IndexOf("「出院带药」") > 0 ||
                        myRow["医嘱内容"].ToString().IndexOf("「交医生」") > 0 ||
                        myRow["医嘱内容"].ToString().IndexOf("「交护办」") > 0)
                    {
                        myRow["mngtype"] = 5;
                        if (myRow["医嘱内容"].ToString().IndexOf("「出院带药」") > 0)
                        {
                            myRow["jz_flag"] = 1;
                        }
                    }
                    TY = true;
                    if (myRow["dwlx"].ToString() == "")
                    {
                        if (pageType == 0) myRow["dwlx"] = 1;
                        else
                            myRow["dwlx"] = myTb_Model.Rows[i]["单位类型"];
                    }
                    myRow["HOitem_ID"] = myTb_Model.Rows[i]["HOitem_ID"];

                    if (myTb_Model.Rows[i]["nType"].ToString().Trim() == "1" && myQuery.PSYP(myTb_Model.Rows[i]["hoitem_id"].ToString()) == true)
                    {
                        FrmMessageBox.Show("注 意！\n“" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + "”是皮试药品，请添加皮试！",
                                           new Font("宋体", 12f), Color.Red, "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        myRow["ps_flag"] = 3;
                        if (myRow["医嘱内容"].ToString().IndexOf("「免试」", 0) < 0)
                        {
                            myRow["医嘱内容"] += " 「免试」";
                        }
                    }
                    //判断是否缺药
                    for (int j = 0; j < this.SelectDataView.Table.Rows.Count; j++)
                    {
                        if (SelectDataView.Table.Rows[j]["order_id"].ToString().Trim() == myTb_Model.Rows[i]["hoitem_id"].ToString().Trim()
                            && SelectDataView.Table.Rows[j]["xmly"].ToString().Trim() == myTb_Model.Rows[i]["xmly"].ToString().Trim())
                        {
                            if (SelectDataView.Table.Rows[j]["缺"].ToString() == "缺" && SelectDataView.Table.Rows[j]["基数"].ToString() != "√")
                            {
                                myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + " 「自备」";
                                myRow["执行科室"] = -1;
                                strQY += "\n" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim();
                            }
                            if (pageType == 0 || (myTb_Model.Rows[i]["nType"].ToString().Trim() == "3"))//长嘱，或中草药时，判断剂量单位是否和现在维护的一样（单位类型为1的情况）
                            {
                                if (SelectDataView.Table.Rows[j]["单位"].ToString().Trim() != myTb_Model.Rows[i]["单位"].ToString().Trim())
                                {
                                    FrmMessageBox.Show("模板中“ " + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + " ”的单位“ " + myTb_Model.Rows[i]["单位"].ToString().Trim() + " ”已被药房停用，" +
                                        "\n系统将自动修正单位，请查验剂量是否正确！\n有必要重新创建模板。", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                    myRow["单位"] = SelectDataView.Table.Rows[j]["单位"].ToString().Trim();
                                }
                            }
                            TY = false;
                            break;
                        }
                    }
                    if (TY) //被停用的药品
                    {
                        myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + " 「自备」";
                        myRow["执行科室"] = -1;
                        strTY += "\n" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim();
                    }
                }
                else
                {
                    myRow["HOitem_ID"] = myTb_Model.Rows[i]["HOitem_ID"];
                }
                if (myRow["dwlx"].ToString().Trim() == "9")
                {
                    if (cfg6048.Config.Trim() == "1")//add by zouchihua 2012-5-31 开中药处方收取中药费是否关联用法 0=否 1=是
                        //add by zouchihua 2012-5-7 如果是收取煎药费默认用法为 待煎
                        myRow["用法"] = "代煎";
                }
                else
                {
                    if (cfg6048.Config.Trim() == "1")//add by zouchihua 2012-5-31 开中药处方收取中药费是否关联用法 0=否 1=是
                        myRow["用法"] = "自煎";
                    //用法自煎是否交病人 add by zouchiua 2012-5-8 
                    string IsJbr = "0";
                    try
                    {
                        IsJbr = new SystemCfg(19001).Config;
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message);
                    }
                    if (myDataGrid1 == this.dataGrid_TempOrder)
                    {
                        if (IsJbr == "0")
                        {
                            myRow["医嘱内容"] = myRow["医嘱内容"].ToString();// +" 「交病人」";Modify By Tany 2011-06-29 不要默认煎药费
                        }
                        else
                        {
                            myRow["医嘱内容"] = myRow["医嘱内容"].ToString() + " 「交病人」";//Modify By Tany 2011-06-29 不要默认煎药费
                            myRow["mngtype"] = 5;
                        }
                    }


                }
                myTb.Rows.Add(myRow);
            }
            if (strQY != "") FrmMessageBox.Show("模板中有如下药品缺少：" + strQY + "\n\n▲以上药品系统已自动默认为自备药，\n 有必要请用户重新输入。", new Font("宋体", 10.5f), Color.Blue, "缺药提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
            if (strTY != "") FrmMessageBox.Show("模板中有如下药品被药房停用：" + strTY + "\n\n▲以上药品系统已自动默认为自备药，\n 有必要请用户重新输入。", new Font("宋体", 10.5f), Color.Blue, "停药提示", MessageBoxButtons.OK, MessageBoxIcon.Information);

            myTb.Rows.Add(myTb.NewRow());
            myDataGrid1.DataSource = null;
            myDataGrid1.DataSource = myTb.Copy();
            //为防止失去焦点
            DataGridCell myCell = new DataGridCell(nrow, ncol);
            myDataGrid1.CurrentCell = myCell;
            myDataGrid1.CurrentRowIndex = myTb.Rows.Count;
        }
        #endregion
        private void OnDelLineSelected(object sender, EventArgs e)
        {
            if (tabnum == 1)//西药
                GrdDel(this.dataGrid_LongOrder, 0);
            if (tabnum == 2)//
                GrdDel(this.dataGrid_TempOrder, 0);
        }
        private void OnDelGroupSelected(object sender, EventArgs e)
        {
            //			MessageBox.Show("暂不提供。。。");return;
            if (tabnum == 1)//西药
                GrdDel(this.dataGrid_LongOrder, 1);
            if (tabnum == 2)//
                GrdDel(this.dataGrid_TempOrder, 1);
        }
        private void OnInsLineSelected(object sender, EventArgs e)
        {
            if (tabnum == 1)//西药
                GrdInsert(this.dataGrid_LongOrder);
            if (tabnum == 2)//
                GrdInsert(this.dataGrid_TempOrder);
        }
        private void OnUpdateJsSelected(object sender, EventArgs e)
        {
            //			if (tabnum==2)//
            //				UpdateJs(this.dataGrid_TempOrder);
        }
        private void OnSaveAsModelSelected(object sender, EventArgs e)
        {
            this.tabControl2.SelectedIndex = 2;
            this.txtModelName.Focus();
        }
        private void OnSaveAsFileSelected(object sender, EventArgs e)
        {
            if (tabnum == 1)//西药
                SaveAsFile(this.dataGrid_LongOrder);
            if (tabnum == 2)//
                SaveAsFile(this.dataGrid_TempOrder);
        }

        private void SaveAsFile(DataGridEx datagrd)
        {
        }
        private bool GrdDel(DataGridEx datagrd, int tab)
        {
            DeleteOrder(datagrd, tab, -1);
            return true;
        }

        private bool GrdInsert(DataGridEx datagrd)
        {
            InsertRow(datagrd, 0);
            return true;
        }

        //出院保留医嘱，不显示停医嘱时间，医嘱状态改为5
        private void OnHoldorder(object sender, EventArgs e)
        {
            if (MessageBox.Show("你确定出院时保留该医嘱不停吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
            {
                return;
            }
            try
            {
                DataTable myTb = (DataTable)dataGrid_LongOrder.DataSource;
                int nrow = dataGrid_LongOrder.CurrentCell.RowNumber;
                if (myTb.Rows.Count == 0) return;
                if (myTb.Rows[nrow]["医嘱内容"] == System.DBNull.Value || myTb.Rows[nrow]["status_flag"] == System.DBNull.Value)
                {
                    return;
                }
                if (Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString()) < 2 || myTb.Rows[nrow]["status_flag"].ToString().Trim() == "9")
                {
                    MessageBox.Show("该医嘱还没执行，不能出院保留！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }
                if (Convert.ToDateTime(Convertor.IsNull(myTb.Rows[nrow]["执行时间"], null)).Date < DateManager.ServerDateTimeByDBType(InstanceForm._database).Date)
                {
                    MessageBox.Show("该医嘱今日还没执行，不能执行出院医嘱保留！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }
                int groupID = Int32.Parse(myTb.Rows[nrow]["嘱号"].ToString());

                if (myQuery.HoldOrder(this.BinID, groupID))
                {
                    loadGrid_LongOrder();//刷新数据
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }
        #endregion

        #region  医嘱相关判断
        //返回医嘱类型
        private string GetGroupType(DataTable myTb, int nrow)
        {
            if (IsGroupFirstRow(myTb, nrow) == true) return myTb.Rows[nrow]["类型"].ToString();
            for (int i = nrow - 1; i >= 0; i--)
            {
                if (myTb.Rows[i]["类型"].ToString().Trim() != "") return myTb.Rows[i]["类型"].ToString().Trim();
                if (myTb.Rows[i]["医嘱内容"].ToString().Trim() == "") return "";
            }
            return "";
        }

        //判断是否是一组的第一列,返回列号
        private int GetGroupBeginRow(DataTable myTb, int nrow)
        {
            if (IsGroupFirstRow(myTb, nrow) == true) return nrow;
            for (int i = nrow - 1; i >= 0; i--)
            {
                if (myTb.Rows[i]["开始时间"].ToString().Trim() != "") return i;
                if (myTb.Rows[i]["医嘱内容"].ToString().Trim() == "") return -1;
            }

            return -1;
        }

        //判断是否是一组的第一列
        private bool IsGroupFirstRow(DataTable myTb, int nrow)
        {
            if (nrow == 0) return true;
            if (myTb.Rows[nrow]["开始时间"].ToString().Trim() != ""
                || myTb.Rows[nrow]["医嘱内容"].ToString().Trim() == "术后医嘱"
                || myTb.Rows[nrow]["医嘱内容"].ToString().Trim() == "产后医嘱")
            {
                return true;//上一列无内容
            }
            else
            {
                return false;
            }
        }

        //判断一组的开始行号和结束行号 Add By tany 2011-08095
        private int[] GetGroupStartEnd(DataTable myTb, int nrow)
        {
            int[] rtn = new int[2];
            int _groupstart = 0;
            int _groupend = 0;
            if (IsGroupFirstRow(myTb, nrow))
            {
                _groupstart = nrow;
            }
            else
            {
                for (int l = nrow - 1; l >= 0; l--)
                {
                    if (IsGroupFirstRow(myTb, l))
                    {
                        _groupstart = l;
                        break;
                    }
                }
            }
            for (int l = nrow; l < myTb.Rows.Count; l++)
            {
                if (!IsGroupFirstRow(myTb, l) && Convertor.IsNull(myTb.Rows[l]["HOItem_ID"], "") != "")
                {
                    continue;
                }
                else
                {
                    _groupend = l - 1;
                    break;
                }
            }
            rtn[0] = _groupstart;
            rtn[1] = _groupend;
            return rtn;
        }

        //判断是否可以输入
        private bool CanEnterData(DataTable myTb, int nrow)
        {
            if (nrow <= myTb.Rows.Count - 2)
            {

                if (nrow == 0 && myTb.Rows[nrow]["开始时间"] != System.DBNull.Value && (myTb.Rows[nrow]["status_flag"] == System.DBNull.Value || myTb.Rows[nrow]["status_flag"].ToString().Trim() == "0" || myTb.Rows[nrow]["status_flag"].ToString().Trim() == "1" || myTb.Rows[nrow]["status_flag"].ToString().Trim() == "9")) return true;
                if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim() == "" && myTb.Rows[nrow]["ID"] != System.DBNull.Value) return true;//本列无内容
                if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim() != "" && (myTb.Rows[nrow]["status_flag"] == System.DBNull.Value || myTb.Rows[nrow]["status_flag"].ToString().Trim() == "0" || myTb.Rows[nrow]["status_flag"].ToString().Trim() == "1" || myTb.Rows[nrow]["status_flag"].ToString().Trim() == "9")) return true;
                if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim() != "" && (myTb.Rows[nrow]["status_flag"].ToString().Trim() == "2" || myTb.Rows[nrow]["status_flag"].ToString().Trim() == "3" || myTb.Rows[nrow]["status_flag"].ToString().Trim() == "4" || myTb.Rows[nrow]["status_flag"].ToString().Trim() == "5")) return false;


                if (nrow > 0)
                {
                    if (myTb.Rows[nrow]["嘱号"].ToString() != myTb.Rows[nrow - 1]["嘱号"].ToString() && myTb.Rows[nrow]["开始时间"] == System.DBNull.Value) return false;
                    if (myTb.Rows[nrow - 1]["医嘱内容"].ToString().Trim() != "" && (myTb.Rows[nrow - 1]["status_flag"] == System.DBNull.Value || myTb.Rows[nrow - 1]["status_flag"].ToString().Trim() == "0" || myTb.Rows[nrow - 1]["status_flag"].ToString().Trim() == "1" || myTb.Rows[nrow - 1]["status_flag"].ToString().Trim() == "9")) return true;
                }

            }
            return false;
        }

        //判断是否是说明性医嘱
        private bool IsExplainOrder(DataTable myTb, int nrow)
        {
            if (myTb.Rows[nrow]["类型"].ToString().Trim() == "7-说明") return true;
            return false;
        }
        # endregion

        #region 修改用法（静滴、续滴互换）
        private void OnChangeUsage(object sender, EventArgs e)
        {
            checkPage();
            if (pageType == 0) ChangeUsage(this.dataGrid_LongOrder);
            else ChangeUsage(this.dataGrid_TempOrder);
        }
        private void ChangeUsage(DataGridEx mydatagrid1)
        {
            int nrow, ncol;
            //首先得到当前网格的信息
            DataTable myTb = ((DataTable)mydatagrid1.DataSource);
            nrow = mydatagrid1.CurrentCell.RowNumber;
            ncol = mydatagrid1.CurrentCell.ColumnNumber;

            if (myTb.Rows[nrow]["医嘱内容"].ToString() == "") return;

            int i = 0, BeginNow = 0;
            BeginNow = nrow;
            string str = "";
            for (i = nrow; i >= 0; i--)
            {
                if (i == 0) break;
                if (myTb.Rows[i]["开始时间"].ToString() == "") BeginNow = i - 1;
                else break;
            }
             
            if (Convert.ToInt32(myTb.Rows[BeginNow]["status_flag"].ToString()) > 2)
            {
                MessageBox.Show("已停止医嘱不能修改用法！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }

            if (myTb.Rows[BeginNow]["用法"].ToString().Trim() == "静滴") str = "续滴";
            else if (myTb.Rows[BeginNow]["用法"].ToString().Trim() == "续滴") str = "静滴";
            else return;

            myTb.Rows[BeginNow]["用法"] = str;
            if (new Guid(myTb.Rows[BeginNow]["ID"].ToString()) != Guid.Empty)//&& Convert.ToInt32(myTb.Rows[BeginNow]["status_flag"].ToString())<3)
                myQuery.ChangeUsage(this.BinID, this.BabyID, Convert.ToInt32(myTb.Rows[BeginNow]["嘱号"].ToString()), str);
        }
        #endregion

        #region 修改用法（小儿静滴、续滴互换）
        private void OnChangeXeUsage(object sender, EventArgs e)
        {
            checkPage();
            if (pageType == 0) ChangeXeUsage(this.dataGrid_LongOrder);
            else ChangeXeUsage(this.dataGrid_TempOrder);
        }
        private void ChangeXeUsage(DataGridEx mydatagrid1)
        {
            int nrow, ncol;
            //首先得到当前网格的信息
            DataTable myTb = ((DataTable)mydatagrid1.DataSource);
            nrow = mydatagrid1.CurrentCell.RowNumber;
            ncol = mydatagrid1.CurrentCell.ColumnNumber;

            if (myTb.Rows[nrow]["医嘱内容"].ToString() == "") return;

            int i = 0, BeginNow = 0;
            BeginNow = nrow;
            string str = "";
            for (i = nrow; i >= 0; i--)
            {
                if (i == 0) break;
                if (myTb.Rows[i]["开始时间"].ToString() == "") BeginNow = i - 1;
                else break;
            }
            if (Convert.ToInt32(myTb.Rows[BeginNow]["status_flag"].ToString()) > 2)
            {
                MessageBox.Show("已停止医嘱不能修改用法！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }

            if (myTb.Rows[BeginNow]["用法"].ToString().Trim() == "小儿静滴") str = "续滴";
            else if (myTb.Rows[BeginNow]["用法"].ToString().Trim() == "续滴") str = "小儿静滴";
            else return;

            myTb.Rows[BeginNow]["用法"] = str;
            if (new Guid(myTb.Rows[BeginNow]["ID"].ToString()) != Guid.Empty)//&& Convert.ToInt32(myTb.Rows[BeginNow]["status_flag"].ToString())<3)
                myQuery.ChangeUsage(this.BinID, this.BabyID, Convert.ToInt32(myTb.Rows[BeginNow]["嘱号"].ToString()), str);
        }
        #endregion

        #region 增加执行科室下拉选择框
        /// <summary>
        /// 
        /// </summary>
        /// <param name="orderStr"></param>
        /// <param name="default_dept"></param>
        /// <param name="deptname"></param>
        private void addDeptCmb(string orderStr, long default_dept, string deptname)
        {
            if (orderStr == "") return;
            //string sSql = "select b.exec_dept_id dept_id,c.name  " +
            //    "from (select * from JC_hoi_hdi where hoitem_id=" + orderStr + ") a inner join " +
            //    "      JC_hsitem_dept b on a.hditem_id=b.hsitem_id and a.tcid=b.tcid left join " +
            //    "      JC_dept_property c on b.exec_dept_id=c.dept_id";
            string sSql = "select a.exec_dept dept_id,c.name  " +
                "from (select * from JC_hoi_dept where order_id=" + orderStr + ") a left join " +
                "      JC_dept_property c on a.exec_dept=c.dept_id";
            DataTable tempTb = InstanceForm._database.GetDataTable(sSql);

            if (tempTb.Rows.Count == 0) return;

            DataTable myTb = tempTb.Clone();
            myTb.Rows.Add(new object[2] { default_dept, deptname });
            for (int i = 0; i < tempTb.Rows.Count; i++)
            {
                myTb.Rows.Add(tempTb.Rows[i].ItemArray);
            }

            ComboBox cmb = new ComboBox();
            cmb.Items.Clear();

            cmb.DisplayMember = "name";
            cmb.ValueMember = "DEPT_ID";
            cmb.DataSource = myTb;

            cmb.DropDownStyle = ComboBoxStyle.DropDownList;
            cmb.Dock = DockStyle.Fill;
            cmb.Cursor = Cursors.Hand;
            cmb.DropDownWidth = 90;
            cmb.BackColor = Color.LightCyan;
            cmb.SelectionChangeCommitted += new EventHandler(cmbDept_SelectionChangeCommitted);
            DataGridTextBoxColumn dgtb = (DataGridTextBoxColumn)this.GrdSel.TableStyles[0].GridColumnStyles["deptname"];
            dgtb.TextBox.Controls.Clear();//必须先清空
            dgtb.TextBox.Controls.Add(cmb);
        }
        private void cmbDept_SelectionChangeCommitted(object sender, EventArgs e)
        {
            try
            {
                //			DataTable myTb=(DataTable)this.GrdSel.DataSource;
                DataView mySelView = (DataView)this.GrdSel.DataSource; ;
                int nrow = this.GrdSel.CurrentCell.RowNumber;
                int ncol = this.GrdSel.CurrentCell.ColumnNumber;
                this.GrdSel[this.GrdSel.CurrentCell] = ((ComboBox)sender).Text.ToString().Trim();
                string dept = ((ComboBox)sender).SelectedValue.ToString();
                if (mySelView.Table.Columns.Contains("default_dept"))
                {
                    mySelView[nrow]["default_dept"] = Convert.ToInt32(dept);
                }
                if (mySelView.Table.Columns.Contains("exec_dept"))
                {
                    mySelView[nrow]["exec_dept"] = Convert.ToInt32(dept);
                }
                //Modify By Tany 2010-12-07 修改显示价格
                if (mySelView.Table.Columns.Contains("单价") || mySelView.Table.Columns.Contains("包装单价"))
                {
                    DataTable ddtt = myQuery.getJG(0, mySelView[nrow]["ORDER_ID"].ToString(), 0, 0, 1, (new Department(Convert.ToInt32(dept), InstanceForm._database)).Jgbm);//modify By tany 2010-12-07
                    if (ddtt.Rows.Count == 0) return;
                    decimal dd = 0;//单价
                    if (ddtt.Rows[0][0].ToString() == "") dd = 0;
                    else dd = Convert.ToDecimal(ddtt.Rows[0][0].ToString());

                    if (mySelView.Table.Columns.Contains("单价"))
                    {
                        mySelView[nrow]["单价"] = dd;
                    }

                    if (mySelView.Table.Columns.Contains("包装单价"))
                    {
                        mySelView[nrow]["包装单价"] = dd;
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }
        #endregion

        #region 显示选项卡

        #region 医嘱内容选项卡
        private void ShowOrderSelCard(string SelData, int SelType, string Type, DataGridEx mydatagrid1)
        {
            int nrow, ncol;
            //首先得到当前网格的信息
            DataTable myTb = ((DataTable)mydatagrid1.DataSource);
            nrow = mydatagrid1.CurrentCell.RowNumber;
            ncol = mydatagrid1.CurrentCell.ColumnNumber;

            string sType = (Type);
            string strFlag = "拼音码";
            if (inFlag == 1) strFlag = "五笔码";
            if (SelType == 2) strFlag = "数字码";//Modify By Tany 2015-01-28 如果传入的是2，强制使用数字码
            if (SelData != "")
            {
                if (SelData.Substring(SelData.Length - 1, 1) != " ") SelData = "%" + SelData + "%";
            }

            //查询得到数据 用DATAVIEW 来筛选
            DataView dv = new DataView();
            dv = SelectDataView;
            //dv.Table=SelectDataView.Table.Copy();
            //屏蔽用以增加速度 Modify By Tany 2007-09-17
            //for (int i = 0; i < dv.Table.Rows.Count; i++)
            //{
            //    if (dv.Table.Rows[i]["kcl"] != null && dv.Table.Rows[i]["kcl"].ToString().Trim() != "")
            //    {
            //        dv.Table.Rows[i]["kcl"] = removeZero(Convert.ToDecimal(dv.Table.Rows[i]["kcl"]));
            //    }
            //}
            string GType = GetGroupType(myTb, nrow);

            if (IsGroupFirstRow(myTb, nrow) == true)
            {
                int ii = 0;
                if (myTb.Rows[nrow]["嘱号"] != System.DBNull.Value)
                {
                    ii = myQuery.GetMaxZYnum(this.BinID, this.BabyID, this.DeptID, Convert.ToInt32(myTb.Rows[nrow]["嘱号"].ToString()));
                }

                if (myTb.Rows[nrow]["ID"].ToString().Trim() != ""
                    && new Guid(myTb.Rows[nrow]["ID"].ToString()) != Guid.Empty
                    && ii > 0
                    && (GType == "1-西药" || GType == "2-中成药" || GType == "3-中草药"))
                {
                    dv.RowFilter = strFlag + " like '" + SelData + "' and type in(1,2,3)";
                }
                else
                {
                    bool _isyp = false;//是否药品 Modify By Tany 2010-01-19
                    bool _iscy = false;//是否草药 Modify By Tany 2010-01-19
                    if (GType == "1-西药" || GType == "2-中成药")
                    {
                        _isyp = true;
                        _iscy = false;
                    }
                    else if (GType == "3-中草药")
                    {
                        _isyp = true;
                        _iscy = true;
                    }
                    else
                    {
                        _isyp = false;
                        _iscy = false;
                    }
                    string sWhere = "";
                    if (_isyp)
                    {
                        if (_iscy)
                        {
                            sWhere = " and type=3 ";
                        }
                        else
                        {
                            sWhere = " and type in (1,2) ";
                        }
                    }
                    else if (GType != "")
                    {
                        sWhere = " and type>3 ";
                    }
                    dv.RowFilter = "(" + strFlag + " like '" + SelData + "'" + sWhere + " )" + (!_ishlqt ? " and type<>8 and type<>9 " : "");// Modify By Tany 2009-09-07
                }
            }
            else
            {
                if (GType == "1-西药" || GType == "2-中成药")
                {
                    dv.RowFilter = strFlag + " like '" + SelData + "' and type in(1,2)";//" + sType + "'";
                }
                else if (GType == "3-中草药")
                {
                    dv.RowFilter = strFlag + " like '" + SelData + "' and type=3";//" + sType + "'";
                }
                else
                {
                    dv.RowFilter = "type>3 and (" + strFlag + " like '" + SelData + "')" + (!_ishlqt ? " and type<>8 and type<>9 " : ""); //Modify By Tany 2009-09-07 前台不控制，后台控制
                }
            }
            //Modify By Tany 2010-01-23 长期医嘱也能开医技项目
            //if (pageType == 0)
            //{
            //    dv.RowFilter += " and type<>5";       //长期医嘱与临时医嘱所开内容的不同
            //}
            //选择药房 Modify By zouchihua 2012-9-28 0表示所有药房
            if (cmbYF.SelectedValue != null && Convert.ToInt32(cmbYF.SelectedValue) != 0)
            {
                dv.RowFilter += " and ((type in (1,2,3) and default_dept=" + cmbYF.SelectedValue.ToString() + ") or type not in (1,2,3))";
            }
            //			dv.Sort="type,"+strFlag;
            //			dv.Sort="拼音码";
            dv.Table.TableName = "mTb";
            GrdSel.TableStyles[0].MappingName = "mTb";
            //GrdSel.TableStyles[0].ReadOnly = true;
            GrdSel.TableStyles[0].AllowSorting = false;
            GrdSel.TableStyles[0].AlternatingBackColor = Color.AliceBlue;
            GrdSel.BackgroundColor = Color.AliceBlue;
            GrdSel.TableStyles[0].GridColumnStyles.Clear();

            #region 屏蔽
            //DataGridTextBoxColumn dgtc;
            //for (int a = 0; a < 18; a++)
            //{
            //    dgtc = new DataGridTextBoxColumn();
            //    GrdSel.TableStyles[0].GridColumnStyles.Add(dgtc);
            //}
            //for (int i = 0; i < this.GrdSel.TableStyles[0].GridColumnStyles.Count; i++)
            //{
            //    this.GrdSel.TableStyles[0].GridColumnStyles[i].NullText = "";
            //}

            //GrdSel.TableStyles[0].GridColumnStyles[1].MappingName = "医嘱内容";
            //GrdSel.TableStyles[0].GridColumnStyles[1].HeaderText = "医嘱内容";
            //GrdSel.TableStyles[0].GridColumnStyles[1].Width = 120;

            //GrdSel.TableStyles[0].GridColumnStyles[2].MappingName = "内容";
            //GrdSel.TableStyles[0].GridColumnStyles[2].HeaderText = "[自费比]说明";
            //GrdSel.TableStyles[0].GridColumnStyles[2].Width = 100;

            //GrdSel.TableStyles[0].GridColumnStyles[3].MappingName = "规格";
            //GrdSel.TableStyles[0].GridColumnStyles[3].HeaderText = "规格";
            //GrdSel.TableStyles[0].GridColumnStyles[3].Width = 70;

            //GrdSel.TableStyles[0].GridColumnStyles[4].MappingName = "dwhl";
            //GrdSel.TableStyles[0].GridColumnStyles[4].HeaderText = "单位含量";
            //GrdSel.TableStyles[0].GridColumnStyles[4].Width = 55;

            //GrdSel.TableStyles[0].GridColumnStyles[5].MappingName = "单位";
            //GrdSel.TableStyles[0].GridColumnStyles[5].HeaderText = "含量单位";
            //GrdSel.TableStyles[0].GridColumnStyles[5].Width = 55;

            //GrdSel.TableStyles[0].GridColumnStyles[6].MappingName = "单价";
            //GrdSel.TableStyles[0].GridColumnStyles[6].HeaderText = "包装单价";
            //GrdSel.TableStyles[0].GridColumnStyles[6].Width = 55;

            //GrdSel.TableStyles[0].GridColumnStyles[7].MappingName = "s_dw";
            //GrdSel.TableStyles[0].GridColumnStyles[7].HeaderText = "包装单位";
            //GrdSel.TableStyles[0].GridColumnStyles[7].Width = 55;

            ////新增库存和库存单位 Add by Tany 2008-08-30
            //GrdSel.TableStyles[0].GridColumnStyles[8].MappingName = "kcl";
            //GrdSel.TableStyles[0].GridColumnStyles[8].HeaderText = "库存量";
            //GrdSel.TableStyles[0].GridColumnStyles[8].Width = 45;

            //GrdSel.TableStyles[0].GridColumnStyles[9].MappingName = "kcdw";
            //GrdSel.TableStyles[0].GridColumnStyles[9].HeaderText = "库存单位";
            //GrdSel.TableStyles[0].GridColumnStyles[9].Width = 55;

            //if (inFlag != 1)
            //{
            //    GrdSel.TableStyles[0].GridColumnStyles[10].MappingName = "拼音码";
            //    GrdSel.TableStyles[0].GridColumnStyles[10].HeaderText = "拼音码";
            //    GrdSel.TableStyles[0].GridColumnStyles[10].Width = 55;
            //}
            ////			else GrdSel.TableStyles[0].GridColumnStyles[7].Width=0;

            //if (inFlag == 1)
            //{
            //    GrdSel.TableStyles[0].GridColumnStyles[10].MappingName = "五笔码";
            //    GrdSel.TableStyles[0].GridColumnStyles[10].HeaderText = "五笔码";
            //    GrdSel.TableStyles[0].GridColumnStyles[10].Width = 55;
            //}
            ////			else GrdSel.TableStyles[0].GridColumnStyles[8].Width=0;

            //GrdSel.TableStyles[0].GridColumnStyles[12].MappingName = "缺";
            //GrdSel.TableStyles[0].GridColumnStyles[12].HeaderText = "缺";
            //GrdSel.TableStyles[0].GridColumnStyles[12].Width = 15;
            //GrdSel.TableStyles[0].GridColumnStyles[12].Alignment = System.Windows.Forms.HorizontalAlignment.Center;

            //GrdSel.TableStyles[0].GridColumnStyles[13].MappingName = "基数";
            //GrdSel.TableStyles[0].GridColumnStyles[13].HeaderText = "基";
            //GrdSel.TableStyles[0].GridColumnStyles[13].Width = 0;
            ////			GrdSel.TableStyles[0].GridColumnStyles[12].Alignment=System.Windows.Forms.HorizontalAlignment.Center;

            ////GrdSel.TableStyles[0].GridColumnStyles[12].HeaderText = "默认用法";
            ////GrdSel.TableStyles[0].GridColumnStyles[12].Width = 55;

            //GrdSel.TableStyles[0].GridColumnStyles[14].MappingName = "iscomplex";
            //GrdSel.TableStyles[0].GridColumnStyles[14].HeaderText = "套餐";
            //GrdSel.TableStyles[0].GridColumnStyles[14].Width = 30;

            //GrdSel.TableStyles[0].GridColumnStyles[15].MappingName = "deptName";
            //GrdSel.TableStyles[0].GridColumnStyles[15].HeaderText = "执行科室";
            //GrdSel.TableStyles[0].GridColumnStyles[15].Width = 70;

            //GrdSel.TableStyles[0].GridColumnStyles[16].MappingName = "default_dept";
            //GrdSel.TableStyles[0].GridColumnStyles[16].HeaderText = " ";
            //GrdSel.TableStyles[0].GridColumnStyles[16].Width = 0;

            //GrdSel.TableStyles[0].GridColumnStyles[17].MappingName = "type";
            //GrdSel.TableStyles[0].GridColumnStyles[17].HeaderText = "医嘱类型";
            //GrdSel.TableStyles[0].GridColumnStyles[17].Width = 55;

            //GrdSel.TableStyles[0].GridColumnStyles[0].MappingName = "序号";
            //GrdSel.TableStyles[0].GridColumnStyles[0].HeaderText = "";
            //GrdSel.TableStyles[0].GridColumnStyles[0].Width = 15;
            #endregion
            //拼音码 13 以前以1开始
            //by add yaokx 2014-03-03开发药品“基数”属性
            //Modify by jchl(开医嘱选项卡将说明字段靠后、规格字段拉宽一点)
            //string[] GrdMappingName = new string[] { "序号", "医嘱内容", "剂型", "自付比", "内容", "商品名", "规格", "dwhl", "单位", "单价", "s_dw", "kcl", "kcdw", "拼音", "缺", "基数", "deptName", "iscomplex", "default_dept", "type", "项目代码", "拼音码" };
            //string[] GrdHeaderText = new string[] { "", "医嘱内容", "剂型", "自付比", "说明", "商品名", "规格", "单位含量", "含量单位", "包装单价", "包装单位", "库存量", "库存单位", "拼音", "", "基", "执行科室", "套餐", "默认科室", "医嘱类型", "项目代码", "拼音码" };
            string[] GrdMappingName = new string[] { "序号", "医嘱内容", "剂型", "自付比", "商品名", "规格", "dwhl", "单位", "单价", "s_dw", "kcl", "kcdw", "拼音", "缺", "基数", "deptName", "iscomplex", "default_dept", "type", "数字码", "项目代码", "拼音码", "内容", "用法" };
            string[] GrdHeaderText = new string[] { "", "医嘱内容", "剂型", "自付比", "商品名", "规格", "单位含量", "含量单位", "包装单价", "包装单位", "库存量", "库存单位", "拼音", "", "基", "执行科室", "套餐", "默认科室", "医嘱类型", "数字码", "项目代码", "拼音码", "说明", "用法" };
            int[] GrdWidth ={ 2, 20, 5, 5, 0, 30, 6, 6, 6, 6, 6, 6, 0, 2, 2, 10, 4, 0, 8, 8, 0, 6, 10, 8 };
            //jchl
            //GrdWidth = new int[] { 2, 20, 5, 5, 10, 10, 23, 6, 6, 6, 6, 6, 6, 0, 2, 2, 10, 4, 0, 8, 8, 6 }; 
            int[] Alignment ={ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0 };
            int[] Readonly ={ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            if (cfg6095.Config == "1")
            {
                //jchl
                //GrdWidth = new int[] { 2, 20, 5, 5, 10, 10, 23, 6, 6, 6, 6, 6, 6, 0, 2, 2, 10, 4, 0, 8, 8, 6 }; 
                GrdWidth = new int[] { 2, 20, 5, 5, 0, 30, 6, 6, 6, 6, 6, 6, 0, 2, 2, 10, 4, 0, 8, 8, 0, 6, 10, 8 };
            }
            if (inFlag == 1)
            {
                //GrdMappingName = new string[] { "序号", "医嘱内容", "剂型", "自付比", "内容", "商品名", "规格", "dwhl", "单位", "单价", "s_dw", "kcl", "kcdw", "五笔", "缺", "基数", "iscomplex", "deptName", "default_dept", "type", "项目代码", "五笔码" };
                //GrdHeaderText = new string[] { "", "医嘱内容", "剂型", "自付比", "说明", "商品名", "规格", "单位含量", "含量单位", "包装单价", "包装单位", "库存量", "库存单位", "五笔", "", "基", "套餐", "执行科室", "默认科室", "医嘱类型", "项目代码", "五笔码" };
                GrdMappingName = new string[] { "序号", "医嘱内容", "剂型", "自付比", "商品名", "规格", "dwhl", "单位", "单价", "s_dw", "kcl", "kcdw", "五笔", "缺", "基数", "iscomplex", "deptName", "default_dept", "type", "数字码", "项目代码", "五笔码", "内容", "用法" };
                GrdHeaderText = new string[] { "", "医嘱内容", "剂型", "自付比", "商品名", "规格", "单位含量", "含量单位", "包装单价", "包装单位", "库存量", "库存单位", "五笔", "", "基", "套餐", "执行科室", "默认科室", "医嘱类型", "数字码", "项目代码", "五笔码", "说明", "用法" };
            }
            //Add By Tany 2015-02-02 数字码提示框
            if (SelType == 2)
            {
                GrdMappingName = new string[] { "序号", "医嘱内容", "剂型", "自付比", "商品名", "规格", "dwhl", "单位", "单价", "s_dw", "kcl", "kcdw", "拼音", "缺", "基数", "deptName", "iscomplex", "default_dept", "type", "数字码", "项目代码", "拼音码", "内容", "用法" };
                GrdHeaderText = new string[] { "", "医嘱内容", "剂型", "自付比", "商品名", "规格", "单位含量", "含量单位", "包装单价", "包装单位", "库存量", "库存单位", "拼音", "", "基", "执行科室", "套餐", "默认科室", "医嘱类型", "数字码", "项目代码", "拼音码", "说明", "用法" };
            }

            //Add By Tany 2010-02-22
            DataGridEnableTextBoxColumn aColumnTextColumn;
            for (int i = 0; i <= GrdMappingName.Length - 1; i++)
            {
                if (GrdMappingName[i].ToString().Trim() == "选")
                {
                    DataGridEnableBoolColumn myBoolCol = new DataGridEnableBoolColumn(i);
                    myBoolCol.CheckCellEnabled += new DataGridEnableBoolColumn.EnableCellEventHandler(SetGrdSelEnableValues);
                    GrdSel.TableStyles[0].GridColumnStyles.Add(myBoolCol);
                }
                else
                {
                    aColumnTextColumn = new DataGridEnableTextBoxColumn(i);

                    aColumnTextColumn.CheckCellEnabled += new DataGridEnableTextBoxColumn.EnableCellEventHandler(SetGrdSelEnableValues);
                    GrdSel.TableStyles[0].GridColumnStyles.Add(aColumnTextColumn);

                }
                //add by yao kx 2014-04-29 医嘱录入时，医嘱选项卡单击行赋值
                (GrdSel.TableStyles[0].GridColumnStyles[i] as DataGridEnableTextBoxColumn).TextBox.Click += new EventHandler(GrdSelTextBox_Click);
            }

            myFunc.InitGridEx(GrdMappingName, GrdHeaderText, GrdWidth, Alignment, Readonly, GrdSel);

            //数据绑定
            GrdSel.DataSource = null;
            GrdSel.DataSource = dv;
            GrdSel.CaptionText = "医嘱内容";
            GrdSel.CurrentRowIndex = 0;

            int count = (dv.Count > 9) ? 9 : dv.Count;
            for (int j = 0; j < count; j++)
            {
                dv[j]["序号"] = j + 1;
            }

            //设置网格的位置
            GrdSel.BringToFront();
            GrdSel.Left = this.panel3.Left + 190 - 16;//mydatagrid1.GetCellBounds(nrow,ncol).Width ;Modify By Tany 写死宽度
            GrdSel.Top = this.panel3.Top + mydatagrid1.GetCellBounds(nrow, ncol).Top + mydatagrid1.Top + mydatagrid1.GetCellBounds(nrow, ncol).Height * 5 / 2;
            //显示宽度
            GrdSel.Width = 10 * GridWidth + 80 + 22;

            this.GrdSel.Visible = true;
            //pointZero = new Point(GrdSel.GetCellBounds(0, 0).X + 4, GrdSel.GetCellBounds(0, 0).Y + 4);
        }

        #endregion

        /// <summary>
        /// 用颜色来显示缺药信息
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void SetGrdSelEnableValues(object sender, DataGridEnableEventArgs e)
        {
            //用色彩区分医嘱的状态 
            int Col = 13;	 //缺药列 以前13

            //缺药
            if (this.GrdSel[e.Row, Col].ToString().Trim() == "缺")
            {
                e.ForeColor = Color.Red;
                e.BackColor = Color.LightGray;
            }
            //add by zouchihua 2013-11-19 如果是套餐 
            if (this.GrdSel[e.Row, 16].ToString().Trim() == "1")
            {
                e.ForeColor = Color.Blue;
                e.BackColor = Color.LightGray;
            }
            //add by jchl 2015-06-10 如果是基药 
            if (this.GrdSel[e.Row, 14].ToString().Trim() == "基")
            {
                e.ForeColor = Color.Red;
                e.BackColor = Color.LightGray;
            }

            //add by zouchihua 2013-11-19 如果说明医嘱
            if (this.GrdSel[e.Row, 18].ToString().Trim() == "7")
            {
                e.ForeColor = Color.BlueViolet;
                e.BackColor = Color.LightYellow;
            }
            if (this.GrdSel.CurrentRowIndex == e.Row)
            {
                e.ForeColor = Color.White;
                e.BackColor = Color.DarkBlue;
            }

        }

        #region 频率选项卡
        private void ShowFreqSelCard(string SelData, DataGridEx mydatagrid1)
        {
            int nrow, ncol;
            //首先得到当前网格的信息
            DataTable myTb = ((DataTable)this.dataGrid_LongOrder.DataSource);
            nrow = mydatagrid1.CurrentCell.RowNumber;
            ncol = mydatagrid1.CurrentCell.ColumnNumber;
            //查询数据
            //			string sSql="select name as 频率名称 ,execnum as 日执行次数,cycleday as 周期,exectime as 时间点 from Base_Frequency where upper(py_code) like '" + SelData.Trim().ToUpper() + "%' order by py_code";
            //			DataTable myTempTb=DatabaseAccess.GetDataTable(DatabaseType.IbmDb2ZY,sSql);

            //Modify By Tany 2014-09-10 频率根据长、临嘱来过滤
            string str = "";
            if (mydatagrid1 == dataGrid_LongOrder)
            {
                str = " and type in (0,1) ";
            }
            else
            {
                str = " and type in (0,2) ";
            }
            string sSql = "select name as 频率名称 ,execnum as 日执行次数,cycleday as 周期,exectime as 时间点,upper(py_code) 代码,type from JC_Frequency ";
            if (frequencyTb == null)
            {
                frequencyTb = InstanceForm._database.GetDataTable(sSql);
            }
            DataRow[] temp = frequencyTb.Select("代码 like '" + SelData.Trim().ToUpper() + "%' " + str, "代码");
            DataTable myTempTb = frequencyTb.Clone();
            foreach (DataRow dr in temp)
            {
                myTempTb.Rows.Add(dr.ItemArray);
            }

            //数据绑定
            this.GrdSel.Refresh();
            this.GrdSel.DataSource = myTempTb;
            this.GrdSel.CaptionText = "频率";
            this.GrdSel.TableStyles[0].MappingName = "频率";

            //设置网格的位置
            GrdSel.BringToFront();
            this.GrdSel.Left = this.panel3.Left + mydatagrid1.GetCellBounds(nrow, ncol).Left;
            this.GrdSel.Top = this.panel3.Top + mydatagrid1.GetCellBounds(nrow, ncol).Top + mydatagrid1.Top + mydatagrid1.GetCellBounds(nrow, ncol).Height * 5 / 2;
            this.GrdSel.Width = 4 * GridWidth;
            this.GrdSel.Visible = true;
            //pointZero = new Point(GrdSel.GetCellBounds(0, 0).X + 4, GrdSel.GetCellBounds(0, 0).Y + 4);
        }
        #endregion
        void TextBox_Click(object sender, EventArgs e)
        {
            MouseClick_ZDY(this.dataGrid_LongOrder);
        }

        void TextBoxT_Click(object sender, EventArgs e)
        {
            MouseClick_ZDY(this.dataGrid_TempOrder);
        }
        private void MouseClick_ZDY(DataGridEx dataGridEx1)
        {
            if (cfg6088.Config.Trim() == "1")
            {
                #region 开始时间录入
                int nrow, ncol;
                string ColumnName = "";
                //变量付初始值
                DataTable myTb = (DataTable)dataGridEx1.DataSource;

                nrow = dataGridEx1.CurrentCell.RowNumber;
                ncol = dataGridEx1.CurrentCell.ColumnNumber;
                ColumnName = dataGridEx1.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();
                string status_flag = myTb.Rows[nrow]["status_flag"].ToString();

                //Modify by jchl(双击空的录入时间，则默认未新开，否则未修改)
                if (string.IsNullOrEmpty(status_flag.Trim()))
                {
                    btnNewGroup_Click(null, null);
                    return;
                }

                if (Convert.ToInt32(status_flag == "" ? "0" : status_flag) > 0) //发送之前可以修改时间
                {
                    if (pageType == 0)
                        this.datetimeLR.Focus();
                    else if (pageType == 1)
                        this.datetimeLRT.Focus();
                }
                else
                {
                    if (ColumnName == "开始时间")
                    {
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)dataGridEx1.TableStyles[0].GridColumnStyles[ncol];
                        dataGridEx1.EndEdit(txtCol, nrow, false);
                        ShowDateTime(dataGridEx1);
                    }
                }
                #endregion
            }
        }
        #region 开始时间
        private void ShowDateTime(DataGridEx mydatagrid1)
        {
            int nrow, ncol;
            //首先得到当前网格的信息
            nrow = mydatagrid1.CurrentCell.RowNumber;
            ncol = mydatagrid1.CurrentCell.ColumnNumber;

            if (pageType == 0)
            {
                this.datetimeLR.Left = mydatagrid1.GetCellBounds(nrow, ncol).Left;
                this.datetimeLR.Top = mydatagrid1.GetCellBounds(nrow, ncol).Top;
                this.datetimeLR.Width = mydatagrid1.GetCellBounds(nrow, ncol).Width;
                this.datetimeLR.Visible = true;
                this.datetimeLR.Focus();
            }
            else if (pageType == 1)
            {
                this.datetimeLRT.Left = mydatagrid1.GetCellBounds(nrow, ncol).Left;
                this.datetimeLRT.Top = mydatagrid1.GetCellBounds(nrow, ncol).Top;
                this.datetimeLRT.Width = mydatagrid1.GetCellBounds(nrow, ncol).Width;
                this.datetimeLRT.Visible = true;
                this.datetimeLRT.Focus();
            }
        }

        private void datetimeLR_LostFocus(object sender, EventArgs e)
        {

            int nrow, ncol;
            //首先得到当前网格的信息
            DataTable myTb = ((DataTable)this.dataGrid_LongOrder.DataSource);
            nrow = dataGrid_LongOrder.CurrentCell.RowNumber;
            ncol = dataGrid_LongOrder.CurrentCell.ColumnNumber;
            if (Convert.ToDateTime(patientInfo1.lbIn_Date.Text) < this.datetimeLR.Value)
            {
                //Modify by jchl
                //myTb.Rows[nrow]["开始时间"] = this.datetimeLR.Value.ToString();
                //this.datetimeLR.Visible = false;
                //startDTlist.Add(this.datetimeLR.Value.ToString());

                if (DoChangeKssj(datetimeLR, dataGrid_LongOrder))
                {
                    myTb.Rows[nrow]["开始时间"] = this.datetimeLR.Value.ToString();
                    this.datetimeLR.Visible = false;
                    startDTlist.Add(this.datetimeLR.Value.ToString());
                }
                else
                {
                    myTb.Rows[nrow]["开始时间"] = this.datetimeLR.Value.ToString();
                    this.datetimeLR.Visible = false;
                    //MouseClick_ZDY(dataGrid_LongOrder);
                }
            }
            else
            {
                MessageBox.Show("开始时间不能小于入院时间");
                this.datetimeLR.Value = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                this.datetimeLR.Visible = false;
                SendKeys.Send("{tab}"); //跳格	
            }
        }
        private void datetimeLRT_LostFocus(object sender, EventArgs e)
        {

            int nrow, ncol;
            //首先得到当前网格的信息
            DataTable myTb = ((DataTable)this.dataGrid_TempOrder.DataSource);
            nrow = dataGrid_TempOrder.CurrentCell.RowNumber;
            ncol = dataGrid_TempOrder.CurrentCell.ColumnNumber;
            if (Convert.ToDateTime(patientInfo1.lbIn_Date.Text) < this.datetimeLRT.Value)
            {
                //Modify by jchl
                //myTb.Rows[nrow]["开始时间"] = this.datetimeLRT.Value.ToString();
                //this.datetimeLRT.Visible = false;
                //startDTlistT.Add(this.datetimeLRT.Value.ToString());

                if (DoChangeKssj(datetimeLRT, dataGrid_TempOrder))
                {
                    myTb.Rows[nrow]["开始时间"] = this.datetimeLRT.Value.ToString();
                    this.datetimeLRT.Visible = false;
                    startDTlistT.Add(this.datetimeLRT.Value.ToString());
                }
                else
                {
                    myTb.Rows[nrow]["开始时间"] = this.datetimeLRT.Value.ToString();
                    this.datetimeLRT.Visible = false;
                    //MouseClick_ZDY(dataGrid_TempOrder);
                }
            }
            else
            {
                MessageBox.Show("开始时间不能小于入院时间");
                this.datetimeLRT.Value = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                this.datetimeLRT.Visible = false;
                SendKeys.Send("{tab}"); //跳格	
            }
        }

        /// <summary>
        /// 修改 开始时间  add by jchl
        /// </summary>
        /// <param name="dtp"></param>
        private bool DoChangeKssj(DateTimePicker dtp, DataGridEx mydatagrid1)
        {
            #region"修改时间功能控制 Modify by jchl"

            DataTable myTb = ((DataTable)mydatagrid1.DataSource);
            int nrow = mydatagrid1.CurrentCell.RowNumber;
            int ncol = mydatagrid1.CurrentCell.ColumnNumber;

            DateTime now = DateManager.ServerDateTimeByDBType(InstanceForm._database);
            DateTime dtBDate = dtp.Value;

            //修改后的时间与当前服务器时间对比  超过6004参数则  提示是否继续
            if (cfg6216.Config.ToString().Trim().Equals("1"))
            {
                //如果是修改时间
                string status_flag = myTb.Rows[nrow]["status_flag"].ToString();

                //Modify by jchl(双击空的录入时间，则默认未新开，否则未修改)
                if (status_flag.Equals("0"))
                {
                    string strCfg = new SystemCfg(6004).Config.Trim();

                    if (!string.IsNullOrEmpty(strCfg))
                    {
                        int iHour = int.Parse(strCfg);

                        //判断修改日期不能小于上次转科日期 2013-8-20 改为医嘱的日期
                        string mysql = "select * from ZY_TRANSFER_DEPT a join ZY_ORDERRECORD b on a.order_id=b.order_id  where  a.FINISH_BIT=1 and a.INPATIENT_ID='" + new Guid(STAG.Substring(0, 40)) + "' and a.BABY_ID=" + Convert.ToInt64(STAG.Substring(40, 10)) + " and  cancel_bit=0 order by TRANSFER_DATE desc";
                        DataTable TransTb = FrmMdiMain.Database.GetDataTable(mysql);
                        if (TransTb != null && TransTb.Rows.Count > 0)
                        {
                            if (dtBDate <= Convert.ToDateTime(TransTb.Rows[0]["ORDER_BDATE"].ToString()))
                            {
                                //允许将补录时间提前到转科时间之前，只是做提示 Modify By Tany 2014-12-11
                                //if (MessageBox.Show("补录时间不能小于上次转科时间，确认要把录入时间修改为上次转科时间吗?", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Information) == DialogResult.Cancel)
                                //{
                                //    dtp.Value = now;
                                //    return false;
                                //}
                                //else
                                //{
                                //    dtp.Value = Convert.ToDateTime(TransTb.Rows[0]["ORDER_BDATE"].ToString());
                                //    return false;
                                //}
                                if (MessageBox.Show("补录时间小于上次转科时间【" + TransTb.Rows[0]["ORDER_BDATE"].ToString() + "】，是否确定?", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Information) == DialogResult.Cancel)
                                {
                                    dtp.Value = now;
                                    return false;
                                }
                                else
                                {
                                    dtp.Value = dtBDate;
                                    return true;
                                }
                            }
                        }

                        //修改时间不能小于入院时间
                        if (dtBDate < Convert.ToDateTime(patientInfo1.lbIn_Date.Text))
                        {

                            if (MessageBox.Show("补录时间不能小于入院时间，确认要把录入时间修改为入院时间吗?", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Information) == DialogResult.Cancel)
                            {
                                dtp.Value = now;
                                return false;
                            }
                            else
                            {
                                try
                                {
                                    DateTime dt = Convert.ToDateTime(Convert.ToDateTime(patientInfo1.lbIn_Date.Text.Trim())).AddMinutes(1);
                                    dtp.Value = dt;
                                }
                                catch
                                {
                                    dtp.Value = Convert.ToDateTime(Convert.ToDateTime(patientInfo1.lbIn_Date.Text.Trim()).ToShortDateString() + " " + DtpbeginDate.MaxDate.ToLongTimeString());
                                }
                                return true;
                            }
                        }

                        int days = (dtp.Value.Date - now.Date).Days;
                        if (days >=31)
                        {
                            MessageBox.Show("录入时间距当前时间超过一个月，不允许修改！");
                            dtp.Value = now;
                            return false;
                        }
                        if (days >= 7)
                        {
                            if (MessageBox.Show("录入时间距当前时间超过7天,确定修改?", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Information) == DialogResult.Cancel)
                            {
                                dtp.Value = now;
                                return false;
                            }
                        }



                        if (dtBDate <= now.AddHours(iHour) && dtBDate >= now.AddHours(-iHour))
                        {
                        }
                        else
                        {
                            if (MessageBox.Show("确认要把录入时间修改为 " + dtp.Value.ToString("yyyy-MM-dd HH:mm:ss") + " ?", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Information) == DialogResult.Cancel)
                            {
                                dtp.Value = now;
                                return false;
                            }

                        }
                    }
                }
            }

            #endregion
            return true;
        }

        #endregion

        #region 滴量选项卡
        private void ShowDLSelCard(string SelData, DataGridEx mydatagrid1)
        {
            int nrow, ncol;
            //首先得到当前网格的信息
            DataTable myTb = ((DataTable)mydatagrid1.DataSource);
            nrow = mydatagrid1.CurrentCell.RowNumber;
            ncol = mydatagrid1.CurrentCell.ColumnNumber;
            DataTable dtTemp = new DataTable();
            string strSql = string.Format(@"select  [NAME]  滴量名称,upper([PYM]) 代码 from [JC_YZDL] where [ISUSER]=1 and upper([PYM]) like '%" + SelData.Trim().ToUpper() + "%'");
            dtTemp = FrmMdiMain.Database.GetDataTable(strSql);

            //DataRow[] temp = null;
            //if (!string.IsNullOrEmpty(SelData))
            //{
            //    temp = dtTemp.Select("代码 like '%" + SelData.Trim().ToUpper() + "%'");
            //}
            //else
            //{
            //    temp = dtTemp.Select("1=1");
            //}
            //DataTable tab_temp = dtTemp.Clone();
            //tab_temp.Clear();
            //foreach (DataRow dr in temp)
            //{
            //    tab_temp.Rows.Add(dr.ItemArray);
            //}
            this.GrdSel.DataSource = dtTemp;
            this.GrdSel.CaptionText = "滴量";
            this.GrdSel.TableStyles[0].MappingName = "滴量";
            //设置网格的位置
            GrdSel.BringToFront();
            this.GrdSel.Left = this.panel3.Left + mydatagrid1.GetCellBounds(nrow, ncol).Left;
            this.GrdSel.Top = this.panel3.Top + mydatagrid1.GetCellBounds(nrow, ncol).Top + mydatagrid1.Top + mydatagrid1.GetCellBounds(nrow, ncol).Height * 5 / 2;
            this.GrdSel.Width = 3 * GridWidth;
            this.GrdSel.Visible = true;
        }
        #endregion

        #region  用法选项卡
        private void ShowUswaySelCard(string SelData, DataGridEx mydatagrid1)
        {
            int nrow, ncol;
            //首先得到当前网格的信息
            DataTable myTb = ((DataTable)mydatagrid1.DataSource);
            nrow = mydatagrid1.CurrentCell.RowNumber;
            ncol = mydatagrid1.CurrentCell.ColumnNumber;

            string sql_temp = "";
            bool ps = false;
            if (myTb.Rows[nrow]["类型"].ToString() == "1-西药" || myTb.Rows[nrow]["类型"].ToString() == "2-中成药")
            {
                //是否为皮试药品
                //				ps=myQuery.PSYP(myTb.Rows[nrow]["cjid"].ToString());
                ps = PSYP(Convertor.IsNull(myTb.Rows[nrow]["ps_flag"], "-1"));
            }
            //查询得到数据 
            if (usageTb == null)
            {
                usageTb = InstanceForm._database.GetDataTable("select upper(PY_CODE) AS 代码,name as 用法名称 from JC_UsageDiction ");
            }
            DataRow[] temp = null;
            if (ps)
            {
                //				sql_temp="select PY_CODE AS 代码,name as 用法名称 from Base_UsageDiction where upper(py_code) like '" + SelData.Trim().ToUpper() + "%'";
                temp = usageTb.Select("代码 like'" + SelData.Trim().ToUpper() + "%' ", "代码");
            }
            else
            {
                //				sql_temp="select PY_CODE AS 代码,name as 用法名称 from Base_UsageDiction where name<>'皮试' and upper(py_code) like '" + SelData.Trim().ToUpper() + "%'";
                temp = usageTb.Select("用法名称<>'皮试' and 代码 like'" + SelData.Trim().ToUpper() + "%' ", "代码");
            }

            //			DataTable tab_temp=DatabaseAccess.GetDataTable(DatabaseType.IbmDb2ZY,sql_temp);

            DataTable tab_temp = usageTb.Clone();
            foreach (DataRow dr in temp)
            {
                tab_temp.Rows.Add(dr.ItemArray);
            }

            this.GrdSel.DataSource = tab_temp;
            this.GrdSel.CaptionText = "用法";
            this.GrdSel.TableStyles[0].MappingName = "用法";
            //设置网格的位置
            GrdSel.BringToFront();
            this.GrdSel.Left = this.panel3.Left + mydatagrid1.GetCellBounds(nrow, ncol).Left;
            this.GrdSel.Top = this.panel3.Top + mydatagrid1.GetCellBounds(nrow, ncol).Top + mydatagrid1.Top + mydatagrid1.GetCellBounds(nrow, ncol).Height * 5 / 2;
            this.GrdSel.Width = 3 * GridWidth;
            this.GrdSel.Visible = true;
            //pointZero = new Point(GrdSel.GetCellBounds(0, 0).X + 4, GrdSel.GetCellBounds(0, 0).Y + 4);
        }

        /// <summary>
        /// 是否为皮试药品
        /// </summary>
        /// <param name="ps_flag"></param>
        /// <returns></returns>
        private bool PSYP(string ps_flag)
        {
            if (Convert.ToInt32(ps_flag) > -1) return true;
            else return false;
        }
        #endregion

        #region //选项卡画序号
        private void GrdSel_Paint(object sender, PaintEventArgs e)
        {
            //			try
            //			{
            //				int row = TopGrdSelRow();
            //				int yDelta = GrdSel.GetCellBounds(row, 0).Height + 1;
            //				int y = GrdSel.GetCellBounds(row, 0).Top + 2;
            //			
            //				CurrencyManager cm = (CurrencyManager) this.BindingContext[GrdSel.DataSource, GrdSel.DataMember];
            //
            //				while(y < GrdSel.Height - yDelta && row < cm.Count)
            //				{
            //					//get & draw the header text...
            //					string text = string.Format("【{0}】", row);
            //					e.Graphics.DrawString(text, GrdSel.Font, new SolidBrush(Color.Blue), 12, y);
            //					y += yDelta;
            //					row++;
            //				}
            //			}
            //			catch(System.Exception er)
            //			{
            //				MessageBox.Show("GrdSel_Paint()错误！\n"+er.ToString());
            //			}
        }
        //		public int TopGrdSelRow()
        //		{
        //		    DataGrid.HitTestInfo hti = GrdSel.HitTest(pointZero);
        //			return hti.Row;
        //		}
        #endregion
        #endregion

        #region 长嘱
        private void InitGrd_LongOrder()
        {
            //增加新列
            int i = 0;

            DataGridEnableTextBoxColumn aColumnTextColumn;
            MydataGirdImageColumn mycol;
            dataGrid_LongOrder.TableStyles[0].GridColumnStyles.Clear();//先清空列
            for (i = 0; i <= 20+1; i++)
            {

                //Modify by zouchihua  增加警示灯列 2011-12-24
                if (i != 5)
                {
                    aColumnTextColumn = new DataGridEnableTextBoxColumn(i);
                    aColumnTextColumn.CheckCellEnabled += new DataGridEnableTextBoxColumn.EnableCellEventHandler(SetEnableValues);

                    dataGrid_LongOrder.TableStyles[0].GridColumnStyles.Add(aColumnTextColumn);
                }
                else
                {
                    mycol = new MydataGirdImageColumn();
                    mycol.ONCurrentChange += new DelCurrentChage(mycol_ONCurrentChange);
                    //mycol.CheckCellEnabled += new DataGridEnableTextBoxColumn.EnableCellEventHandler(SetEnableValues);
                    dataGrid_LongOrder.TableStyles[0].GridColumnStyles.Add(mycol);
                }

            }

            dataGrid_LongOrder.RowHeaderWidth = 25; //use if no tablestyle
            //建立网格格式
            for (i = 0; i <= dataGrid_LongOrder.TableStyles[0].GridColumnStyles.Count - 1; i++)
            {
                dataGrid_LongOrder.TableStyles[0].GridColumnStyles[i].NullText = "";
                this.dataGrid_LongOrder.TableStyles[0].AllowSorting = false;
            }
            //add by zouchihua 增加警示灯列，用户合理用药 2011-12-23
            int sfztwide = 0;
            int jsdwide = 0;
            int dywide = 0;
            int dyggwide = 0;
            bool redonlydt = true;
            cfg6032 = new SystemCfg(6032).Config.Trim();
            cfg6036 = new SystemCfg(6036).Config.Trim();
            if (cfg6032 == "1")
                jsdwide = 0;
            //add by zouchihua  2012-2-29增加规格列的是否显示
            if (cfg6036 == "1")
            {
                dywide = 35;
                dyggwide = 60;
            }
            int ischeck = 0;
            DataTable dt_sfkg = new DataTable();
            string sql_sfkg = "select dictvalue1 from YHS_HOS_DICT where id=1";
            dt_sfkg = InstanceForm._database.GetDataTable(sql_sfkg);
            if (dt_sfkg.Rows[0]["dictvalue1"].ToString() == "1")
            {
                DataTable dt_dept = new DataTable();
                string sql_dept = "select IsCheck   from YHS_HOS_KESHI_SF where KESHI_CODE= " + InstanceForm._currentDept.DeptId.ToString();
                dt_dept = InstanceForm._database.GetDataTable(sql_dept);
                if (dt_dept.Rows.Count > 0 && dt_dept.Rows[0]["IsCheck"].ToString() == "1")
                { ischeck = 1; }
            }
            if (ischeck == 1)
            {
                sfztwide = 20;
            }
            if (cfg6088.Config.Trim() == "1")
                redonlydt = false;
            string[] GrdMapppingName = { "ID", "类", "嘱号", "开始时间", "类型", "警示灯", "审", "医嘱内容", "规格", "剂量", "单位", "用法", "频率", "首日执行次数", "末日次数", "剂数", "滴量", "执行护士", "执行时间", "停嘱时间", "下嘱医生", "停嘱医生", "执行科室", "不打印", "打印规格" };
            string[] GrdHeaderText =   { "ID*", "类*", "嘱号*", "录入时间", "类型*", "警示灯", "审", "医嘱内容", "规格", "剂量", "单位*", "用法", "频率", "首次", "末次", "剂数", "滴量", "执行人", "执行时间*", "停嘱时间*", "下嘱医生", "停嘱医生", "执行科室*", "打印", "打印规格" };
            bool[] RedOnly =           { true, true, true, redonlydt, true, true,true, false, true, false, true, false, false, false, true, true, false, true, true, true, true, true, true, false, false };
            //by add yaokx 2014-04-15浏阳妇幼用ini控制网格字段width
            if (new SystemCfg(6087).Config == "1")
            {
                #region 浏阳妇幼用ini控制网格字段width
                string ConfigFile = Constant.ApplicationDirectory + "\\LongOrderSetting.ini";
                int[] GrdWidth = new int[GrdHeaderText.Length];
                for (int ii = 0; ii < GrdHeaderText.Length; ii++)
                {
                    GrdWidth[ii] = Convert.ToInt32(TrasenClasses.GeneralClasses.ApiFunction.GetIniString("yzglgs", "" + GrdHeaderText[ii].Replace("*", "") + "", ConfigFile));
                }
                InitmyGrd(GrdMapppingName, GrdHeaderText, GrdWidth, RedOnly, this.dataGrid_LongOrder);
                #endregion
            }
            else
            {
                int[] GrdWidth = { 0, 0, 0, 105, 0, jsdwide, sfztwide, 230, 80, 35, 40, 55, 40, 30, 30, 0, 30, 45, 70, 70, 55, 55, 0, dywide, dyggwide };//Modify by zouchihua 2012-1-31
                InitmyGrd(GrdMapppingName, GrdHeaderText, GrdWidth, RedOnly, this.dataGrid_LongOrder);
            }

            //add by zouchihua 2012-1-30 增加列
            DataGridBoolColumn dbc1 = new DataGridBoolColumn();
            dbc1.MappingName = "DEL_PRINT";
            dbc1.FalseValue = "0";
            dbc1.AllowNull = false;
            dbc1.TrueValue = (short)1;
            dbc1.FalseValue = (short)0;
            dbc1.NullValue = (short)0;
            dbc1.HeaderText = "不打印";
            dbc1.Width = dywide;
            DataGridBoolColumn dbc2 = new DataGridBoolColumn();
            dbc2.MappingName = "IsprintYPGG";
            dbc2.AllowNull = false;
            dbc2.TrueValue = 1;
            dbc2.FalseValue = 0;
            dbc2.NullValue = 0;
            dbc2.HeaderText = "打印规格";
            dbc2.Width = dyggwide;
            dataGrid_LongOrder.TableStyles[0].GridColumnStyles.Add(dbc1);
            dataGrid_LongOrder.TableStyles[0].GridColumnStyles.Add(dbc2);
            if (cfg6088.Config.Trim() == "1")
            {
                (dataGrid_LongOrder.TableStyles[0].GridColumnStyles[3] as DataGridEnableTextBoxColumn).TextBox.Click += new EventHandler(TextBox_Click);
            }
            dataGrid_LongOrder.TableStyles[0].GridColumnStyles[6].ReadOnly = true;
        }

        void mycol_ONCurrentChange(int dqh)
        {

            int hx = 0;
            int jlzh = 0;//记录组号
            int flag = 0;//记录这组医嘱是否符合要求
            if (true)
            {
                try
                {
                    doctor = new Doctor(YS_ID, InstanceForm._database);
                }
                catch (Exception err)
                {
                    //MessageBox.Show(err.Message);
                    //this.Close();
                    //MessageBox.Show(err.Message);
                    doctor = new Doctor();
                    //doctor.TypeID = -1;
                }
            }
            else
            {
                doctor = new Doctor();
            }
            //doctor = new Doctor(YS_ID, InstanceForm._database);
            int zflag = 0;//组标记
            //MessageBox.Show("当前行已经改变");
            DataTable tb = (DataTable)this.dataGrid_LongOrder.DataSource;

            if (dqh >= tb.Rows.Count)
                return;
            int CurIndex = this.dataGrid_LongOrder.CurrentCell.RowNumber;
            //用于保存一组的信息
            string pc = "";//频次
            string yf = "";//用法
            string kyzsj = "";//开医嘱时间
            try
            {
                if (cfg6079.Config.Trim() == "0")
                    return;
                Crownwood.Magic.Controls.TabControl tc = null;
                if (tabbedGroups1.ActiveLeaf != null)
                    tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;

                //string hlyytype = GetIniString("hlyy", "name", System.Windows.Forms.Application.StartupPath + "\\Hlyy.ini");
                if (strHlyyType == "美康" || (strHlyyType == "大通新" && IsActive == false
                    //(
                    //(tc.SelectedTab.Title.ToString() == "长期医嘱" &&  this.)
                    //||
                    //(tc.SelectedTab.Title.ToString() == "临时医嘱" &&   dataGrid_TempOrder.Focused)
                    //)
                    ))
                    return;
                DataGridEx[] dge = new DataGridEx[2];
                dge[0] = dataGrid_LongOrder;
                dge[1] = dataGrid_TempOrder;
                //Hlyyfx(dge, 1, 0);//Modify by jchl 2016-09-08 列转换不合理用药分析
                HlyyfxDataGridView(dge, 1, 0);//Modify by Zhujh 2017-01-19 列转换不合理用药分析
                return;
                DateTime severtime = DateManager.ServerDateTimeByDBType(InstanceForm._database);//取数据库时间;
                //new Guid(STAG.Substring(0, 40)), Convert.ToInt64(STAG.Substring(40, 10))
                // string sqlbrxx="select * from VI_ZY_VINPATIENT_INFO where INPATIENT_ID='"+new Guid(STAG.Substring(0, 40))+"' and BABY_ID="+ Convert.ToInt64(STAG.Substring(40, 10))+"";
                //DataTable brxx = FrmMdiMain.Database.GetDataTable(sqlbrxx);
                string xml = "";
                xml = "<safe><doctor_information job_number='" + FrmMdiMain.CurrentUser.UserID + "' date='" + severtime.ToString("yyyy-MM-dd HH:mm:ss") + "'/><doctor_name>" + doctor.Name + "</doctor_name><doctor_type>" + doctor.TypeID + "</doctor_type>"
                + "<department_code>" + DeptID + "</department_code><department_name>" + FrmMdiMain.CurrentDept.DeptName + "</department_name><case_id>" + this.patientInfo1.lbID.Text + "</case_id><inhos_code>" + this.patientInfo1.lbID.Text + "</inhos_code>"
                + "<bed_no>" + this.patientInfo1.lbBed.Text + "</bed_no>"
                 + "<patient_information weight='' height='' birth='" + (Convert.ToDateTime(this.BrxxTb.Rows[0]["BIRTHDAY"])).ToString("yyyy-MM-dd") + "'>"
                 + "<patient_name>" + this.patientInfo1.lbName.Text + "</patient_name><patient_sex>" + this.patientInfo1.lbSex.Text + "</patient_sex><physiological_statms></physiological_statms>"
                 + "<boacterioscopy_effect></boacterioscopy_effect><bloodpressure></bloodpressure><liver_clean></liver_clean><pregnant></pregnant><pdw></pdw>"
                 + "<allergic_history><case><case_code></case_code><case_name></case_name></case> <case><case_code></case_code><case_name></case_name></case><case><case_code></case_code><case_name></case_name></case> </allergic_history>"
                 + "<diagnoses><diagnose type ='0'  name ='" + this.patientInfo1.lbRYZD.Text + "'>" + BrxxTb.Rows[0]["IN_DIAGNOSIS"].ToString() + "</diagnose>"
                 + "<diagnose type ='0'  name =''></diagnose>"
                 + "<diagnose type ='0'  name =''></diagnose></diagnoses></patient_information>";
                xml += "<prescriptions>";
                //if (tb.Rows[dqh]["id"].ToString() == Guid.Empty.ToString())
                {
                    for (int i = 0; i < tb.Rows.Count; i++)
                    {
                        hx = i;
                        if (tb.Rows[i]["id"] == null || tb.Rows[i]["id"].ToString() == "")
                            continue;
                        if (tb.Rows[i]["xmly"].ToString() == "1")
                        {
                            //如果是一组医嘱的话
                            if (tb.Rows[i]["开始时间"].ToString() != "")
                            {
                                string tzsj = tb.Rows[i]["停嘱时间"].ToString() == "" ? severtime.AddDays(2).ToShortDateString() : Convert.ToDateTime(tb.Rows[i]["停嘱时间"].ToString()).ToShortDateString();
                                if (((Convert.ToDateTime(tzsj) >= Convert.ToDateTime(severtime.ToShortDateString()) && tb.Rows[i]["status_flag"].ToString() == "5") || tb.Rows[i]["status_flag"].ToString() != "5"))
                                {
                                    zflag++;
                                    flag = 1;
                                    pc = tb.Rows[i]["频率"].ToString().Trim();
                                    yf = tb.Rows[i]["用法"].ToString().Trim();
                                    kyzsj = (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss");
                                    //处方处理
                                    xml += "<prescription  id='" + tb.Rows[i]["id"].ToString() + "' type='L'>"
                                    + "<medicine suspension='false' judge='true'><group_number>" + zflag.ToString() + "</group_number><general_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</general_name>"
                                    + "<license_number>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</license_number><medicine_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</medicine_name>"
                                    + "<single_dose coef='1'>" + tb.Rows[i]["剂量"].ToString().Trim() + "</single_dose><frequency>" + tb.Rows[i]["频率"].ToString().Trim() + "</frequency><times></times><unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</unit>"
                                    + "<administer_drugs>" + tb.Rows[i]["用法"].ToString().Trim() + "</administer_drugs><begin_time>" + (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</begin_time>"
                                    + "<end_time></end_time><prescription_time>" + (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</prescription_time></medicine></prescription>";
                                }
                                else
                                    flag = 0;
                            }
                            else
                            {
                                string shyzsh = tb.Rows[i - 1]["开始时间"].ToString().Trim() == "" ? "1900-01-01 00:00:00" : tb.Rows[i - 1]["开始时间"].ToString();//上一行医嘱时间
                                if (flag == 1)//判断上个医嘱时间
                                    xml += "<prescription  id='" + tb.Rows[i]["id"].ToString() + "' type='L'>"
                                   + "<medicine suspension='false' judge='true'><group_number>" + zflag.ToString() + "</group_number><general_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</general_name>"
                                   + "<license_number>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</license_number><medicine_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</medicine_name>"
                                   + "<single_dose coef='1'>" + tb.Rows[i]["剂量"].ToString().Trim() + "</single_dose><frequency>" + pc + "</frequency><times></times><unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</unit>"
                                   + "<administer_drugs>" + yf + "</administer_drugs><begin_time>" + kyzsj + "</begin_time>"
                                   + "<end_time></end_time><prescription_time>" + kyzsj + "</prescription_time></medicine></prescription>";

                            }
                        }
                    }
                    xml += "</prescriptions></safe>";

                    //Modify by zhujh 2017-01-18
                    if (strHlyyType == "大通")
                    {
                        hl.DrugAnalysis(new StringBuilder(xml), 0);
                    }
                    else
                    {
                        if (boHLYYDept)
                        {
                            hl.DrugAnalysis(new StringBuilder(xml), 0);
                        }
                    }

                    //hl.DrugAnalysis(new StringBuilder(xml), 0);//Modify by jchl 2016-09-08 列转换不合理用药分析

                }
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message+hx.ToString());
            }
        }
        void mycol_ONCurrentChange_temp(int dqh)
        {

            if (true)
            {
                try
                {
                    doctor = new Doctor(YS_ID, InstanceForm._database);
                }
                catch (Exception err)
                {
                    //MessageBox.Show(err.Message);
                    //this.Close();
                    //MessageBox.Show(err.Message);
                    doctor = new Doctor();
                    // doctor.TypeID = -1;
                }
            }
            else
            {
                doctor = new Doctor();
            }
            // doctor = new Doctor(YS_ID, InstanceForm._database);
            int zflag = 0;//组标记
            //MessageBox.Show("当前行已经改变");
            DataTable tb = (DataTable)this.dataGrid_TempOrder.DataSource;
            if (dqh >= tb.Rows.Count)
                return;
            int CurIndex = this.dataGrid_TempOrder.CurrentCell.RowNumber;
            //用于保存一组的信息
            string pc = "";//频次
            string yf = "";//用法
            string kyzsj = "";//开医嘱时间
            int flag = 0;
            try
            {
                if (cfg6079.Config.Trim() == "0")
                    return;
                //string hlyytype = GetIniString("hlyy", "name", System.Windows.Forms.Application.StartupPath + "\\Hlyy.ini");
                //if (hlyytype == "美康")
                //    return;
                if (strHlyyType == "美康" || (strHlyyType == "大通新" && IsActive == false
                    //(
                    //(tc.SelectedTab.Title.ToString() == "长期医嘱" &&  this.)
                    //||
                    //(tc.SelectedTab.Title.ToString() == "临时医嘱" &&   dataGrid_TempOrder.Focused)
                    //)
                    ))
                    return;
                DataGridEx[] dge = new DataGridEx[2];
                dge[0] = dataGrid_LongOrder;
                dge[1] = dataGrid_TempOrder;
                //Hlyyfx(dge, 1, 0);//Modify by jchl 2016-09-08 列转换不合理用药分析
                HlyyfxDataGridView(dge, 1, 0);//Modify by Zhujh 2017-01-19 列转换不合理用药分析
                return;
                DateTime severtime = DateManager.ServerDateTimeByDBType(InstanceForm._database);//取数据库时间;
                //new Guid(STAG.Substring(0, 40)), Convert.ToInt64(STAG.Substring(40, 10))
                // string sqlbrxx="select * from VI_ZY_VINPATIENT_INFO where INPATIENT_ID='"+new Guid(STAG.Substring(0, 40))+"' and BABY_ID="+ Convert.ToInt64(STAG.Substring(40, 10))+"";
                //DataTable brxx = FrmMdiMain.Database.GetDataTable(sqlbrxx);
                string xml = "";
                xml = "<safe><doctor_information job_number='" + FrmMdiMain.CurrentUser.UserID + "' date='" + severtime.ToString("yyyy-MM-dd HH:mm:ss") + "'/><doctor_name>" + doctor.Name + "</doctor_name><doctor_type>" + doctor.TypeID + "</doctor_type>"
                + "<department_code>" + DeptID + "</department_code><department_name>" + FrmMdiMain.CurrentDept.DeptName + "</department_name><case_id>" + this.patientInfo1.lbID.Text + "</case_id><inhos_code>" + this.patientInfo1.lbID.Text + "</inhos_code>"
                + "<bed_no>" + this.patientInfo1.lbBed.Text + "</bed_no>"
                 + "<patient_information weight='' height='' birth='" + (Convert.ToDateTime(this.BrxxTb.Rows[0]["BIRTHDAY"])).ToString("yyyy-MM-dd") + "'>"
                 + "<patient_name>" + this.patientInfo1.lbName.Text + "</patient_name><patient_sex>" + this.patientInfo1.lbSex.Text + "</patient_sex><physiological_statms></physiological_statms>"
                 + "<boacterioscopy_effect></boacterioscopy_effect><bloodpressure></bloodpressure><liver_clean></liver_clean><pregnant></pregnant><pdw></pdw>"
                 + "<allergic_history><case><case_code></case_code><case_name></case_name></case> <case><case_code></case_code><case_name></case_name></case><case><case_code></case_code><case_name></case_name></case> </allergic_history>"
                 + "<diagnoses><diagnose type ='0'  name ='" + this.patientInfo1.lbRYZD.Text + "'>" + BrxxTb.Rows[0]["IN_DIAGNOSIS"].ToString() + "</diagnose>"
                 + "<diagnose type ='0'  name =''></diagnose>"
                 + "<diagnose type ='0'  name =''></diagnose></diagnoses></patient_information>";
                xml += "<prescriptions>";
                //if (tb.Rows[dqh]["id"].ToString() == Guid.Empty.ToString())
                {
                    for (int i = 0; i < tb.Rows.Count; i++)
                    {
                        if (tb.Rows[i]["id"] == null || tb.Rows[i]["id"].ToString() == "")
                            continue;
                        if (tb.Rows[i]["xmly"].ToString() == "1")
                        {
                            //如果是一组医嘱的话
                            if (tb.Rows[i]["开始时间"].ToString() != "")
                            {
                                if ((Convert.ToDateTime(Convert.ToDateTime(tb.Rows[i]["开始时间"].ToString()).ToShortDateString()) == Convert.ToDateTime(severtime.ToShortDateString()))//今天开的所有临时医嘱
                                 )
                                {
                                    pc = tb.Rows[i]["频率"].ToString().Trim();
                                    yf = tb.Rows[i]["用法"].ToString().Trim();
                                    kyzsj = (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss");
                                    zflag++;
                                    flag = 1;
                                    //处方处理
                                    xml += "<prescription  id='" + tb.Rows[i]["id"].ToString() + "' type='T'>"
                                    + "<medicine suspension='false' judge='true'><group_number>" + zflag.ToString() + "</group_number><general_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</general_name>"
                                    + "<license_number>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</license_number><medicine_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</medicine_name>"
                                    + "<single_dose coef='1'>" + tb.Rows[i]["剂量"].ToString().Trim() + "</single_dose><frequency>" + tb.Rows[i]["频率"].ToString().Trim().Trim() + "</frequency><times></times><unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</unit>"
                                    + "<administer_drugs>" + tb.Rows[i]["用法"].ToString().Trim() + "</administer_drugs><begin_time>" + (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</begin_time>"
                                    + "<end_time>" + (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</end_time><prescription_time>" + (Convert.ToDateTime(tb.Rows[i]["开始时间"])).ToString("yyyy-MM-dd HH:mm:ss") + "</prescription_time></medicine></prescription>";
                                }
                                else
                                    flag = 0;
                            }
                            else
                            {
                                string shyzsh = tb.Rows[i - 1]["开始时间"].ToString().Trim() == "" ? "1900-01-01 00:00:00" : tb.Rows[i - 1]["开始时间"].ToString();//上一行医嘱时间
                                if (flag == 1)//判断上个医嘱时间
                                    xml += "<prescription  id='" + tb.Rows[i]["id"].ToString() + "' type='T'>"
                                    + "<medicine suspension='false' judge='true'><group_number>" + zflag.ToString() + "</group_number><general_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</general_name>"
                                    + "<license_number>" + tb.Rows[i]["hoitem_id"].ToString().Trim() + "</license_number><medicine_name>" + tb.Rows[i]["医嘱内容"].ToString().Trim() + "</medicine_name>"
                                    + "<single_dose coef='1'>" + tb.Rows[i]["剂量"].ToString().Trim() + "</single_dose><frequency>" + pc + "</frequency><times></times><unit>" + tb.Rows[i]["单位"].ToString().Trim() + "</unit>"
                                    + "<administer_drugs>" + yf + "</administer_drugs><begin_time>" + kyzsj + "</begin_time>"
                                    + "<end_time>" + kyzsj + "</end_time><prescription_time>" + kyzsj + "</prescription_time></medicine></prescription>";
                            }
                        }
                    }
                    xml += "</prescriptions></safe>";

                    //Modify by zhujh 2017-01-18
                    if (strHlyyType == "大通")
                    {
                        hl.DrugAnalysis(new StringBuilder(xml), 0);
                    }
                    else
                    {
                        if (boHLYYDept)
                        {
                            hl.DrugAnalysis(new StringBuilder(xml), 0);
                        }
                    }

                    //hl.DrugAnalysis(new StringBuilder(xml), 0);//Modify by jchl 2016-09-08 列转换不合理用药分析
                    ////add by zouchihua 2012-02-06
                    //string hlyytype = GetIniString("hlyy", "name", System.Windows.Forms.Application.StartupPath + "\\Hlyy.ini");
                    ////美康合理用好接口
                    //int li_warn = 0; //返回的最大警示值
                    //if (hlyytype == "美康")
                    //{
                    //    li_warn = hl.recipe_check(3, this.dataGrid_LongOrder,severtime); //调用用户自定义自动审查函数 3 手动审查
                    //    //如果审查出黑灯，则提示用户是保继续保存、执行医嘱

                    //}
                    // hl.SaveXml(new StringBuilder(xml));
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }
        private void loadGrid_LongOrder()
        {
            try
            {
                if (this.dataGrid_LongOrder.VisibleRowCount > 0) this.dataGrid_LongOrder.CurrentCell = new DataGridCell(0, 0);
            }
            catch
            {

            }

            DataTable myTb = myQuery.GetBinOrders(1, this.BabyID, this.BinID, this.DeptID);

            if (sort == 1)//按开始时间排序
            {
                DataView tempDataView = new DataView(myTb, "", "Order_bDate,Group_ID,serial_no", DataViewRowState.CurrentRows);
                myTb = insertRow(tempDataView, myTb);//将数据视图转化为表
                tempDataView.Dispose();
            }

            for (int i = 0; i < myTb.Rows.Count; i++)
            {   //去多余的“0”
                myTb.Rows[i]["剂量"] = removeZero(Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()));
            }
            DataTable myTbb = CheckGrdDataLong(myTb);
            DataRow myRow = myTbb.NewRow();
            //myRow["ID"]=1;//ID为0，表示不为正规行
            myTbb.Rows.Add(myRow);
            DataTable myTbBk = myTbb.Copy();
            this.dataGrid_LongOrder.DataSource = null;
            this.dataGrid_LongOrder.DataSource = myTbBk;
            //以前的
            //this.dataGrid_LongOrder.CurrentRowIndex = myTbBk.Rows.Count - 1;
            try
            {
                DataGridCell cel;
                if (myTbBk.Rows.Count - 2 >= 0)
                {
                    cel = new DataGridCell(myTbBk.Rows.Count - 2, 0);

                    this.dataGrid_LongOrder.CurrentCell = cel;
                }
            }
            catch { }
            XG1 = false;
            if (outType == true && lg != 0) this.dataGrid_LongOrder.TableStyles[0].ReadOnly = true;
            Cursor = Cursors.Default;
        }
        #region 滴量内容的添入,传入的参数为选择网格的行数 modify by caicheng 2013-05-27
        private void GetCardDataDL(int nSelRow, DataGridEx myDataGrid1)
        {
            try
            {
                int nrow, ncol;
                //首先得到当前网格的信息
                DataTable myTb = (DataTable)myDataGrid1.DataSource;
                //得到当前编辑网格的位置
                nrow = myDataGrid1.CurrentCell.RowNumber;
                ncol = myDataGrid1.CurrentCell.ColumnNumber;
                //得到选择网格的数据和选择的行号
                DataTable myTb_Sel = (DataTable)this.GrdSel.DataSource; ;
                //得到当前编辑的TEXTBOX格子
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ncol];
                if (this.GrdSel.VisibleRowCount < 1)
                {
                    //可以自由录入
                    //myTb.Rows[nrow]["滴量"] = "";
                    //txtCol.TextBox.Text = "";
                    //this.GrdSel.DataSource = null;
                    //this.GrdSel.Visible = false;
                    return;
                }
                //选择超出范围
                if (nSelRow > myTb_Sel.Rows.Count - 1)
                {
                    this.GrdSel.DataSource = null;
                    this.GrdSel.Visible = false;
                    return;
                }
                else
                {
                    myTb.Rows[nrow]["滴量"] = myTb_Sel.Rows[nSelRow]["滴量名称"].ToString();
                    txtCol.TextBox.Text = myTb_Sel.Rows[nSelRow]["滴量名称"].ToString();
                    this.GrdSel.DataSource = null;
                    this.GrdSel.Visible = false;
                }
            }
            catch (System.Exception err)
            {
                //保存出错信息
                myQuery.SaveLog(DeptID, YS_ID, "程序错误", this.BinID.ToString() + "频率内容添入错误：" + err.ToString().Trim(), 1, 41);
                this.GrdSel.DataSource = null;
                this.GrdSel.Visible = false;
                return;
            }
            this.GrdSel.DataSource = null;
            this.GrdSel.Visible = false;
        }
        #endregion
        private bool dataGrid_LongOrder_myKeyDown(ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData)
        {
            if (outType == true && lg != 0) return true;

            //变量定义
            long keyInt = Convert.ToInt32(keyData);

            if (keyInt == 46) return true;//删除键

            int nrow, ncol;
            string ColumnName = "";
            //变量付初始值
            DataTable myTb = (DataTable)this.dataGrid_LongOrder.DataSource;

            nrow = this.dataGrid_LongOrder.CurrentCell.RowNumber;
            ncol = this.dataGrid_LongOrder.CurrentCell.ColumnNumber;
            ColumnName = this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();

            //除跳格键外，其他的全屏蔽,必须放在最前面
            if (keyInt == 9 || keyInt == 37 || keyInt == 39 || (keyInt == 38 && this.GrdSel.Visible == false && ColumnName != "单位")) return false;
            if (this.GrdSel.Visible == false && keyInt == 40 && ColumnName != "单位") return false;

            shortcut(keyData);

            //确定此列不为只读
            if (!(ColumnName == "单位" && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1"
                && myTb.Rows[nrow]["执行科室"].ToString().Trim() == "-1" && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1
                ))
                if (this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol].ReadOnly == true && (keyInt >= 65 && keyInt <= 122)) return true;

            if (cfg6088.Config.Trim() == "1")
            {
                //判断当前行可否编辑   add by jchl(否则最后一行空行未校验任何状态也可开医嘱)
                if (CanEnterData(myTb, nrow) == false) return true;
            }
            else
            {
                //判断当前行可否编辑
                if (CanEnterData(myTb, nrow) == false) return true;
            }
            if (myTb.Rows[nrow]["Order_Doc"] != System.DBNull.Value)
            {
                //判断是否能编辑其他医生医嘱
                if (cfg6219.Config.Trim().Equals("1"))
                {
                    if (doctor != null && (doctor.TypeID == 1 || doctor.TypeID == 2))
                    {

                    }
                    else
                    {
                        if (!(myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim() == "" || long.Parse(myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim()) <= 0) && myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim() != InstanceForm._currentUser.EmployeeId.ToString().Trim())
                        {
                            MessageBox.Show("对不起，非本人开立的医嘱，需要副主任及以上医师才能修改其他医生医嘱！！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            return true;
                        }
                    }
                }
                else
                {
                    if (!(myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim() == "" || long.Parse(myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim()) <= 0) && myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim() != InstanceForm._currentUser.EmployeeId.ToString().Trim())
                    {
                        MessageBox.Show("你无权修改其他医生医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        return true;
                    }
                }
            }
            #region "Modify by jchl"
            //add by zouchihua 2014-4-29 医技发送了不能更改
            if (cfg6207.Config.Equals("0") && (cfg6220.Config.Trim() == "1" || myQuery.IsDeptOk(DeptID.ToString())))
            {
            }
            else //(cfg6207.Config.Equals("1"))
            {
                string yzTypeStr = myTb.Rows[nrow]["类型"].ToString();
                if (myTb.Rows[nrow]["status_flag"].ToString().Trim() == "1")
                {
                    MessageBox.Show("医嘱发送了不能进行修改！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return true;
                }
            }
            #endregion

            if (keyInt >= 46 && keyInt <= 127 && keyInt != 121) XG1 = true;//修改标记 Modify by zouchihua 按F10（保存）时不要改变标记

            try
            {
                #region 跳格控制
                //把回车事件转换成跳格	
                if (keyInt == 13)
                {
                    if (ColumnName == "开始时间")
                    {
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	

                    }
                    if (ColumnName == "滴量")
                    {
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	开放
                        #region  modify by caicheng 2013-05-28

                        if (this.GrdSel.VisibleColumnCount > 0 && this.GrdSel.CaptionText == "滴量")
                        {
                            if (this.GrdSel.CurrentRowIndex >= 0)
                            {
                                GetCardDataDL(this.GrdSel.CurrentRowIndex, this.dataGrid_LongOrder);//获得选项卡 
                            }
                            this.GrdSel.Refresh();
                        }
                        #endregion
                        DataGridCell Crucell = new DataGridCell(nrow + 1, 7);
                        this.dataGrid_LongOrder.CurrentCell = Crucell;
                        return true;
                    }
                    if (ColumnName == "首日执行次数")
                    {
                        if (GetGroupType(myTb, nrow) == "1-西药" || GetGroupType(myTb, nrow) == "2-中成药" || GetGroupType(myTb, nrow) == "3-中草药")
                        {
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            //SendKeys.Send("{tab}"); //跳格 开放
                            return true;
                        }
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格 开放	
                    }
                    if (ColumnName == "剂数")
                    {
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格 开放	

                    }
                    if (ColumnName == "剂量" && IsGroupFirstRow(myTb, nrow) == false && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) != 1)
                    {
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	 开放
                        //						SendKeys.Send("{tab}"); //跳格	
                    }
                    if (ColumnName == "单位" && IsGroupFirstRow(myTb, nrow) == false)
                    {
                        //SendKeys.Send("{tab}"); //跳格	

                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格 开放
                        if (ColumnName == "单位" && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1
                 &&
                  (ColumnName == "单位" && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1"
             && myTb.Rows[nrow]["执行科室"].ToString().Trim() == "-1"
             )
                 )
                        {
                            //不做任何处理
                        }
                        else
                            //add by zouchihua  2012-4-22 提交单位
                            cmb_SelectionChangeCommitted(cmb, null);
                        //Modify by zouchiua 定位控制
                        DataGridCell Crucell = new DataGridCell(nrow + 1, 6);
                        this.dataGrid_LongOrder.CurrentCell = Crucell;
                        return true;
                    }
                    if (ColumnName == "单位" && IsGroupFirstRow(myTb, nrow) == true
                        && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1
                        && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1"
             && myTb.Rows[nrow]["执行科室"].ToString().Trim() == "-1"
                        )
                    {
                        DataGridCell Crucell = new DataGridCell(nrow, 10);
                        this.dataGrid_LongOrder.CurrentCell = Crucell;
                        return true;
                    }
                    //Modify By Tany 2015-02-02 如果是纯数字并且选择框没弹出，则弹出选择框
                    if (ColumnName == "医嘱内容" && this.GrdSel.Visible == false)
                    {
                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (Convertor.IsNumeric(SelData))
                        {
                            //显示查到的数据
                            ShowOrderSelCard(SelData, 2, "", this.dataGrid_LongOrder);
                            //不屏蔽输入
                            return true;
                        }
                    }
                    if (ColumnName == "医嘱内容")
                    {
                        if (strHlyyType == "大通新")
                        {
                            try
                            {
                                //Modify by Zhujh 2017-02-09
                                DataGridEx[] dgv = new DataGridEx[2];
                                dgv[0] = dataGrid_LongOrder;
                                dgv[1] = dataGrid_TempOrder;
                                Hlyyfx(dgv, 1, 0);
                            }
                            catch { }
                        }
                    }
                    SendKeys.Send("{tab}"); //跳格	
                }
                #endregion

                #region 剂数录入
                if (ColumnName == "剂数" && (keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105 || keyInt == 8))
                {
                    return false;
                }
                #endregion

                #region 剂量的录入
                if (ColumnName == "剂量")
                {
                    //					if((keyInt>=65 && keyInt<=90) || keyInt==189 || keyInt==109) return true;
                    //数字键\删除键\小数点
                    if ((keyInt >= 48 && keyInt <= 57) || (keyInt >= 96 && keyInt <= 105) || keyInt == 190 || keyInt == 8 || keyInt == 110)
                    {
                        //						myTb.Rows[nrow]["单价"] = Convert.ToString(Convert.ToDecimal(myTb.Rows[nrow]["剂量"].ToString())/Convert.ToDecimal(myTb.Rows[nrow]["规格"].ToString())*Convert.ToDecimal(myTb.Rows[nrow]["单价"]));
                        return false;
                    }
                    if (keyInt == 13)
                    {
                        this.dataGrid_LongOrder.EndEdit(this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol], nrow, false);
                        //库存的判断，仅对药品 Add by Tany 2007-08-30
                        if ((Convert.ToString(myTb.Rows[nrow]["类型"]) == "1-西药"
                            || Convert.ToString(myTb.Rows[nrow]["类型"]) == "2-中成药"
                            || Convert.ToString(myTb.Rows[nrow]["类型"]) == "3-中草药")
                            && Convert.ToInt32(myTb.Rows[nrow]["xmly"]) == 1
                            && Convert.ToInt32(myTb.Rows[nrow]["执行科室"]) > 0)
                        {
                            DataTable medTb = myQuery.GetYPInfo(Convert.ToInt32(myTb.Rows[nrow]["hoitem_id"]), Convert.ToDouble(myTb.Rows[nrow]["剂量"]), Convert.ToInt32(myTb.Rows[nrow]["dwlx"]), Convert.ToInt32(myTb.Rows[nrow]["执行科室"]));
                            decimal _ypkc = Convert.ToDecimal(medTb.Rows[0]["ylkc"]);//Modify by tany 2011-03-28 直接使用药品信息里面的用量库存 myQuery.GetYPNum(Convert.ToInt32(myTb.Rows[nrow]["hoitem_id"]), Convert.ToInt32(myTb.Rows[nrow]["执行科室"]));
                            if (Convert.ToDecimal(medTb.Rows[0]["yl"]) > _ypkc)
                            {
                                MessageBox.Show("该种药品当前库存为： " + _ypkc + " ，医嘱每次需要 " + medTb.Rows[0]["yl"].ToString().Trim() + medTb.Rows[0]["unit"].ToString().Trim() + " 不能满足当前数量，请与相关药房联系！");
                                DeleteOrder(dataGrid_LongOrder, 0, -1);
                                return false;
                            }
                        }
                        if (Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) != 1)
                        {
                            SendKeys.Send("{tab}"); //跳格	
                        }
                    }
                    else return true;
                }
                #endregion

                #region 首日执行次数
                if (ColumnName == "首日执行次数")
                {
                    if ((keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105 || keyInt == 8))
                        return false;
                    else
                        return true;
                }

                #endregion


                #region 滴量录入 modify by caicheng
                if (ColumnName == "滴量")
                {
                    if (keyInt >= 65 && keyInt <= 90)//1、判断是不是输入了英文字
                    {
                        //得到输入的数据

                        //this.dataGrid_LongOrder.EndEdit(this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol], nrow, true);
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];

                        string SelData = txtCol.TextBox.Text;
                        ShowDLSelCard(SelData + Convert.ToChar(keyInt), this.dataGrid_LongOrder);
                    }
                    else if (keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105)//2、判断是不是输入了数字键
                    {
                        //得到输入的数据
                        //this.dataGrid_LongOrder.EndEdit(this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol], this.dataGrid_LongOrder.CurrentCell.RowNumber, true);
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];

                        string SelData = txtCol.TextBox.Text;
                        ShowDLSelCard(SelData + Convert.ToChar(keyInt), this.dataGrid_LongOrder);
                    }
                    if (keyInt == 8)
                    {
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        ShowDLSelCard("", this.dataGrid_LongOrder);
                    }
                    //4、判断是否输入了向下键
                    if (keyInt == 40 && this.GrdSel.Visible == true)
                    {

                        if (this.GrdSel.VisibleRowCount > 0)
                        {
                            this.GrdSel.CurrentCell = new DataGridCell(0, 1);
                            this.GrdSel.Focus();
                        }
                        else
                        {
                            this.GrdSel.Focus();
                        }
                        //屏蔽输入
                        return true;
                    }
                }
                #endregion

                #region 滴量录入
                if (ColumnName == "滴量" && (keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105 || keyInt == 8))
                {
                    return false;
                }
                #endregion

                #region 按键整体控制

                //判断是不是控制键,针对所有列   //====================================================================================================================
                switch (keyInt)
                {
                    case 9:
                        #region TAB键控制
                        if (ncol == 8) //总数列
                        {
                            if (myTb.Rows[nrow]["医嘱内容"].ToString() == "")
                            {
                                return true;
                            }

                        }
                        break;
                        #endregion
                    case 13:
                        #region 回车键控制

                        if (ColumnName == "医嘱内容")
                        {
                            //
                            if (this.GrdSel.VisibleColumnCount > 0 && this.GrdSel.CaptionText == "医嘱内容")
                            {
                                if (this.GrdSel.CurrentRowIndex >= 0)
                                {
                                    GetCardData(this.GrdSel.CurrentRowIndex, this.dataGrid_LongOrder);//获得选项卡 zouchihua
                                    SendKeys.Send("{tab}"); //跳格	
                                }
                                this.GrdSel.Refresh();
                            }
                        }
                        //4、判断是否输入了回车符,表示确定输入
                        if (ColumnName == "用法")
                        {
                            //如果有数据
                            if (this.GrdSel.VisibleRowCount > 0 && this.GrdSel.CaptionText == "用法")
                                GetCardDataUsage(0, this.dataGrid_LongOrder);
                            if (GetGroupType(myTb, nrow) == "3-中草药")
                            {
                                //this.ballonToolTip1.SetToolTip(this.myDataGrid1, "请在首日次数列输入剂数");
                                //SendKeys.Send("{tab}"); //跳格	去掉一个跳格子 add by zouchihua 2012-9-13
                                //SendKeys.Send("{tab}"); //跳格	去掉一个跳格子 add by zouchihua 2012-9-13
                                //SendKeys.Send("{tab}"); //跳格	增加一个跳格子 add by zouchihua 2012-5-28
                            }
                            this.GrdSel.Refresh();

                        }
                        //3、判断是否输入了 回车
                        if (ColumnName == "频率")
                        {
                            if (this.GrdSel.VisibleRowCount > 0 && this.GrdSel.CaptionText == "频率")
                                GetCardDataFrequency(0, this.dataGrid_LongOrder);
                            this.GrdSel.Refresh();
                        }

                        if (ColumnName == "单位" && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1)
                        {
                            cmb.Focus();
                            cmb.DroppedDown = true;
                            cmb_SelectionChangeCommitted(cmb, null);
                        }

                        //通用
                        //						SendKeys.Send("{tab}");

                        this.GrdSel.Visible = false;
                        //屏蔽输入
                        return true;
                        #endregion
                    case 27:
                        #region ESC键控制
                        this.chkAddi.Checked = false;
                        this.GrdSel.Visible = false;
                        break;
                        #endregion
                    case 40:
                        #region↓键控制
                        //判断是否输入了向下键
                        //						if(this.GrdSel.Visible==true)
                        //						{
                        //							//屏蔽输入
                        //							return true;
                        //						}
                        //						else
                        //						{
                        //							if(myTb.Rows[nrow]["医嘱内容"].ToString()=="")
                        //							{
                        //								return true;
                        //							}
                        //						}
                        this.chkAddi.Checked = false;
                        break;
                        #endregion
                    case 39:
                        #region →键控制
                        if (ncol == 5)
                        {
                            if (myTb.Rows[nrow]["医嘱内容"].ToString() == "")
                            {
                                return true;
                            }

                        }
                        this.GrdSel.Visible = false;
                        break;
                        #endregion
                    case 38:
                        #region ↑键控制
                        //						if(ncol==5) 
                        //						{
                        //							if(myTb.Rows[nrow]["医嘱内容"].ToString()=="" )
                        //							{
                        //								return true;
                        //							}
                        //
                        //						}
                        //						this.GrdSel.Visible=false;
                        this.chkAddi.Checked = false;
                        break;
                        #endregion
                    case 37:
                        #region ←键控制
                        if (ncol == 5)
                        {
                            if (myTb.Rows[nrow]["医嘱内容"].ToString() == "")
                            {
                                return true;
                            }

                        }
                        this.GrdSel.Visible = false;
                        break;
                        #endregion
                }

                #endregion

                if (ColumnName == "单位" && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1
                    &&
                     !(ColumnName == "单位" && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1"
                && myTb.Rows[nrow]["执行科室"].ToString().Trim() == "-1"
                )
                    )
                {

                    cmb.Focus();
                    cmb.DroppedDown = true;
                    //4、判断是否输入了向下键
                    if (keyInt == 40)
                    {
                        if (cmb.SelectedIndex != cmb.Items.Count - 1)
                        {
                            cmb.SelectedIndex += 1;
                        }
                        //屏蔽输入
                        return true;
                    }
                    //5、判断是否输入了向上键
                    if (keyInt == 38)
                    {
                        if (cmb.SelectedIndex != 0)
                        {
                            cmb.SelectedIndex -= 1;
                        }
                        //屏蔽输入
                        return true;
                    }

                }

                #region 内容列的录入
                if (ColumnName != "医嘱内容") this.chkAddi.Checked = false;
                //关于西药处方内容列的录入

                if (ColumnName == "医嘱内容")		//====================================================================================================================
                {
                    string SelStrType = "1";
                    if (nrow == 0)
                    {
                        SelStrType = "00000";
                    }
                    //小写录入自定义内容
                    if (GetKeyState(Convert.ToInt32(Keys.Capital)) == 0 && this.chkAddi.Checked == true)
                    {
                        return false;
                    }
                    //1、判断是不是输入了英文字
                    if (keyInt >= 65 && keyInt <= 90)
                    {
                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (SelData.Trim() != "")
                        {
                            if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                            {
                                SelData = "";
                            }
                        }
                        //显示查到的数据 显示选项卡 显示医嘱选项卡
                        ShowOrderSelCard(SelData + Convert.ToChar(keyInt), 1, SelStrType, this.dataGrid_LongOrder);

                        //不屏蔽输入
                        return false;
                    }
                    // 判断是不是空格
                    if (keyInt == 32)
                    {
                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (SelData.Trim() != "")
                        {
                            if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                            {
                                SelData = "";
                            }
                        }
                        //显示查到的数据
                        ShowOrderSelCard(SelData + Convert.ToChar(keyInt), 1, SelStrType, this.dataGrid_LongOrder);

                        //不屏蔽输入
                        return false;
                    }

                    //2、判断是不是输入了数字键
                    if (keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105)
                    {
                        if (keyInt > 90) keyInt -= 48;

                        //Modify By Tany 2015-01-28 如果是没有选择框的情况下输入纯数字，则允许输入
                        //if (this.GrdSel.Visible == false)
                        //{
                        //    return false;
                        //}
                        //else
                        //{


                        //Modify By Tany 2015-02-02 如果输入框里面是纯数字码，则继续搜索
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (Convertor.IsNumeric(SelData + (Convert.ToString(keyInt - 48))))
                        {
                            ShowOrderSelCard(SelData + (Convert.ToString(keyInt - 48)), 2, SelStrType, this.dataGrid_LongOrder);
                            return false;
                        }
                        else
                        {
                            if (keyInt == 48) return true;

                            GetCardData(Convert.ToInt32(keyInt - 49), dataGrid_LongOrder);
                            SendKeys.Send("{tab}");
                            return true;
                        }
                        //}
                    }

                    //3、为删除键
                    if (keyInt == 8 && this.GrdSel.Visible == true)
                    {
                        if (keyInt > 90) keyInt -= 48;
                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (SelData.Trim() != "")
                        {
                            if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                            {
                                SelData = "";
                            }
                            else
                            {
                                SelData = SelData.Substring(0, SelData.Length - 1);
                            }
                        }
                        //显示查到的数据
                        if (SelData.Trim() != "")
                        {
                            //判断是输入的国家编码还是拼音码
                            if (char.IsNumber(SelData, SelData.Length - 1) == true)
                                ShowOrderSelCard(SelData, 2, SelStrType, this.dataGrid_LongOrder);//Modify By Tany 2015-02-02 如果是数字码，则传2搜索
                            else
                                ShowOrderSelCard(SelData, 1, SelStrType, this.dataGrid_LongOrder);
                        }
                        else
                            ShowOrderSelCard(SelData, 1, SelStrType, this.dataGrid_LongOrder);

                        //不屏蔽输入
                        return false;
                    }

                    //4、判断是否输入了向下键
                    if (keyInt == 40 && this.GrdSel.Visible == true)
                    {
                        if (this.GrdSel.VisibleRowCount > 0 && this.GrdSel.CurrentRowIndex >= 0)
                        {
                            int Row = this.GrdSel.CurrentRowIndex;
                            //如果等于最后一行，则为最后一行
                            if (this.GrdSel.CurrentRowIndex + 1 < ((DataView)this.GrdSel.DataSource).Count)
                            {
                                this.GrdSel.CurrentRowIndex += 1;
                            }
                            this.GrdSel.UnSelect(Row);
                            this.GrdSel.Select(GrdSel.CurrentRowIndex);
                        }
                        //屏蔽输入
                        return true;
                    }
                    //5、判断是否输入了向上键
                    if (keyInt == 38 && this.GrdSel.Visible == true)
                    {
                        if (this.GrdSel.VisibleRowCount > 0)
                        {
                            if (this.GrdSel.CurrentRowIndex >= 0)
                            {
                                if (this.GrdSel.CurrentRowIndex == 0) return true;
                                int Row = this.GrdSel.CurrentRowIndex;
                                this.GrdSel.CurrentRowIndex -= 1;
                                this.GrdSel.Select(GrdSel.CurrentRowIndex);
                                this.GrdSel.UnSelect(Row);
                            }
                        }
                        //屏蔽输入
                        return true;
                    }

                    //6、判断是不是ProcessKey  add by jchl
                    if (keyInt == 229)
                    {
                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (SelData.Trim() != "")
                        {
                            if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                            {
                                SelData = "";
                            }
                        }
                        //显示查到的数据 显示选项卡 显示医嘱选项卡
                        ShowOrderSelCard(SelData + Convert.ToChar(keyInt), 1, SelStrType, this.dataGrid_LongOrder);

                        //不屏蔽输入
                        return false;
                    }

                }
                #endregion



                if (IsGroupFirstRow(myTb, nrow) == true)//是一组中的第一条
                {

                    #region 用法的录入
                    if (ColumnName == "用法" && myTb.Rows[nrow]["医嘱内容"].ToString() != "")
                    {
                        //1、判断是不是输入了英文字
                        if (keyInt >= 65 && keyInt <= 90)
                        {
                            //得到输入的数据
                            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                            string SelData = txtCol.TextBox.Text;
                            if (SelData.Trim() != "")
                            {
                                if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                                {
                                    SelData = "";
                                }
                            }
                            //显示查到的数据
                            ShowUswaySelCard(SelData + Convert.ToChar(keyInt), this.dataGrid_LongOrder);

                            //不屏蔽输入
                            return false;
                        }

                        //2、判断是不是输入了数字键
                        if (keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105)
                        {
                            if (keyInt > 90) keyInt -= 48;
                            //得到输入的数据
                            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                            string SelData = txtCol.TextBox.Text;
                            if (SelData.Trim() != "")
                            {
                                if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                                {
                                    SelData = "";
                                }
                            }
                            //显示查到的数据
                            ShowUswaySelCard(SelData + Convert.ToChar(keyInt), this.dataGrid_LongOrder);

                            //不屏蔽输入
                            return false;
                        }

                        //3、为删除键
                        if (keyInt == 8 && this.GrdSel.Visible == true)
                        {
                            if (keyInt > 90) keyInt -= 48;
                            //得到输入的数据
                            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                            string SelData = txtCol.TextBox.Text;
                            if (SelData.Trim() != "")
                            {
                                if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                                {
                                    SelData = "";
                                }
                                else
                                {
                                    SelData = SelData.Substring(0, SelData.Length - 1);
                                }
                            }
                            //显示查到的数据
                            if (SelData.Trim() != "")
                            {
                                //判断是输入的国家编码还是拼音码
                                if (char.IsNumber(SelData, SelData.Length - 1) == true)
                                    ShowUswaySelCard(SelData, this.dataGrid_LongOrder);
                                else
                                    ShowUswaySelCard(SelData, this.dataGrid_LongOrder);
                            }
                            else
                                ShowUswaySelCard(SelData, this.dataGrid_LongOrder);

                            //不屏蔽输入
                            return false;
                        }

                        //4、判断是否输入了向下键
                        if (keyInt == 40 && this.GrdSel.Visible == true)
                        {
                            if (this.GrdSel.VisibleRowCount > 0)
                            {
                                this.GrdSel.CurrentCell = new DataGridCell(0, 1);


                                this.GrdSel.Focus();
                            }
                            else
                            {
                                this.GrdSel.Focus();
                            }
                            //屏蔽输入
                            return true;
                        }

                    }
                    #endregion

                    #region 频率的输入
                    if (ColumnName == "频率")			//====================================================================================================================
                    {

                        //1、判断是不是输入了英文字
                        if (keyInt >= 65 && keyInt <= 90)
                        {
                            //得到输入的数据
                            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                            string SelData = txtCol.TextBox.Text;
                            if (SelData.Trim() != "")
                            {
                                if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                                {
                                    SelData = "";
                                }
                            }
                            //显示查到的数据
                            ShowFreqSelCard(SelData + Convert.ToChar(keyInt), this.dataGrid_LongOrder);

                            //不屏蔽输入
                            return false;
                        }

                        //2、判断是不是输入了数字键
                        if (keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105)
                        {
                            if (keyInt > 90) keyInt -= 48;
                            //得到输入的数据
                            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                            string SelData = txtCol.TextBox.Text;
                            if (SelData.Trim() != "")
                            {
                                if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                                {
                                    SelData = "";
                                }
                            }
                            //显示查到的数据
                            ShowFreqSelCard(SelData + Convert.ToChar(keyInt), this.dataGrid_LongOrder);

                            //不屏蔽输入
                            return false;
                        }

                        //3、为删除键
                        if (keyInt == 8 && this.GrdSel.Visible == true)
                        {
                            if (keyInt > 90) keyInt -= 48;
                            //得到输入的数据
                            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                            string SelData = txtCol.TextBox.Text;
                            if (SelData.Trim() != "")
                            {
                                if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                                {
                                    SelData = "";
                                }
                                else
                                {
                                    SelData = SelData.Substring(0, SelData.Length - 1);
                                }
                            }
                            //显示查到的数据
                            if (SelData.Trim() != "")
                            {
                                //判断是输入的国家编码还是拼音码
                                if (char.IsNumber(SelData, SelData.Length - 1) == true)
                                    ShowFreqSelCard(SelData, this.dataGrid_LongOrder);
                                else
                                    ShowFreqSelCard(SelData, this.dataGrid_LongOrder);
                            }
                            else
                                ShowFreqSelCard(SelData, this.dataGrid_LongOrder);

                            //不屏蔽输入
                            return false;
                        }

                        //4、判断是否输入了向下键
                        if (keyInt == 40 && this.GrdSel.Visible == true)
                        {
                            if (this.GrdSel.VisibleRowCount > 0)
                            {
                                this.GrdSel.CurrentCell = new DataGridCell(0, 1);
                                this.GrdSel.Focus();
                            }
                            else
                            {
                                this.GrdSel.Focus();
                            }
                            //屏蔽输入
                            return true;
                        }

                    }
                    #endregion
                }
            }
            catch (System.Exception err)
            {
                MessageBox.Show(err.ToString(), "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                //保存出错信息
                myQuery.SaveLog(DeptID, YS_ID, "程序错误", this.BinID.ToString() + "长嘱按键控制错误：" + err.ToString().Trim(), 1, 41);
                return true;
            }
            if (ColumnName == "单位" && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1
                    &&
                     (ColumnName == "单位" && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1"
                && myTb.Rows[nrow]["执行科室"].ToString().Trim() == "-1"
                )
                && keyData != Keys.F10
                    )
            {
                DataGridTextBoxColumn txtCol1 = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                DlgInputBox Inputbox = new DlgInputBox(txtCol1.TextBox.Text, "请输入药品单位,如ml,g", "单位输入");
                Inputbox.ShowDialog();
                if (!DlgInputBox.DlgResult) return false;

                txtCol1.TextBox.Text = DlgInputBox.DlgValue.ToString();
                dataGrid_LongOrder.EndEdit(txtCol1, dataGrid_LongOrder.CurrentCell.RowNumber, true);
                myTb.Rows[dataGrid_LongOrder.CurrentCell.RowNumber]["单位"] = txtCol1.TextBox.Text;
                return false;
                if ((keyInt >= 49 && keyInt <= 97) || keyInt == 8)
                {

                    DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol];
                    if (keyInt == 8)
                    {
                        if (txtCol.TextBox.SelectionLength > 0)
                            txtCol.TextBox.Text = txtCol.TextBox.Text.Substring(0, txtCol.TextBox.Text.Length - txtCol.TextBox.SelectionLength);
                        else
                            txtCol.TextBox.Text = txtCol.TextBox.Text.Substring(0, txtCol.TextBox.Text.Length - 1);
                    }
                    else
                    {
                        if (txtCol.TextBox.SelectionLength == 0)
                            txtCol.TextBox.Text += Convert.ToChar(keyInt).ToString().ToLower(); //(Keys)keyData
                        else
                            txtCol.TextBox.Text = txtCol.TextBox.Text.Substring(0, txtCol.TextBox.Text.Length - txtCol.TextBox.SelectionLength) + Convert.ToChar(keyInt).ToString().ToLower();
                    }

                    myTb.Rows[nrow]["单位"] = txtCol.TextBox.Text;
                    txtCol.TextBox.SelectionStart = txtCol.TextBox.Text.Length;
                }
                return true;
            }
            else
                return false;
        }

        private void dataGrid_LongOrder_CurrentCellChanged(object sender, System.EventArgs e)
        {
            cellChanged(this.dataGrid_LongOrder);
        }

        private void dataGrid_LongOrder_MouseUp(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Right)
            {
                int nrow, ncol;
                //变量付初始值
                DataTable myTb = (DataTable)this.dataGrid_LongOrder.DataSource;
                nrow = this.dataGrid_LongOrder.CurrentCell.RowNumber;
                ncol = this.dataGrid_LongOrder.CurrentCell.ColumnNumber;
                DataGridEx grid = sender as DataGridEx;


                if (myTb.Rows[nrow]["医嘱内容"].ToString() != "")
                {
                    tabnum = 1;
                    popMenu(grid, e);//右键菜单
                }
                
            }

            ShowInfo(this.dataGrid_LongOrder);//显示药品信息
            if (this.ChkWillGetFee.Checked == true) ShowPrice(this.dataGrid_LongOrder);//显示医嘱费用
        }

        private void dataGrid_LongOrder_Paint(object sender, System.Windows.Forms.PaintEventArgs e)
        {
            if (this.dataGrid_LongOrder.DataSource == null) return;
            int i = 0;
            int yDelta = dataGrid_LongOrder.GetCellBounds(i, 0).Height + 1;
            int y = dataGrid_LongOrder.GetCellBounds(i, 0).Top + 2;
            int index_start = 0, index_i = 0, index_p = 0, index_end = 0;
            int start_row = 0, start_point = 0;
            int zl = 0;//add by zouchihua 使用警示灯时，画线相应右移
            if (cfg6032 == "1")
                zl = 19;
            CurrencyManager cm = (CurrencyManager)this.BindingContext[dataGrid_LongOrder.DataSource, dataGrid_LongOrder.DataMember];
            while (y < dataGrid_LongOrder.Height - yDelta && i < cm.Count)
            {
                //
                try
                {
                    if (cfg6085.Config.Trim() == "1" && ((DataTable)(dataGrid_LongOrder.DataSource)).Rows[i]["Yymd"].ToString().Trim() != "")
                        e.Graphics.DrawString(" 用药目的：" + ((DataTable)(dataGrid_LongOrder.DataSource)).Rows[i]["Yymd"].ToString().Trim(),
                            this.dataGrid_LongOrder.Font, new SolidBrush(Color.Red), 750, y);
                }
                catch { }
                //get & draw the header text...
                //y+= yDelta;
                //皮试+
                index_start = this.sPaintPSLong.IndexOf("[" + i.ToString() + "+", 0, this.sPaintPSLong.Trim().Length);
                if (index_start >= 0)
                {
                    index_p = this.sPaintPSLong.IndexOf("+", index_start, this.sPaintPSLong.Trim().Length - index_start);
                    index_end = this.sPaintPSLong.IndexOf("]", index_p, this.sPaintPSLong.Trim().Length - index_p);
                    start_point = 139 + zl + Convert.ToInt16(this.sPaintPSLong.Substring(index_p + 1, index_end - index_p - 1)) * 6;
                    e.Graphics.DrawString("(+)", this.dataGrid_LongOrder.Font, new SolidBrush(Color.Red), start_point, y);
                }

                //皮试-
                index_start = this.sPaintPSLong.IndexOf("[" + i.ToString() + "-", 0, this.sPaintPSLong.Trim().Length);
                if (index_start >= 0)
                {
                    index_p = this.sPaintPSLong.IndexOf("-", index_start, this.sPaintPSLong.Trim().Length - index_start);
                    index_end = this.sPaintPSLong.IndexOf("]", index_p, this.sPaintPSLong.Trim().Length - index_p);
                    start_point = 119 + zl + Convert.ToInt16(this.sPaintPSLong.Substring(index_p + 1, index_end - index_p - 1)) * 6;
                    switch (this.sPaintPSLong.Substring(index_end + 1, 1))
                    {
                        case "2":  //已审核
                            e.Graphics.DrawString("  (-)", this.dataGrid_LongOrder.Font, new SolidBrush(Color.Blue), start_point, y);
                            break;
                        case "5":  //已停止
                            e.Graphics.DrawString("  (-)", this.dataGrid_LongOrder.Font, new SolidBrush(Color.Gray), start_point, y);
                            break;
                        default:
                            e.Graphics.DrawString("  (-)", this.dataGrid_LongOrder.Font, new SolidBrush(Color.Black), start_point, y);
                            break;
                    }
                }

                //组线
                index_start = this.sPaintLong.IndexOf("[" + i.ToString() + "i", 0, this.sPaintLong.Trim().Length);
                if (index_start >= 0)
                {
                    index_i = index_start + i.ToString().Trim().Length + 1;
                    index_end = this.sPaintLong.IndexOf("]", index_i, this.sPaintLong.Trim().Length - index_i);
                    start_row = Convert.ToInt16(this.sPaintLong.Substring(index_i + 1, index_end - index_i - 1));
                    if (this.max_len11 == 0) start_point = 110 + zl + (this.max_len10 + 4) * 6;
                    else start_point = 110 + zl + (this.max_len11 + this.max_len12 + 4) * 6;
                    switch (this.sPaintLong.Substring(index_end + 1, 1))
                    {
                        case "1":  //已发送未转抄
                            e.Graphics.DrawLine(System.Drawing.Pens.SeaGreen, start_point, y - start_row * yDelta, start_point, y - 5);
                            break;
                        case "2":  //已审核
                            e.Graphics.DrawLine(System.Drawing.Pens.Blue, start_point, y - start_row * yDelta, start_point, y - 5);
                            break;
                        case "3":  //欲停
                            e.Graphics.DrawLine(System.Drawing.Pens.Gray, start_point, y - start_row * yDelta, start_point, y - 5);
                            break;
                        case "5":  //已停止
                            e.Graphics.DrawLine(System.Drawing.Pens.Black, start_point, y - start_row * yDelta, start_point, y - 5);
                            break;
                        default:
                            e.Graphics.DrawLine(System.Drawing.Pens.Black, start_point, y - start_row * yDelta, start_point, y - 5);
                            break;
                    }
                }

                i++;
                y += yDelta;
            }
        }

        private void dataGrid_LongOrder_Enter(object sender, System.EventArgs e)
        {
            if (this.dataGrid_LongOrder.DataSource == null) this.loadGrid_LongOrder();
        }

        #endregion

        #region 临嘱
        private void InitGrd_TempOrder()
        {
            //增加新列
            int i = 0;
            dataGrid_TempOrder.RowHeaderWidth = 30;//行头宽

            DataGridEnableTextBoxColumn aColumnTextColumn;
            MydataGirdImageColumn mycol;
            dataGrid_TempOrder.TableStyles[0].GridColumnStyles.Clear();//先清空列
            for (i = 0; i <= 18 + 4; i++)//(i = 0; i <= 18+3; i++)
            {
                //Modify by zouchihua  增加警示灯列 2011-12-24
                if (i != 5)
                {
                    aColumnTextColumn = new DataGridEnableTextBoxColumn(i);
                    aColumnTextColumn.CheckCellEnabled += new DataGridEnableTextBoxColumn.EnableCellEventHandler(SetEnableValues1);
                    dataGrid_TempOrder.TableStyles[0].GridColumnStyles.Add(aColumnTextColumn);
                    //add by zouchihua 2012-7-20 鼠标离开是触发
                    if (i == 8 + 1 || i == 15 + 1 || i == 11 + 1)
                    {
                        aColumnTextColumn.TextBox.Leave += new EventHandler(TextBox_Leave);
                        //aColumnTextColumn.TextBox.MouseUp += new MouseEventHandler(TextBox_MouseUp);
                        //aColumnTextColumn.TextBox.MouseDown += new MouseEventHandler(TextBox_MouseDown);
                    }
                    if (i == 16+1)
                    {
                        //Add by zouchihua 2012-11-14 总量不允许黏贴
                        aColumnTextColumn.TextBox.MouseUp += new MouseEventHandler(TextBox_MouseUp);
                        aColumnTextColumn.TextBox.MouseDown += new MouseEventHandler(TextBox_MouseDown);
                    }
                }
                else
                {
                    mycol = new MydataGirdImageColumn();
                    mycol.ONCurrentChange += new DelCurrentChage(mycol_ONCurrentChange_temp);
                    // mycol.CheckCellEnabled += new DataGridEnableTextBoxColumn.EnableCellEventHandler(SetEnableValues);
                    dataGrid_TempOrder.TableStyles[0].GridColumnStyles.Add(mycol);

                }

            }

            //建立网格格式
            for (i = 0; i <= dataGrid_TempOrder.TableStyles[0].GridColumnStyles.Count - 1; i++)
            {
                dataGrid_TempOrder.TableStyles[0].GridColumnStyles[i].NullText = "";
                dataGrid_TempOrder.TableStyles[0].AllowSorting = false;
            }

            //add by zouchihua 增加警示灯列，用户合理用药 2011-12-23
            int sfztwide = 0;
            int jsdwide = 0;
            int dywide = 0;
            int dyggwide = 0;
            string cfg6032 = new SystemCfg(6032).Config.Trim();
            cfg6036 = new SystemCfg(6036).Config.Trim();
            if (cfg6032 == "1")
                jsdwide = 0;
            //add by zouchihua  2012-2-29增加规格列的是否显示
            if (cfg6036 == "1")
            {
                dywide = 35;
                dyggwide = 60;
            }
            int ischeck = 0;
            DataTable dt_sfkg = new DataTable();
            string sql_sfkg = "select dictvalue1 from YHS_HOS_DICT where id=1";
            dt_sfkg = InstanceForm._database.GetDataTable(sql_sfkg);
            if (dt_sfkg.Rows[0]["dictvalue1"].ToString() == "1")
            {
                DataTable dt_dept = new DataTable();
                string sql_dept = "select IsCheck   from YHS_HOS_KESHI_SF where KESHI_CODE= " + InstanceForm._currentDept.DeptId.ToString();
                dt_dept = InstanceForm._database.GetDataTable(sql_dept);
                if (dt_dept.Rows.Count > 0 && dt_dept.Rows[0]["IsCheck"].ToString() == "1")
                { ischeck = 1; }
            }
            if (ischeck==1)
            {
                sfztwide = 20;
            }
            bool redonlydt = true;
            if (cfg6088.Config.Trim() == "1")
                redonlydt = false;                                                                                                                                                                 //增加天数，总量 16 "天数", "总量", "总单位",
            string[] GrdMapppingName = { "ID", "类", "嘱号", "开始时间", "类型", "警示灯", "审", "医嘱内容", "规格", "剂量", "单位", "用法", "频率", "首日执行次数", "剂数", "滴量", "天数", "总量", "总单位", "执行护士", "执行时间", "停嘱时间", "下嘱医生", "执行科室", "不打印", "打印规格", "实际执行", "剂型", "place", };
            string[] GrdHeaderText =   { "ID*", "类*", "嘱号*", "录入时间", "类型*", "警示灯", "审", "医嘱内容", "规格", "剂量", "单位*", "用法", "频率", "首日数", "付数", "滴量", "天数", "总量", "总单位", "执行护士*", "执行时间*", "停嘱时间*", "下嘱医生", "执行科室*", "DEL_PRINT", "IsprintYPGG", "实际执行", "剂型", "部位", };
            bool[] RedOnly =           { true, true, true, redonlydt, true, true, true, false, true, false, true, false, false, false, false, false, true, false, false, true, true, true, true, true, false, false, true, true, true };// false,false,true,
            //by add yaokx 2014-04-15浏阳妇幼用ini控制网格字段width
            if (new SystemCfg(6087).Config == "1")
            {
                #region 浏阳妇幼用ini控制网格字段width
                string ConfigFile = Constant.ApplicationDirectory + "\\TempOrderSetting.ini";
                int[] GrdWidth = new int[GrdHeaderText.Length];
                for (int ii = 0; ii < GrdHeaderText.Length; ii++)
                {
                    GrdWidth[ii] = Convert.ToInt32(TrasenClasses.GeneralClasses.ApiFunction.GetIniString("yzglgs", "" + GrdHeaderText[ii].Replace("*", "") + "", ConfigFile));
                }
                InitmyGrd(GrdMapppingName, GrdHeaderText, GrdWidth, RedOnly, this.dataGrid_TempOrder);
                #endregion
            }
            else
            {
                int[] GrdWidth =           { 0, 0, 0, 105, 0, jsdwide, sfztwide, 200, 80, 35, 40, 55, 50, 0, 40, 40, 0, 40, 50, 60, 70, 0, 60, 20, dywide, dyggwide, 60, 0, 300 };// 35, 40, 40,                 //"天数", "总量", "单位",
                InitmyGrd(GrdMapppingName, GrdHeaderText, GrdWidth, RedOnly, this.dataGrid_TempOrder);
            }
            DataGridBoolColumn dbc1 = new DataGridBoolColumn();
            dbc1.MappingName = "DEL_PRINT";
            dbc1.FalseValue = "0";
            dbc1.AllowNull = false;
            dbc1.TrueValue = (short)1;
            dbc1.FalseValue = (short)0;
            dbc1.NullValue = (short)0;
            dbc1.HeaderText = "不打印";
            dbc1.Width = dywide;
            DataGridBoolColumn dbc2 = new DataGridBoolColumn();
            dbc2.MappingName = "IsprintYPGG";
            dbc2.AllowNull = false;
            dbc2.TrueValue = 1;
            dbc2.FalseValue = 0;
            dbc2.NullValue = 0;
            dbc2.HeaderText = "打印规格";
            dbc2.Width = dyggwide;
            dataGrid_TempOrder.TableStyles[0].GridColumnStyles.Add(dbc1);
            dataGrid_TempOrder.TableStyles[0].GridColumnStyles.Add(dbc2);
            //add by zouchihua 增加实际执行时间 2013-5-22
            DataGridEnableTextBoxColumn _aColumnTextColumn = new DataGridEnableTextBoxColumn(25);
            _aColumnTextColumn.CheckCellEnabled += new DataGridEnableTextBoxColumn.EnableCellEventHandler(SetEnableValues1);
            _aColumnTextColumn.MappingName = "REALEXECDATE";
            _aColumnTextColumn.HeaderText = "实际执行";
            _aColumnTextColumn.Width = 60;
            _aColumnTextColumn.NullText = "";
            _aColumnTextColumn.ReadOnly = true;
            dataGrid_TempOrder.TableStyles[0].GridColumnStyles.Add(_aColumnTextColumn);


            //add by jchl 临时医嘱增加剂型 2016-06-15
            DataGridEnableTextBoxColumn dbcJx = new DataGridEnableTextBoxColumn(26);
            //_aColumnTextColumn.CheckCellEnabled += new DataGridEnableTextBoxColumn.EnableCellEventHandler(SetEnableValues1);
            dbcJx.MappingName = "剂型";
            dbcJx.HeaderText = "剂型";
            dbcJx.Width = 0;
            dbcJx.NullText = "";
            dbcJx.ReadOnly = true;
            dataGrid_TempOrder.TableStyles[0].GridColumnStyles.Add(dbcJx);

            //add by jchl 临时医嘱增加部位 2017-06-28
            DataGridEnableTextBoxColumn dbcPlace = new DataGridEnableTextBoxColumn(27);
            dbcPlace.CheckCellEnabled += new DataGridEnableTextBoxColumn.EnableCellEventHandler(SetEnableValues1);
            dbcPlace.MappingName = "place";
            dbcPlace.HeaderText = "部位";
            dbcPlace.Width = 300;
            dbcPlace.NullText = "";
            dbcPlace.ReadOnly = true;
            dataGrid_TempOrder.TableStyles[0].GridColumnStyles.Add(dbcPlace);

            //DataGridEnableTextBoxColumn dbcShen = new DataGridEnableTextBoxColumn(6);
            //dbcShen.CheckCellEnabled += new DataGridEnableTextBoxColumn.EnableCellEventHandler(SetEnableValues1);
            //dbcShen.MappingName = "审";
            //dbcShen.HeaderText = "审";
            //dbcShen.Width = 20;
            //dbcShen.NullText = "";
            //dbcShen.ReadOnly = true;
            //dataGrid_TempOrder.TableStyles[0].GridColumnStyles.Add(dbcShen);


            if (cfg6088.Config.Trim() == "1")
            {
                (dataGrid_TempOrder.TableStyles[0].GridColumnStyles[3] as DataGridEnableTextBoxColumn).TextBox.Click += new EventHandler(TextBoxT_Click);
            }
        }

        void TextBox_MouseDown(object sender, MouseEventArgs e)
        {
            SendKeys.Send("{Esc}");
        }

        void TextBox_MouseUp(object sender, MouseEventArgs e)
        {
            SendKeys.Send("{Esc}");
        }



        void TextBox_Leave(object sender, EventArgs e)
        {
            DataTable myTb = (DataTable)dataGrid_TempOrder.DataSource;
            int nrow = dataGrid_TempOrder.CurrentCell.RowNumber;
            int ncol = dataGrid_TempOrder.CurrentCell.ColumnNumber;
            string ColumnName = this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();
            if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim() == "")
                return;
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;

            string value = (sender as TextBox).Text.ToString();
            if (ColumnName != "剂量" && ColumnName != "天数" && ColumnName != "频率")
                return;
            if (ColumnName == "剂量")
            {
                string jl = myTb.Rows[nrow]["剂量"].ToString();

                if (myTb.Rows[nrow]["天数"].ToString().Trim() != "" && (jl.Trim() == "" || decimal.Parse(jl) == decimal.Parse((value == "" || value == null) ? jl : value)))
                    return;
                if (value != "")
                    myTb.Rows[nrow]["剂量"] = decimal.Parse(value);
                else if (jl != "")
                {
                    myTb.Rows[nrow]["剂量"] = decimal.Parse(jl);
                }
                else if (value == "" && jl == "")
                    myTb.Rows[nrow]["剂量"] = 1;

            }
            if (ColumnName == "天数")
            {
                string ts = myTb.Rows[nrow]["天数"].ToString();

                //if (myTb.Rows[nrow]["天数"].ToString().Trim() != "" && (ts.Trim() == "" || Convert.ToInt32(ts) == Convert.ToInt32((value == "" || value == null) ? ts : value)))
                //    return;
                if (value != "")
                    myTb.Rows[nrow]["天数"] = decimal.Parse(value);
                else if (ts != "")
                {
                    myTb.Rows[nrow]["天数"] = decimal.Parse(ts);
                }
                else if (value == "" && ts == "")
                    myTb.Rows[nrow]["天数"] = 1;
                // by add yaokx 2014-05-26 住院医生站增加麻醉药品控制用量（多天） 
                //if (cfg6094.Config != "")
                //{
                //    DataTable _dt = InstanceForm._database.GetDataTable("select * from vi_yp_ypcd where cjid = " + myTb.Rows[nrow]["hoitem_id"] + " and (mzyp != 0 or djyp != 0 or JSYP != 0)");
                //    if (_dt.Rows.Count > 0)
                //    {
                //        if (_dt.Rows[0]["mzyp"].ToString() == "True")
                //        {
                //            if (Convert.ToInt32(myTb.Rows[nrow]["天数"].ToString()) > Convert.ToInt32(cfg6094.Config))
                //            {
                //                myTb.Rows[nrow]["天数"] = 1;
                //            }
                //        }
                //    }
                //}
            }
            if (ColumnName == "频率")
            {
                string bl = myTb.Rows[nrow]["频率"].ToString();
                if (myTb.Rows[nrow]["频率"].ToString().Trim() != "" && (bl == "" || bl == value))
                    return;
                myTb.Rows[nrow]["频率"] = (sender as TextBox).Text.ToString().Trim();
            }
            dataGrid_TempOrder.EndEdit(this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol], nrow, true);
            int grouprowstart = GetGroupBeginRow(myTb, nrow);//当前行医嘱这个组的第一行

            #region 自动转换这组的天数和总量
            for (int x = nrow; nrow < myTb.Rows.Count; x++)
            {
                int firstGrouprow = GetGroupBeginRow(myTb, x);
                if (firstGrouprow != grouprowstart)//如果不是同医嘱就退出
                    return;
                if (Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString()) >= 2)//只有保存和转抄的
                    return;
                DataTable tb = FrmMdiMain.Database.GetDataTable("select EXECNUM from JC_FREQUENCY where NAME='" + myTb.Rows[firstGrouprow]["频率"].ToString() + "'");
                int pc = 1;
                if (tb != null && tb.Rows.Count > 0)
                {
                    pc = int.Parse(tb.Rows[0]["EXECNUM"].ToString());
                }
                if (myTb.Rows[x]["医嘱内容"].ToString().Trim() == "")
                    break;

                if (IsGroupFirstRow(myTb, x))
                {

                    if (myTb.Rows[x]["天数"].ToString().Trim() == "")
                        myTb.Rows[x]["天数"] = "1";
                }
                else
                {
                    //查找前面医嘱天数
                    for (int i = x - 1; i >= 0; i--)
                    {
                        if (myTb.Rows[i]["天数"].ToString() != "")
                        {
                            myTb.Rows[x]["天数"] = myTb.Rows[i]["天数"];
                            break;
                        }
                    }
                }
                if (myTb.Rows[x]["天数"].ToString().Trim() == "")
                {
                    myTb.Rows[x]["天数"] = "1";
                }

                int dosage = 1;
                decimal ts = decimal.Parse(myTb.Rows[x]["天数"].ToString());
                //中草药的处理
                if (GetGroupType(myTb, x) == "3-中草药")
                {
                    firstGrouprow = GetGroupBeginRow(myTb, x);
                    if (myTb.Rows[firstGrouprow]["剂数"].ToString().Trim() != "")
                        dosage = Convert.ToInt32(myTb.Rows[firstGrouprow]["剂数"].ToString().Trim());
                    ts = 1;
                    pc = 1;
                }
                DataGridTextBoxColumn txtColts = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["天数"];
                decimal zl = decimal.Parse(myTb.Rows[x]["剂量"].ToString()) * pc * ts;//不需要剂数
                myTb.Rows[x]["总量"] = zl.ToString();
                //总动换算药房单位
                GetYPdwtb(myTb, x, zl);
            }
            #endregion
            //throw new Exception("The method or operation is not implemented.");
        }

        /// <summary>
        /// 获得药品单位
        /// </summary>
        /// <param name="cjid"></param>
        /// <param name="execdept"></param>
        /// <param name="zsl"></param>
        /// <param name="dwlx"></param>
        /// <returns></returns>
        private void GetYPdwtb(DataTable myTb, int x, decimal zsl)
        {

            if (myTb.Rows[x]["xmly"].ToString() == "2")
                return;
            //总动换算药房单位
            string _dwlx = "1";
            if (myTb.Rows[x]["jldwlx"].ToString().Trim() != "")
                _dwlx = myTb.Rows[x]["jldwlx"].ToString().Trim();

            string _num = zsl.ToString();
            string _cjid = myTb.Rows[x]["hoitem_id"].ToString();
            string _execdeptID = myTb.Rows[x]["执行科室"].ToString();//执行科室为-1跳出
            //如果是药库单位
            if (_dwlx == "3")
            {
                if (_dwlx.IndexOf("9") >= 0 || myTb.Rows[x]["dwlx"].ToString().IndexOf("9") >= 0)
                    myTb.Rows[x]["dwlx"] = 93;
                else
                    myTb.Rows[x]["dwlx"] = 3;
            }
            else
            {
                _dwlx = _dwlx.Replace("9", "");
                if (_dwlx.Trim() == "")
                    _dwlx = "1";
                string sSql = "EXEC SP_FUN_DW_NUM " + _dwlx + "," + _num + ",1,1,1," + _cjid + "," + _execdeptID + ",0";
                DataTable yp = InstanceForm._database.GetDataTable(sSql);
                if (yp != null && yp.Rows.Count > 0)
                {
                    myTb.Rows[x]["总量"] = yp.Rows[0]["yl"].ToString();
                    if (myTb.Rows[x]["dwlx"].ToString().IndexOf("9") >= 0)
                        myTb.Rows[x]["dwlx"] = 94;
                    else
                        myTb.Rows[x]["dwlx"] = 4;
                    myTb.Rows[x]["总单位"] = yp.Rows[0]["unit"].ToString();
                }
            }

        }

        private bool dataGrid_TempOrder_myKeyDown(ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData)
       {
            if (outType == true && lg != 0) return true;

            //变量定义
            long keyInt = Convert.ToInt32(keyData);

            int nrow, ncol;
            string ColumnName = "";
            //变量付初始值
            DataTable myTb = ((DataTable)this.dataGrid_TempOrder.DataSource);
            nrow = this.dataGrid_TempOrder.CurrentCell.RowNumber;
            ncol = this.dataGrid_TempOrder.CurrentCell.ColumnNumber;
            ColumnName = this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();

            //除跳格键外，其他的全屏蔽,必须放在最前面
            if (keyInt == 9 || keyInt == 37 || keyInt == 39 || (keyInt == 38 && this.GrdSel.Visible == false && (ColumnName != "单位" && ColumnName != "总单位"))) return false;
            //by add yaokx 临时医嘱向下移动
            if (this.GrdSel.Visible == false && keyInt == 40 && ColumnName != "单位") return false;

            //			if(this.GrdSel.Visible==false && keyInt==40)//"↓"键
            //			{
            //				return false;
            //			}

            shortcut(keyData);


            //if (this.GrdSel.Visible == false && keyInt == 40)//"↓"键
            //{
            //    if (ColumnName == "单位")
            //    {
            //        DataGridTextBoxColumn dgtb = (DataGridTextBoxColumn)dataGrid_TempOrder.TableStyles[0].GridColumnStyles["单位"];
            //        if (dgtb.TextBox.Controls.Count > 0)
            //        {
            //            ComboBox cmb = (ComboBox)dgtb.TextBox.Controls[0];
            //            cmb.Focus();
            //            //cmb.KeyDown += new KeyEventHandler(cmb_KeyDown);
            //            cmb.DroppedDown = true;
            //            return true;
            //        }
            //        return false;
            //    }
            //    else
            //    {
            //        return false;
            //    }
            //}
            //if(ColumnName == "单位")
            //    this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol].ReadOnly=true;
            //确定此列不为只读
            if (!(ColumnName == "单位" && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1"
                && myTb.Rows[nrow]["执行科室"].ToString().Trim() == "-1" && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1
                ))
            {

                if (this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol].ReadOnly == true && (keyInt >= 65 && keyInt <= 122)) return true;
            }

            if (cfg6088.Config.Trim() == "1")
            {
                //判断当前行可否编辑   add by jchl(否则最后一行空行未校验任何状态也可开医嘱)
                if (CanEnterData(myTb, nrow) == false) return true;
            }
            else
            {
                //判断当前行可否编辑
                if (CanEnterData(myTb, nrow) == false) return true;
            }
            //Modify by zouchihua 总量不能输入附属
            if (ColumnName == "总量" && (keyInt == 189))
            {
                return true;
            }
            if (ColumnName == "天数")
            {
                if ((keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105 || keyInt == 8))
                    return false;
                else
                    if (keyInt != 13)
                        return true;
            }

            //项目控制总量单位不能输入 总单位不能改变
            if (ColumnName == "总单位" && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 2)
            {

                SendKeys.Send("{tab}");
                return true;
            }
            //只允许回车键
            if (ColumnName == "总单位" && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1 && keyInt != 13)
            {
                return true;
            }
            #region //总量控制 项目不能输入
            //项目控制总量控制不能输入 总量控制不能改变
            if (ColumnName == "总量" && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 2 && keyInt != 13 && keyInt != Convert.ToInt32(Keys.Escape))//esc
            {
                //SendKeys.Send("{tab}");
                return true;
            }
            #endregion
            if (ColumnName == "天数" && IsGroupFirstRow(myTb, nrow) == false)//天数不是一组第一行不能输入
            {
                if (keyInt == 13)
                    SendKeys.Send("{tab}");
                return true;
            }

            #region "Modify by jchl"
            //add by zouchihua 2014-4-29 医技发送了不能更改
            if (cfg6207.Config.Equals("0") && (cfg6220.Config.Trim() == "1" || myQuery.IsDeptOk(DeptID.ToString())))
            {
            }
            else //(cfg6207.Config.Equals("1"))
            {
                string yzTypeStr = myTb.Rows[nrow]["类型"].ToString();
                if (myTb.Rows[nrow]["status_flag"].ToString().Trim() == "1")
                {
                    MessageBox.Show("医嘱发送了不能进行修改！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return true;
                }
            }
            #endregion
            if (myTb.Rows[nrow]["Order_Doc"] != System.DBNull.Value)
            {
                //判断是否能编辑其他医生医嘱
                if (cfg6219.Config.Trim().Equals("1"))
                {
                    if (doctor != null && (doctor.TypeID == 1 || doctor.TypeID == 2))
                    {

                    }
                    else
                    {
                        if (!(myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim() == "" || long.Parse(myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim()) <= 0) && myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim() != InstanceForm._currentUser.EmployeeId.ToString().Trim())
                        {
                            MessageBox.Show("对不起，非本人开立的医嘱，需要副主任及以上医师才能修改其他医生医嘱！！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            return true;
                        }
                    }
                }
                else
                {
                    if (!(myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim() == "" || long.Parse(myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim()) <= 0) && myTb.Rows[nrow]["ORDER_DOC"].ToString().Trim() != InstanceForm._currentUser.EmployeeId.ToString().Trim())
                    {
                        MessageBox.Show("你无权修改其他医生医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        return true;
                    }
                }
            }


            if (keyInt >= 46 && keyInt <= 127 && keyInt != 121) XG2 = true;//修改标记 Modify by zouchihua 按F10（保存）时不要改变标记

            string leixing = myQuery.GetyzTypeCode(myTb.Rows[nrow]["类型"].ToString());
            int flag = 0;
            if (leixing != "1" && leixing != "2" && leixing != "3")
            {
                flag = 1;
            }
            try
            {
                #region 跳格控制
                //把回车事件转换成跳格	
                if (keyInt == 13)
                {
                    if (ColumnName == "开始时间")
                    {
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	

                    }
                    //ColumnName == "滴量"
                    if (ColumnName == "滴量")//&& IsGroupFirstRow(myTb, nrow) == false) //改造之后
                    {
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        ////						SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	放开
                        // DataGridCell Crucell = new DataGridCell(nrow + 1, 6);
                        // this.dataGrid_TempOrder.CurrentCell = Crucell;
                        #region  modify by caicheng 2013-05-28
                        if (this.GrdSel.VisibleColumnCount > 0 && this.GrdSel.CaptionText == "滴量")
                        {
                            if (this.GrdSel.CurrentRowIndex >= 0)
                            {
                                GetCardDataDL(this.GrdSel.CurrentRowIndex, this.dataGrid_TempOrder);//获得选项卡 
                            }
                            this.GrdSel.Refresh();
                        }
                        #endregion

                        int curindexs = this.dataGrid_TempOrder.CurrentCell.RowNumber;
                        int grouprowstart = GetGroupBeginRow(myTb, nrow);//当前行医嘱这个组的第一行

                        #region 自动转换这组的天数和总量
                        for (int x = nrow; nrow < myTb.Rows.Count; x++)
                        {
                            int firstGrouprow = GetGroupBeginRow(myTb, x);
                            if (firstGrouprow != grouprowstart)//如果不是同医嘱就退出 Modify by jchl_总量
                                break;
                            DataTable tb = FrmMdiMain.Database.GetDataTable("select EXECNUM from JC_FREQUENCY where NAME='" + myTb.Rows[firstGrouprow]["频率"].ToString() + "'");
                            int pc = 1;
                            if (tb != null && tb.Rows.Count > 0)
                            {
                                pc = int.Parse(tb.Rows[0]["EXECNUM"].ToString());
                            }
                            if (myTb.Rows[x]["医嘱内容"].ToString().Trim() == "")
                                break;

                            if (IsGroupFirstRow(myTb, x))
                            {

                                if (myTb.Rows[x]["天数"].ToString().Trim() == "")
                                    myTb.Rows[x]["天数"] = "1";
                            }
                            else
                            {
                                //查找前面医嘱天数
                                for (int i = x - 1; i >= 0; i--)
                                {
                                    if (myTb.Rows[i]["天数"].ToString() != "")
                                    {
                                        myTb.Rows[x]["天数"] = myTb.Rows[i]["天数"];
                                        break;
                                    }
                                }
                            }
                            if (myTb.Rows[x]["天数"].ToString().Trim() == "")
                            {
                                myTb.Rows[x]["天数"] = "1";
                            }
                            int dosage = 1;
                            decimal ts = decimal.Parse(myTb.Rows[x]["天数"].ToString());
                            //中草药的处理
                            if (GetGroupType(myTb, x) == "3-中草药")
                            {
                                if (myTb.Rows[firstGrouprow]["剂数"].ToString().Trim() != "")
                                    dosage = Convert.ToInt32(myTb.Rows[firstGrouprow]["剂数"].ToString().Trim());
                                ts = 1;//中草药与天数无关
                                pc = 1;
                            }

                            DataGridTextBoxColumn txtColts = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["天数"];
                            decimal zl = decimal.Parse(myTb.Rows[x]["剂量"].ToString()) * pc * ts;//不需要剂数
                            myTb.Rows[x]["总量"] = zl.ToString();
                            //总动换算药房单位
                            GetYPdwtb(myTb, x, zl);
                        }
                        #endregion

                        //Modify by jchl
                        //SendKeys.Send("{tab}");
                        if (dataGrid_TempOrder.TableStyles[0].GridColumnStyles["天数"].Width != 0)
                        {
                            SendKeys.Send("{tab}");
                        }
                        else
                        {
                            SendKeys.Send("{tab}");
                            SendKeys.Send("{tab}");
                        }
                        return true;
                    }
                    //add by zouchihua 2012-5-22
                        if (ColumnName == "总单位")
                    {
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        ////						SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	放开
                        //总单位不允许输入
                        //cmb_SelectionChangeCommitted(cmb, null);
                        SendKeys.Send("{Down}");
                        DataGridCell Crucell = new DataGridCell(nrow, 7);
                        this.dataGrid_TempOrder.CurrentCell = Crucell;
                        return true;
                    }
                    if (ColumnName == "剂数" && Convert.ToString(myTb.Rows[nrow]["类型"]) != "3-中草药")
                    {
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        //						SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                    }
                    //add by zouchihua 2012-5-28 剂数
                    if (ColumnName == "剂数" && Convert.ToString(myTb.Rows[nrow]["类型"]) == "3-中草药")
                    {

                        SendKeys.Send("{tab}"); //跳格
                        this.dataGrid_TempOrder.EndEdit(this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol], nrow, false);
                        int grouprowstart = GetGroupBeginRow(myTb, nrow);//当前行医嘱这个组的第一行
                        #region 自动转换这组的天数和总量
                        for (int x = nrow; nrow < myTb.Rows.Count; x++)
                        {
                            int firstGrouprow = GetGroupBeginRow(myTb, x);
                            if (firstGrouprow != grouprowstart)//如果不是同医嘱就退出 Modify by jchl_总量
                                break;
                            DataTable tb = FrmMdiMain.Database.GetDataTable("select EXECNUM from JC_FREQUENCY where NAME='" + myTb.Rows[firstGrouprow]["频率"].ToString() + "'");
                            int pc = 1;
                            if (tb != null && tb.Rows.Count > 0)
                            {
                                pc = int.Parse(tb.Rows[0]["EXECNUM"].ToString());
                            }
                            if (myTb.Rows[x]["医嘱内容"].ToString().Trim() == "")
                                break;

                            if (IsGroupFirstRow(myTb, x))
                            {

                                if (myTb.Rows[x]["天数"].ToString().Trim() == "")
                                    myTb.Rows[x]["天数"] = "1";
                            }
                            else
                            {
                                //查找前面医嘱天数
                                for (int i = x - 1; i >= 0; i--)
                                {
                                    if (myTb.Rows[i]["天数"].ToString() != "")
                                    {
                                        myTb.Rows[x]["天数"] = myTb.Rows[i]["天数"];
                                        break;
                                    }
                                }
                            }
                            if (myTb.Rows[x]["天数"].ToString().Trim() == "")
                            {
                                myTb.Rows[x]["天数"] = "1";
                            }
                            int dosage = 1;
                            decimal ts = decimal.Parse(myTb.Rows[x]["天数"].ToString());
                            //中草药的处理
                            if (GetGroupType(myTb, x) == "3-中草药")
                            {
                                firstGrouprow = GetGroupBeginRow(myTb, x);
                                if (myTb.Rows[firstGrouprow]["剂数"].ToString().Trim() != "")
                                    dosage = Convert.ToInt32(myTb.Rows[firstGrouprow]["剂数"].ToString().Trim());
                                ts = 1;
                                pc = 1;
                            }
                            DataGridTextBoxColumn txtColts = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["天数"];
                            decimal zl = decimal.Parse(myTb.Rows[x]["剂量"].ToString()) * pc * ts;//不需要剂数
                            myTb.Rows[x]["总量"] = zl.ToString();
                            //总动换算药房单位
                            GetYPdwtb(myTb, x, zl);
                        }
                        #endregion

                    }
                    if (flag == 0)
                    {
                        if (ColumnName == "剂量" && (IsGroupFirstRow(myTb, nrow) == false && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) != 1))
                        {
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            SendKeys.Send("{tab}"); //跳格	
                            //						SendKeys.Send("{tab}"); //跳格	
                        }
                    }
                    if (ColumnName == "单位" &&
                        IsGroupFirstRow(myTb, nrow) == false

                        )
                    {
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        ////SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        //SendKeys.Send("{tab}"); //跳格	
                        if (ColumnName == "单位" && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1
                    &&
                     (ColumnName == "单位" && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1"
                && myTb.Rows[nrow]["执行科室"].ToString().Trim() == "-1"
                )
                    )
                        {
                            //不作任何处理
                        }
                        else
                            //add by zouchihua  2012-4-22 提交单位
                            cmb_SelectionChangeCommitted(cmb, null);


                        //Modify by zouchihua 2011-12-26
                        DataGridCell Crucell = new DataGridCell(nrow, 16);//6医嘱内容
                        this.dataGrid_TempOrder.CurrentCell = Crucell;
                        return true;
                    }
                    if (ColumnName == "单位" && IsGroupFirstRow(myTb, nrow) == true
                       && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1
                       && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1"
            && myTb.Rows[nrow]["执行科室"].ToString().Trim() == "-1"
                       )
                    {
                        DataGridCell Crucell = new DataGridCell(nrow, 10);
                        this.dataGrid_TempOrder.CurrentCell = Crucell;
                        return true;
                    }
                    //Modify By Tany 2015-01-28 如果是纯数字并且选择框没弹出，则弹出选择框
                    if (ColumnName == "医嘱内容" && this.GrdSel.Visible == false)
                    {
                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (Convertor.IsNumeric(SelData))
                        {
                            //显示查到的数据
                            ShowOrderSelCard(SelData, 2, "", this.dataGrid_TempOrder);
                            //不屏蔽输入
                            return true;
                        }
                    }
                    if (ColumnName == "医嘱内容")
                    {
                        if (strHlyyType == "大通新")
                        {
                            try
                            {
                                //Modify by Zhujh 2017-02-09
                                DataGridEx[] dgv = new DataGridEx[2];
                                dgv[0] = dataGrid_LongOrder;
                                dgv[1] = dataGrid_TempOrder;
                                Hlyyfx(dgv, 1, 0);
                            }
                            catch { }
                        }
                    }

                    SendKeys.Send("{tab}"); //跳格	
                }
                #endregion

                #region 总量录入
                if (ColumnName == "总量")
                {
                    //数字键\删除键\小数点
                    if ((keyInt >= 48 && keyInt <= 57) || (keyInt >= 96 && keyInt <= 105) || keyInt == 190 || keyInt == 8 || keyInt == 110)
                    {
                        return false;
                    }

                    this.dataGrid_TempOrder.EndEdit(this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol], nrow, false);


                }
                #endregion

                #region 剂量的录入
                if (ColumnName == "剂量")
                {
                    //					if((keyInt>=65 && keyInt<=90) || keyInt==189 || keyInt==109) return true;
                    //数字键\删除键\小数点
                    if ((keyInt >= 48 && keyInt <= 57) || (keyInt >= 96 && keyInt <= 105) || keyInt == 190 || keyInt == 8 || keyInt == 110)
                    {
                        return false;
                    }

                    if (keyInt == 13)
                    {
                        //						string typeNum=myQuery.GetyzTypeCode(myTb.Rows[nrow]["类型"].ToString());
                        //
                        //						if(typeNum=="1" )
                        //						{
                        //							string strItem="";
                        //							if(char.IsNumber(myTb.Rows[nrow]["HOItem_ID"].ToString(),0)==true) strItem=myTb.Rows[nrow]["Item_Code"].ToString();
                        //							else strItem=myTb.Rows[nrow]["HOItem_ID"].ToString();
                        //							decimal JL=myQuery.GetDose(strItem);
                        //							if(Convert.ToDecimal(myTb.Rows[nrow]["剂量"].ToString()) >= JL*10)
                        //							{
                        //								if(MessageBox.Show(myTb.Rows[nrow]["剂量"].ToString()+myTb.Rows[nrow]["单位"].ToString()+"剂量太大，你确定使用这个剂量吗？","警告",System.Windows.Forms.MessageBoxButtons.YesNo,System.Windows.Forms.MessageBoxIcon.Warning)==System.Windows.Forms.DialogResult.No)
                        //								{
                        //								
                        //									myTb.Rows[nrow]["剂量"]=Decimal.Round(JL,2);
                        //									this.dataGrid_TempOrder.Refresh();
                        //									this.dataGrid_TempOrder.Focus();
                        //									DataGridTextBoxColumn txtCol=(DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                        //									DataGridCell myCell=new DataGridCell(nrow,ncol);
                        //									this.dataGrid_TempOrder.CurrentCell=myCell ;	
                        //									txtCol.TextBox.Text=Decimal.Round(JL,2).ToString();
                        //									txtCol.TextBox.BackColor=System.Drawing.Color.SkyBlue;	
                        //								
                        //								}
                        //								else if(IsGroupFirstRow(myTb,nrow)==true)
                        //								{
                        //									//		this.dataGrid_LongOrder.Focus();
                        //									DataGridCell myCell=new DataGridCell(nrow,ncol+2);
                        //									this.dataGrid_TempOrder.CurrentCell=myCell ;	
                        //									DataGridTextBoxColumn txtCol=(DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol+2];
                        //									txtCol.TextBox.BackColor=System.Drawing.Color.SkyBlue;
                        //								}
                        //								
                        //							}
                        //
                        //						}
                        //						else
                        //						{
                        this.dataGrid_TempOrder.EndEdit(this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol], nrow, false);
                        //剂量也改变
                        if ((Convert.ToString(myTb.Rows[nrow]["类型"]) == "1-西药"
                            || Convert.ToString(myTb.Rows[nrow]["类型"]) == "2-中成药"
                            || Convert.ToString(myTb.Rows[nrow]["类型"]) == "3-中草药")
                            && Convert.ToInt32(myTb.Rows[nrow]["xmly"]) == 1)
                        {
                            #region 自动获得总量和天数
                            this.dataGrid_TempOrder.EndEdit(this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol], nrow, false);
                            DataGridTextBoxColumn txtColjl = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["剂量"];
                            DataGridTextBoxColumn txtColpl = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["频率"];
                            int firstGrouprow = GetGroupBeginRow(myTb, nrow);
                            DataTable tb = FrmMdiMain.Database.GetDataTable("select EXECNUM from JC_FREQUENCY where NAME='" + myTb.Rows[firstGrouprow]["频率"].ToString() + "'");
                            int pc = 1;
                            if (tb != null && tb.Rows.Count > 0)
                            {
                                pc = int.Parse(tb.Rows[0]["EXECNUM"].ToString());
                            }

                            if (myTb.Rows[nrow]["天数"].ToString().Trim() == "")
                            {
                                if (IsGroupFirstRow(myTb, nrow))
                                {
                                    myTb.Rows[nrow]["天数"] = "1";
                                }
                                else
                                {
                                    //查找前面医嘱天数
                                    for (int i = nrow - 1; i >= 0; i--)
                                    {
                                        if (myTb.Rows[i]["天数"].ToString() != "")
                                        {
                                            myTb.Rows[nrow]["天数"] = myTb.Rows[i]["天数"];
                                            break;
                                        }
                                    }
                                }
                                if (myTb.Rows[nrow]["天数"].ToString().Trim() == "")
                                {
                                    myTb.Rows[nrow]["天数"] = "1";
                                }

                            }
                            int dosage = 1;
                            decimal ts = decimal.Parse(myTb.Rows[nrow]["天数"].ToString());
                            //中草药的处理
                            if (GetGroupType(myTb, nrow) == "3-中草药")
                            {
                                firstGrouprow = GetGroupBeginRow(myTb, nrow);
                                if (myTb.Rows[firstGrouprow]["剂数"].ToString().Trim() != "")
                                    dosage = Convert.ToInt32(myTb.Rows[firstGrouprow]["剂数"].ToString().Trim());
                                ts = 1;
                                pc = 1;
                            }
                            DataGridTextBoxColumn txtColts = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["天数"];
                            decimal zl = decimal.Parse(myTb.Rows[nrow]["剂量"].ToString()) * ts * pc;//不需要剂数
                            myTb.Rows[nrow]["总量"] = zl.ToString();
                            //总动换算药房单位
                            GetYPdwtb(myTb, nrow, zl);
                            #endregion
                        }
                        else
                        {

                            #region 自动获得总量和天数
                            this.dataGrid_TempOrder.EndEdit(this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol], nrow, false);
                            DataGridTextBoxColumn txtColjl = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["剂量"];
                            DataGridTextBoxColumn txtColpl = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["频率"];
                            int firstGrouprow = GetGroupBeginRow(myTb, nrow);

                            DataTable tb = FrmMdiMain.Database.GetDataTable("select EXECNUM from JC_FREQUENCY where NAME='" + myTb.Rows[firstGrouprow]["频率"].ToString() + "'");
                            int pc = 1;
                            if (tb != null && tb.Rows.Count > 0)
                            {
                                pc = int.Parse(tb.Rows[0]["EXECNUM"].ToString());
                            }

                            if (myTb.Rows[nrow]["天数"].ToString().Trim() == "")
                            {
                                if (IsGroupFirstRow(myTb, nrow))
                                {
                                    myTb.Rows[nrow]["天数"] = "1";
                                }
                                else
                                {
                                    //查找前面医嘱天数
                                    for (int i = nrow - 1; i >= 0; i--)
                                    {
                                        if (myTb.Rows[i]["天数"].ToString() != "")
                                        {
                                            myTb.Rows[nrow]["天数"] = myTb.Rows[i]["天数"];
                                            break;
                                        }
                                    }
                                }
                                if (myTb.Rows[nrow]["天数"].ToString().Trim() == "")
                                {
                                    myTb.Rows[nrow]["天数"] = "1";
                                }

                            }
                            int dosage = 1;
                            decimal ts = decimal.Parse(myTb.Rows[nrow]["天数"].ToString());
                            //中草药的处理
                            if (GetGroupType(myTb, nrow) == "3-中草药")
                            {
                                firstGrouprow = GetGroupBeginRow(myTb, nrow);
                                if (myTb.Rows[firstGrouprow]["剂数"].ToString().Trim() != "")
                                    dosage = Convert.ToInt32(myTb.Rows[firstGrouprow]["剂数"].ToString().Trim());
                                ts = 1;
                                pc = 1;
                            }
                            DataGridTextBoxColumn txtColts = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["天数"];
                            decimal zl = decimal.Parse(myTb.Rows[nrow]["剂量"].ToString()) * ts * pc;//不需要剂数
                            myTb.Rows[nrow]["总量"] = zl.ToString();
                            //总动换算药房单位
                            //GetYPdwtb(myTb, nrow, zl);
                            #endregion
                        }
                        //库存的判断，仅对药品 Add by Tany 2007-08-30
                        if ((Convert.ToString(myTb.Rows[nrow]["类型"]) == "1-西药"
                            || Convert.ToString(myTb.Rows[nrow]["类型"]) == "2-中成药"
                            || Convert.ToString(myTb.Rows[nrow]["类型"]) == "3-中草药")
                            && Convert.ToInt32(myTb.Rows[nrow]["xmly"]) == 1
                            && Convert.ToInt32(myTb.Rows[nrow]["执行科室"]) > 0)
                        {
                            DataTable medTb = myQuery.GetYPInfo(Convert.ToInt32(myTb.Rows[nrow]["hoitem_id"]), Convert.ToDouble(myTb.Rows[nrow]["总量"]), Convert.ToInt32(myTb.Rows[nrow]["dwlx"]), Convert.ToInt32(myTb.Rows[nrow]["执行科室"]));
                            decimal _ypkc = Convert.ToDecimal(medTb.Rows[0]["ylkc"]);//Modify by tany 2011-03-28 直接使用药品信息里面的用量库存 myQuery.GetYPNum(Convert.ToInt32(myTb.Rows[nrow]["hoitem_id"]), Convert.ToInt32(myTb.Rows[nrow]["执行科室"]));
                            if (Convert.ToDecimal(medTb.Rows[0]["yl"]) > _ypkc)
                            {
                                MessageBox.Show("该种药品当前库存为： " + _ypkc + " ，医嘱每次需要 " + medTb.Rows[0]["yl"].ToString().Trim() + medTb.Rows[0]["unit"].ToString().Trim() + " 不能满足当前数量，请与相关药房联系！");
                                DeleteOrder(dataGrid_TempOrder, 0, -1);
                                return false;
                            }
                        }
                        if (Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) != 1)
                        {
                            SendKeys.Send("{tab}"); //跳格	

                        }
                        //	
                    }
                    else return true;
                }
                #endregion

                #region 首日执行次数
                if (ColumnName == "首日执行次数" && (keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105 || keyInt == 8))
                {
                    return false;
                }
                #endregion
                #region 滴量录入 modify by caicheng
                if (ColumnName == "滴量")
                {
                    if (keyInt >= 65 && keyInt <= 90)//1、判断是不是输入了英文字
                    {
                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        ShowDLSelCard(SelData + Convert.ToChar(keyInt), this.dataGrid_TempOrder);
                    }
                    else if (keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105)//2、判断是不是输入了数字键
                    {
                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        ShowDLSelCard(SelData + Convert.ToChar(keyInt), this.dataGrid_TempOrder);
                    }
                    if (keyInt == 8)
                    {
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        ShowDLSelCard("", this.dataGrid_TempOrder);
                    }
                    //4、判断是否输入了向下键
                    if (keyInt == 40 && this.GrdSel.Visible == true)
                    {

                        if (this.GrdSel.VisibleRowCount > 0)
                        {
                            this.GrdSel.CurrentCell = new DataGridCell(0, 1);
                            this.GrdSel.Focus();
                        }
                        else
                        {
                            this.GrdSel.Focus();
                        }
                        //屏蔽输入
                        return true;
                    }
                }
                #endregion

                #region 滴量录入
                if (ColumnName == "滴量" && (keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105 || keyInt == 8))
                {
                    return false;
                }
                #endregion

                #region 按键整体控制

                //判断是不是控制键,针对所有列   //====================================================================================================================
                switch (keyInt)
                {
                    case 9:
                        #region TAB键控制
                        if (ncol == 8) //总数列
                        {
                            if (myTb.Rows[nrow]["医嘱内容"].ToString() == "")
                            {
                                return true;
                            }

                        }
                        break;
                        #endregion
                    case 13:
                        #region 回车键控制

                        //add by zouchihua 2012-6-20 天数录入后回车
                        if (ColumnName == "天数")
                        {
                            this.dataGrid_TempOrder.EndEdit(this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol], nrow, false);
                            string Ntype = GetGroupType(myTb, nrow);
                            DataTable _dt = InstanceForm._database.GetDataTable("select * from vi_yp_ypcd where cjid = " + myTb.Rows[nrow]["HOitem_ID"] + " ");
                            //if (_dt.Rows.Count != 0)
                            //{
                            //    if (cfg6094.Config != "")
                            //    {
                            //        if (_dt.Rows[0]["mzyp"].ToString() == "True")
                            //        {
                            //            if (Convert.ToInt32(myTb.Rows[nrow]["天数"].ToString()) > Convert.ToInt32(cfg6094.Config))
                            //            {
                            //                myTb.Rows[nrow]["天数"] = "1";
                            //                MessageBox.Show("麻醉药品天数不能大于" + cfg6094.Config);
                            //            }
                            //        }
                            //    }
                            //}
                            if (Ntype == "1" || Ntype == "2" || Ntype == "3")
                            {
                                #region 判断本人是否可以开该药品医嘱（药品分级控制,临时医嘱不受限制）
                                if (!mz && !_hs && !hs && !_tszl)//非手术麻醉站和护士站
                                {
                                    DataTable _dt1 = InstanceForm._database.GetDataTable("select * from JC_ROLE_DOCTOR a left join JC_DOCTOR_TYPE b on a.YS_TYPEID=b.TYPE_ID  where employee_id = '" + YS_ID + "'");

                                    if (_dt.Rows.Count != 0 && _dt1.Rows.Count != 0)
                                    {
                                        //Modify by Zouchihua 增加药品分级控制的参数
                                        if (new SystemCfg(19004).Config == "1")
                                        {
                                            //Modify by zouchihua doctor.TypeID 改为zcjb 2012-10-10
                                            long TypeID = long.Parse(_dt1.Rows[0]["YS_TYPEID"].ToString());
                                            if (TypeID > Convert.ToInt64(_dt.Rows[0]["CFJB"]))
                                            {
                                                if (Convert.ToInt32(myTb.Rows[nrow]["天数"].ToString() == "" ? "0" : myTb.Rows[nrow]["天数"].ToString()) > 1)
                                                {
                                                    myTb.Rows[nrow]["天数"] = "1";
                                                    //FrmMessageBox.Show("此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                                    MessageBox.Show("【" + myTb.Rows[nrow]["医嘱内容"].ToString().Trim() + "】，此药品级别高于你现在的级别，受级别限制，天数只能为1天！\n");
                                                }
                                            }
                                        }
                                    }

                                }

                                #endregion
                            }
                            //DataGridTextBoxColumn txtColjl = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["剂量"];
                            //DataGridTextBoxColumn txtColpl = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["频率"];
                            //DataTable tb = FrmMdiMain.Database.GetDataTable("select EXECNUM from JC_FREQUENCY where NAME='" + myTb.Rows[nrow]["频率"].ToString() + "'");
                            //int pc = 1;
                            //if (tb != null && tb.Rows.Count > 0)
                            //{
                            //    pc = int.Parse(tb.Rows[0]["EXECNUM"].ToString());
                            //}

                            //if (myTb.Rows[nrow]["天数"].ToString().Trim() == "")
                            //{
                            //    if (IsGroupFirstRow(myTb, nrow))
                            //    {
                            //        myTb.Rows[nrow]["天数"] = "1";
                            //    }
                            //    else
                            //    {
                            //        //查找前面医嘱天数
                            //        for (int i = nrow - 1; i >= 0; i--)
                            //        {
                            //            if (myTb.Rows[i]["天数"].ToString() != "")
                            //            {
                            //                myTb.Rows[nrow]["天数"] = myTb.Rows[i]["天数"];
                            //                break;
                            //            }
                            //        }
                            //    }
                            //    if (myTb.Rows[nrow]["天数"].ToString().Trim() == "")
                            //    {
                            //        myTb.Rows[nrow]["天数"] = "1";
                            //    }

                            //}
                            //DataGridTextBoxColumn txtColts = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["天数"];
                            //decimal zl = decimal.Parse(myTb.Rows[nrow]["剂量"].ToString()) * pc * decimal.Parse(myTb.Rows[nrow]["天数"].ToString());
                            //myTb.Rows[nrow]["总量"]= zl.ToString();
                            int grouprowstart = GetGroupBeginRow(myTb, nrow);//当前行医嘱这个组的第一行
                            #region 自动转换这组的天数和总量
                            for (int x = nrow; nrow < myTb.Rows.Count; x++)
                            {
                                int firstGrouprow = GetGroupBeginRow(myTb, x);
                                if (firstGrouprow != grouprowstart)//如果不是同医嘱就退出 Modify by jchl_总量
                                    break;
                                DataTable tb = FrmMdiMain.Database.GetDataTable("select EXECNUM from JC_FREQUENCY where NAME='" + myTb.Rows[firstGrouprow]["频率"].ToString() + "'");
                                int pc = 1;
                                if (tb != null && tb.Rows.Count > 0)
                                {
                                    pc = int.Parse(tb.Rows[0]["EXECNUM"].ToString());
                                }
                                if (myTb.Rows[x]["医嘱内容"].ToString().Trim() == "")
                                    break;

                                if (IsGroupFirstRow(myTb, x))
                                {

                                    if (myTb.Rows[x]["天数"].ToString().Trim() == "")
                                        myTb.Rows[x]["天数"] = "1";
                                }
                                else
                                {
                                    //查找前面医嘱天数
                                    for (int i = x - 1; i >= 0; i--)
                                    {
                                        if (myTb.Rows[i]["天数"].ToString() != "")
                                        {
                                            myTb.Rows[x]["天数"] = myTb.Rows[i]["天数"];
                                            break;
                                        }
                                    }
                                }
                                if (myTb.Rows[x]["天数"].ToString().Trim() == "")
                                {
                                    myTb.Rows[x]["天数"] = "1";
                                }
                                int dosage = 1;
                                decimal ts = decimal.Parse(myTb.Rows[x]["天数"].ToString());
                                //中草药的处理
                                if (GetGroupType(myTb, x) == "3-中草药")
                                {
                                    firstGrouprow = GetGroupBeginRow(myTb, x);
                                    if (myTb.Rows[firstGrouprow]["剂数"].ToString().Trim() != "")
                                        dosage = Convert.ToInt32(myTb.Rows[firstGrouprow]["剂数"].ToString().Trim());
                                    ts = 1;
                                    pc = 1;
                                }
                                DataGridTextBoxColumn txtColts = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["天数"];
                                decimal zl = decimal.Parse(myTb.Rows[x]["剂量"].ToString()) * pc * ts;//不需要剂数
                                myTb.Rows[x]["总量"] = zl.ToString();
                                //总动换算药房单位
                                GetYPdwtb(myTb, x, zl);
                            }
                            #endregion

                        }

                        if (ColumnName == "医嘱内容")
                        {
                            //
                            if (this.GrdSel.VisibleColumnCount > 0 && this.GrdSel.CaptionText == "医嘱内容")
                            {
                                if (this.GrdSel.CurrentRowIndex >= 0)
                                {
                                    GetCardData(this.GrdSel.CurrentRowIndex, this.dataGrid_TempOrder);

                                    SendKeys.Send("{tab}"); //跳格
                                }
                                this.GrdSel.Refresh();
                            }
                        }
                        //4、判断是否输入了回车符,表示确定输入
                        if (ColumnName == "用法")
                        {
                            //如果有数据
                            if (this.GrdSel.VisibleRowCount > 0 && this.GrdSel.CaptionText == "用法")
                                GetCardDataUsage(0, this.dataGrid_TempOrder);
                            if (GetGroupType(myTb, nrow) == "3-中草药")
                            {
                                //this.ballonToolTip1.SetToolTip(this.myDataGrid1, "请在首日次数列输入剂数");
                                SendKeys.Send("{tab}"); //跳格	
                                SendKeys.Send("{tab}"); //跳格	 先屏蔽，允许输入频率
                                SendKeys.Send("{Left}");
                                SendKeys.Send("{Left}");
                            }
                            this.GrdSel.Refresh();

                        }
                        //3、判断是否输入了 回车
                        if (ColumnName == "频率")
                        {

                            if (this.GrdSel.VisibleRowCount > 0 && this.GrdSel.CaptionText == "频率")
                                GetCardDataFrequency(0, this.dataGrid_TempOrder);

                            int grouprowstart = GetGroupBeginRow(myTb, nrow);//当前行医嘱这个组的第一行
                            #region 自动转换这组的天数和总量
                            for (int x = nrow; nrow < myTb.Rows.Count; x++)
                            {
                                int firstGrouprow = GetGroupBeginRow(myTb, x);
                                if (firstGrouprow != grouprowstart)//如果不是同医嘱就退出 Modify by jchl_总量
                                    break;

                                DataTable tb = FrmMdiMain.Database.GetDataTable("select EXECNUM from JC_FREQUENCY where NAME='" + myTb.Rows[firstGrouprow]["频率"].ToString() + "'");
                                int pc = 1;
                                if (tb != null && tb.Rows.Count > 0)
                                {
                                    pc = int.Parse(tb.Rows[0]["EXECNUM"].ToString());
                                }
                                if (myTb.Rows[x]["医嘱内容"].ToString().Trim() == "")
                                    break;

                                if (IsGroupFirstRow(myTb, x))
                                {

                                    if (myTb.Rows[x]["天数"].ToString().Trim() == "")
                                        myTb.Rows[x]["天数"] = "1";
                                }
                                else
                                {
                                    //查找前面医嘱天数
                                    for (int i = x - 1; i >= 0; i--)
                                    {
                                        if (myTb.Rows[i]["天数"].ToString() != "")
                                        {
                                            myTb.Rows[x]["天数"] = myTb.Rows[i]["天数"];
                                            break;
                                        }
                                    }
                                }
                                if (myTb.Rows[x]["天数"].ToString().Trim() == "")
                                {
                                    myTb.Rows[x]["天数"] = "1";
                                }
                                int dosage = 1;
                                decimal ts = decimal.Parse(myTb.Rows[x]["天数"].ToString());
                                //中草药的处理
                                if (GetGroupType(myTb, x) == "3-中草药")
                                {
                                    firstGrouprow = GetGroupBeginRow(myTb, x);
                                    if (myTb.Rows[firstGrouprow]["剂数"].ToString().Trim() != "")
                                        dosage = Convert.ToInt32(myTb.Rows[firstGrouprow]["剂数"].ToString().Trim());
                                    ts = 1;
                                    pc = 1;
                                }
                                DataGridTextBoxColumn txtColts = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["天数"];
                                decimal zl = decimal.Parse(myTb.Rows[x]["剂量"].ToString()) * pc * ts;//不需要剂数
                                myTb.Rows[x]["总量"] = zl.ToString();
                                //总动换算药房单位
                                GetYPdwtb(myTb, x, zl);
                            }
                            #endregion

                            if (GetGroupType(myTb, nrow) == "1-西药")
                            {
                                SendKeys.Send("{tab}"); //跳格	
                                SendKeys.Send("{tab}"); //跳格	

                            }
                            else if (GetGroupType(myTb, nrow) == "3-中草药")
                            {
                                SendKeys.Send("{tab}"); //跳格	
                            }
                            else if (Convert.ToInt32(myTb.Rows[nrow]["xmly"]) == 2)
                            {

                                SendKeys.Send("{tab}"); //跳格	
                                SendKeys.Send("{tab}"); //跳格	
                            }
                            this.GrdSel.Refresh();
                        }

                        if (ColumnName == "单位" && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1)
                        {
                            cmb.Focus();
                            cmb.DroppedDown = true;
                            cmb_SelectionChangeCommitted(cmb, null);
                        }
                        //add by zouchihua 2012-6-20  总单位不允许修改
                        if (ColumnName == "总单位" && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1)
                        {
                            // cmb.Focus();
                            //cmb.DroppedDown = true;
                            //cmb_SelectionChangeCommitted(cmb, null);
                        }

                        //通用
                        //						SendKeys.Send("{tab}");

                        this.GrdSel.Visible = false;
                        //屏蔽输入
                        return true;
                        #endregion
                    case 27:
                        #region ESC键控制
                        this.chkAddi.Checked = false;
                        this.GrdSel.Visible = false;
                        break;
                        #endregion
                    case 40:
                        #region↓键控制
                        //判断是否输入了向下键
                        break;
                        #endregion
                    case 39:
                        #region →键控制
                        if (ncol == 5)
                        {
                            if (myTb.Rows[nrow]["医嘱内容"].ToString() == "")
                            {
                                return true;
                            }

                        }
                        this.GrdSel.Visible = false;
                        break;
                        #endregion
                    case 38:
                        #region ↑键控制
                        break;
                        #endregion
                    case 37:
                        #region ←键控制
                        if (ncol == 5)
                        {
                            if (myTb.Rows[nrow]["医嘱内容"].ToString() == "")
                            {
                                return true;
                            }

                        }
                        this.GrdSel.Visible = false;
                        break;
                        #endregion
                }
                #endregion

                if ((ColumnName == "单位" || ColumnName == "总单位") && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1
                      &&
                        !(ColumnName == "单位" && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1"
                && myTb.Rows[nrow]["执行科室"].ToString().Trim() == "-1"
                )
                    )
                {

                    cmb.Focus();
                    cmb.DroppedDown = true;
                    //4、判断是否输入了向下键
                    if (keyInt == 40)
                    {
                        if (cmb.SelectedIndex != cmb.Items.Count - 1)
                        {
                            cmb.SelectedIndex += 1;
                        }
                        //屏蔽输入
                        return true;
                    }
                    //5、判断是否输入了向上键
                    if (keyInt == 38)
                    {
                        if (cmb.SelectedIndex != 0)
                        {
                            cmb.SelectedIndex -= 1;
                        }
                        //屏蔽输入
                        return true;
                    }

                }

                #region 内容列的录入
                //关于西药处方内容列的录入
                if (ColumnName == "医嘱内容")		//====================================================================================================================
                {
                    string SelStrType = "1";
                    if (nrow == 0)
                    {
                        SelStrType = "00000";
                    }
                    //小写录入自定义内容
                    if (GetKeyState(Convert.ToInt32(Keys.Capital)) == 0 && this.chkAddi.Checked == true)
                    {
                        return false;
                    }
                    //Modify By Tany 2011-02-18 增加控制，如果网格内已经有内容，想手工增加或删除字，不允许，但是可以全部删了重新录入
                    //if (keyInt != 8)
                    //{
                    //    //得到输入的数据
                    //    DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                    //    string SelData = txtCol.TextBox.Text;

                    //    if ((SelData.Trim() + Convert.ToChar(keyInt)) != "" && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() != "")
                    //    {
                    //        return true;
                    //    }
                    //}
                    //1、判断是不是输入了英文字
                    if (keyInt >= 65 && keyInt <= 90)
                    {
                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (SelData.Trim() != "")
                        {
                            if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                            {
                                SelData = "";
                            }
                        }
                        //显示查到的数据
                        ShowOrderSelCard(SelData + Convert.ToChar(keyInt), 1, SelStrType, this.dataGrid_TempOrder);

                        //不屏蔽输入
                        return false;
                    }

                    //判断是不是空格
                    if (keyInt == 32)
                    {
                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (SelData.Trim() != "")
                        {
                            if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                            {
                                SelData = "";
                            }
                        }
                        //显示查到的数据
                        ShowOrderSelCard(SelData + Convert.ToChar(keyInt), 1, SelStrType, this.dataGrid_TempOrder);

                        //不屏蔽输入
                        return false;
                    }

                    //2、判断是不是输入了数字键
                    if (keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105)
                    {
                        if (keyInt > 90) keyInt -= 48;

                        //Modify By Tany 2015-01-28 如果是没有选择框的情况下输入纯数字，则允许输入
                        //if (this.GrdSel.Visible == false)
                        //{
                        //    return false;
                        //}
                        //else
                        //{


                        //Modify By Tany 2015-02-02 如果输入框里面是纯数字码，则继续搜索
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (Convertor.IsNumeric(SelData + (Convert.ToString(keyInt - 48))))
                        {
                            ShowOrderSelCard(SelData + (Convert.ToString(keyInt - 48)), 2, SelStrType, this.dataGrid_TempOrder);
                            return false;
                        }
                        else
                        {
                            if (keyInt == 48) return true;

                            GetCardData(Convert.ToInt32(keyInt - 49), dataGrid_TempOrder);
                            SendKeys.Send("{tab}");
                            return true;
                        }
                        //}
                    }

                    //3、为删除键
                    if (keyInt == 8 && this.GrdSel.Visible == true)
                    {
                        //						if(keyInt>90)keyInt-=48;
                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (SelData.Trim() != "")
                        {
                            if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                            {
                                SelData = "";
                            }
                            else
                            {
                                SelData = SelData.Substring(0, SelData.Length - 1);
                            }
                        }
                        //显示查到的数据
                        if (SelData.Trim() != "")
                        {
                            //判断是输入的国家编码还是拼音码
                            if (char.IsNumber(SelData, SelData.Length - 1) == true)
                                ShowOrderSelCard(SelData, 2, SelStrType, this.dataGrid_TempOrder);//Modify By Tany 2015-02-02 如果是数字码，则传2搜索
                            else
                                ShowOrderSelCard(SelData, 1, SelStrType, this.dataGrid_TempOrder);
                        }
                        else
                            ShowOrderSelCard(SelData, 1, SelStrType, this.dataGrid_TempOrder);

                        //不屏蔽输入
                        return false;
                    }

                    //4、判断是否输入了向下键
                    if (keyInt == 40 && this.GrdSel.Visible == true)
                    {
                        if (this.GrdSel.VisibleRowCount > 0 && this.GrdSel.CurrentRowIndex >= 0)
                        {
                            int Row = this.GrdSel.CurrentRowIndex;
                            //如果等于最后一行，则为最后一行
                            if (this.GrdSel.CurrentRowIndex + 1 < ((DataView)this.GrdSel.DataSource).Count)
                            {
                                this.GrdSel.CurrentRowIndex += 1;
                            }
                            this.GrdSel.UnSelect(Row);
                            this.GrdSel.Select(GrdSel.CurrentRowIndex);
                        }
                        //屏蔽输入
                        return true;
                    }
                    //5、判断是否输入了向上键
                    if (keyInt == 38 && this.GrdSel.Visible == true)
                    {
                        if (this.GrdSel.VisibleRowCount > 0)
                        {
                            if (this.GrdSel.CurrentRowIndex >= 0)
                            {
                                if (this.GrdSel.CurrentRowIndex == 0) return true;
                                int Row = this.GrdSel.CurrentRowIndex;
                                this.GrdSel.CurrentRowIndex -= 1;
                                this.GrdSel.Select(GrdSel.CurrentRowIndex);
                                this.GrdSel.UnSelect(Row);
                            }
                        }
                        //屏蔽输入
                        return true;
                    }
                }
                #endregion
                //by add yaokx2014-04-25 非药品的一组可以输入用法等 

                if (IsGroupFirstRow(myTb, nrow) == true || flag == 1)//是一组中的第一条
                {
                    #region 用法的录入
                        if (ColumnName == "用法" && myTb.Rows[nrow]["医嘱内容"].ToString() != "")
                    {
                        //1、判断是不是输入了英文字
                        if (keyInt >= 65 && keyInt <= 90)
                        {
                            //得到输入的数据
                            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                            string SelData = txtCol.TextBox.Text;
                            if (SelData.Trim() != "")
                            {
                                if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                                {
                                    SelData = "";
                                }
                            }
                            //显示查到的数据
                            ShowUswaySelCard(SelData + Convert.ToChar(keyInt), this.dataGrid_TempOrder);

                            //不屏蔽输入
                            return false;
                        }

                        //2、判断是不是输入了数字键
                        if (keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105)
                        {
                            if (keyInt > 90) keyInt -= 48;
                            //得到输入的数据
                            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                            string SelData = txtCol.TextBox.Text;
                            if (SelData.Trim() != "")
                            {
                                if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                                {
                                    SelData = "";
                                }
                            }
                            //显示查到的数据
                            ShowUswaySelCard(SelData + Convert.ToChar(keyInt), this.dataGrid_TempOrder);

                            //不屏蔽输入
                            return false;
                        }

                        //3、为删除键
                        if (keyInt == 8 && this.GrdSel.Visible == true)
                        {
                            if (keyInt > 90) keyInt -= 48;
                            //得到输入的数据
                            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                            string SelData = txtCol.TextBox.Text;
                            if (SelData.Trim() != "")
                            {
                                if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                                {
                                    SelData = "";
                                }
                                else
                                {
                                    SelData = SelData.Substring(0, SelData.Length - 1);
                                }
                            }
                            //显示查到的数据
                            if (SelData.Trim() != "")
                            {
                                //判断是输入的国家编码还是拼音码
                                if (char.IsNumber(SelData, SelData.Length - 1) == true)
                                    ShowUswaySelCard(SelData, this.dataGrid_TempOrder);
                                else
                                    ShowUswaySelCard(SelData, this.dataGrid_TempOrder);
                            }
                            else
                                ShowUswaySelCard(SelData, this.dataGrid_TempOrder);

                            //不屏蔽输入
                            return false;
                        }

                        //4、判断是否输入了向下键
                        if (keyInt == 40 && this.GrdSel.Visible == true)
                        {
                            if (this.GrdSel.VisibleRowCount > 0)
                            {
                                this.GrdSel.CurrentCell = new DataGridCell(0, 1);
                                this.GrdSel.Focus();
                            }
                            else
                            {
                                this.GrdSel.Focus();
                            }
                            //屏蔽输入
                            return true;
                        }

                    }
                    #endregion

                    #region 频率的输入
                    if (ColumnName == "频率")			//====================================================================================================================
                    {
                        //if (myTb.Rows[nrow]["类型"].ToString() == "3-中草药") return true; //Modify by zouchihua 2012-8-7 中草药输入频率

                        //1、判断是不是输入了英文字
                        if (keyInt >= 65 && keyInt <= 90)
                        {
                            //得到输入的数据
                            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                            string SelData = txtCol.TextBox.Text;
                            if (SelData.Trim() != "")
                            {
                                if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                                {
                                    SelData = "";
                                }
                            }
                            //显示查到的数据
                            ShowFreqSelCard(SelData + Convert.ToChar(keyInt), this.dataGrid_TempOrder);

                            //不屏蔽输入
                            return false;
                        }

                        //2、判断是不是输入了数字键
                        if (keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105)
                        {
                            if (keyInt > 90) keyInt -= 48;
                            //得到输入的数据
                            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                            string SelData = txtCol.TextBox.Text;
                            if (SelData.Trim() != "")
                            {
                                if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                                {
                                    SelData = "";
                                }
                            }
                            //显示查到的数据
                            ShowFreqSelCard(SelData + Convert.ToChar(keyInt), this.dataGrid_TempOrder);

                            //不屏蔽输入
                            return false;
                        }

                        //3、为删除键
                        if (keyInt == 8 && this.GrdSel.Visible == true)
                        {
                            if (keyInt > 90) keyInt -= 48;
                            //得到输入的数据
                            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                            string SelData = txtCol.TextBox.Text;
                            if (SelData.Trim() != "")
                            {
                                if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                                {
                                    SelData = "";
                                }
                                else
                                {
                                    SelData = SelData.Substring(0, SelData.Length - 1);
                                }
                            }
                            //显示查到的数据
                            if (SelData.Trim() != "")
                            {
                                //判断是输入的国家编码还是拼音码
                                if (char.IsNumber(SelData, SelData.Length - 1) == true)
                                    ShowFreqSelCard(SelData, this.dataGrid_TempOrder);
                                else
                                    ShowFreqSelCard(SelData, this.dataGrid_TempOrder);
                            }
                            else
                                ShowFreqSelCard(SelData, this.dataGrid_TempOrder);

                            //不屏蔽输入
                            return false;
                        }

                        //4、判断是否输入了向下键
                        if (keyInt == 40 && this.GrdSel.Visible == true)
                        {
                            if (this.GrdSel.VisibleRowCount > 0)
                            {
                                this.GrdSel.CurrentCell = new DataGridCell(0, 1);
                                this.GrdSel.Focus();
                            }
                            else
                            {
                                this.GrdSel.Focus();
                            }
                            //屏蔽输入
                            return true;
                        }

                    }
                    #endregion

                    #region 剂数录入
                    if (ColumnName == "剂数")
                    {
                        if (myTb.Rows[nrow]["类型"].ToString() != "3-中草药") return true;
                        if (keyInt >= 48 && keyInt <= 57 || keyInt >= 96 && keyInt <= 105 || keyInt == 8) return false;
                        else return true;
                    }
                    #endregion
                }

            }
            catch (System.Exception err)
            {
                MessageBox.Show(err.ToString(), "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                //保存出错信息
                myQuery.SaveLog(DeptID, YS_ID, "程序错误", this.BinID.ToString() + "临嘱按键控制错误：" + err.ToString().Trim(), 1, 41);
                return true;
            }

            if (ColumnName == "单位" && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1
                    &&
                     (ColumnName == "单位" && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1"
                && myTb.Rows[nrow]["执行科室"].ToString().Trim() == "-1"
                )
                 && keyData != Keys.F10
                    )
            {
                DataGridTextBoxColumn txtCol1 = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                dataGrid_TempOrder.EndEdit(txtCol1, dataGrid_TempOrder.CurrentCell.RowNumber, true);
                DlgInputBox Inputbox = new DlgInputBox(txtCol1.TextBox.Text, "请输入药品单位,如ml,g", "单位输入");
                Inputbox.ShowDialog();
                if (!DlgInputBox.DlgResult) return false;

                txtCol1.TextBox.Text = DlgInputBox.DlgValue.ToString();
                dataGrid_TempOrder.EndEdit(txtCol1, dataGrid_TempOrder.CurrentCell.RowNumber, true);
                myTb.Rows[dataGrid_TempOrder.CurrentCell.RowNumber]["单位"] = txtCol1.TextBox.Text;
                return false;
                if ((keyInt >= 49 && keyInt <= 97) || keyInt == 8)
                {

                    DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol];
                    if (keyInt == 8)
                    {
                        if (txtCol.TextBox.SelectionLength > 0)
                            txtCol.TextBox.Text = txtCol.TextBox.Text.Substring(0, txtCol.TextBox.Text.Length - txtCol.TextBox.SelectionLength);
                        else
                            txtCol.TextBox.Text = txtCol.TextBox.Text.Substring(0, txtCol.TextBox.Text.Length - 1);
                    }
                    else
                    {
                        if (txtCol.TextBox.SelectionLength == 0)
                            txtCol.TextBox.Text += Convert.ToChar(keyInt).ToString().ToLower(); //(Keys)keyData
                        else
                            txtCol.TextBox.Text = txtCol.TextBox.Text.Substring(0, txtCol.TextBox.Text.Length - txtCol.TextBox.SelectionLength) + Convert.ToChar(keyInt).ToString().ToLower();
                    }

                    myTb.Rows[nrow]["单位"] = txtCol.TextBox.Text;
                    txtCol.TextBox.SelectionStart = txtCol.TextBox.Text.Length;
                    dataGrid_TempOrder.EndEdit(txtCol, dataGrid_TempOrder.CurrentCell.RowNumber, true);
                }
                return true;
            }
            else
                return false;
        }

        private void dataGrid_TempOrder_CurrentCellChanged(object sender, System.EventArgs e)
        {
            cellChanged(this.dataGrid_TempOrder);
        }

        private void loadGrid_TempOrder()
        {
            try
            {
                if (this.dataGrid_TempOrder.VisibleRowCount > 0) this.dataGrid_TempOrder.CurrentCell = new DataGridCell(0, 0);
            }
            catch
            {

            }
            DataTable myTb = new DataTable();

            if (mz)
            {
                myTb = myQuery.GetBinOrders(4, this.BabyID, this.BinID, this.DeptID);
            }
            else if (_tszl)
            {
                myTb = myQuery.GetBinOrders(5, this.BabyID, this.BinID, this.DeptID);
            }
            else
            {
                myTb = myQuery.GetBinOrders(2, this.BabyID, this.BinID, this.DeptID);
            }

            if (sort == 1)//按开始时间排序
            {
                DataView tempDataView = new DataView(myTb, "", "Order_bDate,Group_ID,serial_no", DataViewRowState.CurrentRows);
                myTb = insertRow(tempDataView, myTb);//将数据视图转化为表
                tempDataView.Dispose();
            }
            //DataTable dtplace = new DataTable();
            //string sqlplace = "select HOITEM_ID,GROUP_ID,PLACE FROM ZY_JC_RECORD where INPATIENT_ID='" + this.BinID + "'";
            //dtplace = FrmMdiMain.Database.GetDataTable(sqlplace);
            for (int i = 0; i < myTb.Rows.Count; i++)
            {   //去多余的“0”
                myTb.Rows[i]["剂量"] = removeZero(Convert.ToDecimal(myTb.Rows[i]["剂量"].ToString()));
                //add by zouchihua 2012-7-10
                if (myTb.Rows[i]["总量"].ToString().Trim() != "")
                    myTb.Rows[i]["总量"] = removeZero(Convert.ToDecimal(myTb.Rows[i]["总量"].ToString()));
                //if (myTb.Rows[i]["医嘱内容"].ToString().Contains("【"))
                 //{

                //}
                //else
                //{
                //    DataRow[] drplace = dtplace.Select("HOITEM_ID='" + myTb.Rows[i]["HOITEM_ID"] + "'and GROUP_ID='" + myTb.Rows[i]["嘱号"] + "'");
                //    if (drplace.Length > 0 && drplace[0]["PLACE"].ToString() != "")
                //    {
                //        string palce = drplace[0]["PLACE"].ToString();
                //        myTb.Rows[i]["医嘱内容"] += "【" + palce + "】";
                //    }
                //}
            }
            DataTable myTbb = CheckGrdData(myTb);
            DataRow myRow = myTbb.NewRow();
            //myRow["ID"]=1;//ID为0，表示不为正规行
            myTbb.Rows.Add(myRow);
            DataTable myTbBk = myTbb.Copy();
            this.dataGrid_TempOrder.DataSource = null;
            this.dataGrid_TempOrder.DataSource = myTbBk;
            try
            {
                DataGridCell cel;
                if (myTbBk.Rows.Count - 2 >= 0)
                    //以前的 2012-8-30
                    this.dataGrid_TempOrder.CurrentRowIndex = myTbBk.Rows.Count - 2;
                {
                    // cel = new DataGridCell(myTbBk.Rows.Count - 2, 0);
                    //this.dataGrid_TempOrder.CurrentCell = cel;
                }

            }
            catch { }
            //DataGridCell cel = new DataGridCell(myTbBk.Rows.Count - 2, 0);
            //this.dataGrid_TempOrder.CurrentCell = cel;
            XG2 = false;
            if (outType == true && lg != 0) this.dataGrid_TempOrder.TableStyles[0].ReadOnly = true;
            Cursor = Cursors.Default;
        }

        #region 增加单位下拉选框
        /// <summary>
        /// 增加单位下拉选框
        /// </summary>
        /// <param name="cjid">药品厂家ID</param>
        /// <param name="deptid">药品执行科室</param>
        /// <param name="dg"></param>
        private void addCMB(string cjid, string deptid, DataGridEx dg)
        {
            int nrow = dg.CurrentCell.RowNumber;
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            DataGridTextBoxColumn dgtb = null;
            int dwlx = 1;
            try
            {
                dwdt = null;
                dwdt = InstanceForm._database.GetDataTable("exec SP_YF_SELECT_DW " + cjid + "," + deptid + "");
                if (dwdt.Rows.Count == 0)
                {

                    if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                    {
                        try
                        {
                            dwlx = Convert.ToInt32(((DataTable)dg.DataSource).Rows[nrow]["jldwlx"]);
                        }
                        catch
                        {
                            dwlx = Convert.ToInt32("1");
                        }
                    }
                    else
                        dwlx = Convert.ToInt32(((DataTable)dg.DataSource).Rows[nrow]["dwlx"]);
                    cmb.SelectedValue = dwlx;
                    //add by zouchihua 2013-11-13 外来药品可以自己输入单位
                    if (cjid == "-1" && deptid == "-1")
                    {
                        //cmb = new ComboBox();
                        //cmb.DropDownStyle = ComboBoxStyle.DropDown;
                        //cmb.Dock = DockStyle.Fill;
                        //cmb.Cursor = Cursors.Hand;
                        //cmb.SelectionChangeCommitted += new EventHandler(cmb_SelectionChangeCommitted);
                        dgtb = (DataGridTextBoxColumn)dg.TableStyles[0].GridColumnStyles[dg.CurrentCell.ColumnNumber];
                        dgtb.TextBox.Controls.Clear();//必须先清空
                        //dgtb.TextBox.Controls.Add(cmb);
                        //this.ActiveControl = cmb;
                        //cmb.Focus();
                        //cmb.SelectionStart = 0;
                    }
                    return;
                }
                if (new SystemCfg(6027).Config == "0")
                {
                    dwdt.Rows.Remove(dwdt.Rows[2]);//除去药库单位，dwlx=3;
                }
                cmb = new ComboBox();
                cmb.DataSource = null;
                //cmb.Items.Clear();


                cmb.DropDownStyle = ComboBoxStyle.DropDownList;
                cmb.Dock = DockStyle.Fill;
                cmb.Cursor = Cursors.Hand;
                cmb.SelectionChangeCommitted += new EventHandler(cmb_SelectionChangeCommitted);
                //dgtb = (DataGridTextBoxColumn)dataGrid_TempOrder.TableStyles[0].GridColumnStyles["单位"];

                dgtb = (DataGridTextBoxColumn)dg.TableStyles[0].GridColumnStyles[dg.CurrentCell.ColumnNumber];
                dgtb.TextBox.Controls.Clear();//必须先清空

                cmb.DataSource = dwdt;
                cmb.DisplayMember = "s_ypdw";
                cmb.ValueMember = "dwlx";



                //int ncol = dg.CurrentCell.ColumnNumber;
                DataTable tb = (DataTable)dg.DataSource;
                //if (tb.Rows.Count - 1 < nrow && tb.Rows[nrow]["dwlx"].ToString().Trim() == "")
                //    return;

                tb = ((DataTable)dg.DataSource);
                //string ss = tb.Rows[nrow]["jldwlx"].ToString();
                dwlx = 1;
                dgtb.TextBox.Controls.Add(cmb);
                if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                {
                    try
                    {
                        dwlx = Convert.ToInt32(((DataTable)dg.DataSource).Rows[nrow]["jldwlx"]);
                    }
                    catch
                    {
                        dwlx = Convert.ToInt32("1");
                    }
                }
                else
                    dwlx = Convert.ToInt32(((DataTable)dg.DataSource).Rows[nrow]["dwlx"]);
                cmb.SelectedValue = dwlx;
                //if (cmb.SelectedValue == null)
                //    cmb.SelectedIndex = dwlx - 1;
                //add by zouchihua 2012-6-20 
                if (((DataTable)dg.DataSource).Rows[nrow][dgtb.MappingName].ToString().Trim() != "")
                    cmb.Text = ((DataTable)dg.DataSource).Rows[nrow][dgtb.MappingName].ToString();

                //cmb.Left = dg.GetCellBounds(nrow, ncol).Left + dg.Left;
                //cmb.Top = dg.GetCellBounds(nrow, ncol).Top + dg.Top;
                //cmb.Width = dg.GetCellBounds(nrow, ncol).Width;
                //cmb.DroppedDown = true;


                //cmb.Visible = true;
                //int ncol = dg.CurrentCell.ColumnNumber;
                //if (dg.TableStyles[0].GridColumnStyles[ncol+1].HeaderText == "单位*")
                //{
                cmb.Focus();
                //}
            }
            catch (System.Exception err)
            {
                MessageBox.Show("获取单位选项错误！", "错误提示：", MessageBoxButtons.OK, MessageBoxIcon.Error);
                dgtb.TextBox.Controls.Clear();
                myQuery.SaveLog(DeptID, YS_ID, "获取单位选项错误", this.BinID.ToString() + "，药品厂家ID：" + cjid + "，" + err.ToString(), 1, 41);
            }
        }
        private void cmb_SelectionChangeCommitted(object sender, EventArgs e)
        {
            string jlType = "";
            int ls = 0;
            DataGridEx dg = new DataGridEx();
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            if (tc.SelectedTab.Title.Trim() == "长期医嘱")
            {
                dg = dataGrid_LongOrder;
            }
            else if (tc.SelectedTab.Title.Trim() == "临时医嘱")
            {
                dg = dataGrid_TempOrder;
                ls = 1;
            }
            else
            {
                return;
            }
            DataTable myTb = (DataTable)(dg.DataSource);//(this.dataGrid_TempOrder.DataSource);
            //int nrow = this.dataGrid_TempOrder.CurrentCell.RowNumber;
            //int ncol = this.dataGrid_TempOrder.CurrentCell.ColumnNumber;
            int nrow = dg.CurrentCell.RowNumber;
            int ncol = dg.CurrentCell.ColumnNumber;
            try
            {
                dg[dg.CurrentCell] = ((ComboBox)sender).Text.ToString();
                if (ls == 1)
                {
                    //获得总单位 add by zouchihua 2012-6-21  
                    myTb.Rows[nrow]["总单位"] = ((ComboBox)sender).Text.ToString();
                }
                if (((ComboBox)sender).SelectedValue == null)
                    return;
                jlType = ((ComboBox)sender).SelectedValue.ToString();
                //Modify By Tany 2010-01-08 如果是需要煎药，则不改变单位类型
                if (myTb.Rows[nrow]["dwlx"].ToString().Trim().Length > 0
                    && myTb.Rows[nrow]["dwlx"].ToString().Trim().Substring(0, 1) == "9")
                {
                    myTb.Rows[nrow]["dwlx"] = "9" + jlType;//如果是需要煎药，那么则第二位保留选择的计量单位
                }
                else
                {
                    myTb.Rows[nrow]["dwlx"] = jlType;
                }
                //add by zouchihua 2012-7-1 剂量单位类型
                if (ls == 1)
                {
                    myTb.Rows[nrow]["jldwlx"] = jlType;
                    #region 自动获得总量和天数
                    this.dataGrid_TempOrder.EndEdit(this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol], nrow, false);
                    DataGridTextBoxColumn txtColjl = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["剂量"];
                    DataGridTextBoxColumn txtColpl = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["频率"];
                    int firstGrouprow = GetGroupBeginRow(myTb, nrow);
                    DataTable tb = FrmMdiMain.Database.GetDataTable("select EXECNUM from JC_FREQUENCY where NAME='" + myTb.Rows[firstGrouprow]["频率"].ToString() + "'");
                    int pc = 1;
                    if (tb != null && tb.Rows.Count > 0)
                    {
                        pc = int.Parse(tb.Rows[0]["EXECNUM"].ToString());
                    }

                    if (myTb.Rows[nrow]["天数"].ToString().Trim() == "")
                    {
                        if (IsGroupFirstRow(myTb, nrow))
                        {
                            myTb.Rows[nrow]["天数"] = "1";
                        }
                        else
                        {
                            //查找前面医嘱天数
                            for (int i = nrow - 1; i >= 0; i--)
                            {
                                if (myTb.Rows[i]["天数"].ToString() != "")
                                {
                                    myTb.Rows[nrow]["天数"] = myTb.Rows[i]["天数"];
                                    break;
                                }
                            }
                        }
                        if (myTb.Rows[nrow]["天数"].ToString().Trim() == "")
                        {
                            myTb.Rows[nrow]["天数"] = "1";
                        }

                    }
                    int dosage = 1;
                    decimal ts = decimal.Parse(myTb.Rows[nrow]["天数"].ToString());
                    //中草药的处理
                    if (GetGroupType(myTb, nrow) == "3-中草药")
                    {
                        firstGrouprow = GetGroupBeginRow(myTb, nrow);
                        if (myTb.Rows[firstGrouprow]["剂数"].ToString().Trim() != "")
                            dosage = Convert.ToInt32(myTb.Rows[firstGrouprow]["剂数"].ToString().Trim());
                        ts = 1;
                        pc = 1;
                    }
                    DataGridTextBoxColumn txtColts = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["天数"];
                    decimal zl = decimal.Parse(myTb.Rows[nrow]["剂量"].ToString()) * ts * pc;//不需要剂数
                    myTb.Rows[nrow]["总量"] = zl.ToString();

                    //总动换算药房单位
                    GetYPdwtb(myTb, nrow, zl);
                    #endregion

                }
            }
            catch (System.Exception err)
            {
                MessageBox.Show("选择单位错误！请重新选择。" + err.Message, "错误提示：", MessageBoxButtons.OK, MessageBoxIcon.Error);
                myQuery.SaveLog(DeptID, YS_ID, "选择单位错误", this.BinID.ToString() + "，" + myTb.Rows[nrow]["医嘱内容"].ToString() + "，单位类型：" + jlType + "，" + err.ToString(), 1, 41);
            }

            if (jlType != "1") JL2 = 1;

            //dg.CurrentCell = new DataGridCell(nrow, 6);
        }
        private void cmb_KeyDown(object sender, KeyEventArgs e)
        {
            ComboBox cmb = (ComboBox)sender;
            if (e.KeyValue > 48 && e.KeyValue <= 48 + cmb.Items.Count || e.KeyValue > 96 && e.KeyValue <= 96 + cmb.Items.Count)
            {
                if (e.KeyValue < 58)
                {
                    cmb.SelectedIndex = e.KeyValue - 49;
                }
                else if (e.KeyValue < 106)
                {
                    cmb.SelectedIndex = e.KeyValue - 97;
                }
                cmb_SelectionChangeCommitted(sender, null);
            }

        }
        #endregion

        private void dataGrid_TempOrder_MouseUp(object sender, MouseEventArgs e)
        {
            int nrow, ncol;
            //变量付初始值
            DataTable myTb = (DataTable)this.dataGrid_TempOrder.DataSource;
            if (myTb.Rows.Count == 0) return;
            if (e.Button == MouseButtons.Right)
            {
                nrow = this.dataGrid_TempOrder.CurrentCell.RowNumber;
                ncol = this.dataGrid_TempOrder.CurrentCell.ColumnNumber;
                DataGridEx grid = sender as DataGridEx;
                if (myTb.Rows[nrow]["医嘱内容"].ToString() != "")
                {
                    tabnum = 2;
                    popMenu(grid, e);
                }
                
            }

            ShowInfo(this.dataGrid_TempOrder);//显示药品信息
            //if (_tszl)
            //    GetPricehj(this.dataGrid_TempOrder);
            if (this.ChkWillGetFee.Checked == true) ShowPrice(this.dataGrid_TempOrder);//显示医嘱费用

        }
        private void dataGrid_TempOrder_DoubleClick(object sender, System.EventArgs e)
        {
            //变量付初始值
            DataTable myTb = (DataTable)this.dataGrid_TempOrder.DataSource;
            int nrow = dataGrid_TempOrder.CurrentCell.RowNumber;
            if (Convertor.IsNull(myTb.Rows[nrow]["类型"].ToString(), "") == "3-中草药" && myTb.Rows[nrow]["status_flag"].ToString() != "-1")//Modify by zouchihua 2013-3-11 保存的医嘱也可以看到
            {
                try
                {
                    中草药明细 fo = new 中草药明细();
                    fo.YS_ID = this.YS_ID;
                    fo.BinID = this.BinID;
                    fo.GroupNum = Convert.ToInt32(myTb.Rows[nrow]["嘱号"].ToString());
                    fo.ShowDialog();
                }
                catch { }
            }
            //add by zouchihua 2013-8-10获得医技信息 
            if (myTb.Rows[nrow]["类型"].ToString() == "5-医技" && (int.Parse(myTb.Rows[nrow]["status_flag"].ToString()) <= 1 || int.Parse(myTb.Rows[nrow]["status_flag"].ToString()) == 9))
            {
                string sql = "select * from JC_ASSAY where yzid='" + myTb.Rows[nrow]["hoitem_id"].ToString() + "'";
                DataTable tbbb = FrmMdiMain.Database.GetDataTable(sql);
                if (tbbb.Rows.Count > 0)
                {
                    Ts_zyys_jysq.FrmJyBb_fjsm frm;
                    if (new Guid(myTb.Rows[nrow]["id"].ToString()) == Guid.Empty)
                    {
                        frm = new Ts_zyys_jysq.FrmJyBb_fjsm(myTb.Rows[nrow]["id"].ToString(), long.Parse(myTb.Rows[nrow]["hoitem_id"].ToString()));
                        if (myTb.Rows[nrow]["dwlx"].ToString().Trim() != "" && long.Parse(myTb.Rows[nrow]["dwlx"].ToString().Trim()) > 0)
                            frm.bb = myTb.Rows[nrow]["dwlx"].ToString().Trim();
                    }
                    else
                        frm = new Ts_zyys_jysq.FrmJyBb_fjsm(myTb.Rows[nrow]["id"].ToString());
                    frm.ShowDialog();
                    if (frm.DialogResult == DialogResult.OK)
                    {
                        if (new Guid(myTb.Rows[nrow]["id"].ToString()) == Guid.Empty)
                        {
                            myTb.Rows[nrow]["医嘱内容"] = frm.fjsm + myTb.Rows[nrow]["医嘱内容"].ToString();
                            myTb.Rows[nrow]["memo"] = frm.fjsm + "★";
                            myTb.Rows[nrow]["dwlx"] = int.Parse(frm.bb);
                            //loadGrid_TempOrder();
                            this.Refresh();
                        }
                        else
                        {
                            sql = "update zy_orderrecord set dwlx='" + frm.bb + "' ,memo='" + frm.fjsm + "★', ORDER_CONTEXT='" + frm.fjsm + "'+SUBSTRING(ORDER_CONTEXT,CHARINDEX(ORDER_NAME,ORDER_CONTEXT,1),LEN(ORDER_CONTEXT))   from  zy_orderrecord a join JC_HOITEMDICTION b on a.HOITEM_ID=b.ORDER_ID where a.order_id='" + myTb.Rows[nrow]["id"].ToString() + "'";
                            FrmMdiMain.Database.DoCommand(sql);
                            loadGrid_TempOrder();
                        }
                    }
                }
            }
        }

        /// <summary>
        /// 计算字符串中子串出现的次数
        /// </summary>
        /// <param name="str">字符串</param>
        /// <param name="substring">子串</param>
        /// <returns>出现的次数</returns>
        private int SubstringCount(string str, string substring)
        {
            if (str.Contains(substring))
            {
                string strReplaced = str.Replace(substring, "");
                return (str.Length - strReplaced.Length) / substring.Length;
            }

            return -1;
        }
        private void dataGrid_TempOrder_Paint(object sender, System.Windows.Forms.PaintEventArgs e)
        {
            if (this.dataGrid_TempOrder.DataSource == null) return;
            //			int row = TopRow();
            int i = 0;
            int yDelta = dataGrid_TempOrder.GetCellBounds(i, 0).Height + 1;
            int y = dataGrid_TempOrder.GetCellBounds(i, 0).Top + 2;
            int index_start = 0, index_i = 0, index_p = 0, index_end = 0;
            int start_row = 0, start_point = 0;
            int zl = 0;//add by zouchihua 使用警示灯时，画线相应右移
            //string cfg6032 = new SystemCfg(6032).Config.Trim();
            if (cfg6032.Trim() == "1")
                zl = 19;
            CurrencyManager cm = (CurrencyManager)this.BindingContext[dataGrid_TempOrder.DataSource, dataGrid_TempOrder.DataMember];
            while (y < dataGrid_TempOrder.Height - yDelta && i < cm.Count)
            {
                try
                {
                    if (cfg6085.Config.Trim() == "1" && ((DataTable)(dataGrid_TempOrder.DataSource)).Rows[i]["Yymd"].ToString().Trim() != "")
                        e.Graphics.DrawString(" 用药目的：" + ((DataTable)(dataGrid_TempOrder.DataSource)).Rows[i]["Yymd"].ToString().Trim(),
                            this.dataGrid_LongOrder.Font, new SolidBrush(Color.Red), 880, y);
                }
                catch { }
                //get & draw the header text...
                //y+= yDelta;
                //皮试+
                int count = SubstringCount(this.sPaintPS.ToString(), "+");
                index_start = this.sPaintPS.IndexOf("[" + i.ToString() + "+", 0, this.sPaintPS.Trim().Length);
                if (index_start >= 0 && count == 1)
                {
                    index_p = this.sPaintPS.IndexOf("+", index_start, this.sPaintPS.Trim().Length - index_start);
                    index_end = this.sPaintPS.IndexOf("]", index_p, this.sPaintPS.Trim().Length - index_p);
                    start_point = 139 + zl + Convert.ToInt16(this.sPaintPS.Substring(index_p + 1, index_end - index_p - 1)) * 6;
                    e.Graphics.DrawString("(+)", this.dataGrid_TempOrder.Font, new SolidBrush(Color.Red), start_point, y);

                }

                //皮试++
                index_start = this.sPaintPS.IndexOf("[" + i.ToString() + "++", 0, this.sPaintPS.Trim().Length);
                if (index_start >= 0 && count == 2)
                {
                    index_p = this.sPaintPS.IndexOf("++", index_start, this.sPaintPS.Trim().Length - index_start);
                    index_end = this.sPaintPS.IndexOf("]", index_p, this.sPaintPS.Trim().Length - index_p);
                    start_point = 139 + zl + Convert.ToInt16(this.sPaintPS.Substring(index_p + 2, index_end - index_p - 2)) * 6;
                    e.Graphics.DrawString("(++)", this.dataGrid_TempOrder.Font, new SolidBrush(Color.Red), start_point, y);

                }

                //皮试+++
                index_start = this.sPaintPS.IndexOf("[" + i.ToString() + "+++", 0, this.sPaintPS.Trim().Length);
                if (index_start >= 0 && count == 3)
                {
                    index_p = this.sPaintPS.IndexOf("+++", index_start, this.sPaintPS.Trim().Length - index_start);
                    index_end = this.sPaintPS.IndexOf("]", index_p, this.sPaintPS.Trim().Length - index_p);
                    start_point = 139 + zl + Convert.ToInt16(this.sPaintPS.Substring(index_p + 3, index_end - index_p - 3)) * 6;
                    e.Graphics.DrawString("(+++)", this.dataGrid_TempOrder.Font, new SolidBrush(Color.Red), start_point, y);

                }

                //皮试-
                index_start = this.sPaintPS.IndexOf("[" + i.ToString() + "-", 0, this.sPaintPS.Trim().Length);
                if (index_start >= 0)
                {
                    index_p = this.sPaintPS.IndexOf("-", index_start, this.sPaintPS.Trim().Length - index_start);
                    index_end = this.sPaintPS.IndexOf("]", index_p, this.sPaintPS.Trim().Length - index_p);
                    start_point = 119 + zl + Convert.ToInt16(this.sPaintPS.Substring(index_p + 1, index_end - index_p - 1)) * 6;
                    switch (this.sPaintPS.Substring(index_end + 1, 1))
                    {
                        case "2":  //已审核
                            e.Graphics.DrawString("   (-)", this.dataGrid_TempOrder.Font, new SolidBrush(Color.Blue), start_point, y);
                            break;
                        case "5":  //已停止
                            e.Graphics.DrawString("   (-)", this.dataGrid_TempOrder.Font, new SolidBrush(Color.Gray), start_point, y);
                            break;
                        default:
                            e.Graphics.DrawString("   (-)", this.dataGrid_TempOrder.Font, new SolidBrush(Color.Black), start_point, y);
                            break;
                    }

                }

                //组线
                index_start = this.sPaint.IndexOf("[" + i.ToString() + "i", 0, this.sPaint.Trim().Length);
                if (index_start >= 0)
                {
                    index_i = index_start + i.ToString().Trim().Length + 1;
                    index_end = this.sPaint.IndexOf("]", index_i, this.sPaint.Trim().Length - index_i);
                    start_row = Convert.ToInt16(this.sPaint.Substring(index_i + 1, index_end - index_i - 1));
                    if (this.max_len1 == 0) start_point = 110 + zl + (this.max_len0 + 4) * 6;
                    else start_point = 110 + zl + (this.max_len1 + this.max_len2 + 4) * 6;
                    switch (this.sPaint.Substring(index_end + 1, 1))
                    {
                        case "1":  //已发送未转抄
                            e.Graphics.DrawLine(System.Drawing.Pens.SeaGreen, start_point, y - start_row * yDelta, start_point, y - 5);
                            break;
                        case "2":  //已审核
                            e.Graphics.DrawLine(System.Drawing.Pens.Blue, start_point, y - start_row * yDelta, start_point, y - 5);
                            break;
                        case "5":  //已停止
                            e.Graphics.DrawLine(System.Drawing.Pens.Black, start_point, y - start_row * yDelta, start_point, y - 5);
                            break;
                        default:
                            e.Graphics.DrawLine(System.Drawing.Pens.Black, start_point, y - start_row * yDelta, start_point, y - 5);
                            break;
                    }
                }
                //未执行
                index_start = this.sPaintWZX.IndexOf("i" + i.ToString() + "X", 0, this.sPaintWZX.Trim().Length);
                if (index_start >= 0)
                {
                    start_point = outlookBar1.Left + dataGrid_TempOrder.GetCellBounds(0, 14).X;
                    e.Graphics.DrawString(" 未执行", this.dataGrid_TempOrder.Font, new SolidBrush(Color.Red), start_point, y);
                }


                i++;
                y += yDelta;
            }
        }

        private void dataGrid_TempOrder_Enter(object sender, System.EventArgs e)
        {
            if (this.dataGrid_TempOrder.DataSource == null)//没有临嘱时加载临嘱 （2005-2-3 修改）
            {
                loadGrid_TempOrder();
            }
            DataTable myTb = (DataTable)dataGrid_TempOrder.DataSource;
            if (myTb.Rows.Count == 0)
            {
                this.btSave.Focus();
                return;
            }
        }
        #endregion

        #region  长期账单网格定义
        private void InitGrd_LongZD()
        {
            string[] GrdMappingName ={ "ID", "嘱号", "开始时间", "类型", "医嘱内容", "剂量", "单价", "单位", "用法", "频率", "首次", "执行科室", "HOItem_ID", "exec_dept", "times_defalut", "iscomplex", "oldprice" };
            string[] GrdHeaderText ={ "ID", "嘱号", "开始时间", "类型", "账单内容", "数量", "单价", "单位", "用法", "频率", "首次", "", "", "", "", "", "" };
            int[] GrdWidth ={ 0, 40, 105, 80, 330, 40, 80, 40, 90, 40, 40, 0, 0, 0, 0, 0, 0 };
            bool[] GrdReadOnly ={ true, true, false, true, false, false, false, true, false, false, false, true, true, true, true, true, true };
            InitmyGrd(GrdMappingName, GrdHeaderText, GrdWidth, GrdReadOnly, this.dataGrid_LongZD);

            //初始化医嘱号
            ShowmyDate(false, true, false, this.dataGrid_LongZD);
        }
        #endregion

        #region 所有长期和临时账单公共方法
        /// <summary>
        /// 所有长期和临时账单
        /// </summary>
        /// <returns></returns>
        private int GetMNGType()
        {
            switch (this.tabControl1.SelectedTab.Text.Trim())
            {
                case "所有长期账单":
                    return 2;
                case "所有临时账单":
                    return 3;
                default:
                    return 2;
            }
        }

        private void ShowmyDate(bool isClear, bool isInitYZH, bool isSendKey, DataGridEx datagrid1)       //显示医嘱号
        {
            DataTable myTb = (DataTable)datagrid1.DataSource;
            if (isClear)
            {
                myTb.Rows.Clear();
                myTb.Rows.Add(myTb.NewRow());
            }
            datagrid1.DataSource = myTb;

            //初始化医嘱号
            if (isInitYZH)
            {
                myTb.Rows[0]["嘱号"] = "1";
            }

            if (isSendKey)
            {
                datagrid1.CurrentCell = new DataGridCell(0, 2);
                datagrid1.Focus();
                if (myTb.Rows[0]["类型"].ToString().Trim() == "")
                {
                    SendKeys.Send(Keys.NumPad8.ToString());
                }
                else
                {
                    SendKeys.Send("{tab}");
                }
            }
        }

        /// <summary>
        /// 初始化dataGrid
        /// </summary>
        /// <param name="GrdMappingName"></param> MappingName数组
        /// <param name="GrdHeaderText"></param>  GrdHeaderText数组
        /// <param name="GrdWidth"></param>       Width数组
        /// <param name="GrdReadOnly"></param>    ReadOnly数组
        /// <param name="mydataGrid"></param>
        public void InitmyGrd(string[] GrdMappingName, string[] GrdHeaderText, int[] GrdWidth, bool[] GrdReadOnly, DataGridEx dataGrid)
        {
            int i = 0;
            DataTable myTb = new DataTable();

            for (i = 0; i <= GrdMappingName.Length - 1; i++)
            {

                myTb.Columns.Add(GrdMappingName[i].ToString());
            }
            myTb.Rows.Add(myTb.NewRow());
            dataGrid.DataSource = myTb;

            dataGrid.TableStyles[0].RowHeaderWidth = 5;
            for (i = 0; i <= dataGrid.TableStyles[0].GridColumnStyles.Count - 1; i++)
            {
                //add by zouchihua 增加警示灯列 2011-12-23
                if (GrdHeaderText[i] == "警示灯")
                {
                    dataGrid.TableStyles[0].GridColumnStyles[i].NullText = "";
                    dataGrid.TableStyles[0].GridColumnStyles[i].MappingName = GrdMappingName[i].ToString();
                    dataGrid.TableStyles[0].GridColumnStyles[i].Width = GrdWidth[i];
                    if (GrdWidth[i] != 0) dataGrid.TableStyles[0].GridColumnStyles[i].HeaderText = GrdHeaderText[i].ToString();
                    dataGrid.TableStyles[0].GridColumnStyles[i].ReadOnly = GrdReadOnly[i];
                }
                else
                {
                    dataGrid.TableStyles[0].GridColumnStyles[i].NullText = "";
                    dataGrid.TableStyles[0].GridColumnStyles[i].MappingName = GrdMappingName[i].ToString();
                    dataGrid.TableStyles[0].GridColumnStyles[i].Width = GrdWidth[i];
                    if (GrdWidth[i] != 0) dataGrid.TableStyles[0].GridColumnStyles[i].HeaderText = GrdHeaderText[i].ToString();
                    dataGrid.TableStyles[0].GridColumnStyles[i].ReadOnly = GrdReadOnly[i];
                }
            }
        }

        public void InitmyGrd(string[] GrdMappingName, string[] GrdHeaderText, int[] GrdWidth, int[] GrdReadOnly, DataGridEx dataGrid)
        {
            int i = 0;
            DataTable myTb = new DataTable();

            for (i = 0; i <= GrdMappingName.Length - 1; i++)
            {
                myTb.Columns.Add(GrdMappingName[i].ToString());
            }
            myTb.Rows.Add(myTb.NewRow());
            dataGrid.DataSource = myTb;

            dataGrid.TableStyles[0].RowHeaderWidth = 5;
            for (i = 0; i <= dataGrid.TableStyles[0].GridColumnStyles.Count - 1; i++)
            {
                dataGrid.TableStyles[0].GridColumnStyles[i].NullText = "";
                dataGrid.TableStyles[0].GridColumnStyles[i].MappingName = GrdMappingName[i].ToString();
                dataGrid.TableStyles[0].GridColumnStyles[i].Width = GrdWidth[i];
                dataGrid.TableStyles[0].GridColumnStyles[i].HeaderText = GrdHeaderText[i].ToString();
                if (GrdReadOnly[i] != 0) dataGrid.TableStyles[0].GridColumnStyles[i].ReadOnly = false;
                else dataGrid.TableStyles[0].GridColumnStyles[i].ReadOnly = true;
            }
        }

        #region 得到医嘱管理左边病人列表网格
        /// <summary>
        /// 得到医嘱管理左边病人列表网格
        /// </summary>
        private void GetBinNo()
        {
            if (mz)
            {
                string[] GrdMappingName1 ={ "BINID", "住院号", "姓名" };
                int[] GrdWidth1 ={ 0, 8, 10 };
                int[] Alignment1 ={ 0, 1, 0 };
                myQuery.InitGridSQL(BinSql1, GrdMappingName1, GrdWidth1, Alignment1, this.dataGrid2);
            }
            else
            {
                string[] GrdMappingName2 ={ "BINID", "床号", "姓名" };
                int[] GrdWidth2 ={ 0, 5, 10 };
                int[] Alignment2 ={ 0, 1, 0 };
                myQuery.InitGridSQL(BinSql, GrdMappingName2, GrdWidth2, Alignment2, this.dataGrid2);
                //			this.patientInfo1.SetInpatientInfo(BinID,BabyID,ClassStatic.Current_isMY);	
            }
            FindPatient();
            LoadYbzfbl_ZD();
            Cursor = Cursors.Default;
        }
        #endregion

        #region 根据选中的病人进入医嘱管理界面后定位到该病人
        /// <summary>
        /// 根据选中的病人进入医嘱管理界面后定位到该病人
        /// </summary>
        private void FindPatient()
        {
            for (int i = 0; i < ((DataTable)dataGrid2.DataSource).Rows.Count; i++)
            {
                if (new Guid(((DataTable)dataGrid2.DataSource).Rows[i]["BINID"].ToString()) == BinID)
                {
                    this.dataGrid2.Select(i);
                    this.dataGrid2.CurrentRowIndex = i;
                    break;
                }
            }
        }
        #endregion
        #endregion

        #region  临时账单网格定义
        private void InitGrd_TempZD()
        {
            string[] GrdMappingName ={ "ID", "嘱号", "开始时间", "类型", "医嘱内容", "剂量", "单价", "单位", "用法", "频率", "首次", "执行科室", "HOItem_ID", "exec_dept", "times_defalut", "iscomplex", "oldprice" };
            string[] GrdHeaderText ={ "ID", "嘱号", "开始时间", "类型", "账单内容", "数量", "单价", "单位", "用法", "", "", "", "", "", "", "", "" };
            int[] GrdWidth ={ 0, 40, 105, 80, 330, 40, 80, 40, 90, 0, 0, 0, 0, 0, 0, 0, 0 };
            bool[] GrdReadOnly ={ true, true, false, true, false, false, false, true, false, false, false, true, true, true, true, true, true };
            InitmyGrd(GrdMappingName, GrdHeaderText, GrdWidth, GrdReadOnly, this.dataGrid_TempZD);

            //初始化医嘱号
            ShowmyDate(false, true, false, this.dataGrid_TempZD);
        }

        #endregion

        #region 数据视图→表
        private DataTable insertRow(DataView myView, DataTable dt)
        {
            DataTable myTb = dt.Copy();
            myTb.Rows.Clear();
            foreach (DataRowView myDRV in myView)
            {
                DataRow newDR = myTb.NewRow();
                for (int i = 0; i < myView.Table.Columns.Count; i++)
                {
                    newDR[i] = myDRV[i];
                }
                myTb.Rows.Add(newDR);
            }
            return myTb;
        }
        #endregion

        #region 去多余的“0”
        private decimal removeZero(decimal dc)
        {
            string str = "";
            Int64 i = Convert.ToInt64(dc);
            if (dc == i)
            {
                return Convert.ToDecimal(i.ToString());
            }
            else
            {
                str = dc.ToString();

                for (i = 0; i <= str.Length; i++)
                {
                    if (str.Substring(str.Length - 1, 1) == "0") str = str.Substring(0, str.Length - 1);
                    else break;
                }
                return Convert.ToDecimal(str);
            }
        }
        #endregion

        #region 医嘱内容的添入,传入的参数为选择网格的行数  //医嘱检索内容控制 zouchihua
        private void GetCardData(int nSelRow, DataGridEx myDataGrid1)
        {
            if (nSelRow == -1) return;
            if (this.GrdSel.Visible == false)
            {
                return;
            }
            DataGridEx ob;//用来保存当前谁具有焦点
            if (GrdSel.Focused == true) ob = GrdSel;
            else ob = myDataGrid1;
            string errStr = "";//保存出错时的代码信息位置
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;

            try
            {
                int nrow, ncol;
                //首先得到当前网格的信息
                DataTable myTb = (DataTable)myDataGrid1.DataSource;
                //得到当前编辑网格的位置
                nrow = myDataGrid1.CurrentCell.RowNumber;
                ncol = myDataGrid1.CurrentCell.ColumnNumber;
                //得到选择网格的数据和选择的行号
                DataView mySelView = (DataView)this.GrdSel.DataSource;
                if (mySelView == null)
                {
                    return;
                }
                //得到当前编辑的TEXTBOX格子
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ncol];
                DataGridTextBoxColumn txtCol2 = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles["剂量"];

                if (this.GrdSel.VisibleRowCount < 1)
                {
                    myTb.Rows[nrow]["医嘱内容"] = "";
                    txtCol.TextBox.Text = "";
                    this.GrdSel.Visible = false;
                    return;
                }

                //选择超出范围
                if (nSelRow > mySelView.Count - 1)
                {
                    this.GrdSel.Visible = false;
                    return;
                }
                else
                {
                    txtCol.TextBox.Text = mySelView[nSelRow][0].ToString();
                    txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;

                    //ValideMedOrder();//mySelView[nSelRow]["order_id"].ToString()//mySelView[nSelRow]["xmly"].ToString()
                    string strMsg = "";
                    bool bValideMed = ValideMedOrder(mySelView[nSelRow]["xmly"].ToString(), mySelView[nSelRow]["order_id"].ToString(), mySelView[nSelRow]["医嘱内容"].ToString(), out strMsg);//myRecallTb.Rows[i]["HOITEM_ID"].ToString()//myRecallTb.Rows[i]["xmly"].ToString()
                    if (!bValideMed)
                    {
                        myTb.Rows[nrow]["医嘱内容"] = "";
                        txtCol.TextBox.Text = "";
                        myDataGrid1.Focus();
                        myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                        return;
                    }

                    #region//武汉中心医院
                    //add by  chenli  2017-08-28 
                    //检查类项目不允许直接在医嘱栏开立
                    string exedeptid = mySelView[nSelRow]["default_dept"].ToString().Trim();//获取执行科室
                    if (exedeptid == "9" || exedeptid == "132")
                    {
                        string itemcode = "";
                        DataTable dt = new DataTable();
                        string sql = string.Format(@"select D_CODE   from JC_HOITEMDICTION  where order_id='{0}'", mySelView[nSelRow]["order_id"].ToString());
                        dt = InstanceForm._database.GetDataTable(sql);
                        itemcode = dt.Rows[0]["D_CODE"].ToString();
                        MessageBox.Show("根据医院规定："+mySelView[nSelRow]["医嘱内容"].ToString() + "[" + itemcode.Trim() + "]" + "属于检查项目,请在左侧开具检查申请单");
                        this.GrdSel.Visible = false;
                        myTb.Rows[nrow]["医嘱内容"] = "";
                        txtCol.TextBox.Text = "";
                        myDataGrid1.Focus();
                        myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                        return;
                    }
                    if (mySelView[nSelRow]["order_id"].ToString() == "137429")
                    {
                        Ts_zyys_jysq.Inpatient_tz Inpatient_tz = new Ts_zyys_jysq.Inpatient_tz(InstanceForm._database);
                        Inpatient_tz.BinID = this.BinID;
                        Inpatient_tz.ShowDialog();
                        if (Inpatient_tz.isclose)
                        {
                            myTb.Rows[nrow]["医嘱内容"] = "";
                            txtCol.TextBox.Text = "";
                            myDataGrid1.Focus();
                            myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                            return;
                        }

                    }
                    if (this.fylb != "" && this.fylb != "自费")
                    {
                        if (!myTb.Columns.Contains("zfbl"))
                        {
                            myTb.Columns.Add("zfbl", typeof(System.Decimal));
                        }
                        int type = 0;
                        if (this.fylb.Contains("公费"))
                            type = 1;
                        else
                            type = 2;
                        decimal zfbl = 1;


                        if (!mySelView[nSelRow]["TYPE"].ToString().Equals("7") && !mySelView[nSelRow]["TYPE"].ToString().Equals("10"))
                        {
                            try
                            {

                                    //2,001064725,1276,2,特殊视力检查(点视力表）,
                                    if (!myQuery.GetGfxx(type, this.patientInfo1.lbID.Text.Trim(), mySelView[nSelRow]["order_id"].ToString(),
                                         mySelView[nSelRow]["xmly"].ToString(), mySelView[nSelRow]["医嘱内容"].ToString(), this.fylb, ref zfbl))
                                    {
                                        this.GrdSel.Visible = false;
                                        myTb.Rows[nrow]["医嘱内容"] = "";
                                        txtCol.TextBox.Text = "";
                                        myDataGrid1.Focus();
                                        myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                        return;
                                    }
                                    else
                                    {
                                        myTb.Rows[nrow]["zfbl"] = zfbl;
                                    }
                              
                            }
                            catch (Exception ex)//Modify By Tany 2015-03-18 加上捕获错误并返回，不继续操作
                            {
                                MessageBox.Show(ex.Message);
                                this.GrdSel.Visible = false;
                                myTb.Rows[nrow]["医嘱内容"] = "";
                                txtCol.TextBox.Text = "";
                                myDataGrid1.Focus();
                                myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                return;
                            }
                        }
                        else
                        {
                            myTb.Rows[nrow]["zfbl"] = 1;
                        }
                    }
                    #endregion


                    //Modify By Tany 2009-09-20
                    //医保病人不允许开非医保药品
                    if ((new SystemCfg(6021, InstanceForm._database)).Config == "1"
                        && patientInfo1.lbJSLX.Text.IndexOf("医保") >= 0
                        && mySelView[nSelRow]["自付比"].ToString().Trim() == ""
                        && mySelView[nSelRow]["type"].ToString().Trim() != "7")
                    {
                        FrmMessageBox.Show("该病人为医保病人，不允许开未匹配的药品或项目！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                        this.GrdSel.Visible = false;
                        myTb.Rows[nrow]["医嘱内容"] = "";
                        txtCol.TextBox.Text = "";
                        myDataGrid1.Focus();
                        myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                        return;
                    }

                    //Modify By Tany 2010-09-29
                    //如果该项目执行科室不是本机构编码，进行提示
                    DataTable tmpDept = InstanceForm._database.GetDataTable("select * from jc_dept_property where dept_id=" + mySelView[nSelRow]["default_dept"].ToString().Trim());
                    if (Convert.ToInt32(tmpDept.Rows[0]["jgbm"]) != FrmMdiMain.Jgbm)
                    {
                        if (MessageBox.Show("该项目执行科室【" + tmpDept.Rows[0]["name"].ToString().Trim() + "】不是本院科室！是否继续开此医嘱？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                        {
                            this.GrdSel.Visible = false;
                            myTb.Rows[nrow]["医嘱内容"] = "";
                            txtCol.TextBox.Text = "";
                            myDataGrid1.Focus();
                            myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                            return;
                        }
                    }
                   

                    bool isZB = false;//作为自备药吗			
                    string ypType = mySelView[nSelRow]["type"].ToString();//医嘱类型

                    if (!(ypType == "1" || ypType == "2" || ypType == "3"))
                    {
                        if (cfg6082.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "长期医嘱" && myQuery.IsExsitsorderid(myTb, mySelView[nSelRow]["order_id"].ToString(), DateManager.ServerDateTimeByDBType(InstanceForm._database), this.BinID.ToString(), this.BabyID.ToString()))
                        {
                            if (MessageBox.Show("今天已经开了相同的【" + mySelView[nSelRow]["医嘱内容"] + "】！是否继续开此医嘱？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                            {
                                this.GrdSel.Visible = false;
                                myTb.Rows[nrow]["医嘱内容"] = "";
                                txtCol.TextBox.Text = "";
                                myDataGrid1.Focus();
                                myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                return;
                            }
                        }
                    }

                    if (ypType == "1" || ypType == "2" || ypType == "3")
                    {
                        //add by zouchihua 2013-7-18 药品科室限制
                        DataTable tbksxz = FrmMdiMain.Database.GetDataTable("select * from jc_ypksxz where delete_bit=0 and dept_id=" + InstanceForm._currentDept.DeptId + " and ggid=" + mySelView[nSelRow]["项目代码"] + "");
                        if (tbksxz.Rows.Count > 0)
                        {
                            MessageBox.Show("对不起，药品【" + mySelView[nSelRow]["医嘱内容"].ToString() + "】在本科室受限制，请联系管理员");
                            this.GrdSel.Visible = false;
                            myTb.Rows[nrow]["医嘱内容"] = "";
                            txtCol.TextBox.Text = "";
                            myDataGrid1.Focus();
                            myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                            return;
                        }

                        #region//Add by zouchihua 是否启用要比控制 2013-5-2
                        string ts = GetYPkz(FrmMdiMain.CurrentDept.DeptId, 1);
                        if (ts.Trim() != "")
                        {
                            MessageBox.Show(ts, "温馨提示");
                            return;
                        }
                        #endregion
                        //add by zouchihua 2012-5-25  中草药权限控制
                        if (cfg6046.Config.Trim() == "1" && ypType == "3" && doctor.ZY_Right == false)
                        {
                            FrmMessageBox.Show("此药品为中药，受权限限，不允许你开此药品！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            this.GrdSel.Visible = false;
                            myTb.Rows[nrow]["医嘱内容"] = "";
                            txtCol.TextBox.Text = "";
                            myDataGrid1.Focus();
                            myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                            return;
                        }
                        // myTb.Rows[nrow]["dwlx"] = 1;//保证dwlx(单位类型)字段在修改药品医嘱时默认为1 
                        if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                            myTb.Rows[nrow]["jldwlx"] = 1;
                        else
                            myTb.Rows[nrow]["dwlx"] = 1;
                        //Modify by Zouchihua 增加药品分级控制的参数
                        // if (new SystemCfg(19004).Config == "1")
                        //{
                        #region 判断本人是否可以开该药品医嘱（药品分级控制,临时医嘱不受限制）
                        if (!mz && !_hs && !hs && !_tszl)//非手术麻醉站和护士站
                        {
                            DataTable _dt = InstanceForm._database.GetDataTable("select * from vi_yp_ypcd where cjid = " + mySelView[nSelRow]["ORDER_ID"] + " and (mzyp != 0 or djyp != 0 or JSYP != 0)");
                            DataTable _dt1 = InstanceForm._database.GetDataTable("select * from JC_ROLE_DOCTOR a left join JC_DOCTOR_TYPE b on a.YS_TYPEID=b.TYPE_ID  where employee_id = '" + YS_ID + "'");

                            if (_dt.Rows.Count != 0 && _dt1.Rows.Count != 0)
                            {
                                if (doctor.MZ_Right != true || doctor.DM_Right != true)
                                {
                                    if (doctor.MZ_Right == false && Convert.ToInt32(_dt.Rows[0]["mzyp"]) != Convert.ToInt32(_dt1.Rows[0]["mz_right"]))
                                    {
                                        FrmMessageBox.Show("此药品为麻醉药品，受级别限制，不允许你开此药品！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                        this.GrdSel.Visible = false;
                                        myTb.Rows[nrow]["医嘱内容"] = "";
                                        txtCol.TextBox.Text = "";
                                        myDataGrid1.Focus();
                                        myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                        return;
                                    }
                                    if (doctor.DM_Right == false && Convert.ToInt32(_dt.Rows[0]["djyp"]) != Convert.ToInt32(_dt1.Rows[0]["dm_right"]))
                                    {
                                        FrmMessageBox.Show("此药品为毒剧药品，受级别限制，不允许你开此药品！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                        this.GrdSel.Visible = false;
                                        myTb.Rows[nrow]["医嘱内容"] = "";
                                        txtCol.TextBox.Text = "";
                                        myDataGrid1.Focus();
                                        myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                        return;
                                    }

                                }
                            }
                            //_dt = InstanceForm._database.GetDataTable("select * from vi_yp_ypcd where cjid = " + mySelView[nSelRow]["ORDER_ID"] + " ");
                            if (_dt1.Rows.Count != 0)
                            {
                                //Modify by zouchihua doctor.TypeID 改为zcjb 2012-10-10
                                long TypeID = long.Parse(_dt1.Rows[0]["YS_TYPEID"].ToString());
                                //Modify by Zouchihua 增加药品分级控制的参数
                                if (new SystemCfg(19004).Config == "1" && (cfg6053.Config.Trim() == "1" || tc.SelectedTab.Title.Trim() == "长期医嘱"))
                                {
                                    if ((cfg6053.Config.Trim() == "1" || pageType == 0) && TypeID > Convert.ToInt64(mySelView[nSelRow]["xzjb"]))
                                    {
                                        #region"Modify by : jchl(07-10)"

                                        if (!IsCanMadeHighTypeHosItem())
                                        {
                                            //不允许开立 或者 提示是否开立后选择不开立
                                            this.GrdSel.Visible = false;
                                            myTb.Rows[nrow]["医嘱内容"] = "";
                                            txtCol.TextBox.Text = "";
                                            myDataGrid1.Focus();
                                            myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                            return;
                                        }

                                        //if (cfg6204.Config.Equals("0"))
                                        //{
                                        //    //不允许开立
                                        //    FrmMessageBox.Show("此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                        //    this.GrdSel.Visible = false;
                                        //    myTb.Rows[nrow]["医嘱内容"] = "";
                                        //    txtCol.TextBox.Text = "";
                                        //    myDataGrid1.Focus();
                                        //    myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                        //    return;
                                        //}
                                        //else if (cfg6204.Config.Equals("1"))
                                        //{
                                        //    //允许开立，但提示
                                        //    if (FrmMessageBox.Show("此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！是否继续？", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button2) == DialogResult.No)
                                        //    {
                                        //        this.GrdSel.Visible = false;
                                        //        myTb.Rows[nrow]["医嘱内容"] = "";
                                        //        txtCol.TextBox.Text = "";
                                        //        myDataGrid1.Focus();
                                        //        myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                        //        return;
                                        //    }
                                        //}

                                        #endregion
                                        //FrmMessageBox.Show("此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                        //this.GrdSel.Visible = false;
                                        //myTb.Rows[nrow]["医嘱内容"] = "";
                                        //txtCol.TextBox.Text = "";
                                        //myDataGrid1.Focus();
                                        //myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                        //return;
                                    }
                                }
                            }
                            //add by yaokx 2014-05-13
                            if ((new SystemCfg(6093, InstanceForm._database)).Config == "1" && _dt.Rows.Count > 0)
                            {

                                if (Convert.ToBoolean(_dt.Rows[0]["mzyp"].ToString()) == true || Convert.ToBoolean(_dt.Rows[0]["djyp"].ToString()) == true || Convert.ToBoolean(_dt.Rows[0]["JSYP"].ToString()) == true)
                                {
                                    FrmMessageBox.Show("毒麻精神类药品必须凭当日处方取药，过期处方无效且不能取药！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                }
                            }
                        }

                        #endregion
                        //  }

                        #region 判断是否缺药，缺药将作为自备药处理
                        errStr = "判断是否缺药";
                        if (mySelView[nSelRow]["基数"].ToString() != "√" && myQuery.GetQYinfo(Convert.ToInt32(mySelView[nSelRow]["order_id"]), Convert.ToInt32(mySelView[nSelRow]["default_dept"])) == true)
                        {
                            if (MessageBox.Show("药房缺少该药！继续开此药品医嘱将作为自备药处理。\n要开吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
                            {
                                this.GrdSel.Visible = false;
                                myTb.Rows[nrow]["医嘱内容"] = "";
                                txtCol.TextBox.Text = "";
                                myDataGrid1.Focus();
                                myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                return;
                            }
                            else
                            {
                                isZB = true;
                                myDataGrid1.Focus();
                                if (ob == myDataGrid1) myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);
                                else myDataGrid1.CurrentCell = new DataGridCell(nrow, 5);

                            }
                        }
                        #endregion

                        //Modify By Tany 2010-01-11
                        #region 判断是否拆零
                        errStr = "判断是否拆零";
                        if (mySelView[nSelRow]["dwbl"].ToString().Trim() == "1" && myQuery.isKfyp(Convert.ToInt64(mySelView[nSelRow]["order_id"]), _kfyTlfl))
                        {
                            if (MessageBox.Show("该药品未拆零！是否继续开此药品医嘱？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                            {
                                this.GrdSel.Visible = false;
                                myTb.Rows[nrow]["医嘱内容"] = "";
                                txtCol.TextBox.Text = "";
                                myDataGrid1.Focus();
                                myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                return;
                            }
                        }
                        #endregion

                        #region 不是本病区的药品是否作为自备药
                        if (pageType == 0 && chk_zb.Checked && Convert.ToInt32(mySelView[nSelRow]["default_dept"]) != this.Ward_dept)
                        {
                            if (MessageBox.Show("不是本病区的药品，是否要作为自备药处理？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                            {
                                isZB = true;
                                myDataGrid1.Focus();
                            }
                            myDataGrid1.CurrentCell = new DataGridCell(nrow, 6); myDataGrid1.Focus();
                            txtCol2.TextBox.BackColor = System.Drawing.Color.SkyBlue;
                        }
                        #endregion

                        //Modify by tany 2010-01-19
                        #region 判断口服药和注射剂不能开在一起
                        if (ypType == "1" || ypType == "2")
                        {
                            string tmpTlfl = "";
                            string dataTlfl = mySelView[nSelRow]["tlfl"].ToString().Trim();
                            //如果是组首行
                            if (IsGroupFirstRow(myTb, nrow))
                            {
                                //如果下一行不是组首行，并且下一行有内容，那么判断下一行
                                if (!IsGroupFirstRow(myTb, nrow + 1) && Convertor.IsNull(myTb.Rows[nrow + 1]["HOItem_ID"], "") != "")
                                {
                                    tmpTlfl = myQuery.GetYpTlfl(Convert.ToInt64(myTb.Rows[nrow + 1]["HOItem_ID"]));
                                    //如果下一行是口服药并且当前选中的是注射剂 或者 下一行是注射剂并且当前选中的是口服药，则提示
                                    if ((_kfyTlfl.IndexOf(tmpTlfl) >= 0 && _zsjTlfl.IndexOf(dataTlfl) >= 0)
                                        || (_zsjTlfl.IndexOf(tmpTlfl) >= 0 && _kfyTlfl.IndexOf(dataTlfl) >= 0))
                                    {
                                        if (MessageBox.Show("系统检测到同一组医嘱里面同时存在口服药和注射剂！\r\n是否继续开此药品医嘱？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                                        {
                                            this.GrdSel.Visible = false;
                                            myTb.Rows[nrow]["医嘱内容"] = "";
                                            txtCol.TextBox.Text = "";
                                            myDataGrid1.Focus();
                                            myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                            return;
                                        }
                                    }
                                }
                            }
                            else//如果不是组首行，那么需要判断上一行
                            {
                                tmpTlfl = myQuery.GetYpTlfl(Convert.ToInt64(myTb.Rows[nrow - 1]["HOItem_ID"]));
                                //如果下一行是口服药并且当前选中的是注射剂 或者 下一行是注射剂并且当前选中的是口服药，则提示
                                if ((_kfyTlfl.IndexOf(tmpTlfl) >= 0 && _zsjTlfl.IndexOf(dataTlfl) >= 0)
                                    || (_zsjTlfl.IndexOf(tmpTlfl) >= 0 && _kfyTlfl.IndexOf(dataTlfl) >= 0))
                                {
                                    if (MessageBox.Show("系统检测到同一组医嘱里面同时存在口服药和注射剂！\r\n是否继续开此药品医嘱？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                                    {
                                        this.GrdSel.Visible = false;
                                        myTb.Rows[nrow]["医嘱内容"] = "";
                                        txtCol.TextBox.Text = "";
                                        myDataGrid1.Focus();
                                        myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                        return;
                                    }
                                }
                            }
                        }
                        #endregion

                        //Modify By Tany 2011-08-05
                        #region 判断一组药品里面是否有相同的药品
                        int[] rtn = GetGroupStartEnd(myTb, nrow);
                        int _groupstart = rtn[0];
                        int _groupend = rtn[1];
                        for (int i = _groupstart; i <= _groupend; i++)
                        {
                            if (mySelView[nSelRow]["ORDER_ID"].ToString().Trim() == myTb.Rows[i]["hoitem_id"].ToString().Trim())
                            {
                                if (MessageBox.Show("系统检测到该组医嘱里面已经存在【" + mySelView[nSelRow]["医嘱内容"].ToString() + " " + mySelView[nSelRow]["规格"].ToString() + " " + mySelView[nSelRow]["内容"].ToString() + "】\r\n是否继续开此药品医嘱？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                                {
                                    this.GrdSel.Visible = false;
                                    myTb.Rows[nrow]["医嘱内容"] = "";
                                    txtCol.TextBox.Text = "";
                                    myDataGrid1.Focus();
                                    myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                    return;
                                }
                            }
                        }
                        //检测这组要种是否有不同的药房 add by zouchihua 2012-10-30
                        if (ypType == "3")
                        {
                            for (int i = _groupstart; i <= _groupend; i++)
                            {
                                if (mySelView[nSelRow]["default_dept"].ToString().Trim() != myTb.Rows[i]["执行科室"].ToString().Trim())
                                {
                                    if (MessageBox.Show("系统检测到该组中草药医嘱里面执行科室与【" + mySelView[nSelRow]["医嘱内容"].ToString() + " " + mySelView[nSelRow]["规格"].ToString() + " " + mySelView[nSelRow]["内容"].ToString() + "】不同\r\n是否继续开此药品医嘱？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                                    {
                                        this.GrdSel.Visible = false;
                                        myTb.Rows[nrow]["医嘱内容"] = "";
                                        txtCol.TextBox.Text = "";
                                        myDataGrid1.Focus();
                                        myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                        return;
                                    }
                                }
                            }

                            //modify by jchl:（中药不能开外来药）xmly=1&&Exec_dept==-1
                            for (int i = _groupstart; i <= _groupend; i++)
                            {
                                if (myTb.Rows[i]["XMLY"].ToString().Trim().Equals("1") && myTb.Rows[i]["Exec_dept".ToUpper()].ToString().Trim().Equals("-1"))
                                {
                                    MessageBox.Show("系统检测到该组中草药医嘱里面有外来药，不能继续", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                    this.GrdSel.Visible = false;
                                    myTb.Rows[nrow]["医嘱内容"] = "";
                                    txtCol.TextBox.Text = "";
                                    myDataGrid1.Focus();
                                    myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                    return;
                                }
                            }
                        }
                        #endregion

                    }

                    #region 第一行的录入
                    if (nrow == 0)
                    {
                        myTb.Rows[nrow]["类型"] = myQuery.GetyzType(Int32.Parse(mySelView[nSelRow]["type"].ToString())); //得到输入了数字对应的中文名称
                        //医嘱内容
                        if (isZB == false)
                        {
                            myTb.Rows[nrow]["医嘱内容"] = mySelView[nSelRow]["医嘱内容"];
                            txtCol.TextBox.Text = mySelView[nSelRow]["医嘱内容"].ToString();
                        }
                        else
                        {
                            myTb.Rows[nrow]["医嘱内容"] = mySelView[nSelRow]["医嘱内容"] + "「自备」";
                            txtCol.TextBox.Text = mySelView[nSelRow]["医嘱内容"].ToString() + "「自备」";
                        }
                        //Modify By Tany 2010-02-25
                        myTb.Rows[nrow]["规格"] = mySelView[nSelRow]["规格"];
                        //医嘱内容对应的医嘱ID
                        myTb.Rows[nrow]["HOItem_ID"] = mySelView[nSelRow]["order_id"];
                        myTb.Rows[nrow]["xmly"] = mySelView[nSelRow]["xmly"];
                        myTb.Rows[nrow]["jgbm"] = mySelView[nSelRow]["jgbm"];
                        //剂量,单位，用法，频率，首日执行次数，执行科室
                        myTb.Rows[nrow]["剂量"] = mySelView[nSelRow]["DWHL"];
                        txtCol2.TextBox.Text = mySelView[nSelRow]["DWHL"].ToString();
                        myTb.Rows[nrow]["单位"] = mySelView[nSelRow]["单位"];



                        //string ss = tb.Rows[nrow]["jldwlx"].ToString();
                        //int dwlx = 1;
                        if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                            myTb.Rows[nrow]["jldwlx"] = 1;
                        else
                            myTb.Rows[nrow]["dwlx"] = 1;

                        //myTb.Rows[nrow]["规格"] = mySelView[nSelRow]["规格"];
                        //						myTb.Rows[nrow]["单价"]=mySelView[nSelRow]["单价"].ToString();    //根据在网格中输入的项目剂量得到项目的价格

                        if (isZB == false) myTb.Rows[nrow]["执行科室"] = mySelView[nSelRow]["default_dept"];
                        else myTb.Rows[nrow]["执行科室"] = -1;//自备药的执行科室为-1
                        //默认为长嘱
                        if (mySelView[nSelRow]["用法"].ToString() == "") myTb.Rows[nrow]["用法"] = "";
                        else myTb.Rows[nrow]["用法"] = mySelView[nSelRow]["用法"];
                        myTb.Rows[nrow]["频率"] = "";
                        if (!(myTb.Rows[nrow]["status_flag"].ToString() == "9" || myTb.Rows[nrow]["status_flag"].ToString() == "1")) myTb.Rows[nrow]["status_flag"] = "0";
                        if (myTb.Rows[nrow]["ID"].ToString() == "")
                        {
                            myTb.Rows[nrow]["ID"] = Guid.Empty;
                        }
                        if (GetGroupType(myTb, nrow) == "3-中草药")
                        {
                            errStr = "①中草药的处理";
                            if (!cycl(myDataGrid1, myTb, nrow)) return;
                        }
                    }
                    #endregion

                    #region 非第一行的录入
                    if (nrow != 0)
                    {
                        #region 内容的添入
                        if (myTb.Rows[nrow - 1][ncol].ToString().Trim() == "")//上一列无内容的情况下,就跟第一行一样
                        {
                            myTb.Rows[nrow]["类型"] = myQuery.GetyzType(Int32.Parse(mySelView[nSelRow]["type"].ToString())); //得到输入了数字对应的中文名称
                            //医嘱内容
                            if (isZB == false)
                            {
                                myTb.Rows[nrow]["医嘱内容"] = mySelView[nSelRow]["医嘱内容"];
                                txtCol.TextBox.Text = mySelView[nSelRow]["医嘱内容"].ToString();
                            }
                            else
                            {
                                myTb.Rows[nrow]["医嘱内容"] = mySelView[nSelRow]["医嘱内容"] + "「自备」";
                                txtCol.TextBox.Text = mySelView[nSelRow]["医嘱内容"].ToString() + "「自备」";
                            }
                            //Modify By Tany 2010-02-25
                            myTb.Rows[nrow]["规格"] = mySelView[nSelRow]["规格"];
                            //医嘱内容对应的医嘱ID
                            myTb.Rows[nrow]["HOItem_ID"] = mySelView[nSelRow]["order_id"];
                            myTb.Rows[nrow]["xmly"] = mySelView[nSelRow]["xmly"];
                            myTb.Rows[nrow]["jgbm"] = mySelView[nSelRow]["jgbm"];
                            //剂量,单位，用法，频率，首日执行次数，执行科室
                            myTb.Rows[nrow]["剂量"] = mySelView[nSelRow]["DWHL"];
                            txtCol2.TextBox.Text = mySelView[nSelRow]["DWHL"].ToString();
                            myTb.Rows[nrow]["单位"] = mySelView[nSelRow]["单位"];
                            if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                                myTb.Rows[nrow]["jldwlx"] = 1;
                            else
                                myTb.Rows[nrow]["dwlx"] = 1;

                            if (isZB == false) myTb.Rows[nrow]["执行科室"] = mySelView[nSelRow]["default_dept"];
                            else myTb.Rows[nrow]["执行科室"] = -1;//自备药的执行科室为-1
                            if (!(myTb.Rows[nrow]["status_flag"].ToString() == "9" || myTb.Rows[nrow]["status_flag"].ToString() == "1")) myTb.Rows[nrow]["status_flag"] = "0";

                            //Modify by jchl (非第一行不需要用法)
                            if (!myTb.Rows[nrow]["开始时间"].ToString().Trim().Equals(""))
                            {
                                if (mySelView[nSelRow]["用法"].ToString() == "") myTb.Rows[nrow]["用法"] = "";
                                else myTb.Rows[nrow]["用法"] = mySelView[nSelRow]["用法"];
                            }

                            myTb.Rows[nrow]["频率"] = "";

                            if (myTb.Rows[nrow - 1]["mngtype"] != System.DBNull.Value && myTb.Rows[nrow]["开始时间"] == System.DBNull.Value) myTb.Rows[nrow]["mngtype"] = myTb.Rows[nrow - 1]["mngtype"];

                            if (myTb.Rows[nrow]["ID"].ToString() == "")
                            {
                                myTb.Rows[nrow]["ID"] = Guid.Empty;
                            }
                            if (GetGroupType(myTb, nrow) == "3-中草药")
                            {
                                if (!cycl(myDataGrid1, myTb, nrow)) return;
                            }

                        }
                        else//上一列有内容的情况下,就跟跟上一行一样
                        {
                            myTb.Rows[nrow]["类型"] = myQuery.GetyzType(Int32.Parse(mySelView[nSelRow]["type"].ToString())); //得到输入了数字对应的中文名称
                            //医嘱内容
                            if (isZB == false)
                            {
                                myTb.Rows[nrow]["医嘱内容"] = mySelView[nSelRow]["医嘱内容"];
                                txtCol.TextBox.Text = mySelView[nSelRow]["医嘱内容"].ToString();
                            }
                            else
                            {
                                myTb.Rows[nrow]["医嘱内容"] = mySelView[nSelRow]["医嘱内容"] + "「自备」";
                                txtCol.TextBox.Text = mySelView[nSelRow]["医嘱内容"].ToString() + "「自备」";
                            }
                            //Modify By Tany 2010-02-25
                            myTb.Rows[nrow]["规格"] = mySelView[nSelRow]["规格"];
                            //医嘱内容对应的医嘱ID
                            myTb.Rows[nrow]["HOItem_ID"] = mySelView[nSelRow]["order_id"];
                            myTb.Rows[nrow]["xmly"] = mySelView[nSelRow]["xmly"];
                            myTb.Rows[nrow]["jgbm"] = mySelView[nSelRow]["jgbm"];
                            //剂量,单位，规格，用法，频率，首日执行次数，执行科室
                            myTb.Rows[nrow]["剂量"] = mySelView[nSelRow]["DWHL"];
                            txtCol2.TextBox.Text = mySelView[nSelRow]["DWHL"].ToString();
                            myTb.Rows[nrow]["单位"] = mySelView[nSelRow]["单位"];
                            if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                                myTb.Rows[nrow]["jldwlx"] = 1;
                            else
                                myTb.Rows[nrow]["dwlx"] = 1;

                            //Modify by jchl (非第一行不需要用法)
                            if (!myTb.Rows[nrow]["开始时间"].ToString().Trim().Equals(""))
                            {
                                if (mySelView[nSelRow]["用法"].ToString() == "") myTb.Rows[nrow]["用法"] = "";
                                else myTb.Rows[nrow]["用法"] = mySelView[nSelRow]["用法"];
                            }

                            if (isZB == false) myTb.Rows[nrow]["执行科室"] = mySelView[nSelRow]["default_dept"];
                            else myTb.Rows[nrow]["执行科室"] = -1;//自备药的执行科室为-1
                            if (!(myTb.Rows[nrow]["status_flag"].ToString() == "9" || myTb.Rows[nrow]["status_flag"].ToString() == "1")) myTb.Rows[nrow]["status_flag"] = "0";

                            if (myTb.Rows[nrow - 1]["mngtype"] != System.DBNull.Value && myTb.Rows[nrow]["开始时间"] == System.DBNull.Value) myTb.Rows[nrow]["mngtype"] = myTb.Rows[nrow - 1]["mngtype"];

                            if (myTb.Rows[nrow]["ID"].ToString() == "")
                            {
                                myTb.Rows[nrow]["ID"] = Guid.Empty;
                            }
                            //可以省略一些列
                            if (GetGroupType(myTb, nrow) == "3-中草药")
                            {
                                errStr = "②中草药的处理";
                                if (!cycl(myDataGrid1, myTb, nrow)) return;
                            }
                        }
                        #endregion
                    }
                    #endregion

                    myTb.Rows[nrow]["ps_flag"] = -1;
                    myTb.Rows[nrow]["ps_orderid"] = Guid.Empty;

                    #region"Modify by jchl (07-10)[把选项卡中的药品的处方级别字段存储在grid中的 Memo 字段里面]"
                    myTb.Rows[nrow]["MEMO"] = mySelView[nSelRow]["xzjb"];
                    #endregion

                    myDataGrid1.Focus();

                    //Modify by jchl(开皮试药品时是否提示需要开皮试医嘱 0=不 1=是  )
                    if (cfg6208.Config.Trim() == "1" && (cfg6220.Config.Trim() == "1" || myQuery.IsDeptOk(DeptID.ToString())))
                    {
                        #region 皮试药品的处理
                        errStr = "皮试药品的处理";
                        if (mySelView[nSelRow]["psyp"].ToString() == "1")//是否为皮试药品
                        {
                            if (MessageBox.Show("该药品是需要皮试的药品，你要开‘皮试’医嘱吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) == DialogResult.Yes)
                            {

                                DateTime dTime;
                                dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                                int beginrow = GetGroupBeginRow(myTb, nrow + 1);
                                if (myTb.Rows[beginrow]["status_flag"].ToString() == "9")
                                {
                                    //Modify by zouchihua 2013-6-27 获得一组行号 解决补录的问题
                                    dTime = Convert.ToDateTime(myTb.Rows[beginrow]["开始时间"]);
                                }
                                checkPage();
                                Guid strDate = PubStaticFun.NewGuid();
                                myTb.Rows[nrow]["ps_flag"] = 0;//需要皮试的话应该=0，-1=不需要皮试，1=阴，2=阳，3=免试 Modify By Tany 20070625
                                myTb.Rows[nrow]["ps_orderid"] = strDate;
                                //DataTable dt_ps = new DataTable();
                                //string sql = "select ps_orderid  from   zy_orderrecord  where ps_flag=0 and hoitem_id='" + myTb.Rows[nrow]["hoitem_id"] + "'" + "and inpatient_id='" + BinID + "'";
                                //dt_ps = InstanceForm._database.GetDataTable(sql);
                                //if (dt_ps.Rows.Count > 0)
                                //{
                                //    DataTable dt_isgm = new DataTable();
                                //    string ssql = "select order_id  from   zy_orderrecord  where ps_flag=2 and order_id='" + dt_ps.Rows[0]["ps_orderid"] + "'";
                                //    dt_isgm = InstanceForm._database.GetDataTable(ssql);
                                //    if (dt_isgm.Rows.Count > 0)
                                //    {
                                //        DialogResult dr = MessageBox.Show("该病人该组药品皮试结果为阳性,是否继续？", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);
                                //        if (dr == DialogResult.OK)
                                //        {
                                //            InsertPSYZ(dTime, mySelView[nSelRow]["type"].ToString(), mySelView[nSelRow]["医嘱内容"].ToString(), strDate, pageType, nrow, Convert.ToInt32(myTb.Rows[beginrow]["status_flag"]));
                                //            if (MessageBox.Show("是否开皮试用药？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.Yes)
                                //            {
                                //                if (pageType == 1) nrow = nrow + 1;
                                //                if (nrow < 0) nrow = 0;
                                //                InsertPSYY(mySelView[nSelRow].Row, dTime, pageType, nrow, Convert.ToInt32(myTb.Rows[beginrow]["status_flag"]));
                                //                //								MessageBox.Show("皮试用药缺少数据，请手工添加！");
                                //            }
                                //            //BY ADD YAOKX 201-04-24 开皮试医嘱时，自动带出一支稀释药品

                                //            if (pageType == 1) nrow = nrow + 1;
                                //            if (nrow < 0) nrow = 0;
                                //            InsertPSXS(mySelView[nSelRow].Row, dTime, pageType, nrow, Convert.ToInt32(myTb.Rows[beginrow]["status_flag"]));

                                //        }
                                //        else
                                //        {
                                //            btDel_Click(null,null);
                                //            return;
                                //        }
                                //    }
                                //}
                                //else
                                //{
                                    //InsertPSYZ(dTime, mySelView[nSelRow]["type"].ToString(), mySelView[nSelRow]["医嘱内容"].ToString(), strDate, pageType, nrow, Convert.ToInt32(myTb.Rows[beginrow]["status_flag"]));
                                    InsertPSYZ(dTime, mySelView[nSelRow]["type"].ToString(), mySelView[nSelRow]["医嘱内容"].ToString(), strDate, pageType, nrow, Convert.ToInt32(myTb.Rows[beginrow]["status_flag"]), mySelView[nSelRow]["order_id"].ToString());
                                    if (MessageBox.Show("是否开皮试用药？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.Yes)
                                    {
                                        if (pageType == 1) nrow = nrow + 1;
                                        if (nrow < 0) nrow = 0;
                                        InsertPSYY(mySelView[nSelRow].Row, dTime, pageType, nrow, Convert.ToInt32(myTb.Rows[beginrow]["status_flag"]));
                                        //								MessageBox.Show("皮试用药缺少数据，请手工添加！");
                                    }
                                    //BY ADD YAOKX 201-04-24 开皮试医嘱时，自动带出一支稀释药品

                                    if (pageType == 1) nrow = nrow + 1;
                                    if (nrow < 0) nrow = 0;
                                    InsertPSXS(mySelView[nSelRow].Row, dTime, pageType, nrow, Convert.ToInt32(myTb.Rows[beginrow]["status_flag"]));
                                }
                            //}
                            else
                            {
                                txtCol.TextBox.Text += " 「免试」";
                                myTb.Rows[nrow]["医嘱内容"] = txtCol.TextBox.Text;
                                myTb.Rows[nrow]["ps_flag"] = 3;
                            }
                            myDataGrid1.Focus();
                            if (ob == myDataGrid1) myDataGrid1.CurrentCell = new DataGridCell(nrow, 5);
                            else myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);
                        }
                        #endregion
                    }
                    //Add by zouchihua 2011-12-24
                    #region 合理用药的控制
                    if (cfg6032 == "1" && (ypType == "1" || ypType == "2" || ypType == "3"))
                    {
                        //显示药店提示
                        string cs = "<safe><general_name>" + mySelView[nSelRow]["医嘱内容"].ToString() + "</general_name><license_number>"
                                  + mySelView[nSelRow]["order_id"].ToString() + "</license_number><type>1</type></safe>";

                        Rectangle rc = myDataGrid1.GetCellBounds(nrow, ncol);
                        //x方向
                        int ll_ax = rc.Left; //药品名称X坐标
                        int ll_cellwidth = rc.Width; //药品名称宽度
                        int ll_bx = ll_ax + ll_cellwidth;  //药品名称y坐标

                        //y方向						
                        int ll_headerht = rc.Height;  //当前数据窗口的行高
                        int ll_rowht = rc.Height; //明细的高度
                        int ll_jumprow = nrow;
                        //得到当前鼠标点击的行号
                        int ll_ay = ll_jumprow * ll_rowht + ll_headerht;
                        int ll_by = ll_ay + ll_rowht + 15;

                        int ll_axtoscreen = this.panel3.Left + 190;
                        int ll_aytoscreen = this.panel3.Top + myDataGrid1.GetCellBounds(nrow, ncol).Top + myDataGrid1.Top + myDataGrid1.GetCellBounds(nrow, ncol).Height * 5 / 2;
                        int ll_bxtoscreen = ll_bx + rc.Left;
                        int ll_bytoscreen = ll_by + rc.Top;
                        //string hlyytype = GetIniString("hlyy", "name", System.Windows.Forms.Application.StartupPath + "\\Hlyy.ini");
                        Point po = Cursor.Position;
                        //美康合理用好接口
                        try
                        {
                            if (strHlyyType == "美康")
                            {
                                //Modify by zouchihua 20126-27 美康暂时屏蔽
                                //hl.ShowPoint(new StringBuilder(Convert.ToInt32(this.Width - po.X - 350).ToString() + "," + Convert.ToInt32(this.Height - po.Y - 230).ToString() + "," + po.X + "," + Convert.ToInt32(po.Y + 20) + "," + myTb.Rows[nrow]["hoitem_id"].ToString() + "," + myTb.Rows[nrow]["医嘱内容"].ToString().Trim()));
                            }
                            else
                                if (strHlyyType == "大通")
                                    hl.ShowPoint(new StringBuilder(cs));
                                else if (strHlyyType == "大通新")
                                {
                                    //add by zouchihu 2013-8-29
                                    cs = " <details_xml><hosp_flag>ip</hosp_flag><medicine><his_code>" + mySelView[nSelRow]["order_id"].ToString() + "</his_code><his_name>" + mySelView[nSelRow]["医嘱内容"].ToString() + "</his_name></medicine></details_xml> ";

                                    //Modify by jchl:2016-08-01 新大通合理用药不提示,只采集
                                    //hl.ShowPoint(new StringBuilder(cs));//大通新的合理用药条用
                                }
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(ex.Message);
                        }
                    }
                    #endregion
                    this.GrdSel.Visible = false;

                    #region 显示药品信息
                    if (this.chk_ypInfo.Checked)
                    {
                        errStr = "显示药品信息";
                        string myType = myTb.Rows[nrow]["类型"].ToString().Trim();
                        if (myType == "1-西药" || myType == "2-中成药")
                        {
                            int cjid = Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["hoitem_id"], "-1"));
                            double myNum = Convert.ToDouble(Convertor.IsNull(myTb.Rows[nrow]["剂量"], "0"));
                            int dwlx = Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["dwlx"], "1"));
                            long myDept_ID = Convert.ToInt64(Convertor.IsNull(myTb.Rows[nrow]["执行科室"], "-1"));
                            //显示药品信息
                            //Modify By tany 2011-04-12 获取病人医保类型
                            int yblx = Convert.ToInt32(InstanceForm._database.GetDataResult("select yblx from zy_inpatient where inpatient_id='" + BinID + "'"));
                            this.priceInfo1.SetYpInfo(cjid, myNum, dwlx, myDept_ID, yblx);
                            //显示药房
                            this.lb_dept.Tag = myDept_ID;
                            if (chk_dept.Checked) this.lb_dept.Text = mySelView[nSelRow]["deptname"].ToString().Trim();
                            else this.lb_dept.Text = "";
                        }
                        else
                        {
                            this.priceInfo1.ClearYpInfo();
                            this.lb_dept.Tag = "";
                            this.lb_dept.Text = "";
                        }
                    }
                    else
                    {
                        this.priceInfo1.ClearYpInfo();
                        this.lb_dept.Tag = "";
                        this.lb_dept.Text = "";
                    }
                    #endregion

                    #region 显示费用的处理
                    errStr = "显示费用的处理";
                    if (this.ChkWillGetFee.Checked == true)//是否显示费用
                    {
                        GetFee(mySelView[nSelRow]["order_id"].ToString().Trim(), Convert.ToInt32(mySelView[nSelRow]["xmly"]), Int32.Parse(mySelView[nSelRow]["type"].ToString()),
                              Convert.ToDecimal(mySelView[nSelRow]["dwhl"]), Convert.ToInt32(mySelView[nSelRow]["default_dept"]), mySelView[nSelRow]["医嘱内容"].ToString().Trim(), new Department(Convert.ToInt32(mySelView[nSelRow]["default_dept"]), InstanceForm._database).Jgbm);
                    }
                    #endregion

                    #region//add by zouchihua 2013-8-10 医技信息
                    if (ypType == "5")
                    {
                        myTb.Rows[nrow]["dwlx"] = DBNull.Value;
                        // if (myTb.Rows[nrow]["dwlx"].ToString().Trim() == "" || int.Parse(myTb.Rows[nrow]["dwlx"].ToString().Trim()) <= 0)
                        {
                            string sql = "select * from JC_ASSAY where yzid='" + myTb.Rows[nrow]["hoitem_id"].ToString() + "'";
                            DataTable tbbb = FrmMdiMain.Database.GetDataTable(sql);
                            if (tbbb.Rows.Count > 0)
                            {
                                short dwlx = Convert.ToInt16(Convertor.IsNull(InstanceForm._database.GetDataResult("select bbid from jc_assay where yzid=" + myTb.Rows[nrow]["HOItem_ID"].ToString()), "0"));
                                if (dwlx <= 0)
                                {
                                    Ts_zyys_jysq.FrmJyBb_fjsm frm = new Ts_zyys_jysq.FrmJyBb_fjsm(myTb.Rows[nrow]["id"].ToString(), long.Parse(myTb.Rows[nrow]["hoitem_id"].ToString()));
                                    frm.ShowDialog();
                                    if (frm.DialogResult == DialogResult.OK)
                                    {
                                        //sql = "update zy_orderrecord set dwlx='" + frm.bb + "' ,memo='" + frm.fjsm + "★', ORDER_CONTEXT='" + frm.fjsm + "'+SUBSTRING(ORDER_CONTEXT,CHARINDEX(ORDER_NAME,ORDER_CONTEXT,1),LEN(ORDER_CONTEXT))   from  zy_orderrecord a join JC_HOITEMDICTION b on a.HOITEM_ID=b.ORDER_ID where a.order_id='" + myTb.Rows[nrow]["id"].ToString() + "'";
                                        // FrmMdiMain.Database.DoCommand(sql);
                                        // loadGrid_TempOrder();
                                        myTb.Rows[nrow]["医嘱内容"] = frm.fjsm + myTb.Rows[nrow]["医嘱内容"].ToString();
                                        myTb.Rows[nrow]["memo"] = frm.fjsm + "★";
                                        myTb.Rows[nrow]["dwlx"] = int.Parse(frm.bb);

                                    }
                                    SendKeys.Send("{Tab}");
                                }
                            }
                        }
                    }
                    #endregion

                    #region yaokx 2014-05-04 非药品处理
                    if (myQuery.GetyzTypeCode(GetGroupType(myTb, nrow)) != "1" && myQuery.GetyzTypeCode(GetGroupType(myTb, nrow)) != "2" && myQuery.GetyzTypeCode(GetGroupType(myTb, nrow)) != "3")
                    {
                        if (myTb.Rows[nrow]["开始时间"].ToString() == "")
                            myTb.Rows[nrow]["开始时间"] = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                    }
                    #endregion

                    #region yaokx2014-06-07 手术打折处理
                    if (mySelView[nSelRow]["type"].ToString() == "6")
                    {
                        if ((new SystemCfg(6096)).Config != "" && mySelView[nSelRow]["deptname"].ToString() == "手术室")
                        {
                            string sql = @"select * from ZY_ORDERRECORD where INPATIENT_ID='" + BinID + "' and NTYPE=6 and XMLY=2 and DELETE_BIT=0 and STATUS_FLAG=5";
                            DataTable dtcount = FrmMdiMain.Database.GetDataTable(sql);
                            if (dtcount != null)
                            {
                                if (dtcount.Rows.Count >= 1)
                                {
                                    FrmSect frmSect = new FrmSect();
                                    frmSect.ShowDialog();
                                    price = decimal.Parse(mySelView[nSelRow]["单价"].ToString()) * frmSect.selectvaluebl;
                                }
                            }
                        }
                    }
                    #endregion

                }
                this.GrdSel.DataSource = null;
                //				this.GrdSel.Visible =false; 
            }
            catch (System.Exception err)
            {
                MessageBox.Show(err.Message);
                //保存出错信息
                myQuery.SaveLog(DeptID, YS_ID, "程序错误", this.BinID.ToString() + "医嘱内容添入错误/" + errStr + ":" + err.ToString().Trim(), 1, 41);
                this.GrdSel.Visible = false;
                return;
            }
        }
        #region 医嘱添入的草药处理
        private bool cycl(DataGridEx myDataGrid1, DataTable myTb, int nrow)
        {

            if (myDataGrid1.Name == "dataGrid_TempOrder")
            {
                myTb.Rows[nrow]["剂量"] = 10;
            }
            else
            {
                //Modify by jchl(参数控制长期医嘱是否允许开立中草药处方 0=不 1=是  )
                if (cfg6210.Config.Trim() == "1")
                {

                    if (MessageBox.Show("你确定在长期医嘱中开中草药处方吗？", "警告", MessageBoxButtons.YesNo, MessageBoxIcon.Warning) == DialogResult.No)
                    {
                        this.GrdSel.DataSource = null;
                        this.GrdSel.Visible = false;
                        myTb.Rows[nrow]["医嘱内容"] = "";
                        myTb.Rows[nrow]["剂量"] = "0";
                        myTb.Rows[nrow]["单位"] = "";
                        myTb.Rows[nrow]["规格"] = "";
                        myDataGrid1.Focus();
                        myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                        return false;
                    }
                    else myDataGrid1.Focus();
                }
                else //if(cfg6210.Config.Trim() == "0")
                {
                    MessageBox.Show("不允许长期医嘱中开中草药处方", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    this.GrdSel.DataSource = null;
                    this.GrdSel.Visible = false;
                    myTb.Rows[nrow]["医嘱内容"] = "";
                    myTb.Rows[nrow]["剂量"] = "0";
                    myTb.Rows[nrow]["单位"] = "";
                    myTb.Rows[nrow]["规格"] = "";
                    myDataGrid1.Focus();
                    myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                    return false;
                }
            }
            if (myTb.Rows[nrow]["开始时间"].ToString() != "")
            {
                if (myTb.Rows[nrow]["status_flag"].ToString() == "0" || myTb.Rows[nrow]["status_flag"].ToString() == "9")//已发送的不作提示 补录也要
                {

                    #region"Modify by : Jchl 如果7014参数为空则默认不收取煎药费"

                    //该中草药处方是否需要（代煎）?如需要（代煎）,将默认用法为【水煎服】！
                    if ((!string.IsNullOrEmpty(cfg7014.Config.Trim())) && MessageBox.Show("该中草药处方是否需要（代煎）？\r\r如需要（代煎）,默认用法为【水煎服】！", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) == DialogResult.Yes)
                    {
                        //if (MessageBox.Show("【代煎】是否默认使用用法：【水煎服】", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) == DialogResult.Yes)
                        //{
                        //}
                        myTb.Rows[nrow]["用法"] = "水煎服";
                        if (myDataGrid1.Name == "dataGrid_TempOrder")//临时医嘱用jldwlx
                        {
                            myTb.Rows[nrow]["jldwlx"] = 9;
                            myTb.Rows[nrow]["dwlx"] = 9;

                        }
                        else
                            myTb.Rows[nrow]["dwlx"] = 9;
                        //保存收取煎药费的日志信息 add by zouchihua 2012-12-28
                        myQuery.SaveLog(DeptID, YS_ID, "收取煎药费", this.BinID.ToString() + "的医嘱【" + myTb.Rows[nrow]["医嘱内容"] + "】收取煎药费", 0, 41);
                        ///dddddddddddddddddddddddddddddddddddddddddddddddddd
                        //add by zouchihua 2012-5-7 如果是收取煎药费默认用法为 待煎
                        if (cfg6048.Config.Trim() == "1")//add by zouchihua 2012-5-31 开中药处方收取中药费是否关联用法 0=否 1=是
                            myTb.Rows[nrow]["用法"] = "代煎";
                    }
                    else
                    {
                        //Modiby by zouchihua 2011-09-22 增加交病人显示判断
                        string IsJbr = "0";
                        try
                        {
                            IsJbr = new SystemCfg(19001).Config;
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(ex.Message);
                        }
                        //只有临时医嘱才能交病人 2012-5-25 Modify by zouchihua
                        if (myDataGrid1.Name == "dataGrid_TempOrder")
                        {
                            if (IsJbr == "0")
                            {
                                myTb.Rows[nrow]["医嘱内容"] = myTb.Rows[nrow]["医嘱内容"].ToString();// +" 「交病人」";Modify By Tany 2011-06-29 不要默认煎药费
                            }
                            else
                            {
                                myTb.Rows[nrow]["医嘱内容"] = myTb.Rows[nrow]["医嘱内容"].ToString() + " 「交病人」";//Modify By Tany 2011-06-29 不要默认煎药费
                                myTb.Rows[nrow]["mngtype"] = 5;
                            }

                        }
                        if (cfg6048.Config.Trim() == "1")//add by zouchihua 2012-5-31 开中药处方收取中药费是否关联用法 0=否 1=是
                            myTb.Rows[nrow]["用法"] = "自煎";

                        // myTb.Rows[nrow]["医嘱内容"] = myTb.Rows[nrow]["医嘱内容"].ToString();// +" 「交病人」";Modify By Tany 2011-06-29 不要默认煎药费
                    }

                    #endregion
                    //  myTb.Rows[nrow]["status_flag"] = 0; 中草药补录，这里屏蔽掉
                }
                myDataGrid1.Focus();
            }
            return true;
        }
        #endregion
        #endregion

        #region "add by jchl(住院抗生素权限越级是否进行审批 0=不 1=是  )"

        public bool IsCanMadeHighTypeHosItem()
        {
            if (cfg6204.Config.Equals("0"))
            {
                //不允许开立
                FrmMessageBox.Show("此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return false;
            }
            else if (cfg6204.Config.Equals("1"))
            {
                //允许开立，但提示
                if (FrmMessageBox.Show("此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！是否继续？", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button2) == DialogResult.No)
                {
                    return false;
                }
                return true;
            }
            FrmMessageBox.Show("此药品级别高于你现在的级别，受级别限制，并且未设置6204参数！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);

            return false;
        }

        //public bool IsCanMadeHighTypeHosItem(bool isShowBox)
        //{
        //    if (cfg6204.Config.Equals("0"))
        //    {
        //        //不允许开立
        //        if (isShowBox)
        //        {
        //            FrmMessageBox.Show("此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);

        //        }
        //        return false;
        //    }
        //    else if (cfg6204.Config.Equals("1"))
        //    {
        //        //允许开立，但提示
        //        if (FrmMessageBox.Show("此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！是否继续？", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button2) == DialogResult.No)
        //        {
        //            return false;
        //        }
        //        return true;
        //    }
        //    FrmMessageBox.Show("此药品级别高于你现在的级别，受级别限制，并且未设置6204参数！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);

        //    return false;
        //}

        #endregion

        #region 用法内容的添入,传入的参数为选择网格的行数
        private void GetCardDataUsage(int nSelRow, DataGridEx myDataGrid1)
        {
            try
            {
                int nrow, ncol;
                //首先得到当前网格的信息
                DataTable myTb = (DataTable)myDataGrid1.DataSource;
                //得到当前编辑网格的位置
                nrow = myDataGrid1.CurrentCell.RowNumber;
                ncol = myDataGrid1.CurrentCell.ColumnNumber;
                //得到选择网格的数据和选择的行号
                DataTable myTb_Sel = (DataTable)this.GrdSel.DataSource; ;
                //得到当前编辑的TEXTBOX格子
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ncol];
                if (this.GrdSel.VisibleRowCount < 1)
                {
                    myTb.Rows[nrow]["用法名称"] = "";
                    txtCol.TextBox.Text = "";
                    this.GrdSel.Visible = false;
                    return;
                }
                //选择超出范围
                if (nSelRow > myTb_Sel.Rows.Count - 1)
                {
                    this.GrdSel.Visible = false;
                    return;
                }
                else
                {
                    string oldyf = myTb.Rows[nrow]["用法"].ToString();
                    myTb.Rows[nrow]["用法"] = myTb_Sel.Rows[nSelRow]["用法名称"].ToString();

                    txtCol.TextBox.Text = myTb_Sel.Rows[nSelRow]["用法名称"].ToString();
                    //add  by  chenli  不允许单独开无关联的皮试医嘱  2017-08-30
                    if (myTb.Rows[nrow]["用法"].ToString().Trim() == "皮试" && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() != "-1" && myTb.Rows[nrow]["类型"].ToString() != "7-说明"
                        && myTb.Rows[nrow]["exec_dept"].ToString().Trim() != "-1" && myTb.Rows[nrow]["医嘱内容"].ToString().Contains("「免试」")==true)
                    {
                        //myTb.Rows[nrow]["xmly"] = 2;
                        //myTb.Rows[nrow]["剂量"] = 0;
                        //myTb.Rows[nrow]["频率"] = "";
                        //myTb.Rows[nrow]["单位"] = "";
                        //myTb.Rows[nrow]["exec_dept"] = this.DeptID;
                        //myTb.Rows[nrow]["hoitem_id"] = -1;
                        //myTb.Rows[nrow]["类型"] = "1-西药";
                        //myTb.Rows[nrow]["ps_flag"] = 0;
                        //string con = myTb.Rows[nrow]["医嘱内容"].ToString().Trim();
                        //myTb.Rows[nrow]["医嘱内容"] = con.Remove(con.IndexOf("「免试」"), "「免试」".Length);
                        MessageBox.Show("不能直接开皮试医嘱,若要开立对应的皮试医嘱,请右键选择增加皮试！");
                        myTb.Rows[nrow]["用法"] = "";
                        txtCol.TextBox.Text = "";
                        myDataGrid1.Focus();
                        myDataGrid1.CurrentCell = new DataGridCell(nrow, 9);

                    }
                    //add  by  chenli  不允许将药品医嘱用法改为皮试  2017-08-30
                    if (myTb.Rows[nrow]["用法"].ToString().Trim() == "皮试" && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() != "-1" && myTb.Rows[nrow]["类型"].ToString() != "7-说明"
                        && myTb.Rows[nrow]["exec_dept"].ToString().Trim() != "-1" && myTb.Rows[nrow]["医嘱内容"].ToString().Contains("「免试」") == false)
                    {
                        //myTb.Rows[nrow]["xmly"] = 2;
                        //myTb.Rows[nrow]["剂量"] = 0;
                        //myTb.Rows[nrow]["频率"] = "";
                        //myTb.Rows[nrow]["单位"] = "";
                        //myTb.Rows[nrow]["exec_dept"] = this.DeptID;
                        //myTb.Rows[nrow]["hoitem_id"] = -1;
                        //myTb.Rows[nrow]["类型"] = "1-西药";
                        //myTb.Rows[nrow]["ps_flag"] = 0;
                        //string con = myTb.Rows[nrow]["医嘱内容"].ToString().Trim();
                        //myTb.Rows[nrow]["医嘱内容"] = con.Remove(con.IndexOf("「免试」"), "「免试」".Length);
                        MessageBox.Show("该医嘱非皮试医嘱,不能将用法改为皮试！");
                        myTb.Rows[nrow]["用法"] = "";
                        txtCol.TextBox.Text = "";
                        myDataGrid1.Focus();
                        myDataGrid1.CurrentCell = new DataGridCell(nrow, 9);

                    }
                    else if (myTb.Rows[nrow]["用法"].ToString().Trim() == "皮试用")
                    {
                        myTb.Rows[nrow]["ps_flag"] = -1;
                        myTb.Rows[nrow]["ps_orderid"] = Guid.Empty;
                        string con = myTb.Rows[nrow]["医嘱内容"].ToString().Trim();
                        if (con.IndexOf("「免试」") >= 0) myTb.Rows[nrow]["医嘱内容"] = con.Remove(con.IndexOf("「免试」"), "「免试」".Length);
                    }
                    if (myTb.Rows[nrow]["用法"].ToString().Trim() != "皮试" && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1" && myTb.Rows[nrow]["类型"].ToString() != "7-说明"
                        && myTb.Rows[nrow]["exec_dept"].ToString().Trim() != "-1"
                        )
                    {
                        MessageBox.Show("该医嘱已作为皮试,不能改用法！\n除非删除重开。", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        myTb.Rows[nrow]["用法"] = "皮试";
                        txtCol.TextBox.Text = "皮试";
                        myDataGrid1.Focus();
                        myDataGrid1.CurrentCell = new DataGridCell(nrow, 9);
                    }
                    if (cfg6048.Config.Trim() == "1")//add by zouchihua 2012-5-31 开中药处方收取中药费是否关联用法 0=否 1=是
                    {
                        #region
                        //Add by zouchihua 2012-5-7  中草药单位类型转变
                        if (myTb.Rows[nrow]["类型"].ToString().Trim() == "3-中草药")
                        {
                            //用法自煎是否交病人 add by zouchiua 2012-5-8 
                            string IsJbr = "0";
                            try
                            {
                                IsJbr = new SystemCfg(19001).Config;
                            }
                            catch (Exception ex)
                            {
                                MessageBox.Show(ex.Message);
                            }
                            if (myTb.Rows[nrow]["STATUS_FLAG"].ToString().Trim() == "1")//发送了就不能更改用法了
                            {
                                this.GrdSel.Visible = false;
                                myTb.Rows[nrow]["用法"] = oldyf;
                                txtCol.TextBox.Text = oldyf;
                                MessageBox.Show("发送了的草药医嘱不允许更改用法");

                                return;
                            }
                            if (myTb.Rows[nrow]["用法"].ToString().Trim() == "代煎")
                            {
                                if (myTb.Rows[nrow]["dwlx"].ToString().IndexOf("9") < 0)
                                    myTb.Rows[nrow]["dwlx"] = Convert.ToInt32("9" + myTb.Rows[nrow]["dwlx"].ToString().Trim());
                                myTb.Rows[nrow]["医嘱内容"] = myTb.Rows[nrow]["医嘱内容"].ToString().Trim().Replace("「交病人」", "");
                                if (myDataGrid1.Name == "dataGrid_LongOrder")
                                    myTb.Rows[nrow]["mngtype"] = 0;
                                else
                                    myTb.Rows[nrow]["mngtype"] = 1;

                            }
                            else
                            {
                                myTb.Rows[nrow]["dwlx"] = Convert.ToInt32(myTb.Rows[nrow]["dwlx"].ToString().Trim().Replace("9", "") == "" ? "1" : myTb.Rows[nrow]["dwlx"].ToString().Trim().Replace("9", ""));
                                if (myDataGrid1.Name == "dataGrid_TempOrder")
                                {
                                    if (IsJbr == "0")
                                    {
                                        myTb.Rows[nrow]["医嘱内容"] = myTb.Rows[nrow]["医嘱内容"].ToString();// +" 「交病人」";Modify By Tany 2011-06-29 不要默认煎药费

                                    }
                                    else
                                    {
                                        myTb.Rows[nrow]["mngtype"] = 5;
                                        if (myTb.Rows[nrow]["医嘱内容"].ToString().IndexOf("「交病人」") < 0)
                                            myTb.Rows[nrow]["医嘱内容"] = myTb.Rows[nrow]["医嘱内容"].ToString() + " 「交病人」";//Modify By Tany 2011-06-29 不要默认煎药费
                                    }

                                }
                            }
                            //改变这组医嘱信息
                            if (new Guid(myTb.Rows[nrow]["id"].ToString()) == Guid.Empty)
                            {
                                for (int i = nrow + 1; i < myTb.Rows.Count; i++)
                                {
                                    if (myTb.Rows[i]["医嘱内容"].ToString().Trim() == "" || myTb.Rows[i]["医嘱内容"] == null)
                                        continue;
                                    if (myTb.Rows[i]["开始时间"].ToString() == "" || myTb.Rows[i]["开始时间"] == null)
                                    {
                                        myTb.Rows[i]["mngtype"] = myTb.Rows[nrow]["mngtype"];
                                        myTb.Rows[i]["dwlx"] = myTb.Rows[nrow]["dwlx"];
                                        myTb.Rows[i]["用法"] = myTb.Rows[nrow]["用法"];
                                        if (myTb.Rows[nrow]["用法"].ToString().Trim() == "代煎")
                                            myTb.Rows[i]["医嘱内容"] = myTb.Rows[i]["医嘱内容"].ToString().Trim().Replace("「交病人」", "");
                                        else
                                        {
                                            if (myTb.Rows[i]["医嘱内容"].ToString().IndexOf("「交病人」") < 0 && IsJbr == "1" && myDataGrid1.Name == "dataGrid_TempOrder")
                                                myTb.Rows[i]["医嘱内容"] = myTb.Rows[i]["医嘱内容"].ToString() + " 「交病人」";//Modify By Tany 2011-06-29 不要默认煎药费
                                        }
                                    }
                                    else
                                        break;
                                }
                            }
                            else
                            {
                                for (int i = nrow + 1; i < myTb.Rows.Count; i++)
                                {
                                    if (myTb.Rows[i]["嘱号"].ToString() == myTb.Rows[nrow]["嘱号"].ToString())
                                    {
                                        if (myTb.Rows[i]["医嘱内容"].ToString().Trim() == "" || myTb.Rows[i]["医嘱内容"] == null)
                                            continue;
                                        myTb.Rows[i]["mngtype"] = myTb.Rows[nrow]["mngtype"];
                                        myTb.Rows[i]["dwlx"] = myTb.Rows[nrow]["dwlx"];
                                        myTb.Rows[i]["用法"] = myTb.Rows[nrow]["用法"];
                                        if (myTb.Rows[nrow]["用法"].ToString().Trim() == "代煎")
                                            myTb.Rows[i]["医嘱内容"] = myTb.Rows[i]["医嘱内容"].ToString().Trim().Replace("「交病人」", "");
                                        else
                                        {
                                            if (myTb.Rows[i]["医嘱内容"].ToString().IndexOf("「交病人」") < 0 && IsJbr == "1" && myDataGrid1.Name == "dataGrid_TempOrder")
                                                myTb.Rows[i]["医嘱内容"] = myTb.Rows[i]["医嘱内容"].ToString() + " 「交病人」";//Modify By Tany 2011-06-29 不要默认煎药费
                                        }
                                    }
                                    else
                                        break;
                                }
                            }

                        }
                        #endregion
                    }

                    this.GrdSel.Visible = false;
                }
            }
            catch (System.Exception err)
            {
                //保存出错信息
                myQuery.SaveLog(DeptID, YS_ID, "程序错误", this.BinID.ToString() + "用法内容添入错误：" + err.ToString().Trim(), 1, 41);
                this.GrdSel.Visible = false;
                return;
            }
            //			this.GrdSel.DataSource=null;
            //			this.GrdSel .Refresh() ;
            this.GrdSel.Visible = false;
        }
        #endregion

        #region 频率内容的添入,传入的参数为选择网格的行数
        private void GetCardDataFrequency(int nSelRow, DataGridEx myDataGrid1)
        {
            try
            {
                int nrow, ncol;
                //首先得到当前网格的信息
                DataTable myTb = (DataTable)myDataGrid1.DataSource;
                //得到当前编辑网格的位置
                nrow = myDataGrid1.CurrentCell.RowNumber;
                ncol = myDataGrid1.CurrentCell.ColumnNumber;
                //得到选择网格的数据和选择的行号
                DataTable myTb_Sel = (DataTable)this.GrdSel.DataSource; ;
                //得到当前编辑的TEXTBOX格子
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ncol];
                if (this.GrdSel.VisibleRowCount < 1)
                {
                    myTb.Rows[nrow]["频率名称"] = "";
                    txtCol.TextBox.Text = "";
                    this.GrdSel.DataSource = null;
                    this.GrdSel.Visible = false;
                    return;
                }
                //选择超出范围
                if (nSelRow > myTb_Sel.Rows.Count - 1)
                {
                    this.GrdSel.DataSource = null;
                    this.GrdSel.Visible = false;
                    return;
                }
                else
                {
                    Crownwood.Magic.Controls.TabControl tc = null;
                    tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
                    myTb.Rows[nrow]["频率"] = myTb_Sel.Rows[nSelRow]["频率名称"].ToString();
                    if (new SystemCfg(6091).Config == "1")
                    {
                        myTb.Rows[nrow]["首日执行次数"] = myTb_Sel.Rows[nSelRow]["日执行次数"].ToString();
                    }
                    else
                    {
                        myTb.Rows[nrow]["首日执行次数"] = GetExectime(myTb_Sel.Rows[nSelRow]["时间点"].ToString(), myTb_Sel.Rows[nSelRow]["日执行次数"].ToString());
                    }
                    txtCol.TextBox.Text = myTb_Sel.Rows[nSelRow]["频率名称"].ToString();
                    this.GrdSel.DataSource = null;
                    this.GrdSel.Visible = false;
                }
            }
            catch (System.Exception err)
            {
                //保存出错信息
                myQuery.SaveLog(DeptID, YS_ID, "程序错误", this.BinID.ToString() + "频率内容添入错误：" + err.ToString().Trim(), 1, 41);
                this.GrdSel.DataSource = null;
                this.GrdSel.Visible = false;
                return;
            }
            this.GrdSel.DataSource = null;
            this.GrdSel.Visible = false;
        }
        #endregion

        #region 根据时间点计算默认频率次数
        private string GetExectime(string exectime, string times)
        {
            if (exectime == "") return times;
            string[] Exectime = exectime.Split('/');
            if (Exectime.Length == 0) return times;
            string dtime = DateManager.ServerDateTimeByDBType(InstanceForm._database).ToShortTimeString();
            decimal hourStr = Convert.ToDecimal(dtime.Replace(":", "."));
            int i;
            for (i = 0; i < Exectime.Length; i++)
            {
                if (Convert.ToDecimal(dtime.Replace(":", ".")) < Convert.ToDecimal(Exectime[i].Replace(":", ".")))
                {
                    //					return Convert.ToString(Exectime.Length-i);
                    break;
                }
            }
            return Convert.ToString(Convert.ToInt32(times) - i);
        }
        #endregion

        #region 插入皮试
        //右键菜单“增加皮试”
        private void OnInsertPSYZ(object sender, EventArgs e)
        {
            DataGridEx myDataGrid1;
            if (tabnum == 1) myDataGrid1 = this.dataGrid_LongOrder;
            else myDataGrid1 = this.dataGrid_TempOrder;
            int nrow, ncol;
            //首先得到当前网格的信息
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            //得到当前编辑网格的位置
            nrow = myDataGrid1.CurrentCell.RowNumber;
            ncol = myDataGrid1.CurrentCell.ColumnNumber;

            #region 判断是否皮试药品
            bool ps = false;
            if (myTb.Rows[nrow]["类型"].ToString() == "1-西药")
            {
                ps = myQuery.PSYP(myTb.Rows[nrow]["hoitem_id"].ToString());
            }
            else return;
            if (ps != true)
            {
                MessageBox.Show("不是皮试药品！", "选择错误！", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;//不是皮试药品就退出
            }
            #endregion

            int page = tabnum - 1;
            DateTime dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);
            Guid strDate = PubStaticFun.NewGuid();
            if (myTb.Rows[nrow]["用法"].ToString() != "皮试用")
            {
                myTb.Rows[nrow]["ps_orderid"] = strDate;
                myTb.Rows[nrow]["ps_flag"] = 0;
            }

            if (new Guid(myTb.Rows[nrow]["ID"].ToString()) != Guid.Empty)
            {
                int p = -1;
                try
                {
                    p = InstanceForm._database.DoCommand("update zy_orderrecord set ps_flag=0,ps_orderid='" + strDate + "' where order_id='" + myTb.Rows[nrow]["ID"].ToString() + "' and order_usage<>'皮试用'");
                    if (p == -1)
                    {
                        MessageBox.Show("添加皮试失败！", "失败提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                        myTb.Rows[nrow]["ps_flag"] = -1;
                        myTb.Rows[nrow]["ps_orderid"] = Guid.Empty;
                        return;
                    }
                }
                catch
                {
                    MessageBox.Show("添加皮试失败！", "失败提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    myTb.Rows[nrow]["ps_flag"] = -1;
                    myTb.Rows[nrow]["ps_orderid"] = Guid.Empty;
                    return;
                }
            }

            string con = myTb.Rows[nrow]["医嘱内容"].ToString().Trim();
            int Ind = con.IndexOf("「免试」");
            if (Ind >= 0) con = con.Remove(Ind, "「免试」".Length);
            myTb.Rows[nrow]["医嘱内容"] = con;

            //如果开始时间为空，那么则取该组第一条医嘱的开始时间 Modify By Tany 2009-12-03
            DateTime time = new DateTime();
            if (myTb.Rows[nrow]["开始时间"] != null && myTb.Rows[nrow]["开始时间"].ToString().Trim() != "")
            {
                time = Convert.ToDateTime(myTb.Rows[nrow]["开始时间"]);
            }
            else
            {
                //Add by zouchihua 增加判断，没有保存的医嘱不能保存
                if (myTb.Rows[nrow]["嘱号"].ToString() == "")
                {
                    MessageBox.Show("请选保存医嘱再执行该操作！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return;
                }
                time = Convert.ToDateTime(myTb.Select("嘱号 =" + myTb.Rows[nrow]["嘱号"].ToString() + " and 开始时间 is not null")[0]["开始时间"]);
            }

            InsertPSYZ(time, myQuery.GetyzTypeCode(myTb.Rows[nrow]["类型"].ToString()), con, strDate, page, nrow, 9, myTb.Rows[nrow]["hoitem_id"].ToString());

            MessageBox.Show("添加皮试完成！\n请注意保存、发送自动生成的皮试医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }

        //插入皮试医嘱                     ，                ，要保存的标记， 1为临嘱页，
        private void InsertPSYZ(DateTime bDate, string Ntype, string orderName, Guid strDate, int page, int nrow, int status_flag)
        {
            //Modify By Tany 2007-10-26 增加皮试开始时间为主医嘱时间，并且判定为补录时间，发送不改时间
            if (this.dataGrid_TempOrder.DataSource == null)
            {
                this.loadGrid_TempOrder();
            }
            DataTable tempTb = (DataTable)this.dataGrid_TempOrder.DataSource;

            DataRow myRow = tempTb.NewRow();
            myRow["类型"] = myQuery.GetyzType(Int32.Parse(Ntype));
            myRow["开始时间"] = bDate;//DateManager.ServerDateTimeByDBType(InstanceForm._database);
            myRow["用法"] = "皮试";
            myRow["频率"] = "";
            myRow["剂数"] = System.DBNull.Value;
            myRow["首日执行次数"] = System.DBNull.Value;
            myRow["医嘱内容"] = orderName;
            myRow["剂量"] = 0;
            myRow["单位"] = System.DBNull.Value;
            myRow["status_flag"] = status_flag == 9 ? 9 : 0;//Modify by Tany 2009-02-19 皮试的状态跟随主医嘱走
            myRow["执行科室"] = this.DeptID;
            myRow["ID"] = Guid.Empty;
            myRow["ps_flag"] = 0;
            myRow["ps_orderid"] = strDate;
            myRow["HOitem_ID"] = -1;
            myRow["xmly"] = 2;

            if (page == 1)
            {
                while (nrow >= 0)
                {
                    if (tempTb.Rows[nrow]["开始时间"].ToString() != "")
                    {
                        tempTb.Rows.InsertAt(myRow, nrow);//在临嘱时，插入该医嘱上一行
                        break;
                    }
                    nrow--;
                }
            }
            else
            {
                int n = tempTb.Rows.Count;
                while (n > 0 && tempTb.Rows[n - 1]["医嘱内容"] == System.DBNull.Value)
                {
                    tempTb.Rows.Remove(tempTb.Rows[n - 1]);
                    n--;
                }
                //				if(tempTb.Rows.Count!=0)
                //				{
                //					if(tempTb.Rows[tempTb.Rows.Count-1]["医嘱内容"].ToString().Trim()=="") tempTb.Rows.Remove(tempTb.Rows[tempTb.Rows.Count-1]);//2004-11-24避免有空行
                //				}
                tempTb.Rows.Add(myRow);
            }

            tempTb.Rows.Add(tempTb.NewRow());
            this.btXY.Focus();
            if (this.dataGrid_TempOrder.DataSource == null)
                //			try
                //			{
                this.dataGrid_TempOrder.DataSource = tempTb.Copy();
            //			}
            //			catch(Exception ex)
            //			{
            //				MessageBox.Show(ex.Message + ex.StackTrace.ToString());
            //			}
            this.dataGrid_TempOrder.Focus();
            this.XG2 = true;

            //			long Group_Num=myQuery.GetYzNum(this.BinID,this.DeptID,this.cCon)+1;

            //			RelationalDatabase _Database=RelationalDatabase.GetDatabase();
            //			_Database.Initialize("");
            //			_Database.Open();
            //
            //			try
            //			{
            //				string sSql="INSERT INTO ZY_ORDERRECORD(" +
            //					"Group_ID,Inpatient_ID,Dept_ID,Ward_ID,MNGTYPE,nType,Order_Doc," + 
            //					"HOItem_ID,Item_Code,Order_context,Num,Dosage,Unit,book_date," +
            //					"Order_bDate,Order_Usage," +
            //					"Operator,Delete_Bit,status_flag,baby_id,dept_br,exec_dept,serial_no,c1)" +
            //					" VALUES(" + Group_Num.ToString() + "," + BinID.ToString() + ","  + this.DeptID.ToString() + ",'"+this.WardID+"',"+1+"," + Ntype + "," + this.YS_ID.ToString() + "," +
            //					+ 54+",'-1','" + myRow["医嘱内容"] + "',0,1,'',CURRENT TIMESTAMP," + 
            //					"'" + myRow["开始时间"]  + "','皮试',"  +		
            //					"" + this.YS_ID.ToString()  + ",0,0,"+this.BabyID.ToString() + "," + this.DeptID.ToString() + ", "+this.DeptID.ToString()+",0,'"+strDate+"')";
            //
            //				_Database.DoCommand (sSql);
            //				MessageBox.Show(myRow["医嘱内容"].ToString()+" 皮试医嘱添加成功！","提示",MessageBoxButtons.OK,MessageBoxIcon.Information);
            //			}
            //			catch(System.Exception err)
            //			{
            //				MessageBox.Show(myRow["医嘱内容"].ToString()+" 皮试医嘱添加失败！\n"+err.ToString(),"错误！",MessageBoxButtons.OK,MessageBoxIcon.Warning);
            //			}
            //			finally
            //			{
            //				_Database.Close();
            //			}
        }
        #endregion
        //增加皮试医嘱编码
        private void InsertPSYZ(DateTime bDate, string Ntype, string orderName, Guid strDate, int page, int nrow, int status_flag,string psypbm)
        {
            //Modify By Tany 2007-10-26 增加皮试开始时间为主医嘱时间，并且判定为补录时间，发送不改时间
            if (this.dataGrid_TempOrder.DataSource == null)
            {
                this.loadGrid_TempOrder();
            }
            DataTable tempTb = (DataTable)this.dataGrid_TempOrder.DataSource;
            if (!tempTb.Columns.Contains("psypbm"))
            {
                tempTb.Columns.Add("psypbm", typeof(System.String));
            }

            DataRow myRow = tempTb.NewRow();
            myRow["类型"] = myQuery.GetyzType(Int32.Parse(Ntype));
            myRow["开始时间"] = bDate;//DateManager.ServerDateTimeByDBType(InstanceForm._database);
            myRow["用法"] = "皮试";
            myRow["频率"] = "";
            myRow["剂数"] = System.DBNull.Value;
            myRow["首日执行次数"] = System.DBNull.Value;
            myRow["医嘱内容"] = orderName;
            myRow["剂量"] = 0;
            myRow["单位"] = System.DBNull.Value;
            myRow["status_flag"] = status_flag == 9 ? 9 : 0;//Modify by Tany 2009-02-19 皮试的状态跟随主医嘱走
            myRow["执行科室"] = this.DeptID;
            myRow["ID"] = Guid.Empty;
            myRow["ps_flag"] = 0;
            myRow["ps_orderid"] = strDate;
            myRow["HOitem_ID"] = -1;
            myRow["xmly"] = 2;
            myRow["psypbm"] = psypbm;

            if (page == 1)
            {
                while (nrow >= 0)
                {
                    if (tempTb.Rows[nrow]["开始时间"].ToString() != "")
                    {
                        tempTb.Rows.InsertAt(myRow, nrow);//在临嘱时，插入该医嘱上一行
                        break;
                    }
                    nrow--;
                }
            }
            else
            {
                int n = tempTb.Rows.Count;
                while (n > 0 && tempTb.Rows[n - 1]["医嘱内容"] == System.DBNull.Value)
                {
                    tempTb.Rows.Remove(tempTb.Rows[n - 1]);
                    n--;
                }
                //				if(tempTb.Rows.Count!=0)
                //				{
                //					if(tempTb.Rows[tempTb.Rows.Count-1]["医嘱内容"].ToString().Trim()=="") tempTb.Rows.Remove(tempTb.Rows[tempTb.Rows.Count-1]);//2004-11-24避免有空行
                //				}
                tempTb.Rows.Add(myRow);
            }

            tempTb.Rows.Add(tempTb.NewRow());
            this.btXY.Focus();
            if (this.dataGrid_TempOrder.DataSource == null)
                //			try
                //			{
                this.dataGrid_TempOrder.DataSource = tempTb.Copy();
            //			}
            //			catch(Exception ex)
            //			{
            //				MessageBox.Show(ex.Message + ex.StackTrace.ToString());
            //			}
            this.dataGrid_TempOrder.Focus();
            this.XG2 = true;

            //			long Group_Num=myQuery.GetYzNum(this.BinID,this.DeptID,this.cCon)+1;

            //			RelationalDatabase _Database=RelationalDatabase.GetDatabase();
            //			_Database.Initialize("");
            //			_Database.Open();
            //
            //			try
            //			{
            //				string sSql="INSERT INTO ZY_ORDERRECORD(" +
            //					"Group_ID,Inpatient_ID,Dept_ID,Ward_ID,MNGTYPE,nType,Order_Doc," + 
            //					"HOItem_ID,Item_Code,Order_context,Num,Dosage,Unit,book_date," +
            //					"Order_bDate,Order_Usage," +
            //					"Operator,Delete_Bit,status_flag,baby_id,dept_br,exec_dept,serial_no,c1)" +
            //					" VALUES(" + Group_Num.ToString() + "," + BinID.ToString() + ","  + this.DeptID.ToString() + ",'"+this.WardID+"',"+1+"," + Ntype + "," + this.YS_ID.ToString() + "," +
            //					+ 54+",'-1','" + myRow["医嘱内容"] + "',0,1,'',CURRENT TIMESTAMP," + 
            //					"'" + myRow["开始时间"]  + "','皮试',"  +		
            //					"" + this.YS_ID.ToString()  + ",0,0,"+this.BabyID.ToString() + "," + this.DeptID.ToString() + ", "+this.DeptID.ToString()+",0,'"+strDate+"')";
            //
            //				_Database.DoCommand (sSql);
            //				MessageBox.Show(myRow["医嘱内容"].ToString()+" 皮试医嘱添加成功！","提示",MessageBoxButtons.OK,MessageBoxIcon.Information);
            //			}
            //			catch(System.Exception err)
            //			{
            //				MessageBox.Show(myRow["医嘱内容"].ToString()+" 皮试医嘱添加失败！\n"+err.ToString(),"错误！",MessageBoxButtons.OK,MessageBoxIcon.Warning);
            //			}
            //			finally
            //			{
            //				_Database.Close();
            //			}
        }

        #region 添加皮试用药
        private void InsertPSYY(DataRow myRow, DateTime dTime, int page, int nrow, int status_flag)
        {
            if (this.dataGrid_TempOrder.DataSource == null) this.loadGrid_TempOrder();
            DataTable tempTb = (DataTable)this.dataGrid_TempOrder.DataSource;
            #region 增加zfbl字段 武汉中心医院(Modify by Tany 2014-12-25)
            if (this.fylb != "" && this.fylb != "自费")
            {
                if (!tempTb.Columns.Contains("zfbl"))
                {
                    tempTb.Columns.Add("zfbl", typeof(System.Decimal));
                }
            }
            #endregion

            DataRow tempRow = tempTb.NewRow();
            tempRow["类型"] = myQuery.GetyzType(Int32.Parse(myRow["type"].ToString()));
            tempRow["医嘱内容"] = myRow["医嘱内容"];
            tempRow["开始时间"] = dTime;
            tempRow["用法"] = "皮试用";
            tempRow["频率"] = "";
            tempRow["剂数"] = System.DBNull.Value;
            tempRow["首日执行次数"] = System.DBNull.Value;
            tempRow["剂量"] = myRow["DWHL"];
            tempRow["单位"] = myRow["单位"];
            tempRow["规格"] = myRow["规格"];
            tempRow["status_flag"] = status_flag == 9 ? 9 : 0;//Modify by Tany 2009-02-19 皮试的状态跟随主医嘱走
            tempRow["执行科室"] = myRow["default_dept"];
            tempRow["ID"] = Guid.Empty;
            tempRow["ps_flag"] = -1;
            tempRow["ps_orderid"] = Guid.Empty;
            tempRow["HOitem_ID"] = myRow["order_id"];
            tempRow["xmly"] = myRow["xmly"];
            tempRow["dwlx"] = 1;

            //----------------皮试用药需要判断比例 Modify BY tany 2014012025----------------
            #region//武汉中心医院(Modify by jchl)
            if (this.fylb != "" && this.fylb != "自费")
            {
                int type = 0;
                if (this.fylb.Contains("公费"))
                    type = 1;
                else
                    type = 2;
                decimal zfbl = 1;

                try
                {
                    if (!myQuery.GetGfxx(type, this.patientInfo1.lbID.Text.Trim(), myRow["order_id"].ToString(),
                         myRow["xmly"].ToString(), myRow["医嘱内容"].ToString(), this.fylb, ref zfbl))
                    {
                        return;
                    }
                    else
                    {
                        tempRow["zfbl"] = zfbl;
                    }
                }
                catch (Exception ex)//Modify By Tany 2015-03-18 加上捕获错误并返回，不继续操作
                {
                    MessageBox.Show(ex.Message);
                    return;
                }
            }
            #endregion
            //----------------------------------------------------------------------------------------

            if (page == 1)
            {
                while (nrow >= 0)
                {
                    if (tempTb.Rows[nrow]["开始时间"].ToString() != "")
                    {
                        tempTb.Rows.InsertAt(tempRow, nrow + 1);//在临嘱时，插入该医嘱和新产生的皮试医嘱之间
                        break;
                    }
                    nrow--;
                }
            }
            else
            {
                int n = tempTb.Rows.Count;
                while (n > 0 && tempTb.Rows[n - 1]["医嘱内容"] == System.DBNull.Value)
                {
                    tempTb.Rows.Remove(tempTb.Rows[n - 1]);
                    n--;
                }
                tempTb.Rows.Add(tempRow);
            }

            tempTb.Rows.Add(tempTb.NewRow());
        }
        #endregion

        #region 添加皮试稀释用药 add by yaokx 2014-04-24
        private void InsertPSXS(DataRow myRow, DateTime dTime, int page, int nrow, int status_flag)
        {
            if (this.dataGrid_TempOrder.DataSource == null) this.loadGrid_TempOrder();
            DataTable tempTb = (DataTable)this.dataGrid_TempOrder.DataSource;

            DataRow tempRow = tempTb.NewRow();
            tempRow["类型"] = myQuery.GetyzType(Int32.Parse(myRow["type"].ToString()));
            string ggid = myRow["项目代码"].ToString();

            string sql = "select psxsypid from JC_PSYP_PSXS where psypid=" + ggid + " and deleted=0";
            DataTable dt = InstanceForm._database.GetDataTable(sql);
            if (dt.Rows.Count == 0) return;
            if (MessageBox.Show("是否开皮试稀释用药？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.Yes)
            {
                this.SelectDataView.RowFilter = "项目代码=" + dt.Rows[0]["psxsypid"].ToString() + " and xmly=1";
                DataTable newTable = this.SelectDataView.ToTable();
                if (newTable.Rows.Count == 0) return;

                tempRow["医嘱内容"] = newTable.Rows[0]["医嘱内容"];
                tempRow["用法"] = "";
                tempRow["频率"] = "";
                tempRow["剂数"] = System.DBNull.Value;
                tempRow["首日执行次数"] = System.DBNull.Value;
                tempRow["剂量"] = newTable.Rows[0]["DWHL"];
                tempRow["单位"] = newTable.Rows[0]["单位"];
                tempRow["规格"] = newTable.Rows[0]["规格"];
                tempRow["status_flag"] = status_flag == 9 ? 9 : 0;//Modify by Tany 2009-02-19 皮试的状态跟随主医嘱走
                tempRow["执行科室"] = newTable.Rows[0]["default_dept"];
                tempRow["ID"] = Guid.Empty;
                tempRow["ps_flag"] = -1;
                tempRow["ps_orderid"] = Guid.Empty;
                tempRow["HOitem_ID"] = newTable.Rows[0]["order_id"];
                tempRow["xmly"] = newTable.Rows[0]["xmly"];
                tempRow["dwlx"] = 1;

                if (page == 1)
                {
                    while (nrow >= 0)
                    {
                        if (tempTb.Rows[nrow]["开始时间"].ToString() != "")
                        {
                            tempTb.Rows.InsertAt(tempRow, nrow + 1);//在临嘱时，插入该医嘱和新产生的皮试医嘱之间
                            break;
                        }
                        nrow--;
                    }
                }
                else
                {
                    int n = tempTb.Rows.Count;
                    while (n > 0 && tempTb.Rows[n - 1]["医嘱内容"] == System.DBNull.Value)
                    {
                        tempTb.Rows.Remove(tempTb.Rows[n - 1]);
                        n--;
                    }
                    tempTb.Rows.Add(tempRow);
                }

                tempTb.Rows.Add(tempTb.NewRow());
            }
        }
        #endregion

        #region 换组新开医嘱
        private void btn_NewGroup()
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;

            if (this.XXC == false)
            {
                MessageBox.Show("加载数据中......");
                return;
            }
            if (this.ChkWillGetFee.Checked == true)
            {
                this.lViewFee.Items.Clear();
                this.lbHJ.Text = "";
            }
            //获取数据库时间
            DateTime dt = DateManager.ServerDateTimeByDBType(InstanceForm._database);
            this.statusBar1.Text = hint[0].Trim();

            checkPage();
            this.label1.Visible = false; this.DtpbeginDate.Visible = false;
            //add by jchl
            Blbj = 0;


            if (tc.SelectedTab.Title.Trim() == "长期医嘱")
            {
                ChangeGroupNum(this.dataGrid_LongOrder);
                getDateTime(this.dataGrid_LongOrder, dt);
                return;
            }
            if (tc.SelectedTab.Title.Trim() == "临时医嘱")
            {
                ChangeGroupNum(this.dataGrid_TempOrder);
                getDateTime(this.dataGrid_TempOrder, dt);
                return;
            }
            if (tc.SelectedTab.Title.Trim() == sTab0)
            {
                ChangeGroupNum(this.dataGrid_LongZD);
                getDateTime(this.dataGrid_LongZD, dt);
                return;
            }
            else
            {
                ChangeGroupNum(this.dataGrid_TempZD);
                getDateTime(this.dataGrid_TempZD, dt);
                return;
            }
        }
        /// <summary>
        /// add by zouchihua 是否允许录入医嘱
        /// </summary>
        /// <returns></returns>
        private bool Yxlyz()
        {
            if (!(mz || _tszl))
            {
                //Modify by zouchihua 2011-10-20  判断病人当前科室是否为现在进入科室；

                string pdsql = " select  dept_id from zy_inpatient where inpatient_id='" + BinID + "'";
                DataTable Pdtable = FrmMdiMain.Database.GetDataTable(pdsql);
                if (Pdtable.Rows.Count > 0)
                {
                    //医生站进入时 判断是否当前科室为登录科室，以免转科后电子病例还可以在转科前科室录入医嘱 add by zouchihua 2013-5-21
                    if (_ys)
                    {
                        if (Pdtable.Rows[0]["dept_id"].ToString() != DeptID.ToString())
                        {
                            MessageBox.Show("对不起，您不能录入医嘱！ 病人当前所在科室与您登录科室不一致，可能该病人已经转科");
                            return false;
                        }
                    }
                }
            }
            return true;
        }
        private void btnNewGroup_Click(object sender, System.EventArgs e)
        {
            // 调用临床路径
            string ifqy = ApiFunction.GetIniString("SfQy", "SfQy", Constant.ApplicationDirectory + "\\Cpset.ini");
            if (ifqy == "1")
            {
                string typename = ApiFunction.GetIniString("Tpype", "typename", Constant.ApplicationDirectory + "\\Cpset.ini");
                if (typename == "曼德罗")
                {
                    try
                    {
                        //判断是否进入路径
                        int IsintoCp = Ts_Clinicalpathway_Factory.Ts_Manadal_path.GetCpstatus(this.BinID.ToString(), this.BabyID.ToString(), Dept_Br.ToString(), WardID.ToString(), this.patientInfo1.lbID.Text, this.patientInfo1.lbIn_Date.Text);
                        if (IsintoCp != 0)
                        {
                            if (MessageBox.Show("该病人已经进入临床路径，请您开立路径内医嘱! (点击【是】：路径内医嘱，【否】路径外医嘱)？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) == DialogResult.Yes)
                            {
                                Ts_Clinicalpathway_Factory.Ts_Manadal_path.view = SelectDataView;
                                bool _isintocp = Ts_Clinicalpathway_Factory.Ts_Manadal_path.ShowCpform(this.BinID.ToString(), this.BabyID.ToString(), Dept_Br.ToString(), WardID.ToString(), this.patientInfo1.lbID.Text, this.patientInfo1.lbIn_Date.Text);
                                if (_isintocp)
                                {
                                    PostMessage(this.Handle.ToInt32(), 500, 2, 0);
                                    return;
                                }
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message);
                        return;
                    }
                }
            }


            //Modify By zouchihua 2012-09-10 医保病人费用大于费用限制是否允许开立医嘱 0=否 1=是
            SystemCfg cfg6055 = new SystemCfg(6055);
            SystemCfg cfg6056 = new SystemCfg(6056);
            string stryblx = "," + cfg6056.Config.Trim() + ",";
            decimal fyxz = Convert.ToDecimal(Convertor.IsNull(this.patientInfo1.myRow["fyxz"], "0"));
            if (stryblx.Contains("," + this.patientInfo1.myRow["yblx"].ToString() + ",") && cfg6055.Config.Trim() == "0" && fyxz > 0 && Convert.ToDecimal(this.patientInfo1.myRow["WJSZFY"]) > fyxz)
            {
                MessageBox.Show(this, this.patientInfo1.lbBed.Text + "床病人“" + this.patientInfo1.lbName.Text + "”费用限制为：" + fyxz.ToString("0.00") + "元，发生费用为：" + Convert.ToDecimal(this.patientInfo1.myRow["WJSZFY"]).ToString("0.00") + "元，已经超标，不能开立新的医嘱！\n 请联系管理员", "注意", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }

            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            if (!(mz || _tszl))
            {
                //Modify by zouchihua 2011-10-20  判断病人当前科室是否为现在进入科室；

                string pdsql = " select  dept_id from zy_inpatient where inpatient_id='" + BinID + "'";
                DataTable Pdtable = FrmMdiMain.Database.GetDataTable(pdsql);
                if (Pdtable.Rows.Count > 0)
                {
                    //医生站进入时 判断是否当前科室为登录科室，以免转科后电子病例还可以在转科前科室录入医嘱 add by zouchihua 2013-5-21

                    if (_ys && !_hzsq)
                    {
                        //  MessageBox.Show(EMrdeptid.ToString()+"  emr");
                        if (Pdtable.Rows[0]["dept_id"].ToString() != EMrdeptid.ToString())
                        {
                            MessageBox.Show("对不起，您不能录入医嘱！ 病人当前所在科室与您登录科室不一致，可能该病人已经转科");
                            return;
                        }
                    }
                    // 由于电子病例的进入，所以这里暂时屏蔽
                    //if (Pdtable.Rows[0]["dept_id"].ToString() != DeptID.ToString())
                    //{
                    //    //会诊病人
                    //    string hzsq = "select * from ZY_CONSULTATION  a left join ZY_CON_MX b on a.ID=b.P_ID where INPATIENT_ID='" + BinID + "' and FINISH_FLAG!=3 and  CON_DEPT=" + DeptID.ToString() + "";
                    //    DataTable tmtb = FrmMdiMain.Database.GetDataTable(hzsq);
                    //    if (tmtb.Rows.Count <= 0)
                    //    {

                    //        return;
                    //    }

                    //}
                }
                //#region//Add by Zouchihua 2011-10-12 判断病人的当前科室是不是属于本院区，主要是为了阻止临时跨院业务的病人操作
                //string[] rtnSql = ts_zyhs_classes.BaseFunc.GetBrzt(BinID);
                //if (rtnSql[0] != "0")
                //{
                //    MessageBox.Show("由于跨院转科或者特殊治疗，该病人记录已经冻结不能允许操作！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                //    return;
                //}
                //if (rtnSql[1] != FrmMdiMain.Jgbm.ToString())
                //{
                //    MessageBox.Show("该病人不属于本院区，不允许操作！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                //    return;
                //}
                //#endregion
            }
            Blbj = 0;

            if (outType == true && this.lg != 0)
            {
                MessageBox.Show("该病人已经出院或者定义出院或者有未完成的转科医嘱，将不能开医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                return;
            }
            //add by zouchihua 2013-6-6防止电子病历转科或者出院还可以开医嘱
            if (myQuery.OutFlag(BinID) || myQuery.TurnFlag(EMrdeptid, BinID))
            {
                MessageBox.Show("该病人已经出院或者定义出院或者有未完成的转科医嘱，将不能开医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                return;
            }
            //add by zouchihua 2012-5-30  手术室录入医嘱是否控制只有开处方权限医生才可以录入 0=否 1=是
            if ((mz && cfg6047.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "临时医嘱")
                 || (_tszl && cfg6049.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "临时医嘱"))
            {
                //doctor = new Doctor(YS_ID, InstanceForm._database);
                if (doctor == null || doctor.CF_Right == false)
                {
                    MessageBox.Show("你没有开处方的权限", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
            }
            if (!mz && !_hs && !hs && !_tszl)
            {
                if (doctor.CF_Right == false)
                {
                    MessageBox.Show("你没有开处方的权限", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
            }
            try
            {
                string str6058 = "," + cfg6058.Config.Trim() + ",";
                //add by zouchihua 2012-6-12 特殊治疗进行欠费管理

                if (new SystemCfg(6026, InstanceForm._database).Config == "0" && !str6058.Contains("," + FrmMdiMain.CurrentDept.DeptId.ToString() + ","))
                {
                    //出院及死亡病人判断 Modifuy By Tany 2007-12-05
                    //Modify by zouchihua 2013-12-23 7001 这个参数不在使用 6026
                    //   if (new SystemCfg(7001, InstanceForm._database).Config == "是") 
                    {
                        decimal _ye = 0;

                        _ye = Convert.ToDecimal(patientInfo1.lbYE.Text.Trim() == "" ? "0" : patientInfo1.lbYE.Text.Trim());

                        //Modify By Tany 2010-06-18 如果是医保病人，余额=预交金-总费用*费用比例
                        if (patientInfo1.lbJSLX.Text.IndexOf("医保") >= 0)
                        {
                            //首先判断费用比例是不是小于1，如果等于1，则不需要计算
                            decimal bl = Convert.ToDecimal(Convertor.IsNull(InstanceForm._database.GetDataResult("select b.yjj_bl from zy_inpatient a left join jc_yblx b on a.yblx=b.id where a.dischargetype=1 and a.inpatient_id='" + BinID + "'"), "1"));
                            //Modify By Tany 2010-08-07 比例=0的时候相当于不控制欠费
                            if (bl >= 0 && bl < 1)
                            {
                                decimal fee = 0;
                                decimal yjj = 0;
                                fee = Convert.ToDecimal(patientInfo1.lbWJSFY.Text.Trim() == "" ? "0" : patientInfo1.lbWJSFY.Text.Trim());
                                yjj = Convert.ToDecimal(patientInfo1.lbYJK.Text.Trim() == "" ? "0" : patientInfo1.myRow["YJK"].ToString().Trim());

                                _ye = yjj - (fee * bl);
                            }
                        }
                        //判断病人的余额
                        if (_ye < myFunc.GetPatMinExecYE(BinID))
                        {
                            //Add By Tany 2010-11-27 增加对病人入院时间的判断
                            //7072病人入院？小时后控制欠费（0=立即控制）
                            int _hour = Convert.ToInt32(new SystemCfg(7072, InstanceForm._database).Config);
                            DateTime _rysj = Convert.ToDateTime(InstanceForm._database.GetDataResult("select in_date from zy_inpatient where inpatient_id='" + BinID + "'"));
                            if (_rysj.AddHours(_hour) <= DateManager.ServerDateTimeByDBType(InstanceForm._database))
                            {
                                if (MessageBox.Show(patientInfo1.lbBed.Text.Trim() + " 床病人 " + patientInfo1.lbName.Text.Trim() + " 的余额为 " +
                                    patientInfo1.lbYE.Text.Trim() + " 元，已经欠费，是否继续新开医嘱？", "提问",
                                    MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) == DialogResult.No)
                                {
                                    return;
                                }
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }

            btn_NewGroup();
        }

        private void ChangeGroupNum(DataGridEx myDataGrid1)
        {
            this.chkAddi.Checked = false;//取消自由录入
            int i, NullRowCount = 0;
            //首先得到基本的网格信息
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;

            //定位行于最后一组医嘱以下的第二行
            try
            {
                for (i = myTb.Rows.Count - 1; i >= 0; i--)
                {
                    if (myTb.Rows[i]["医嘱内容"].ToString() == "")
                    {
                        //继续
                        NullRowCount++;
                    }
                    else
                    {
                        myTb.Rows[i + 1]["ID"] = Guid.Empty;
                        //跳出
                        break;
                    }
                }

                if (NullRowCount < 2)
                {
                    //增加一行				
                    myTb.Rows.Add(myTb.NewRow());//myTb.Rows.Add(myTb.NewRow());
                    //myDataGrid1.DataSource = newTb;Modify By Tany 2007-10-29 
                    //					return;
                }

                myDataGrid1.CurrentCell = new DataGridCell(i + 1,3);
            }
            catch (Exception ex)
            {
                MessageBox.Show("该行已经有记录,不能再次新开,请另选择一行重开!\n" + ex.Message, "提示", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
            }

        }
        #endregion

        /// <summary>
        /// 获得药品控制 add by zouchihua 2013-5-2
        /// </summary>
        /// <param name="tshi">0提示 1控制</param>
        /// <returns></returns>
        private string GetYPkz(int dept_id, int tshi)//0提示 1控制
        {
            string returnstr = "";
            try
            {
                if (cfg6066.Config.Trim() == "1")
                {
                    ParameterEx[] pe = new ParameterEx[6];
                    pe[0].Text = "@ksdm";
                    pe[0].Value = dept_id;

                    pe[1].Text = "@ysdm";
                    pe[1].Value = YS_ID;
                    pe[2].Text = "@type";
                    pe[2].Value = 1;
                    pe[3].Text = "@tsInfo";
                    pe[3].Value = tshi;

                    pe[4].Text = "@err_code";
                    pe[4].Value = 0;
                    pe[4].ParaDirection = ParameterDirection.Output;

                    pe[5].Text = "@err_text";
                    pe[5].Value = "";
                    pe[5].ParaSize = 200;
                    pe[5].ParaDirection = ParameterDirection.Output;
                    DataSet ds = new DataSet();
                    FrmMdiMain.Database.AdapterFillDataSet("SP_YP_YPBL_KH_TS", pe, ds, "tb", 60);//      GetDataTable("SP_YP_YPBL_KH_TS", pe);
                    if (ds.Tables[0].Rows.Count > 0)
                    {

                        if (tshi == 0 && ds.Tables[0].Rows[0]["dqbl"].ToString().Trim() != "")
                        {

                            if (decimal.Parse(ds.Tables[0].Rows[0]["dqbl"].ToString().Trim()) >= decimal.Parse(ds.Tables[0].Rows[0]["yjbl"].ToString().Trim()))
                            {
                                if (ds.Tables[1].Rows.Count == 0)
                                {
                                    returnstr += "提示：您本月当前药品考核比例为【" + ds.Tables[0].Rows[0]["dqbl"].ToString() + "】";
                                    returnstr += "-------" + "设置的最高比例为【" + ds.Tables[0].Rows[0]["khbl"].ToString() + "】";
                                }
                            }
                        }
                        if (tshi == 1)
                        {
                            returnstr = pe[5].Value.ToString().Trim();
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            return returnstr;
        }

        #region 初始化医嘱管理
        private void FrmYZGL_Load(object sender, System.EventArgs e)
        {
            //药慧士审方互动沟通程序调用
            DataTable dt_sfkg = new DataTable();
            string sql_sfkg = "select dictvalue1 from YHS_HOS_DICT where id=1";
            dt_sfkg = InstanceForm._database.GetDataTable(sql_sfkg);
            if (dt_sfkg.Rows[0]["dictvalue1"].ToString() == "1")
            {
                DataTable dt_dept = new DataTable();
                string sql_dept = "select IsCheck   from YHS_HOS_KESHI_SF where KESHI_CODE= "+InstanceForm._currentDept.DeptId.ToString();
                dt_dept = InstanceForm._database.GetDataTable(sql_dept);
                if (dt_dept.Rows.Count > 0 && dt_dept.Rows[0]["IsCheck"].ToString() == "1")
                {
                    Process[] oldhlyy = Process.GetProcessesByName("HLYYServer");
                    foreach (Process p in oldhlyy)
                    {
                        if (p.ProcessName == "HLYYServer")
                        {
                            p.Kill();
                            break;
                        }
                    }
                    ProcessStartInfo startInfo = new ProcessStartInfo();
                    startInfo.FileName = @"HLYYServer.exe"; //启动的应用程序名称
                    startInfo.Arguments = InstanceForm._currentUser.EmployeeId + " " + InstanceForm._currentUser.Name + " " + "无";//参数用空格隔开，三个参数依次为医生编码，医生姓名，医生职称；若无职称数据请入“无”
                    startInfo.WindowStyle = ProcessWindowStyle.Normal;
                    Process.Start(startInfo);
                }
            }

            backgroundWorker1.RunWorkerAsync();
            tabControl1.AllowDrop = false;
            tabControl1.DragFromControl = false;
            //Ts_Clinicalpathway_Factory.Ts_Manadal_path.ShowCpform();
            cfg6059 = new SystemCfg(6059);
            cfg6066 = new SystemCfg(6066);
            #region 加载页面时隐藏
            //this.panel4.Visible = false;
            //this.panel7.Visible = false;
            //this.panelLeft.Visible = false;
            #endregion
            //增加查询textbox 
            //SerchTxtBox.Location = new Point(270, 2);
            //SerchTxtBox.Size = new Size(80, SerchTxtBox.Size.Height);
            //this.listView1.Controls.Add(SerchTxtBox);
            SerchTxtBox.BringToFront();

            //Modify by zhujh 2017-01-18
            try
            {
                BoHLYYDept();
                //strHlyyType = GetIniString("hlyy", "name", System.Windows.Forms.Application.StartupPath + "\\Hlyy.ini");
            }
            catch (Exception err)
            {
                MessageBox.Show(err.Message);
            }

            if (!_tszl && _ys)
            {
                try
                {
                    doctor = new Doctor(YS_ID, InstanceForm._database);
                }
                catch (Exception err)
                {
                    //MessageBox.Show(err.Message);
                    this.Close();
                    MessageBox.Show(err.Message);
                }
            }
            else
            {
                //add by zouchihua 2012-5-30 麻醉
                if (mz || _tszl)
                {
                    try
                    {
                        doctor = new Doctor(YS_ID, InstanceForm._database);
                    }
                    catch
                    {

                    }
                }
            }
            try
            {
                cfg6032 = new SystemCfg(6032).Config;
                if (cfg6032 == "1")
                {
                    string sqlbrxx = "select a.*,c.SFZH from VI_ZY_VINPATIENT_info a join ZY_INPATIENT b on a.INPATIENT_ID=b.INPATIENT_ID join YY_BRXX c on b.PATIENT_ID=c.BRXXID  where a.INPATIENT_ID='" + new Guid(STAG.Substring(0, 40)) + "' and a.BABY_ID=" + Convert.ToInt64(STAG.Substring(40, 10)) + "";
                    BrxxTb = FrmMdiMain.Database.GetDataTable(sqlbrxx);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            //Modify By Tany 2010-03-20 如果手术或特殊治疗，不使用模板
            //if (_tszl || mz)
            //{
            //    tabControl2.TabPages.Remove(tabPage4);
            //    tabControl2.TabPages.Remove(tabPage8);
            //}

            dataGrid_LongOrder.isShowRowHeadId = true;
            dataGrid_TempOrder.isShowRowHeadId = true;

            Crownwood.Magic.Controls.TabControl tc = ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]);


            //Modify By Tany 2010-04-19 增加页面切换时的事件

            tc.SelectionChanged += new EventHandler(tc_SelectionChanged);

            // tc.SelectionChanged += new Crownwood.Magic.Controls.SelectTabHandler(tc_SelectionChanged);

            //医生是否能够开医嘱类型为8和9（护理和其他）的项目
            _ishlqt = Convertor.IsNull(new SystemCfg(6019, InstanceForm._database).Config, "1") == "0" ? true : false;

            //口服药和注射剂统领分类 Add By Tany 2010-01-19
            _kfyTlfl = new SystemCfg(7048, InstanceForm._database).Config;
            _zsjTlfl = new SystemCfg(7050, InstanceForm._database).Config;

            tmpThread();   //获取医嘱选项卡数据

            LoadYbzfbl();

            //初始化选项卡(GRD)
            InitGrdSel();

            try
            {
                if (_ys == true)     //医生工作站
                {
                    //addJycxyp();//add by zouchihua 2012-02-29

                    InitGrd_LongOrder();  //长期医嘱网格
                    loadGrid_LongOrder();  //得到长期医嘱数据
                    InitGrd_TempOrder();  //临时医嘱网格
                    loadGrid_TempOrder();  //得到临时医嘱数据

                    tc.TabPages.Remove(tc.TabPages[2]);  //去掉长期账单页面
                    //如果是特殊治疗，可以开账单 Modify By Tany 2010-03-12
                    if (!_tszl)
                    {
                        tc.TabPages.Remove(tc.TabPages[2]);  //去掉临时账单页面
                    }
                    else
                    {
                        InitGrd_TempZD();	//临时账单网格
                        LoadItems();
                    }
                    if (_tszl == true)     //特殊治疗
                    {
                        tc.TabPages.Remove(tc.TabPages[0]);  //去掉长期医嘱页面
                    }
                    this.tabControl3.TabPages.Remove(this.tabPage5);
                }
                else if (hs == true)     //护士账单医嘱1
                {
                    //addJycxyp();//add by zouchihua 2012-02-29
                    InitGrd_LongZD();     //长期账单网格
                    InitGrd_TempZD();	//临时账单网格
                    tc.TabPages.Remove(tc.TabPages[0]);  //去掉长期医嘱页面
                    tc.TabPages.Remove(tc.TabPages[0]);  //去掉临时医嘱页面
                    GetBinNo();   //得到病人列表
                }
                else if (mz == true)      //手术麻醉
                {
                    InitGrd_TempOrder();  //临时医嘱网格
                    loadGrid_TempOrder();  //得到临时医嘱数据
                    InitGrd_TempZD();	//临时账单网格
                    tc.TabPages.Remove(tc.TabPages[0]);  //去掉长期医嘱页面
                    tc.TabPages.Remove(tc.TabPages[1]);  //去掉长期账单页面
                    tc.TabPages.Remove(tc.TabPages[1]); //Modify By Tany 2015-02-02 临时账单去掉

                    //if (_ishlqt)
                    //{
                    //    tc.TabPages.Remove(tc.TabPages[1]);
                    //}
                    this.tabControl3.TabPages.Remove(this.tabPage5);//去掉病人列表
                    //					GetBinNo();   //得到病人列表
                }
                else                      //护士
                {
                    InitGrd_LongOrder();  //长期医嘱网格
                    loadGrid_LongOrder();  //得到长期医嘱数据
                    InitGrd_TempOrder();  //临时医嘱网格
                    loadGrid_TempOrder();  //得到临时医嘱数据
                    InitGrd_LongZD();     //长期账单网格
                    InitGrd_TempZD();	//临时账单网格

                    tc.TabPages.Remove(tc.TabPages[2]);  //去掉长期账单页面
                    tc.TabPages.Remove(tc.TabPages[2]);  //去掉临时账单页面

                    this.tabControl3.TabPages.Remove(this.tabPage5);//去掉病人列表
                    //					GetBinNo();   //得到病人列表
                }
            }
            catch (Exception err)
            {
                MessageBox.Show("\n\n请重新进入医嘱管理界面！\n\n" + err.ToString(), "错误提示：", MessageBoxButtons.OK, MessageBoxIcon.Error);
                this.Close();
            }

            //			//初始化医嘱模板
            //			InitModel(2);//缺省为本人的医嘱模板
            this.tabControl2.SelectedIndex = 1;

            //为说明输入框添加‘选择’按钮
            this.txtExplain.Controls.Add(this.btExn);
            this.btExn.Dock = DockStyle.Right;
            this.btExn.BackColor = this.BackColor;
            this.btExn.Font = new Font("宋体", 9, FontStyle.Regular);
            this.btExn.Cursor = Cursors.Arrow;

            this.statusBar1.Controls.Add(this.lbInFlag);
            this.lbInFlag.Dock = DockStyle.Right;

            _topMenu = new Crownwood.Magic.Menus.MenuControl();

            if ((STAG.Trim() != "") && (STAG != null))
            {
                this.patientInfo1.SetInpatientInfo(new Guid(STAG.Substring(0, 40)), Convert.ToInt64(STAG.Substring(40, 10)), Convert.ToInt32(STAG.Substring(50, 10)));
            }
            string str = patientInfo1.lbName.Text.Trim();
            DataTable dt = null;
            this.Text = str;

            if ((_ys || hs) && !_tszl)
            {
                //手术室不显示
                Addpathfrm();
                addJycxyp();//add by zouchihua 2012-02-29

            }
            if (!mz && !_tszl)//Modify By tany 2011-05-09 特殊治疗也不显示母婴
            {
                //add by zouchihua 2012-5-15 婴儿出区后是否可以看到婴儿医嘱
                SystemCfg cfg6044 = new SystemCfg(6044);
                if (cfg6044.CfgID.ToString() == "1")
                    //婴、母
                    dt = InstanceForm._database.GetDataTable("select baby_id ID,babyname NAME from zy_inpatient_baby where inpatient_id='" + this.BinID.ToString() + "'");
                else
                    dt = InstanceForm._database.GetDataTable("select baby_id ID,babyname NAME from zy_inpatient_baby where inpatient_id='" + this.BinID.ToString() + "' and flag in(1,3,4)");
                if (dt.Rows.Count > 0)
                {
                    DataRow dr = dt.NewRow();
                    dr[0] = 0;//this.BinID;
                    dr[1] = str;
                    dt.Rows.Add(dr);
                    cmbChild.DisplayMember = "NAME";
                    cmbChild.ValueMember = "ID";
                    cmbChild.DataSource = dt;
                    dt = null;
                    cmbChild.SelectedIndex = cmbChild.Items.Count - 1;
                    this.cmbChild.SelectedIndexChanged += new System.EventHandler(this.cmbChild_SelectedIndexChanged);
                }
                else this.cmbChild.Visible = false;

                if (_hzsq)
                {
                    cmbChild.SelectedValue = Hzbaby_id;
                }
            }
            else
            {
                //add by zouchihua 2012-01-12  手术室是否可以对婴儿进行记账
                string cfg6034 = new SystemCfg(6034).Config.Trim();
                if (cfg6034 == "0")
                    this.cmbChild.Visible = false;
                else
                {
                    //婴、母
                    dt = InstanceForm._database.GetDataTable("select baby_id ID,babyname NAME from zy_inpatient_baby where inpatient_id='" + this.BinID.ToString() + "' ");
                    if (dt.Rows.Count > 0)
                    {
                        DataRow dr = dt.NewRow();
                        dr[0] = 0;//this.BinID;
                        dr[1] = str;
                        dt.Rows.Add(dr);
                        cmbChild.DisplayMember = "NAME";
                        cmbChild.ValueMember = "ID";
                        cmbChild.DataSource = dt;
                        dt = null;
                        cmbChild.SelectedIndex = cmbChild.Items.Count - 1;
                        this.cmbChild.SelectedIndexChanged += new System.EventHandler(this.cmbChild_SelectedIndexChanged);
                    }
                    else this.cmbChild.Visible = false;
                }

            }

            LoadYF();

            //获取病区护士站IP
            this.WardIP_table = myQuery.WardIP(this.Ward_dept);
            //this.InitPanel(100,200);
            //add by zouchihua 2011-12-27 增加获得病人信息表


            //add by zouchihua 2011-12-22 住院医生站是否启用合理用药接口 0=否，1=是

            if (cfg6032 == "1")
            {
                this.btngms.Visible = true;
                try
                {
                    //0=用户 1=科室 2=模块 3=住院号 4=住院次数 5=病人姓名 6=性别 7=出生日期 8=体重  9=身高 10=出院日期
                    object[] _values = new object[11];
                    _values[0] = YS_ID + "/" + FrmMdiMain.CurrentUser.Name;//用户
                    _values[1] = FrmMdiMain.CurrentDept.DeptId + "/" + FrmMdiMain.CurrentDept.DeptName;//科室
                    try
                    {
                        _values[2] = FrmMdiMain.CurrentSystem.SystemId; //系统
                    }
                    catch
                    {
                        _values[2] = 0;
                    }
                    _values[3] = patientInfo1.lbID.Text;
                    _values[4] = this.BrxxTb.Rows[0]["TIMES"].ToString();//入院次数默认1 
                    _values[5] = patientInfo1.lbName.Text;
                    _values[6] = patientInfo1.lbSex.Text;
                    _values[7] = (Convert.ToDateTime(this.BrxxTb.Rows[0]["BIRTHDAY"])).ToString("yyyy-MM-dd");
                    _values[8] = "";
                    _values[9] = "";
                    if (this.BrxxTb.Rows[0]["OUT_DATE"].ToString() != "")
                        _values[10] = (Convert.ToDateTime(this.BrxxTb.Rows[0]["OUT_DATE"])).ToString("yyyy-MM-dd");
                    else
                        _values[10] = "";
                    strHlyyType = GetIniString("hlyy", "name", System.Windows.Forms.Application.StartupPath + "\\Hlyy.ini");

                    //判断部门是否在维护视图里面
                    if (boHLYYDept)
                    {
                        strHlyyType = GetIniString("hlyy_new", "name", System.Windows.Forms.Application.StartupPath + "\\Hlyy.ini");
                    }

                    hl = Ts_Hlyy_Interface.HlyyFactory.Hlyy(strHlyyType);

                    //Modify by jchl 2016-07-13
                    //hl.RegisterServer_fun(_values);
                    if (mz)
                    {
                        hl.RegisterServer_fun(_values);
                    }
                    //hl.RegisterServer_fun(_values);
                    hl.Refresh();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "错误信息！");
                }
            }
            //add by zouchihua 2012-5-25 住院医生站：是否只有中药处方的医生才能开中药医嘱
            cfg6046 = new SystemCfg(6046);
            cfg6047 = new SystemCfg(6047);
            cfg6048 = new SystemCfg(6048);
            cfg6053 = new SystemCfg(6053);
            if (_tszl)
                cfg6049 = new SystemCfg(6049);
            cfg6054 = new SystemCfg(6054);
            cfg6058 = new SystemCfg(6058);
            cfg6061 = new SystemCfg(6061);

            //临床路径默认进入 临床路径管理
            try
            {
                //Crownwood.Magic.Controls.TabControl tc = null;
                if (tabbedGroups1.ActiveLeaf != null)
                    tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
                if (tc.TabPages["临床路径管理"] != null && !mz)
                {

                    tc.SelectedTab = tc.TabPages["临床路径管理"];
                    //tc.TabPages["临床路径管理"].BringToFront();
                    //tc.TabPages["临床路径管理"].Select();
                    this.panel4.Visible = false;
                    this.panel7.Visible = false;
                    this.panelLeft.Visible = false;
                }
                else if (tc.TabPages["单病种管理"] != null && !mz)
                {
                    tc.SelectedTab = tc.TabPages["单病种管理"];
                    //tc.TabPages["临床路径管理"].BringToFront();
                    //tc.TabPages["临床路径管理"].Select();
                    this.panel4.Visible = false;
                    this.panel7.Visible = false;
                    this.panelLeft.Visible = false;
                }
                else
                {
                    this.panel4.Visible = true;
                    this.panel7.Visible = true;
                    this.panelLeft.Visible = true;
                }



            }
            catch
            {

            }
            //add by zouchihua 2012-5-2 进入页面时进行提示
            string ts = GetYPkz(FrmMdiMain.CurrentDept.DeptId, 0);
            if (ts.Trim() != "")
                MessageBox.Show(ts, "系统提示：");
            try
            {
                if (cfg6079.Config.Trim() == "0")
                {
                    DataGridEx[] dge = new DataGridEx[2];
                    dge[0] = dataGrid_LongOrder;
                    dge[1] = dataGrid_TempOrder;
                    Hlyyfx(dge, 1, 0);
                }
            }
            catch { }
            //引入路径
            PathInformaiton();
            if (cfg6088.Config.Trim() == "1")
            {
                GetLRDate();
            }
            this.fylb = myQuery.GetTsxx(this.patientInfo1.lbID.Text);//武汉中心医院
            try
            {
                TrasenHIS.BLL.Judgeorder jd = new TrasenHIS.BLL.Judgeorder();
                jd.CheckYbde(this.patientInfo1.lbID.Text);
                jd.CheckXnhzfybl(this.patientInfo1.lbID.Text);//Add By Tany 2014-09-25 增加农合病人的判断
                jd.CheckBrxxBZ(this.patientInfo1.lbID.Text);//Add By Tany 2015-03-18 增加提示
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message + "Judgeorder");
                this.Close();
            }


            try
            {

                //ts_yg_interface.JudgeorderYg jd = new ts_yg_interface.JudgeorderYg();
                //string url = "";
                //string msg = "";
                //jd.CheckYgInfo(this.patientInfo1.lbID.Text, InstanceForm._currentUser.EmployeeId, out msg, out url);//Add By jchl 2015-12-20 增加提示

                //if (!string.IsNullOrEmpty(url))
                //{
                //    if (MessageBox.Show("该患者有医院感染预警需处理！ \n\n 是否跳转查看院感详细信息", "院感提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.OK)
                //    {
                //        System.Diagnostics.Process.Start("iexplore.exe", url);
                //    }
                //}
                string zyh = this.patientInfo1.lbID.Text;
                string ssqlYg = "";
                ssqlYg = string.Format("select count(1) as Num from YG_MESSAGE where PATIENT_ID='{0}' and IS_DO=0 ", zyh);
                int iNum = int.Parse(Convertor.IsNull(InstanceForm._database.GetDataResult(ssqlYg), "0").ToString());

                if (iNum > 0)
                {
                    ssqlYg = string.Format("select D_CODE from JC_EMPLOYEE_PROPERTY where EMPLOYEE_ID='{0}' ", InstanceForm._currentUser.EmployeeId);
                    string dCodeEmp = Convertor.IsNull(InstanceForm._database.GetDataResult(ssqlYg), "").ToString();

                    string url = string.Format(@"http://192.168.100.126/nis/cdc?userid={0}&patientid={1}&visitid=1", dCodeEmp, zyh);

                    if (MessageBox.Show("该患者有医院感染预警需处理！ \n\n 是否跳转查看院感详细信息", "院感提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.OK)
                    {
                        ssqlYg = string.Format("Update YG_MESSAGE set IS_DO=1 where PATIENT_ID='{0}' ", zyh);
                        InstanceForm._database.DoCommand(ssqlYg);

                        System.Diagnostics.Process.Start("iexplore.exe", url);
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message + "JudgeorderYg");
                this.Close();
            }
            try
            {
                DataTable dt_patient_id = new DataTable();//根据住院号查询patient_id
                string sql = "select INPATIENT_ID from ZY_INPATIENT  where INPATIENT_NO='" + this.patientInfo1.lbID.Text + "'";
                dt_patient_id = FrmMdiMain.Database.GetDataTable(sql);
                string patient_id = dt_patient_id.Rows[0][0].ToString();
                DataTable dtyyje = new DataTable();//查询病人已用金额
                double yyje;
                double zyje;
                string sqlyyje = "select amount from yb_yjxtb where inpatient_id='" + patient_id + "'";
                dtyyje = FrmMdiMain.Database.GetDataTable(sqlyyje);
                if (dtyyje.Rows.Count > 0)
                {
                    yyje = Convert.ToDouble(dtyyje.Rows[0][0].ToString());
                }
                else
                {
                    return;
                }
                DataTable dtzyje = new DataTable();//查询病人在院用金额
                string sqlzyje = "select SUM(SDVALUE)from ZY_FEE_SPECI where  inpatient_id='" + patient_id + "'";
                dtzyje = FrmMdiMain.Database.GetDataTable(sqlzyje);
                if (dtzyje.Rows.Count > 0)
                {
                    zyje = Convert.ToDouble(dtzyje.Rows[0][0].ToString());
                }
                else
                {
                    zyje = 0;
                }
                DataTable dtjesx = new DataTable();//查询金额上限
                string sqljesx = "select CONFIG from jc_config where id=5154";
                dtjesx = FrmMdiMain.Database.GetDataTable(sqljesx);
                double jesx = Convert.ToDouble(dtjesx.Rows[0][0].ToString());
                if (yyje + zyje >= jesx)//判断是否超额
                {
                    MessageBox.Show("该病人可报销费用已快到达限额，请病区立即联系医保办红安县精准扶贫专管员！");
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            showdbz();
        }

        /// <summary>
        /// add yaokx 2014-04-15 浏阳妇幼补录，需要修改录入时间
        /// 开始时间录入
        /// </summary>
        private void GetLRDate()
        {
            this.datetimeLR.Value = DateManager.ServerDateTimeByDBType(InstanceForm._database);
            this.datetimeLRT.Value = DateManager.ServerDateTimeByDBType(InstanceForm._database);
            this.dataGrid_LongOrder.Controls.Add(datetimeLR);
            this.dataGrid_TempOrder.Controls.Add(datetimeLRT);
            datetimeLR.Visible = false;
            datetimeLRT.Visible = false;
        }
        /// <summary>
        /// 路径提示
        /// </summary>
        private void PathInformaiton()
        {
            string ifqy = ApiFunction.GetIniString("SfQy", "SfQy", Constant.ApplicationDirectory + "\\Cpset.ini");
            /*是否启用临床路径 0=不启用，1=启用临床路径 2=启用单病种 3=单病种临床路径都启用*/
            if ((ifqy == "1" || ifqy == "3") && cfg6083.Config.Trim() == "1")
            {
                string sql = "select * from PATH_WAY where STATUS=21 and (isnull(DEPTID,'')='' or DEPTID=" + this.DeptID + " or PATHWAY_ID in (select pathway_id from path_way_dept k where k.dept_id=" + this.DeptID + "))";
                //string sql = "select * from PATH_WAY where STATUS=21 and (isnull(DEPTID,'')='' or DEPTID=" + this.DeptID + ") ";

                DataTable tb = InstanceForm._database.GetDataTable(sql);
                if (tb.Rows.Count > 0)
                {
                    string ljmc = "本科室有以下路径可以进入：\r\n";
                    for (int i = 0; i < tb.Rows.Count; i++)
                    {
                        ljmc += "[" + tb.Rows[i]["PATHWAY_NAME"].ToString() + "]\r\n";
                    }
                    DataTable tbpath = InstanceForm._database.GetDataTable("select * from PATH_WAY_EXE where INPATIENT_ID='" + this.BinID + "'");
                    if (tbpath.Rows.Count == 0)
                    {
                        tbpath = InstanceForm._database.GetDataTable("select * from path_Notin_record where inpatient_id='" + this.BinID + "'");
                        if (tbpath.Rows.Count == 0)
                        {
                            if (MessageBox.Show(ljmc + "是否进入临床路径？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                            {
                                string sqlinsert = "insert into  path_Notin_record (id,doc_id,ip,hostname,inpatient_id) values (newid()," + InstanceForm._currentUser.EmployeeId + ",'" + Dns.GetHostEntry(Dns.GetHostName()).AddressList[0].ToString() + "','" + Dns.GetHostName() + "','" + this.BinID + "')";
                                InstanceForm._database.DoCommand(sqlinsert);
                            }
                            else
                            {
                                //引入临床路径
                                myQuery.GetIntoPathway(this.BinID.ToString(), "0", 0);//单病种 为 1 ，默认 为0
                                Addpathfrm();
                                //临床路径默认进入 临床路径管理
                                try
                                {
                                    Crownwood.Magic.Controls.TabControl tc = ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]);
                                    //Crownwood.Magic.Controls.TabControl tc = null;
                                    if (tabbedGroups1.ActiveLeaf != null)
                                        tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
                                    if (tc.TabPages["临床路径管理"] != null && !mz)
                                    {

                                        tc.SelectedTab = tc.TabPages["临床路径管理"];
                                        //tc.TabPages["临床路径管理"].BringToFront();
                                        //tc.TabPages["临床路径管理"].Select();
                                        this.panel4.Visible = false;
                                        this.panel7.Visible = false;
                                        this.panelLeft.Visible = false;
                                    }
                                    else if (tc.TabPages["单病种管理"] != null && !mz)
                                    {
                                        tc.SelectedTab = tc.TabPages["单病种管理"];
                                        //tc.TabPages["临床路径管理"].BringToFront();
                                        //tc.TabPages["临床路径管理"].Select();
                                        this.panel4.Visible = false;
                                        this.panel7.Visible = false;
                                        this.panelLeft.Visible = false;
                                    }
                                    else
                                    {
                                        this.panel4.Visible = true;
                                        this.panel7.Visible = true;
                                        this.panelLeft.Visible = true;
                                    }



                                }
                                catch
                                {

                                }
                                //for (int i = 0; i < 10; i++) openForm[i] = Guid.Empty;   //将已经打开的医嘱管理窗体进行初始化,如果没有这句话,在关闭医嘱窗体后再打开则会提示该医嘱窗体已经打开
                                //tabControl1_SelectedIndexChanged(null, null);
                                return;
                            }
                        }
                    }

                }
            }
        }




        void tc_SelectionChanged(object sender, EventArgs e)//tc_SelectionChanged(Crownwood.Magic.Controls.TabControl sender, Crownwood.Magic.Controls.TabPage oldPage, Crownwood.Magic.Controls.TabPage newPage)//
        {

            Crownwood.Magic.Controls.TabControl tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //add yaokx 2014-02-27 当拖动长期医嘱和临时医嘱互相切换时候，这里加判断不然会报错为null
            if (tc == null || tc.SelectedTab == null) return;

            if (tc.SelectedTab.Title.Trim() == sTab0 || tc.SelectedTab.Title.Trim() == sTab1)
            {
                tabControl2.TabPages.Remove(tabPage4);
                tabControl2.TabPages.Remove(tabPage8);
            }
            else
            {
                if (!tabControl2.TabPages.Contains(tabPage8))
                {
                    tabControl2.TabPages.Add(tabPage8);
                }
                if (!tabControl2.TabPages.Contains(tabPage4))
                {
                    tabControl2.TabPages.Add(tabPage4);
                }
            }
            tabControl2_SelectedIndexChanged(null, null);
        }

        #endregion

        #region 获取选项卡数据
        #region 线程：获取选项卡数据
        public void tmpThread()
        {
            //取出医嘱项目及药品数据放置到DATAVIEW中去
            DataTable myTb = new DataTable();
            // MessageBox.Show("test1");
            try
            {
                if (Ts_zyys_public.DbQuery.Ward_dep == this.Ward_dept && Ts_zyys_public.DbQuery.SelectTb != null)
                {
                    if (mz || _tszl)
                    {
                        myTb = DbQuery.Dept_ID == this.DeptID ? DbQuery.SelectTb : myQuery.GetSelCard(this.DeptID, this.Ward_dept, FrmMdiMain.Jgbm);
                        DbQuery.Dept_ID = this.DeptID;
                        DbQuery.SelectTb = myTb;
                    }
                    else
                    {
                        if (cfg6059.Config == "1" && _hzsq)
                        {
                            //Modify by zouchihua 2012-10-15 执行科室为会诊科室
                            myTb = DbQuery.Dept_ID == InstanceForm._currentDept.DeptId ? DbQuery.SelectTb : myQuery.GetSelCard(InstanceForm._currentDept.DeptId, this.Ward_dept, FrmMdiMain.Jgbm);
                            DbQuery.Dept_ID = FrmMdiMain.CurrentDept.DeptId;
                            DbQuery.SelectTb = myTb;
                        }
                        else
                        {
                            myTb = DbQuery.Dept_ID == this.Dept_Br ? DbQuery.SelectTb : myQuery.GetSelCard(this.Dept_Br, this.Ward_dept, FrmMdiMain.Jgbm);
                            DbQuery.Dept_ID = this.Dept_Br;
                            DbQuery.SelectTb = myTb;
                        }
                    }

                }
                else
                {
                    if (mz || _tszl)
                    {
                        myTb = myQuery.GetSelCard(this.DeptID, this.Ward_dept, FrmMdiMain.Jgbm);
                        DbQuery.Dept_ID = this.DeptID;
                    }
                    else
                    {
                        if (cfg6059.Config == "1" && _hzsq)
                        {
                            //Modify by zouchihua 2012-10-15 执行科室为会诊科室
                            myTb = DbQuery.Dept_ID == InstanceForm._currentDept.DeptId ? DbQuery.SelectTb : myQuery.GetSelCard(InstanceForm._currentDept.DeptId, this.Ward_dept, FrmMdiMain.Jgbm);
                            DbQuery.Dept_ID = FrmMdiMain.CurrentDept.DeptId;
                            //DbQuery.SelectTb = myTb;
                        }
                        else
                        {
                            myTb = myQuery.GetSelCard(this.Dept_Br, this.Ward_dept, FrmMdiMain.Jgbm);
                            DbQuery.Dept_ID = this.Dept_Br;
                        }
                    }
                    DbQuery.Ward_dep = this.Ward_dept;
                    DbQuery.SelectTb = myTb;

                }
                myTb.TableName = "ORDERQUERY";
                SelectDataView = new DataView(myTb.Copy());
                //选择框增加一列
                DataColumn dc = new DataColumn("序号", typeof(int));
                this.SelectDataView.Table.Columns.Add(dc);
                this.XXC = true;
                this.timer3.Enabled = true;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }
        #endregion

        #region 获取选项卡数据（未用）
        private void timer4_Tick(object sender, System.EventArgs e)
        {
            this.timer4.Enabled = false;
            //			//初始化医嘱模板
            //			InitModel(2);//缺省为本人的医嘱模板

            //取出医嘱项目及药品数据放置到DATAVIEW中去
            DataTable myTb = myQuery.GetSelCard(this.DeptID, this.Ward_dept, FrmMdiMain.Jgbm);
            myTb.TableName = "ORDERQUERY";
            SelectDataView = new DataView();
            SelectDataView.Table = myTb;
            //选择框增加一列
            DataColumn dc = new DataColumn("序号", typeof(int));
            this.SelectDataView.Table.Columns.Add(dc);

            this.timer3.Enabled = true;
        }
        #endregion
        #endregion

        #region 根据病人医保类型获取医保自付比例
        /// <summary>
        /// 根据病人医保类型获取医保自付比例
        /// </summary>
        private void LoadYbzfbl()
        {
            if (BinID == Guid.Empty)
            {
                return;
            }
            DataTable tb = SelectDataView.Table;
            if (tb == null || tb.Rows.Count == 0)
            {
                return;
            }

            //Modify By Tany 2010-03-23 如果病人接口类型是0，不判断医保状态
            DataTable tbPat = InstanceForm._database.GetDataTable("select * from vi_zy_vinpatient_all where baby_id=0 and inpatient_id='" + BinID + "'");

            if (Convert.ToInt32(tbPat.Rows[0]["dischargetype"]) == 1 && Convert.ToInt32(tbPat.Rows[0]["ybjklx"]) == 0)
            {
                for (int i = 0; i < tb.Rows.Count; i++)
                {
                    tb.Rows[i]["自付比"] = "无";
                }
                return;
            }

            string sql = "";
            sql = "select c.yblx, c.XMLY, c.XMID, ISNULL(c.ZYBZ,1)ZYBZ, convert(varchar,convert(int,c.ZFBL*100))+'%' zfbl from zy_inpatient a " +
                " inner join jc_yb_bl c on a.yblx=c.yblx " +
                " where (c.zybz=1 or c.ZYBZ is null) and a.inpatient_id='" + BinID + "'";
            tbYbzfbl = InstanceForm._database.GetDataTable(sql);

            if (tbYbzfbl == null || tbYbzfbl.Rows.Count == 0)
            {
                return;
            }

            int cfg = Convert.ToInt32(new SystemCfg(6022, InstanceForm._database).Config);//Modify By tany 2010-01-29 医嘱选项卡是否显示医保自付比例0=是1=不是

            for (int i = 0; i < tb.Rows.Count; i++)
            {
                //if (tb.Rows[i]["xmly"].ToString().Trim() == "1")
                //{
                //for (int j = 0; j < tbYbzfbl.Rows.Count; j++)
                //{
                //    if (tb.Rows[i]["xmly"].ToString().Trim() == tbYbzfbl.Rows[j]["xmly"].ToString().Trim()
                //        && tb.Rows[i]["order_id"].ToString().Trim() == tbYbzfbl.Rows[j]["xmid"].ToString().Trim())
                //    {
                //        tb.Rows[i]["自付比"] = tbYbzfbl.Rows[j]["zfbl"];
                //        break;
                //    }
                //}
                tb.Rows[i]["自付比"] = "";

                string xmid = tb.Rows[i]["项目代码"].ToString().Trim();

                if (xmid == "")
                    continue;

                //如果是套餐不判断，直接可以开
                if (Convert.ToInt32(tb.Rows[i]["ISCOMPLEX"]) > 0)
                {
                    tb.Rows[i]["自付比"] = cfg == 0 ? "0%" : "已匹配";//"0%"; Modify By Tany 2010-01-11 暂时只显示已匹配，不显示比例
                }
                else
                {
                    DataRow[] dr = tbYbzfbl.Select("xmid=" + xmid);
                    if (dr.Length == 0)
                    {
                        continue;
                    }
                    else
                    {
                        for (int j = 0; j < dr.Length; j++)
                        {
                            if (tb.Rows[i]["xmly"].ToString().Trim() == dr[j]["xmly"].ToString().Trim())
                            {
                                tb.Rows[i]["自付比"] = cfg == 0 ? Convertor.IsNull(dr[j]["zfbl"], "已匹配") : "已匹配";//dr[j]["zfbl"];Modify By Tany 2010-01-11 暂时只显示已匹配，不显示比例
                                break;
                            }
                        }
                    }
                }
                //}
            }

            SelectDataView = new DataView(tb);
        }
        #endregion

        #region 显示新开医嘱时间
        private void getDateTime(DataGridEx myDataGrid1, DateTime dt)
        {
            int nrow, ncol;
            //首先得到当前网格的信息
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            //得到当前编辑网格的位置
            nrow = myDataGrid1.CurrentCell.RowNumber;
            ncol = myDataGrid1.CurrentCell.ColumnNumber;
            //得到当前编辑的TEXTBOX格子
            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ncol];
            myTb.Rows[nrow]["开始时间"] = dt.ToString().Trim();
            if (this.DtpbeginDate.Visible == true) myTb.Rows[nrow]["status_flag"] = 9;//补录这里
            txtCol.TextBox.Text = dt.ToString().Trim();
            myDataGrid1.Refresh();
            //为防止失去焦点
            myDataGrid1.Focus();
            if (myDataGrid1.Name == "dataGrid_LongOrder" || myDataGrid1.Name == "dataGrid_TempOrder")
            {
                DataGridCell myCell = new DataGridCell(nrow, ncol + 4);
                myDataGrid1.CurrentCell = myCell;
            }
            else
            {
                DataGridCell myCell = new DataGridCell(nrow, 4);
                myDataGrid1.CurrentCell = myCell;
            }
            txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[1];
            txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;
        }
        #endregion

        #region datagrid的CurrentCell改变事件
        private void cellChanged(DataGridEx myDataGrid1)
        {
            //特殊治疗临时医嘱总价格
            if ((_tszl || mz) && cfg6063.Config.Trim() == "1")
                GetPricehj(this.dataGrid_TempOrder);
            //关闭要点提示  add by zouchihua 2012-02-06
            try
            {
                if (cfg6032 == "1" && hl != null)
                    hl.ClosePoint(null);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }

            //首先得到基本的网格信息
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            string ColumnName = myDataGrid1.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();

            #region"自动获得总量和天数 Modify by jchl"
            try
            {
                if (myTb.Rows[nrow]["status_flag"].ToString() == "0")
                {
                    if (ColumnName.Equals("规格"))
                    {
                        if ((Convert.ToString(myTb.Rows[nrow]["类型"]) == "1-西药"
                            || Convert.ToString(myTb.Rows[nrow]["类型"]) == "2-中成药"
                            || Convert.ToString(myTb.Rows[nrow]["类型"]) == "3-中草药")
                            && Convert.ToInt32(myTb.Rows[nrow]["xmly"]) == 1)
                        {
                            #region 自动获得总量和天数
                            this.dataGrid_TempOrder.EndEdit(this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol], nrow, false);
                            DataGridTextBoxColumn txtColjl = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["剂量"];
                            DataGridTextBoxColumn txtColpl = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["频率"];
                            int firstGrouprow = GetGroupBeginRow(myTb, nrow);
                            DataTable tb = FrmMdiMain.Database.GetDataTable("select EXECNUM from JC_FREQUENCY where NAME='" + myTb.Rows[firstGrouprow]["频率"].ToString() + "'");
                            int pc = 1;
                            if (tb != null && tb.Rows.Count > 0)
                            {
                                pc = int.Parse(tb.Rows[0]["EXECNUM"].ToString());
                            }

                            if (myTb.Rows[nrow]["天数"].ToString().Trim() == "")
                            {
                                if (IsGroupFirstRow(myTb, nrow))
                                {
                                    myTb.Rows[nrow]["天数"] = "1";
                                }
                                else
                                {
                                    //查找前面医嘱天数
                                    for (int i = nrow - 1; i >= 0; i--)
                                    {
                                        if (myTb.Rows[i]["天数"].ToString() != "")
                                        {
                                            myTb.Rows[nrow]["天数"] = myTb.Rows[i]["天数"];
                                            break;
                                        }
                                    }
                                }
                                if (myTb.Rows[nrow]["天数"].ToString().Trim() == "")
                                {
                                    myTb.Rows[nrow]["天数"] = "1";
                                }

                            }
                            int dosage = 1;
                            decimal ts = decimal.Parse(myTb.Rows[nrow]["天数"].ToString());
                            //中草药的处理
                            if (GetGroupType(myTb, nrow) == "3-中草药")
                            {
                                firstGrouprow = GetGroupBeginRow(myTb, nrow);
                                if (myTb.Rows[firstGrouprow]["剂数"].ToString().Trim() != "")
                                    dosage = Convert.ToInt32(myTb.Rows[firstGrouprow]["剂数"].ToString().Trim());
                                ts = 1;
                                pc = 1;
                            }
                            DataGridTextBoxColumn txtColts = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["天数"];
                            decimal zl = decimal.Parse(myTb.Rows[nrow]["剂量"].ToString()) * ts * pc;//不需要剂数
                            myTb.Rows[nrow]["总量"] = zl.ToString();
                            //总动换算药房单位
                            GetYPdwtb(myTb, nrow, zl);
                            #endregion
                        }
                        else
                        {
                            #region 自动获得总量和天数
                            this.dataGrid_TempOrder.EndEdit(this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol], nrow, false);
                            DataGridTextBoxColumn txtColjl = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["剂量"];
                            DataGridTextBoxColumn txtColpl = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["频率"];
                            int firstGrouprow = GetGroupBeginRow(myTb, nrow);

                            DataTable tb = FrmMdiMain.Database.GetDataTable("select EXECNUM from JC_FREQUENCY where NAME='" + myTb.Rows[firstGrouprow]["频率"].ToString() + "'");
                            int pc = 1;
                            if (tb != null && tb.Rows.Count > 0)
                            {
                                pc = int.Parse(tb.Rows[0]["EXECNUM"].ToString());
                            }

                            if (myTb.Rows[nrow]["天数"].ToString().Trim() == "")
                            {
                                if (IsGroupFirstRow(myTb, nrow))
                                {
                                    myTb.Rows[nrow]["天数"] = "1";
                                }
                                else
                                {
                                    //查找前面医嘱天数
                                    for (int i = nrow - 1; i >= 0; i--)
                                    {
                                        if (myTb.Rows[i]["天数"].ToString() != "")
                                        {
                                            myTb.Rows[nrow]["天数"] = myTb.Rows[i]["天数"];
                                            break;
                                        }
                                    }
                                }
                                if (myTb.Rows[nrow]["天数"].ToString().Trim() == "")
                                {
                                    myTb.Rows[nrow]["天数"] = "1";
                                }

                            }
                            int dosage = 1;
                            decimal ts = decimal.Parse(myTb.Rows[nrow]["天数"].ToString());
                            //中草药的处理
                            if (GetGroupType(myTb, nrow) == "3-中草药")
                            {
                                firstGrouprow = GetGroupBeginRow(myTb, nrow);
                                if (myTb.Rows[firstGrouprow]["剂数"].ToString().Trim() != "")
                                    dosage = Convert.ToInt32(myTb.Rows[firstGrouprow]["剂数"].ToString().Trim());
                                ts = 1;
                                pc = 1;
                            }
                            DataGridTextBoxColumn txtColts = (DataGridTextBoxColumn)this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles["天数"];
                            decimal zl = decimal.Parse(myTb.Rows[nrow]["剂量"].ToString()) * ts * pc;//不需要剂数
                            myTb.Rows[nrow]["总量"] = zl.ToString();
                            //总动换算药房单位
                            //GetYPdwtb(myTb, nrow, zl);
                            #endregion
                        }
                    }
                }
            }
            catch { }
            #endregion

            #region 合理用药的控制
            try
            {
                if (cfg6032 == "1" && ColumnName == "医嘱内容" && (Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1))
                {
                    //显示药店提示
                    string cs = "";
                    //美康合理用好接口

                    // string hlyytype = GetIniString("hlyy", "name", System.Windows.Forms.Application.StartupPath + "\\Hlyy.ini");
                    if (strHlyyType == "大通新")
                    {
                        //add by zouchihu 2013-8-29
                        //cs = " <details_xml><hosp_flag>ip</hosp_flag><medicine><his_code>" + myTb.Rows[nrow]["hoitem_id"].ToString() + "</his_code><his_name>" + myTb.Rows[nrow]["医嘱内容"].ToString() + "</his_name></medicine></details_xml> ";


                        ////Modify by jchl:2016-08-01 新大通合理用药不提示,只采集
                        //hl.ShowPoint(new StringBuilder(cs));//大通新的合理用药条用
                    }
                    else if (strHlyyType == "大通")
                    {
                        //Add By Tany 2014-08-05
                        //cs = " <safe><general_name>" + myTb.Rows[nrow]["医嘱内容"].ToString() + "</general_name><license_number>" + myTb.Rows[nrow]["hoitem_id"].ToString() + "</license_number><type>1</type></safe> ";
                        //hl.ShowPoint(new StringBuilder(cs));
                    }
                }
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
            #endregion
            try
            {
                //判断是不是最后一个
                if (nrow > myTb.Rows.Count - 2)
                {
                    myTb.Rows.Add(myTb.NewRow());
                    myDataGrid1.DataSource = myTb.Copy();
                    //为防止失去焦点
                    DataGridCell myCell = new DataGridCell(nrow, ncol);
                    myDataGrid1.CurrentCell = myCell;
                }
                else if (nrow < myTb.Rows.Count - 2 && myTb.Rows[myTb.Rows.Count - 2]["医嘱内容"] == System.DBNull.Value)
                {
                    myTb.Rows.RemoveAt(myTb.Rows.Count - 1);
                    myDataGrid1.DataSource = myTb.Copy();
                    //为防止失去焦点
                    DataGridCell myCell = new DataGridCell(nrow, ncol);
                    myDataGrid1.CurrentCell = myCell;
                }
                //得到当前编辑的TEXTBOX格子
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ncol];
                if (myTb.Rows[nrow]["ID"].ToString().Trim() == "" || new Guid(myTb.Rows[nrow]["ID"].ToString()) == Guid.Empty)
                {
                    txtCol.TextBox.BackColor = Color.WhiteSmoke;
                }

                //更改停嘱按钮
                if (myTb.Rows[nrow]["status_flag"].ToString() == "3")
                {
                    btStopOrder.Text = "取消停F6";
                }
                else btStopOrder.Text = "停嘱F6";
                if (myTb.Rows[nrow]["status_flag"].ToString() == "2" || myTb.Rows[nrow]["status_flag"].ToString() == "3")
                    btStopOrder.Enabled = true;
                else btStopOrder.Enabled = false;

                this.GrdSel.Visible = false;

                if (ColumnName == "医嘱内容") this.chkAddi.Checked = false;

                if (ColumnName == "单位" || ColumnName == "总单位")//Modify by zouchihua 增加了总量单位，总量不需要判断药品剂量问题
                {
                    if (myTb.Rows[nrow]["类型"] == System.DBNull.Value)
                    {
                        DataGridTextBoxColumn dgtb = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles["单位"];
                        dgtb.TextBox.Controls.Clear();//清除编辑框中的控件
                        return;
                    }
                    string typeNum = myQuery.GetyzTypeCode(myTb.Rows[nrow]["类型"].ToString());

                    if ((typeNum == "1" || typeNum == "2" || typeNum == "3") && (Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString()) < 2 || Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString()) == 9))//没转抄的药品医嘱
                    {
                        if (ColumnName == "单位")
                        {
                            #region 判断剂量是否太大
                            string cjid = Convertor.IsNull(myTb.Rows[nrow]["hoitem_id"], "-1");
                            string xmly = Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1");
                            JL = myQuery.GetDose(cjid);

                            if (xmly == "1")//if (myDataGrid1 == this.dataGrid_TempOrder && cjid != "-1")
                            {
                                //----------------------注释临时医嘱中单位的下拉选项------------------------------///

                                if (myTb.Rows[nrow]["执行科室"].ToString() == "-1")//自备药时执行科室为-1
                                {
                                    if (!(myTb.Rows[nrow]["执行科室"].ToString() == "-1" && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1"))
                                    {
                                        //add by zouchihua 2013-9-17 自备药单位可以自己输入
                                        addCMB(cjid, myTb.Rows[nrow]["执行科室"].ToString(), myDataGrid1);//添加单位
                                    }
                                    if (myTb.Rows[nrow]["执行科室"].ToString() == "-1" && myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1")
                                    {
                                        cmb.SelectionChangeCommitted -= new EventHandler(cmb_SelectionChangeCommitted);
                                        DataGridTextBoxColumn dgtb = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ColumnName];
                                        dgtb.TextBox.Controls.Clear();//清除编辑框中的控件
                                        return;
                                    }
                                    //DataGridTextBoxColumn dgtb = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ColumnName];
                                    //dgtb.TextBox.Controls.Clear();//清除编辑框中的控件
                                }
                                else
                                {
                                    addCMB(cjid, myTb.Rows[nrow]["执行科室"].ToString(), myDataGrid1);//添加单位
                                    //cmb.DroppedDown = true;
                                }
                            }
                            else
                            {
                                JL2 = 0;
                            }
                            Crownwood.Magic.Controls.TabControl tc = null;
                            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
                            //Modify by zouchihua 2012-7-1
                            if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                            {
                                if (JL2 != 0 && myTb.Rows[nrow]["dwlx"].ToString() != "1")//不是含量单位时，剂量默认是1
                                {
                                    JL = JL2;
                                }
                            }
                            if (tc.SelectedTab.Title.Trim() == "临时期医嘱")
                            {
                                if (JL2 != 0 && myTb.Rows[nrow]["jldwlx"].ToString() != "1")//不是含量单位时，剂量默认是1
                                {
                                    JL = JL2;
                                }
                            }
                            if (typeNum == "3") JL = 10;

                            if (myTb.Rows[nrow]["剂量"] == System.DBNull.Value) { myTb.Rows[nrow]["剂量"] = 0; return; }

                            //超过10倍剂量时提示太大
                            if (Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString()) < 2 && Convert.ToDecimal(myTb.Rows[nrow]["剂量"].ToString()) > JL * 10
                                &&
                                 !(myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1" && myTb.Rows[nrow]["执行科室"].ToString().Trim() == "-1")
                                )
                            {
                                if (cfg6074.Config.Trim() == "1")
                                {
                                    //如果是外来药品就不要控制 剂量大小 add by zouchihua 2013-11-13
                                    if (myTb.Rows[nrow]["hoitem_id"].ToString() == "-1" && myTb.Rows[nrow]["执行科室"].ToString() == "-1")
                                    {

                                    }
                                    else
                                    {
                                        MessageBox.Show(myTb.Rows[nrow]["剂量"].ToString() + myTb.Rows[nrow]["单位"].ToString().Trim() + "剂量太大，系统强制不允许开立！", "警告");
                                        //myTb.Rows[nrow]["剂量"] = Decimal.Round(JL, 2); Modify By Tany 2014-12-26 屏蔽这条和以下几条，否则会出错
                                        myDataGrid1.Refresh();
                                        myDataGrid1.Focus();
                                        //DataGridCell myCell = new DataGridCell(nrow, ncol - 1);
                                        //myDataGrid1.CurrentCell = myCell;
                                        //txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ncol - 1];
                                        //txtCol.TextBox.Text = Decimal.Round(JL, 2).ToString();
                                        //txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;
                                        return;
                                    }
                                }
                                if (MessageBox.Show(myTb.Rows[nrow]["剂量"].ToString() + myTb.Rows[nrow]["单位"].ToString().Trim() + "剂量太大，你确定使用这个剂量吗？", "警告", System.Windows.Forms.MessageBoxButtons.YesNo, System.Windows.Forms.MessageBoxIcon.Warning) == System.Windows.Forms.DialogResult.No)
                                {
                                    //myTb.Rows[nrow]["剂量"] = Decimal.Round(JL, 2);Modify By Tany 2014-12-26 屏蔽这条和以下几条，否则会出错
                                    myDataGrid1.Refresh();
                                    myDataGrid1.Focus();
                                    //DataGridCell myCell = new DataGridCell(nrow, ncol - 1);
                                    //myDataGrid1.CurrentCell = myCell;
                                    //txtCol = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ncol - 1];
                                    //txtCol.TextBox.Text = Decimal.Round(JL, 2).ToString();
                                    //txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;

                                }
                                else if (IsGroupFirstRow(myTb, nrow) == true)
                                {
                                    //		this.dataGrid_LongOrder.Focus();
                                    DataGridCell myCell = new DataGridCell(nrow, ncol + 1);
                                    myDataGrid1.CurrentCell = myCell;
                                    txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;

                                }
                                else
                                {
                                    //							if(nrow==myTb.Rows.Count-2)
                                    //							{
                                    //								myTb.Rows.Add(myTb.NewRow());
                                    //								myDataGrid1.DataSource=myTb.Copy();
                                    //							    DataGridCell myCell=new DataGridCell(nrow+1,ncol-2);
                                    //								myDataGrid1.CurrentCell=myCell ;
                                    //							}
                                }
                            }
                            #endregion
                        }
                        if (ColumnName == "总单位")
                        {
                            return;//不允许修改
                            string cjid = Convertor.IsNull(myTb.Rows[nrow]["hoitem_id"], "-1");
                            string xmly = Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1");
                            JL = myQuery.GetDose(cjid);

                            if (xmly == "1")//if (myDataGrid1 == this.dataGrid_TempOrder && cjid != "-1")
                            {
                                //----------------------注释临时医嘱中单位的下拉选项------------------------------///

                                if (myTb.Rows[nrow]["执行科室"].ToString() == "-1")//自备药时执行科室为-1
                                {
                                    DataGridTextBoxColumn dgtb = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ColumnName];
                                    dgtb.TextBox.Controls.Clear();//清除编辑框中的控件
                                }
                                else
                                {
                                    addCMB(cjid, myTb.Rows[nrow]["执行科室"].ToString(), myDataGrid1);//添加单位
                                    //cmb.DroppedDown = true;
                                }
                            }
                        }
                    }
                    else
                    {
                        DataGridTextBoxColumn dgtb = (DataGridTextBoxColumn)myDataGrid1.TableStyles[0].GridColumnStyles[ColumnName];// //["单位"];
                        dgtb.TextBox.Controls.Clear();
                    }
                }
            }
            catch
            {
            }
        }
        #endregion

        #region 插入自备药说明
        private void btnSelf_Click(object sender, System.EventArgs e)
        {
            checkPage();
            if (pageType == 0) InsertSelfMed(this.dataGrid_LongOrder, 0, 0);
            else InsertSelfMed(this.dataGrid_TempOrder, 1, 0);
        }

        private void InsertSelfMed(DataGridEx myDataGrid1, int tab, int type)//0 自备 1 已备
        {
            //string FirstRow = myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString().Trim());
            this.statusBar1.Text = hint[7].Trim();
            //首先得到基本的网格信息
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            if (myTb.Rows[nrow]["医嘱内容"] == System.DBNull.Value) return;
            //add by yaokx 2014-03-04
            if ((myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("「整盒」", 0) >= 0)
                         && myTb.Rows[nrow]["执行科室"].ToString() == "-1")
            {
                MessageBox.Show("对整盒的药品不能【自备】");
                return;
            }

            //Modify by jchl(武汉中心医院 中草药不自备)
            string FirstRow = myQuery.GetyzTypeCode(myTb.Rows[nrow]["类型"].ToString().Trim());
            if (FirstRow.Trim().Equals("3"))
            {
                MessageBox.Show("中草药不能【自备】", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }

            if (Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString()) > 1 && myTb.Rows[nrow]["status_flag"].ToString() != "9") return;
            if (
                (myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("「自备」", 0) >= 0
                 || myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("「已备」", 0) >= 0
                 )
                && myTb.Rows[nrow]["执行科室"].ToString() == "-1")
            {
                if (type == 1)
                    myTb.Rows[nrow]["医嘱内容"] = myTb.Rows[nrow]["医嘱内容"].ToString().Replace("「自备」", "「已备」");
                else
                    myTb.Rows[nrow]["医嘱内容"] = myTb.Rows[nrow]["医嘱内容"].ToString().Replace("「已备」", "「自备」");
                return;
            }
            string typeNum = myQuery.GetyzTypeCode(myTb.Rows[nrow]["类型"].ToString());
            //			if(char.IsNumber(myTb.Rows[nrow]["Item_Code"].ToString(),0)==false)
            if ((typeNum == "1" || typeNum == "2" || typeNum == "3"))
            {
                if (myTb.Rows[nrow]["status_flag"].ToString() == "1") MessageBox.Show("该药品已发送，不能更改为" + (type == 0 ? "自备药" : "已备药") + "", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                else
                {
                    //				    if(( myTb.Rows[nrow]["ID"].ToString()=="0" && myTb.Rows[nrow]["医嘱内容"].ToString()!="") || ((myTb.Rows[nrow]["ID"].ToString()!="0" && myTb.Rows[nrow]["status_flag"].ToString()=="0")))
                    if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim() != "")
                    {
                        if (type == 0)
                            myTb.Rows[nrow]["医嘱内容"] = myTb.Rows[nrow]["医嘱内容"].ToString().Trim() + "「自备」";
                        else
                            myTb.Rows[nrow]["医嘱内容"] = myTb.Rows[nrow]["医嘱内容"].ToString().Trim() + "「已备」";

                        myTb.Rows[nrow]["执行科室"] = -1;
                    }
                }
            }

            //为防止失去焦点
            myDataGrid1.Focus();
            DataGridCell myCell = new DataGridCell(nrow, ncol);
            myDataGrid1.CurrentCell = myCell;
            myDataGrid1.CurrentRowIndex = nrow;//myTb.Rows.Count;
            if (tab == 0) XG1 = true;
            else XG2 = true;

        }
        #endregion

        #region 补录医嘱
        private void btnSupply_Click(object sender, System.EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            if (outType == true) return;
            if (!(mz || _tszl))
            {
                #region//Add by Zouchihua 2011-10-12 判断病人的当前科室是不是属于本院区，主要是为了阻止临时跨院业务的病人操作
                string[] rtnSql = ts_zyhs_classes.BaseFunc.GetBrzt(BinID);
                if (rtnSql[0] != "0")
                {
                    MessageBox.Show("由于跨院转科或者特殊治疗，该病人记录已经冻结不能允许操作！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }
                #endregion
                //Modify by zouchihua 2012-3-16  判断病人当前科室是否为现在进入科室；
                #region
                string pdsql = " select  dept_id from zy_inpatient where inpatient_id='" + BinID + "'";
                DataTable Pdtable = FrmMdiMain.Database.GetDataTable(pdsql);
                if (Pdtable.Rows.Count > 0)
                {
                    if (Pdtable.Rows[0]["dept_id"].ToString() != DeptID.ToString())
                    {
                        //会诊病人
                        string hzsq = "select * from ZY_CONSULTATION  a left join ZY_CON_MX b on a.ID=b.P_ID where INPATIENT_ID='" + BinID + "' and FINISH_FLAG!=3 and  CON_DEPT=" + DeptID.ToString() + "";
                        DataTable tmtb = FrmMdiMain.Database.GetDataTable(hzsq);
                        if (tmtb.Rows.Count <= 0)
                        {
                            return;
                        }

                    }
                }
                #endregion
            }
            //add by zouchihua 2012-5-30  手术室录入医嘱是否控制只有开处方权限医生才可以录入 0=否 1=是
            if ((mz && cfg6047.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "临时医嘱")
                || (_tszl && cfg6049.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "临时医嘱"))
            {
                if (doctor == null || doctor.CF_Right == false)
                {
                    MessageBox.Show("你没有开处方的权限", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
            }
            //Add By tany 2010-11-16
            if (!mz && !_hs && !hs && !_tszl)
            {
                if (doctor.CF_Right == false)
                {
                    MessageBox.Show("你没有开处方的权限", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
            }
            Blbj = 1;//modify by zouchihua  2011-09-13 补录标记改为1
            DtpbeginDate.MaxDate = DateManager.ServerDateTimeByDBType(InstanceForm._database);
            this.MaxdTime = DtpbeginDate.MaxDate;
            this.statusBar1.Text = hint[1].Trim();
            this.label1.Visible = true;
            this.DtpbeginDate.Visible = true;
            //补录时间控制(默认24小时之内)
            string cfgStr = (new SystemCfg(6004, InstanceForm._database)).Config;
            int cfg = 24;
            if (cfgStr != "")
            {
                try
                {
                    cfg = Convert.ToInt16(cfgStr);
                }
                catch (System.InvalidCastException err)
                {
                    err.ToString();
                    cfg = 24;
                }
            }
            DtpbeginDate.MinDate = MaxdTime.AddHours(-cfg);
            try
            {
                //Modify by Tany 2010-09-29 补录时间不能小于入院时间
                if (DtpbeginDate.MinDate < Convert.ToDateTime(patientInfo1.lbIn_Date.Text))
                {
                    //if (DtpbeginDate.MinDate <= Convert.ToDateTime(patientInfo1.lbIn_Date.Text))
                    try
                    {
                        DateTime dt = Convert.ToDateTime(Convert.ToDateTime(patientInfo1.lbIn_Date.Text.Trim())).AddMinutes(1);
                        DtpbeginDate.MinDate = dt;
                        // DateTime dt1 = Convert.ToDateTime(patientInfo1.lbIn_Date.Text.Trim() + " " + DtpbeginDate.MaxDate.ToLongTimeString());
                    }
                    catch
                    {

                        DtpbeginDate.MinDate = Convert.ToDateTime(Convert.ToDateTime(patientInfo1.lbIn_Date.Text.Trim()).ToShortDateString() + " " + DtpbeginDate.MaxDate.ToLongTimeString());
                    }
                }
                // DtpbeginDate.MinDate = Convert.ToDateTime(patientInfo1.lbIn_Date.Text.Trim() + " " + DateManager.ServerDateTimeByDBType(InstanceForm._database).ToLongTimeString());
                //Add by zouchihua 2012-02-09 判断补录日期不能小于上次转科日期 2013-8-20 改为医嘱的日期
                string mysql = "select * from ZY_TRANSFER_DEPT a join ZY_ORDERRECORD b on a.order_id=b.order_id  where  a.FINISH_BIT=1 and a.INPATIENT_ID='" + new Guid(STAG.Substring(0, 40)) + "' and a.BABY_ID=" + Convert.ToInt64(STAG.Substring(40, 10)) + " and  cancel_bit=0 order by TRANSFER_DATE desc";
                DataTable TransTb = FrmMdiMain.Database.GetDataTable(mysql);
                if (TransTb != null && TransTb.Rows.Count > 0)
                {
                    if (DtpbeginDate.MinDate <= Convert.ToDateTime(TransTb.Rows[0]["ORDER_BDATE"].ToString()))
                        DtpbeginDate.MinDate = Convert.ToDateTime(TransTb.Rows[0]["ORDER_BDATE"].ToString());

                }
                this.MindTime = DtpbeginDate.MinDate;
                this.DtpbeginDate.Value = DtpbeginDate.MaxDate;//补录日期默认为当前日期；
                this.DtpbeginDate.Enabled = true;
                this.statusBar1.Text = hint[21].Trim();

                checkPage();
                if (pageType == 0)
                {
                    cfgStr = (new SystemCfg(6009, InstanceForm._database)).Config;
                    if (cfgStr == "是")
                    {
                        //ChangeGroupNum(this.dataGrid_LongOrder);
                    }
                    else
                    {
                        this.statusBar1.Text = hint[19].Trim();
                        MessageBox.Show("不能补录长期医嘱！\n如果要补录临时医嘱，请到'临时医嘱'录入界面。", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        this.statusBar1.Text = hint[18].Trim();
                        return;
                    }
                }
                else
                {
                    //ChangeGroupNum(this.dataGrid_TempOrder);
                }

                if (blsj != null && blsj < MaxdTime && blsj > MindTime)
                {
                    DtpbeginDate.Value = blsj;
                }
                //this.DtpbeginDate.Value = DtpbeginDate.MaxDate;//补录日期默认为当前日期；

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            DtpbeginDate.Focus();

        }
        private void DtpbeginDate_KeyUp(object sender, System.Windows.Forms.KeyEventArgs e)
        {
            if (Convert.ToInt32(e.KeyData) == 13)
            {
                if (this.DtpbeginDate.Value > MaxdTime)
                {
                    this.DtpbeginDate.Value = MaxdTime;
                }
                if (this.DtpbeginDate.Value < MindTime)
                {
                    this.DtpbeginDate.Value = MindTime;
                }
                if (pageType == 0)
                {
                    ChangeGroupNum(this.dataGrid_LongOrder);
                    getDateTime(this.dataGrid_LongOrder, this.DtpbeginDate.Value);
                }
                else
                {
                    ChangeGroupNum(this.dataGrid_TempOrder);
                    getDateTime(this.dataGrid_TempOrder, this.DtpbeginDate.Value);
                }
                this.DtpbeginDate.Visible = false;
                this.label1.Visible = false;

                //Modify By tany 2011-08-05
                blsj = DtpbeginDate.Value;

                //Modify By jchl 2014-08-05
                Blbj = 0;
            }

        }
        #endregion

        #region 合并医嘱
        private void getTogether(DataGridEx datagrid1)
        {
            //首先得到基本的网格信息
            //			DataTable myTb=(DataTable)datagrid1.DataSource;
            //			int nrow=datagrid1.CurrentCell.RowNumber;
            //			int ncol=datagrid1.CurrentCell.ColumnNumber;
            //			if(nrow>0 )
            //			{
            //				//药品医嘱
            //				if(( myTb.Rows[nrow]["开始时间"].ToString()!="" && myTb.Rows[nrow]["医嘱内容"].ToString()!="") && myTb.Rows[nrow]["status_flag"].ToString()=="0" && myTb.Rows[nrow-1]["status_flag"].ToString()=="0")
            //				{
            //					if(MessageBox.Show(this, "您确认这条医嘱与上条医嘱同组吗?", "同组", MessageBoxButtons.YesNo)==DialogResult.No  )
            //					{
            //						return;
            //					}
            //					myTb.Rows[nrow]["开始时间"]="";
            //					myTb.Rows[nrow]["用法"]="";
            //					myTb.Rows[nrow]["频率"]=""; 
            //				}
            //			}
        }
        #endregion

        #region 录说明性医嘱
        private void btnExplain_Click(object sender, System.EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            if (this.lg == 0 || this.lg == 4) return;
            this.GrdSel.DataSource = null;
            this.GrdSel.Visible = false;
            checkPage();
            if (btnExplain.Text == "说明F7")
            {
                if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                {
                    setExplain(this.dataGrid_LongOrder);
                    return;
                }
                else
                {
                    setExplain(this.dataGrid_TempOrder);
                    return;
                }
            }
            else       //账单中清空按钮功能
            {
                if (tc.SelectedTab.Title.Trim() == sTab0)
                {
                    this.InitGrd_LongZD();
                    return;
                }
                else
                {
                    this.InitGrd_TempZD();
                    return;
                }
            }
        }
        private void setExplain(DataGridEx myDataGrid1)
        {
            //首先得到基本的网格信息
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = 5;
            if (CanEnterData(myTb, nrow) == false) return;
            this.statusBar1.Text = hint[5].Trim();
            this.txtExplain.Left = myDataGrid1.GetCellBounds(nrow, ncol).Left;
            this.txtExplain.Top = this.panel3.Top + myDataGrid1.GetCellBounds(nrow, ncol).Top + myDataGrid1.Top;
            this.txtExplain.Visible = true;
            this.txtExplain.Focus();
        }
        private void txtExplain_KeyUp(object sender, System.Windows.Forms.KeyEventArgs e)
        {
            if (pageType == 0)
            {
                if (Convert.ToInt32(e.KeyData) == 13 && this.txtExplain.Text.Trim() != "")
                {
                    insertExplain(this.dataGrid_LongOrder);

                }
                if (Convert.ToInt32(e.KeyData) == 27)
                {
                    this.dataGrid_LongOrder.Focus();
                    this.txtExplain.Text = "";
                    btExn.Text = "选择(&S)";
                    this.txtExplain.Visible = false;
                }
            }
            else
            {
                if (Convert.ToInt32(e.KeyData) == 13 && this.txtExplain.Text.Trim() != "")
                {
                    insertExplain(this.dataGrid_TempOrder);

                }
                if (Convert.ToInt32(e.KeyData) == 27)
                {
                    this.dataGrid_TempOrder.Focus();
                    this.txtExplain.Text = "";
                    btExn.Text = "选择(&S)";
                    this.txtExplain.Visible = false;
                }
            }
        }
        private void txtExplain_Leave(object sender, System.EventArgs e)
        {
            this.txtExplain.Visible = false;
        }

        private void insertExplain(DataGridEx myDataGrid1)
        {
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            myTb.Rows[nrow]["医嘱内容"] = this.txtExplain.Text;
            myTb.Rows[nrow]["status_flag"] = myTb.Rows[nrow]["status_flag"].ToString() == "9" ? 9 : 0;
            myTb.Rows[nrow]["类型"] = "7-说明"; //得到输入了数字对应的中文名称
            //医嘱内容对应的医嘱ID
            myTb.Rows[nrow]["HOItem_ID"] = -1;
            myTb.Rows[nrow]["xmly"] = 2;
            //剂量,单位，用法，频率，首日执行次数，执行科室
            myTb.Rows[nrow]["剂量"] = 0;
            myTb.Rows[nrow]["单位"] = "";
            myTb.Rows[nrow]["规格"] = "";
            myTb.Rows[nrow]["执行科室"] = this.DeptID;
            //默认为长嘱
            myTb.Rows[nrow]["用法"] = this.default_usage;
            myTb.Rows[nrow]["频率"] = "";
            myTb.Rows[nrow]["ID"] = Guid.Empty;
            myDataGrid1.Focus();
            this.txtExplain.Text = "";
            btExn.Text = "选择(&S)";
            this.txtExplain.Visible = false;
        }

        #endregion

        #region 选择说明性医嘱
        private void btExn_Click(object sender, System.EventArgs e)
        {
            if (btExn.Text == "选择(&S)")
            {
                FrmExplain fe = new FrmExplain();
                fe.page = pageType;
                fe.deptID = this.DeptID;
                fe.BinID = this.BinID;
                fe.ShowDialog();
                this.txtExplain.Text = fe.Explain;
                this.default_usage = fe.default_usage;
                this.txtExplain.Focus();
                if (fe.Explain.Trim() != "") btExn.Text = "确定(&O)";
            }
            else
            {
                if (pageType == 0)
                {
                    insertExplain(this.dataGrid_LongOrder);
                }
                else
                {
                    insertExplain(this.dataGrid_TempOrder);
                }
                btExn.Text = "选择(&S)";
            }
        }
        #endregion

        #region 医嘱召回
        private void btnOrderRecall_Click(object sender, System.EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //add by zouchihua 2012-5-30  手术室录入医嘱是否控制只有开处方权限医生才可以录入 0=否 1=是
            if ((mz && cfg6047.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "临时医嘱")
                || (_tszl && cfg6049.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "临时医嘱"))
            {
                if (doctor == null || doctor.CF_Right == false)
                {
                    MessageBox.Show("你没有开处方的权限", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
            }
            //Add By Tany 2010-11-16
            if (!mz && !_hs && !hs && !_tszl)
            {
                if (doctor.CF_Right == false)
                {
                    MessageBox.Show("你没有开处方的权限", "提示", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    return;
                }
            }
            checkPage();
            if (pageType == 0) orderRecall(this.dataGrid_LongOrder, 0);
            //			else orderRecall(this.dataGrid_TempOrder,1); 
        }
        private void orderRecall(DataGridEx myDataGrid1, int tab)
        {
            this.statusBar1.Text = hint[2].Trim();
            int i, NullRowCount = 0;
            //首先得到基本的网格信息			
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            if (myTb.Rows[nrow]["status_flag"].ToString() == "3" || myTb.Rows[nrow]["status_flag"].ToString() == "4" || myTb.Rows[nrow]["status_flag"].ToString() == "5")
            {
                //取得需要召回的医嘱
                int groupId = Int32.Parse(myTb.Rows[nrow]["嘱号"].ToString());
                DataTable myRecallTb = myQuery.GetOrdersRecall(tab, this.BinID, groupId, Guid.Empty, 0);

                //定位行于最后一组医嘱以下的第二行
                int tbCount = myTb.Rows.Count - 1;
                for (i = myTb.Rows.Count - 1; i >= 0; i--)
                {
                    if (myTb.Rows[i]["医嘱内容"].ToString() == "")
                    {
                        //继续
                        NullRowCount++;
                    }
                    else
                    {
                        //跳出
                        break;
                    }
                }
                for (i = NullRowCount; i >= 1; i--) myTb.Rows.RemoveAt(tbCount--);

                for (i = 0; i <= myRecallTb.Rows.Count - 1; i++)
                {

                    #region//武汉中心医院(Modify by jchl)
                    /* 应该写在下面
                    if (this.fylb != "" && this.fylb != "自费")
                    {
                        if (!myTb.Columns.Contains("zfbl"))
                        {
                            myTb.Columns.Add("zfbl", typeof(System.Decimal));
                        }
                        int type = 0;
                        if (this.fylb.Contains("公费"))
                            type = 1;
                        else
                            type = 2;
                        decimal zfbl = 1;
                        if (!myRecallTb.Rows[i]["NTYPE"].ToString().Equals("7"))
                        {
                            try
                            {
                                //2,001064725,1276,2,特殊视力检查(点视力表）,
                                if (!myQuery.GetGfxx(type, this.patientInfo1.lbID.Text.Trim(), myRecallTb.Rows[i]["HOITEM_ID"].ToString(),
                                     myRecallTb.Rows[i]["xmly"].ToString(), myRecallTb.Rows[i]["医嘱内容"].ToString(), this.fylb, ref zfbl))
                                {
                                    this.GrdSel.Visible = false;
                                    myTb.Rows[nrow]["医嘱内容"] = "";
                                    //txtCol.TextBox.Text = "";
                                    myDataGrid1.Focus();
                                    myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                    return;
                                }
                                else
                                {
                                    myTb.Rows[nrow]["zfbl"] = zfbl;
                                }
                            }
                            catch (Exception ex)//Modify By Tany 2015-03-18 加上捕获错误并返回，不继续操作
                            {
                                MessageBox.Show(ex.Message);
                                this.GrdSel.Visible = false;
                                myTb.Rows[nrow]["医嘱内容"] = "";
                                //txtCol.TextBox.Text = "";
                                myDataGrid1.Focus();
                                myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                return;
                            }
                        }
                        else
                        {
                            myTb.Rows[nrow]["zfbl"] = 1;
                        }
                    }
                    */
                    #endregion

                    //ValideMedOrder();myRecallTb.Rows[i]["xmly"].ToString(),myRecallTb.Rows[i]["HOITEM_ID"].ToString()
                    string strMsg = "";
                    bool bValideMed = ValideMedOrder(myRecallTb.Rows[i]["xmly"].ToString(), myRecallTb.Rows[i]["HOITEM_ID"].ToString(), myRecallTb.Rows[i]["医嘱内容"].ToString(), out strMsg);//myRecallTb.Rows[i]["HOITEM_ID"].ToString()//myRecallTb.Rows[i]["xmly"].ToString()

                    if (!bValideMed)
                    {
                        return;
                    }


                    DataRow myRow = myTb.NewRow();

                    //Modify By Tany 2015-06-18 应该写在这里
                    #region//武汉中心医院(Modify by jchl)
                    if (this.fylb != "" && this.fylb != "自费")
                    {
                        if (!myTb.Columns.Contains("zfbl"))
                        {
                            myTb.Columns.Add("zfbl", typeof(System.Decimal));
                        }
                        int type = 0;
                        if (this.fylb.Contains("公费"))
                            type = 1;
                        else
                            type = 2;
                        decimal zfbl = 1;
                        if (!myRecallTb.Rows[i]["NTYPE"].ToString().Equals("7"))
                        {
                            try
                            {
                                //2,001064725,1276,2,特殊视力检查(点视力表）,
                                if (!myQuery.GetGfxx(type, this.patientInfo1.lbID.Text.Trim(), myRecallTb.Rows[i]["HOITEM_ID"].ToString(),
                                     myRecallTb.Rows[i]["xmly"].ToString(), myRecallTb.Rows[i]["医嘱内容"].ToString(), this.fylb, ref zfbl))
                                {
                                    return;
                                }
                                else
                                {
                                    myRow["zfbl"] = zfbl;
                                }
                            }
                            catch (Exception ex)//Modify By Tany 2015-03-18 加上捕获错误并返回，不继续操作
                            {
                                MessageBox.Show(ex.Message);
                                return;
                            }
                        }
                        else
                        {
                            myRow["zfbl"] = 1;
                        }
                    }
                    #endregion

                    if (i == 0)
                    {
                        myRow["开始时间"] = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                        myRow["用法"] = myRecallTb.Rows[i]["用法"];
                        myRow["频率"] = myRecallTb.Rows[i]["频率"];
                        myRow["剂数"] = myRecallTb.Rows[i]["付数"];
                        myRow["首日执行次数"] = myRecallTb.Rows[i]["首日执行次数"];
                        //						myRow["嘱号"]=0;
                    }

                    myRow["类型"] = myRecallTb.Rows[i]["类型"];
                    myRow["医嘱内容"] = myRecallTb.Rows[i]["医嘱内容"];
                    myRow["剂量"] = myRecallTb.Rows[i]["剂量"];
                    myRow["单位"] = myRecallTb.Rows[i]["单位"];
                    myRow["dwlx"] = myRecallTb.Rows[i]["dwlx"];
                    myRow["规格"] = myRecallTb.Rows[i]["规格"];
                    myRow["剂数"] = myRecallTb.Rows[i]["付数"];
                    myRow["xmly"] = myRecallTb.Rows[i]["xmly"];
                    ////add by zouchihua 2012-6-21 增加总量
                    //myRow["总量"] = myRecallTb.Rows[i]["总量"];
                    //myRow["总单位"] = myRecallTb.Rows[i]["总单位"];
                    //myRow["天数"] = myRecallTb.Rows[i]["天数"];

                    myRow["status_flag"] = 0;
                    myRow["执行科室"] = myRecallTb.Rows[i]["执行科室"];
                    myRow["ID"] = Guid.Empty;
                    myRow["ps_flag"] = -1;
                    myRow["ps_orderid"] = Guid.Empty;

                    if (myQuery.GetyzTypeCode(myRecallTb.Rows[i]["类型"].ToString()) == "1" || myQuery.GetyzTypeCode(myRecallTb.Rows[i]["类型"].ToString()) == "2" || myQuery.GetyzTypeCode(myRecallTb.Rows[i]["类型"].ToString()) == "3")
                    {


                        #region//Add by zouchihua 是否启用要比控制 2013-5-2
                        string ts = GetYPkz(FrmMdiMain.CurrentDept.DeptId, 1);
                        if (ts.Trim() != "")
                        {
                            MessageBox.Show(ts, "温馨提示");
                            return;
                        }
                        //add by zouchihua 2013-7-18 药品科室限制
                        DataTable tbksxz = FrmMdiMain.Database.GetDataTable("select * from jc_ypksxz  where  delete_bit=0 and dept_id=" + InstanceForm._currentDept.DeptId + " and cjid=" + myRecallTb.Rows[i]["HOITEM_ID"].ToString() + "");
                        if (tbksxz.Rows.Count > 0)
                        {
                            string Jbkz = "对不起，药品【" + myRecallTb.Rows[i]["医嘱内容"].ToString() + "】在本科室受限制，请联系管理员";
                            FrmMessageBox.Show(Jbkz + "\n", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            return;
                        }
                        #endregion
                        //add by zouchihua 2012-5-25  中草药权限控制
                        if (cfg6046.Config.Trim() == "1" && myQuery.GetyzTypeCode(myRecallTb.Rows[i]["类型"].ToString()) == "3" && doctor.ZY_Right == false)
                        {
                            FrmMessageBox.Show("【" + myRecallTb.Rows[i]["医嘱内容"].ToString().Trim() + "】，此药品为中药，受级别限制，不允许你开此药品！\n", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            //Jbkz = "【" + myRecallTb.Rows[i]["医嘱内容"].ToString().Trim() + "】，此药品为中药，受级别限制，不允许你开此药品！\n";
                            //continue;
                            return;
                        }
                        //add by zouchihua 2012-01-13 模板中加级别控制
                        #region 判断本人是否可以开该药品医嘱（药品分级控制,临时医嘱不受限制）
                        if (!mz && !_hs && !hs && !_tszl)//&& ((isother==0 &&tc.SelectedTab.Title.Trim() == "长期医嘱") || (isother==1&&tc.SelectedTab.Title.Trim() == "临时医嘱")))//非手术麻醉站和护士站
                        {
                            DataTable _dt = InstanceForm._database.GetDataTable("select * from vi_yp_ypcd where cjid = " + myRecallTb.Rows[i]["HOitem_ID"] + " and (mzyp != 0 or djyp != 0 or JSYP != 0)");
                            DataTable _dt1 = InstanceForm._database.GetDataTable("select * from JC_ROLE_DOCTOR a left join JC_DOCTOR_TYPE b on a.YS_TYPEID=b.TYPE_ID where employee_id = '" + YS_ID + "'");

                            if (_dt.Rows.Count != 0 && _dt1.Rows.Count != 0)
                            {
                                if (doctor.MZ_Right != true || doctor.DM_Right != true)
                                {
                                    if (doctor.MZ_Right == false && Convert.ToInt32(_dt.Rows[0]["mzyp"]) != Convert.ToInt32(_dt1.Rows[0]["mz_right"]))
                                    {
                                        FrmMessageBox.Show("此药品为麻醉药品，受级别限制，不允许你开此药品！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                        //Jbkz = "【" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + "】，此药品为麻醉药品，受级别限制，不允许你开此药品！\n";
                                        return;
                                    }
                                    if (doctor.DM_Right == false && Convert.ToInt32(_dt.Rows[0]["djyp"]) != Convert.ToInt32(_dt1.Rows[0]["dm_right"]))
                                    {
                                        FrmMessageBox.Show("此药品为毒剧药品，受级别限制，不允许你开此药品！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                        //Jbkz = "【" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + "】，此药品为毒剧药品，受级别限制，不允许你开此药品！\n";
                                        return;
                                    }
                                }


                            }
                            _dt = InstanceForm._database.GetDataTable("select * from vi_yp_ypcd where cjid = " + myRecallTb.Rows[i]["HOitem_ID"] + " ");
                            if (_dt.Rows.Count != 0 && _dt1.Rows.Count != 0)
                            {
                                //Modify by Zouchihua 增加药品分级控制的参数
                                if (new SystemCfg(19004).Config == "1")
                                {
                                    //Modify by zouchihua doctor.TypeID 改为zcjb 2012-10-10
                                    long TypeID = long.Parse(_dt1.Rows[0]["YS_TYPEID"].ToString());
                                    if (TypeID > Convert.ToInt64(_dt.Rows[0]["CFJB"]))//(pageType == 0 && doctor.TypeID > Convert.ToInt64(_dt.Rows[0]["CFJB"]))
                                    {
                                        //Modify by jchl
                                        //FrmMessageBox.Show("此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                        //return;
                                        if (!IsCanMadeHighTypeHosItem())
                                        {
                                            return;
                                        }
                                        // Jbkz = "【" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + "】，此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！\n";

                                        //if (FrmMessageBox.Show("此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！是否继续？", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button2) == DialogResult.No)
                                        //{
                                        //    return;
                                        //}
                                    }
                                }
                            }
                            //add by yaokx 2014-05-13
                            if ((new SystemCfg(6093, InstanceForm._database)).Config == "1" && _dt.Rows.Count > 0)
                            {
                                if (Convert.ToBoolean(_dt.Rows[0]["mzyp"].ToString()) == true || Convert.ToBoolean(_dt.Rows[0]["djyp"].ToString()) == true || Convert.ToBoolean(_dt.Rows[0]["JSYP"].ToString()) == true)
                                {
                                    FrmMessageBox.Show("毒麻精神类药品必须凭当日处方取药，过期处方无效且不能取药！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                }
                            }
                        }
                        #endregion



                        myRow["HOitem_ID"] = myRecallTb.Rows[i]["HOitem_ID"];

                        #region 设置执行科室
                        DataView dv = new DataView();
                        dv = SelectDataView;
                        dv.RowFilter = "xmly=1 and order_id=" + myRow["HOitem_ID"].ToString();

                        if (myRow["HOitem_ID"].ToString().Trim() != "" && myRow["HOitem_ID"].ToString().Trim() != "-1")
                        {
                            if (dv.Count > 0)
                            {
                                if (myRow["执行科室"].ToString() == "-1")
                                {
                                    if (MessageBox.Show("“" + dv[0]["医嘱内容"].ToString().Trim() + "”是否作为自备药？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
                                    {
                                        myRow["医嘱内容"] = dv[0]["医嘱内容"];
                                        myRow["执行科室"] = dv[0]["default_dept"];
                                    }
                                }
                                else
                                {
                                    myRow["执行科室"] = dv[0]["default_dept"];
                                }
                            }
                            else
                            {
                                if (myRow["执行科室"].ToString() != "-1")
                                {
                                    MessageBox.Show("请重新输入“" + myRow["医嘱内容"].ToString().Trim() + "”，因为该型号药品被药房停用。", "警告", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                    return;
                                }
                            }
                        }
                        dv = null;
                        #endregion
                    }
                    else
                    {
                        myRow["HOitem_ID"] = myRecallTb.Rows[i]["HOitem_ID"];
                    }

                    myTb.Rows.Add(myRow);
                }

                myTb.Rows.Add(myTb.NewRow());
                myDataGrid1.DataSource = myTb.Copy();
                //为防止失去焦点
                DataGridCell myCell = new DataGridCell(nrow, ncol);
                myDataGrid1.CurrentCell = myCell;
                myDataGrid1.CurrentRowIndex = myTb.Rows.Count;
            }
        }
        #endregion

        #region 键盘事件
        private void FrmYZGL_KeyUp(object sender, System.Windows.Forms.KeyEventArgs e)
        {
            if (this.lg == 4) return;
            shortcut(e.KeyData);

        }
        private void shortcut(Keys keyData)
        {
            switch (keyData)
            {
                case (Keys)Shortcut.CtrlD:
                    JugByselectdel(null, null);
                    break;
                case (Keys)Shortcut.CtrlH:
                    SelectYZ(null, null);
                    break;
                //新嘱
                case Keys.F3:
                    {
                        Blbj = 0;
                        btnNewGroup_Click(null, null);
                        break;
                    }
                //外来药品录入
                //case Shortcut.a:
                //    this.button1_Click_1(null,null);
                //    break;
                //召回
                case Keys.F4:
                    {
                        checkPage();
                        if (pageType == 0) orderRecall(this.dataGrid_LongOrder, 0);
                        else orderRecall(this.dataGrid_TempOrder, 1);
                        break;
                    }
                //停嘱
                case Keys.F6:
                    {
                        StopOrders(this.dataGrid_LongOrder);
                        break;
                    }
                //说明
                case Keys.F7:
                    {
                        btnExplain_Click(null, null);
                        break;
                    }
                //自备
                case Keys.F8:
                    {
                        checkPage();
                        if (pageType == 0)
                        {
                            InsertSelfMed(this.dataGrid_LongOrder, 0, 0);
                            this.dataGrid_LongOrder.Refresh();
                        }
                        else
                        {
                            InsertSelfMed(this.dataGrid_TempOrder, 0, 0);
                            this.dataGrid_TempOrder.Refresh();
                        }

                        break;
                    }
                //发送
                case Keys.F9:
                    {
                        this.btSend.Focus();
                        btSend_Click(null, null);
                        break;
                    }
                //保存
                case Keys.F10:
                    {
                        this.btSave.Focus();
                        btSave_Click(null, null);
                        break;
                    }
                case Keys.F11:
                    {
                        if (inFlag == 1)
                        {
                            inFlag = 0;
                            this.lbInFlag.Text = "拼音码(F11)";
                        }
                        else
                        {
                            inFlag++;
                            if (inFlag == 1) this.lbInFlag.Text = "五笔码(F11)";
                            else this.lbInFlag.Text = "数字码(F11)";
                        }
                        break;
                    }
                case Keys.F12://补录
                    {

                        btnSupply_Click(null, null);
                        break;
                    }
                case Keys.F2:
                    {
                        if (this.chkAddi.Checked == true) this.chkAddi.Checked = false;
                        else this.chkAddi.Checked = true;
                        break;
                    }
                case Keys.F5://有效长嘱，刷新
                    {
                        checkPage();
                        if (pageType == 1) btRefur_Click(null, null);
                        else
                        {
                            if (YXCZ == false) btAVA_Click(null, null);
                            else btRefur_Click(null, null);
                        }
                        break;
                    }
                case Keys.F1://长临嘱界面切换
                    {
                        //if (pageType == 0)
                        //{
                        //    //选择临嘱界面(如果是手术麻醉,则选择短账界面)
                        //    SelTabPage(1);
                        //    pageType = 1;
                        //    return;
                        //}
                        //if (!mz)
                        //{
                        //    if (pageType == 1)
                        //    {
                        //        //选择长账界面
                        //        SelTabPage(2);
                        //        pageType = 2;
                        //        return;
                        //    }
                        //}
                        //else
                        //{
                        //    if (pageType == 1)
                        //    {
                        //        //选择短嘱界面
                        //        SelTabPage(0);
                        //        pageType = 0;
                        //        return;
                        //    }
                        //}
                        //if (pageType == 2)
                        //{
                        //    //选择短账界面
                        //    SelTabPage(3);
                        //    pageType = 3;
                        //    return;
                        //}
                        //if (pageType == 3)
                        //{
                        //    //选择长嘱界面
                        //    SelTabPage(0);
                        //    pageType = 0;
                        //    return;
                        //}
                        break;
                    }
                case Keys.Escape:
                    {
                        Blbj = 0;
                        if (this.DtpbeginDate.Visible == true)
                        {
                            this.label1.Visible = false;
                            this.DtpbeginDate.Visible = false;

                        }
                        break;
                    }
            }

        }
        #endregion

        #region 医嘱模板控制

        #region 保存模板
        private void btnSave_Click(object sender, System.EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;

            if (this.txtModelName.Text.Trim() == "")
            {
                MessageBox.Show("模板名不能为空，保存失败", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            checkPage();
            if (tc.SelectedTab.Title.Trim() == "长期医嘱")
            {
                if (jlpl(this.dataGrid_LongOrder, 0) == false) return;
                SaveMoDel(this.dataGrid_LongOrder);
                return;
            }
            if (tc.SelectedTab.Title.Trim() == "临时医嘱")
            {
                if (jlpl(this.dataGrid_TempOrder, 1) == false) return;
                SaveMoDel(this.dataGrid_TempOrder);
                return;
            }
            if (tc.SelectedTab.Title.Trim() == sTab0)
            {
                if (jlpl(this.dataGrid_LongZD, 2) == false) return;
                SaveMoDel(this.dataGrid_LongZD);
                return;
            }
            if (tc.SelectedTab.Title.Trim() == sTab1)
            {
                if (jlpl(this.dataGrid_TempZD, 3) == false) return;
                SaveMoDel(this.dataGrid_TempZD);
                return;
            }
            this.txtModelName.Text = "";
            this.txtContent.Text = "";
            this.tabControl2.SelectedIndex = 2;
        }
        #region（20041027新）保存模板，支持多组医嘱
        private void SaveMoDel_old(DataGridEx myDataGrid1)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //变量定义

            int ad = 2;//属本人
            if (rdDept.Checked == true) ad = 1;//属科室
            else if (rdAll.Checked == true) ad = 0;//属本院

            int i;
            long Order_Num = 0;//医嘱模板的医嘱号为0
            int retn = 0;

            //得到网格的数据
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            if (myTb.Rows.Count == 0)
            {
                MessageBox.Show("无医嘱内容，不能保存模板", "提示", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                return;
            }

            //首先得到基本的网格信息
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;

            if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim() == "") return;

            //构成SQL语句
            string sSql = "";
            DataTable dt = new DataTable();
            DataTable dt_zd = new DataTable();

            int BeginNow = nrow, EndNow = nrow;
            string MODEL_NAME = this.txtModelName.Text.Trim();
            string Content = this.txtContent.Text.Trim();

            if (tc.SelectedTab.Title.Trim() == "长期医嘱" || tc.SelectedTab.Title.Trim() == "临时医嘱")
            {
                string ssql1 = "select * from zy_orderrecord_model where delete_bit=0 and operator=" + this.YS_ID.ToString() + " and MODEL_NAME='" + MODEL_NAME.Trim() + "'";
                dt = InstanceForm._database.GetDataTable(ssql1);
            }
            else
            {
                string ssql2 = "select ID from ZY_ORDERMODEL where MODEL_NAME='" + MODEL_NAME.Trim() + "' and ward_id='" + InstanceForm._currentDept.WardId + "'";
                dt_zd = InstanceForm._database.GetDataTable(ssql2);
            }
            if (dt.Rows.Count > 0 || dt_zd.Rows.Count > 0)
            {
                this.State = 1;
                if (MessageBox.Show("该模板已经存在，是否替换？", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Question) == DialogResult.Cancel) return;
            }

            #region 保存长期账单和临时账单模版
            if (tc.SelectedTab.Title.Trim() == sTab0 || tc.SelectedTab.Title.Trim() == sTab1)
            {
                #region 保存模板主表ZY_ORDERMODEL
                try
                {
                    if (State == 1)
                    {
                        //覆盖模板主表
                        sSql = "UPDATE ZY_ORDERMODEL SET " +
                            "OPER_UPDATE=" + InstanceForm._currentUser.EmployeeId + "," +
                            "UPDATE_DATE=getdate()," +
                            "CANCEL_BIT=0 " +
                            "WHERE ID=" + Convert.ToInt32(dt_zd.Rows[0]["ID"].ToString()) + "";

                        retn = InstanceForm._database.DoCommand(sSql);

                        //删除模板子表
                        if (retn > 0)
                        {
                            sSql = "DELETE FROM ZY_ORDERMODEL_DTL WHERE ID=" + Convert.ToInt32(dt_zd.Rows[0]["ID"].ToString()) + "";
                            InstanceForm._database.DoCommand(sSql);
                        }
                    }
                    else
                    {
                        //新增模板
                        sSql = "INSERT INTO ZY_ORDERMODEL(" +
                            "MODEL_NAME,LEVEL,WARD_ID,DEPT_ID,OPERATOR,BOOK_DATE,OPER_UPDATE,UPDATE_DATE,MNGTYPE,CANCEL_BIT) " +
                            "VALUES(" +
                            "'" + MODEL_NAME.Trim() + "'," + ad.ToString() + ",'" + InstanceForm._currentDept.WardId + "'," +
                            "" + this.DeptID + "," + InstanceForm._currentUser.EmployeeId + ",getdate()," +
                            "" + InstanceForm._currentUser.EmployeeId + ",getdate()," +
                            "" + GetMngType(tc.SelectedTab.Title.Trim()) + ",0)";

                        retn = InstanceForm._database.DoCommand(sSql);

                        if (retn > 0)
                        {
                            sSql = "select ID from ZY_ORDERMODEL where MODEL_NAME='" + MODEL_NAME.Trim() + "' and ward_id='" + InstanceForm._currentDept.WardId + "'";
                            DataTable tempTab = InstanceForm._database.GetDataTable(sSql);
                            ModelID = Convert.ToInt32(Convertor.IsNull(tempTab.Rows[0]["ID"].ToString(), "0"));
                        }
                    }
                }
                catch (Exception err)
                {
                    MessageBox.Show("保存失败\n" + err.ToString());
                    return;
                }
                #endregion

                #region 循环保存模板子表ZY_ORDERMODEL_DTL
                try
                {
                    for (i = 0; i <= myTb.Rows.Count - 1; i++)
                    {
                        if (myTb.Rows[i]["医嘱内容"].ToString().Trim() != "")
                        {
                            //非药品医嘱
                            //							if(char.IsNumber(myTb.Rows[i]["HOItem_ID"].ToString(),0)==true)
                            if (Convertor.IsNull(myTb.Rows[i]["HOItem_ID"].ToString(), "0") == "0")
                            {
                                //构成SQL语句,并执行
                                int j = 1;
                                if (myTb.Rows[i]["首次"].ToString() != "")
                                {
                                    j = Convert.ToInt32(myTb.Rows[i]["首次"]);
                                }

                                sSql = "INSERT INTO ZY_ORDERMODEL_DTL(" +
                                    "ID,GROUP_ID,NTYPE,HOITEM_ID,ORDER_CONTEXT,NUM,UNIT," +
                                    "FIRST_TIMES,ORDER_USAGE,FREQUENCY,EXEC_DEPT) " +
                                    "VALUES(" +
                                    "" + ModelID.ToString() + "," + myTb.Rows[i]["嘱号"] + "," + myTb.Rows[i]["类型"].ToString() + "," +
                                    "" + Convertor.IsNull(myTb.Rows[i]["HOItem_ID"], "0") + ",'" + myTb.Rows[i]["医嘱内容"] + "','" + myTb.Rows[i]["剂量"] + "','" + myTb.Rows[i]["单位"] + "'," +
                                    "" + j + ",'" + myTb.Rows[i]["用法"] + "','" + myTb.Rows[i]["频率"] + "'," + Convertor.IsNull(myTb.Rows[i]["Exec_Dept"], "0") + ")";

                                InstanceForm._database.DoCommand(sSql);
                            }
                        }
                    }
                    InitModel(ad);
                    mbtype = ad.ToString();
                    MessageBox.Show(this, "保存模板成功", "OK", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                }
                catch (Exception err)
                {
                    MessageBox.Show(this, "保存模板失败！（" + err.ToString() + "）", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                #endregion
                myDataGrid1.Focus();
                return;
            }

            #endregion

            #region 确定长期医嘱和临时医嘱要保存为模板的范围
            if (new Guid(myTb.Rows[nrow]["ID"].ToString()) != Guid.Empty)
            {
                for (i = nrow; i <= myTb.Rows.Count - 1; i++)
                {
                    if (i + 1 == myTb.Rows.Count) break;

                    if (myTb.Rows[i + 1]["开始时间"].ToString() == "" && myTb.Rows[i + 1]["医嘱内容"].ToString() != "") EndNow = i + 1;
                    else break;
                }
                for (i = nrow; i >= 0; i--)
                {
                    if (i == 0) break;
                    if (myTb.Rows[i]["开始时间"].ToString() == "") BeginNow = i - 1;
                    else break;
                }
            }
            else
            {
                for (i = nrow; i <= myTb.Rows.Count - 1; i++)
                {
                    if (i + 1 == myTb.Rows.Count) break;

                    if (myTb.Rows[i + 1]["医嘱内容"].ToString() != "") EndNow = i + 1;
                    else break;
                }
                for (i = nrow; i >= 0; i--)
                {
                    if (i == 0) break;
                    if (new Guid(myTb.Rows[i - 1]["ID"].ToString()) == Guid.Empty) BeginNow = i - 1;
                    else break;
                }
            }
            #endregion

            //数据库事务开始
            InstanceForm._database.BeginTransaction();

            try
            {
                //先删除医嘱模板
                InstanceForm._database.DoCommand("update ZY_ORDERRECORD_MODEL set delete_bit=1 where delete_bit=0 and operator=" + this.YS_ID.ToString() + " and MODEL_NAME='" + MODEL_NAME.Trim() + "'");

                #region 循环保存数据,需要插入的数据
                for (i = BeginNow; i <= EndNow; i++)//光标上的一组医嘱
                {
                    //同一组医嘱的用法 频率 开始执行时间 首日执行次数 是取第一条医嘱的
                    //保存时增加模板名字段
                    //非药品医嘱
                    //					if(char.IsNumber(myTb.Rows[i]["HOItem_ID"].ToString(),0)==true)
                    if (myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) != "1" && myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) != "2" && myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) != "3")
                    {
                        //构成SQL语句,并执行,默认婴儿ID为0，医嘱录入人为医生本人，默认病人科室为医生科室,中草药剂量默认为1,操作员为医生本人
                        if (myTb.Rows[i]["开始时间"].ToString() == "")
                        {
                            sSql = "INSERT INTO ZY_ORDERRECORD_MODEL(" +
                                "MODEL_NAME,Group_ID,Dept_ID,nType," +
                                "HOItem_ID,xmly,Order_context,Num,Dosage,Unit,exec_dept," +
                                "level,Operator,book_date,Delete_Bit,content)" +
                                " VALUES('" + MODEL_NAME.Trim() + "'," + Order_Num.ToString() + "," + this.DeptID.ToString() + "," + myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) + "," +
                                "" + myTb.Rows[i]["HOItem_ID"] + "," + myTb.Rows[i]["xmly"] + ",'" + myTb.Rows[i]["医嘱内容"] + "'," + myTb.Rows[i]["剂量"] + "," + "1" + ",'" + myTb.Rows[i]["单位"] + "'," + myTb.Rows[i]["执行科室"] + "," +
                                //								"'" + myTb.Rows[i]["用法"] + "','" + myTb.Rows[i]["频率"] + "',"  +		
                                "" + ad.ToString() + "," + this.YS_ID.ToString() + ",GetDate(),0,'" + Content + "')";
                        }
                        else
                        {
                            sSql = "INSERT INTO ZY_ORDERRECORD_MODEL(" +
                                "MODEL_NAME,Group_ID,Dept_ID,nType," +
                                "HOItem_ID,xmly,Order_context,Num,Dosage,Unit,exec_dept," +
                                "Order_bDate,Order_Usage,frequency," +
                                "level,Operator,book_date,Delete_Bit,content)" +
                                " VALUES('" + MODEL_NAME.Trim() + "'," + Order_Num.ToString() +
                                "," + this.DeptID.ToString() + "," + myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) + "," +
                                "" + myTb.Rows[i]["HOItem_ID"] + "," + myTb.Rows[i]["xmly"] + ",'" + myTb.Rows[i]["医嘱内容"] + "'," + myTb.Rows[i]["剂量"] + "," + "1" + ",'" + myTb.Rows[i]["单位"] + "'," + myTb.Rows[i]["执行科室"] + "," +
                                "'" + myTb.Rows[i]["开始时间"] + "','" + myTb.Rows[i]["用法"] + "','" + myTb.Rows[i]["频率"] + "'," +
                                "" + ad.ToString() + "," + this.YS_ID.ToString() + ",GetDate(),0,'" + Content + "')";
                        }
                    }
                    else//药品医嘱
                    {
                        //构成SQL语句,并执行,默认婴儿ID为0，医嘱录入人为医生本人，默认病人科室为医生科室,中草药剂量默认为1,操作员为医生本人

                        string medType = myQuery.GetyzTypeCode(GetGroupType(myTb, i));
                        string medTypeId = myTb.Rows[i]["HOItem_ID"].ToString(); ;
                        string itemCode = myTb.Rows[i]["ITEM_CODE"].ToString();
                        int srcs = 0;
                        if (myTb.Rows[i]["首日执行次数"].ToString() == "") srcs = 1;
                        else srcs = Convert.ToInt32(myTb.Rows[i]["首日执行次数"].ToString());

                        if (myTb.Rows[i]["嘱号"].ToString() == "0" || myTb.Rows[i]["嘱号"] == System.DBNull.Value)//新开未保存的医嘱
                        {
                            //if (medType == "1") medTypeId = "1";
                            //if (medType == "2") medTypeId = "2";
                            //if (medType == "3") medTypeId = "3";
                            itemCode = myTb.Rows[i]["HOItem_ID"].ToString();
                        }
                        if (myTb.Rows[i]["开始时间"].ToString() == "")
                        {
                            sSql = "INSERT INTO ZY_ORDERRECORD_MODEL(" +
                                "MODEL_NAME,Group_ID,Dept_ID,nType," +
                                "hoitem_id,xmly,ITEM_CODE,Order_context,Num,Dosage,Unit,exec_dept," +
                                //								"First_times,Order_Usage,frequency," +
                                "level,Operator,book_date,Delete_Bit,content,dwlx)" +
                                " VALUES('" + MODEL_NAME.Trim() + "'," +
                                Order_Num.ToString() + "," + this.DeptID.ToString() + "," + myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) + "," +
                                "" + medTypeId + "," + myTb.Rows[i]["xmly"] + ",'" + itemCode + "','" + myTb.Rows[i]["医嘱内容"] + "'," + myTb.Rows[i]["剂量"] + "," + "1" + ",'" + myTb.Rows[i]["单位"] + "'," + myTb.Rows[i]["执行科室"] + "," +
                                //							    "" + myTb.Rows[i]["首日执行次数"] + ",'" + myTb.Rows[i]["用法"] + "','" + myTb.Rows[i]["频率"] + "',"  +		
                                "" + ad.ToString() + "," + this.YS_ID.ToString() + ",GetDate(),0,'" + Content + "'," + Convertor.IsNull(myTb.Rows[i]["dwlx"], "0") + ")";
                        }
                        else
                        {
                            sSql = "INSERT INTO ZY_ORDERRECORD_MODEL(" +
                                "MODEL_NAME,Group_ID,Dept_ID,nType," +
                                "hoitem_id,xmly,ITEM_CODE,Order_context,Num,Dosage,Unit,exec_dept," +
                                "Order_bDate,First_times,Order_Usage,frequency," +
                                "level,Operator,book_date,Delete_Bit,content,dwlx)" +
                                " VALUES('" + MODEL_NAME.Trim() + "'," +
                                Order_Num.ToString() + "," + this.DeptID.ToString() + "," + myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) + "," +
                                "" + medTypeId + "," + myTb.Rows[i]["xmly"] + ",'" + itemCode + "','" + myTb.Rows[i]["医嘱内容"] + "'," + myTb.Rows[i]["剂量"] + "," + "1" + ",'" + myTb.Rows[i]["单位"] + "'," + myTb.Rows[i]["执行科室"] + "," +
                                "'" + myTb.Rows[i]["开始时间"] + "'," + srcs + ",'" + myTb.Rows[i]["用法"] + "','" + myTb.Rows[i]["频率"] + "'," +
                                "" + ad.ToString() + "," + this.YS_ID.ToString() + ",GetDate(),0,'" + Content + "'," + Convertor.IsNull(myTb.Rows[i]["dwlx"], "0") + ")";
                        }
                    }

                    InstanceForm._database.DoCommand(sSql);
                }
                #endregion

                InstanceForm._database.CommitTransaction();
                //				InstanceForm._database.Close();
                MessageBox.Show("保存成功！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);

                this.listView1.Items.Clear();
                mbtj = "";
                InitModel(ad);
                mbtype = ad.ToString();
            }
            catch (System.Data.OleDb.OleDbException err)
            {
                InstanceForm._database.RollbackTransaction();
                //				InstanceForm._database.Close();
                MessageBox.Show("保存失败\n 第" + Convert.ToString(i + 1) + "医嘱错误，请重输。\n " + err.ToString(), "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                //定位
                FocusCell(myDataGrid1, i, 6);//5 没有加警示列
            }
            catch (Exception err)
            {
                InstanceForm._database.RollbackTransaction();
                //				InstanceForm._database.Close();
                MessageBox.Show("保存失败\n 第" + Convert.ToString(i + 1) + "医嘱错误，请重输。\n " + err.ToString(), "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                //定位
                FocusCell(myDataGrid1, i, 6);//5 没有加警示列
            }
        }
        #endregion
        #region（20111114新）保存模板，支持多组医嘱 Zouchihua
        private void SaveMoDel(DataGridEx myDataGrid1)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //变量定义

            int ad = 2;//属本人
            if (rdDept.Checked == true) ad = 1;//属科室
            else if (rdAll.Checked == true) ad = 0;//属本院

            int i;
            long Order_Num = 0;//医嘱模板的医嘱号为0
            int retn = 0;

            //得到网格的数据
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            if (myTb.Rows.Count == 0)
            {
                MessageBox.Show("无医嘱内容，不能保存模板", "提示", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                return;
            }

            //首先得到基本的网格信息
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;

            if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim() == "") return;

            //构成SQL语句
            string sSql = "";
            DataTable dt = new DataTable();
            DataTable dt_zd = new DataTable();

            int BeginNow = nrow, EndNow = nrow;
            string MODEL_NAME = this.txtModelName.Text.Trim();
            string Content = this.txtContent.Text.Trim();

            if (tc.SelectedTab.Title.Trim() == "长期医嘱" || tc.SelectedTab.Title.Trim() == "临时医嘱")
            {
                string ssql1 = "select * from zy_orderrecord_model where delete_bit=0 and operator=" + this.YS_ID.ToString() + " and MODEL_NAME='" + MODEL_NAME.Trim() + "'";
                dt = InstanceForm._database.GetDataTable(ssql1);
            }
            else
            {
                string ssql2 = "select ID from ZY_ORDERMODEL where MODEL_NAME='" + MODEL_NAME.Trim() + "' and ward_id='" + InstanceForm._currentDept.WardId + "'";
                dt_zd = InstanceForm._database.GetDataTable(ssql2);
            }
            if (dt.Rows.Count > 0 || dt_zd.Rows.Count > 0)
            {
                this.State = 1;
                if (MessageBox.Show("该模板已经存在，是否替换？", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Question) == DialogResult.Cancel) return;
            }

            #region 保存长期账单和临时账单模版
            //if (tc.SelectedTab.Title.Trim() == sTab0 || tc.SelectedTab.Title.Trim() == sTab1)
            //{
            //    #region 保存模板主表ZY_ORDERMODEL
            //    try
            //    {
            //        if (State == 1)
            //        {
            //            //覆盖模板主表
            //            sSql = "UPDATE ZY_ORDERMODEL SET " +
            //                "OPER_UPDATE=" + InstanceForm._currentUser.EmployeeId + "," +
            //                "UPDATE_DATE=getdate()," +
            //                "CANCEL_BIT=0 " +
            //                "WHERE ID=" + Convert.ToInt32(dt_zd.Rows[0]["ID"].ToString()) + "";

            //            retn = InstanceForm._database.DoCommand(sSql);

            //            //删除模板子表
            //            if (retn > 0)
            //            {
            //                sSql = "DELETE FROM ZY_ORDERMODEL_DTL WHERE ID=" + Convert.ToInt32(dt_zd.Rows[0]["ID"].ToString()) + "";
            //                InstanceForm._database.DoCommand(sSql);
            //            }
            //        }
            //        else
            //        {
            //            //新增模板
            //            sSql = "INSERT INTO ZY_ORDERMODEL(" +
            //                "MODEL_NAME,LEVEL,WARD_ID,DEPT_ID,OPERATOR,BOOK_DATE,OPER_UPDATE,UPDATE_DATE,MNGTYPE,CANCEL_BIT) " +
            //                "VALUES(" +
            //                "'" + MODEL_NAME.Trim() + "'," + ad.ToString() + ",'" + InstanceForm._currentDept.WardId + "'," +
            //                "" + this.DeptID + "," + InstanceForm._currentUser.EmployeeId + ",getdate()," +
            //                "" + InstanceForm._currentUser.EmployeeId + ",getdate()," +
            //                "" + GetMngType(tc.SelectedTab.Title.Trim()) + ",0)";

            //            retn = InstanceForm._database.DoCommand(sSql);

            //            if (retn > 0)
            //            {
            //                sSql = "select ID from ZY_ORDERMODEL where MODEL_NAME='" + MODEL_NAME.Trim() + "' and ward_id='" + InstanceForm._currentDept.WardId + "'";
            //                DataTable tempTab = InstanceForm._database.GetDataTable(sSql);
            //                ModelID = Convert.ToInt32(Convertor.IsNull(tempTab.Rows[0]["ID"].ToString(), "0"));
            //            }
            //        }
            //    }
            //    catch (Exception err)
            //    {
            //        MessageBox.Show("保存失败\n" + err.ToString());
            //        return;
            //    }
            //    #endregion

            //    #region 循环保存模板子表ZY_ORDERMODEL_DTL
            //    try
            //    {
            //        for (i = 0; i <= myTb.Rows.Count - 1; i++)
            //        {
            //            if (myTb.Rows[i]["医嘱内容"].ToString().Trim() != "")
            //            {
            //                //非药品医嘱
            //                //							if(char.IsNumber(myTb.Rows[i]["HOItem_ID"].ToString(),0)==true)
            //                if (Convertor.IsNull(myTb.Rows[i]["HOItem_ID"].ToString(), "0") == "0")
            //                {
            //                    //构成SQL语句,并执行
            //                    int j = 1;
            //                    if (myTb.Rows[i]["首次"].ToString() != "")
            //                    {
            //                        j = Convert.ToInt32(myTb.Rows[i]["首次"]);
            //                    }

            //                    sSql = "INSERT INTO ZY_ORDERMODEL_DTL(" +
            //                        "ID,GROUP_ID,NTYPE,HOITEM_ID,ORDER_CONTEXT,NUM,UNIT," +
            //                        "FIRST_TIMES,ORDER_USAGE,FREQUENCY,EXEC_DEPT) " +
            //                        "VALUES(" +
            //                        "" + ModelID.ToString() + "," + myTb.Rows[i]["嘱号"] + "," + myTb.Rows[i]["类型"].ToString() + "," +
            //                        "" + Convertor.IsNull(myTb.Rows[i]["HOItem_ID"], "0") + ",'" + myTb.Rows[i]["医嘱内容"] + "','" + myTb.Rows[i]["剂量"] + "','" + myTb.Rows[i]["单位"] + "'," +
            //                        "" + j + ",'" + myTb.Rows[i]["用法"] + "','" + myTb.Rows[i]["频率"] + "'," + Convertor.IsNull(myTb.Rows[i]["Exec_Dept"], "0") + ")";

            //                    InstanceForm._database.DoCommand(sSql);
            //                }
            //            }
            //        }
            //        InitModel(ad);
            //        MessageBox.Show(this, "保存模板成功", "OK", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            //    }
            //    catch (Exception err)
            //    {
            //        MessageBox.Show(this, "保存模板失败！（" + err.ToString() + "）", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
            //    }
            //    #endregion
            //    myDataGrid1.Focus();
            //    return;
            //}

            #endregion

            #region 确定长期医嘱和临时医嘱要保存为模板的范围
            if (new Guid(myTb.Rows[nrow]["ID"].ToString()) != Guid.Empty)
            {
                for (i = nrow; i <= myTb.Rows.Count - 1; i++)
                {
                    if (i + 1 == myTb.Rows.Count) break;

                    if (myTb.Rows[i + 1]["开始时间"].ToString() == "" && myTb.Rows[i + 1]["医嘱内容"].ToString() != "") EndNow = i + 1;
                    else break;
                }
                for (i = nrow; i >= 0; i--)
                {
                    if (i == 0) break;
                    if (myTb.Rows[i]["开始时间"].ToString() == "") BeginNow = i - 1;
                    else break;
                }
            }
            else
            {
                for (i = nrow; i <= myTb.Rows.Count - 1; i++)
                {
                    if (i + 1 == myTb.Rows.Count) break;

                    if (myTb.Rows[i + 1]["医嘱内容"].ToString() != "") EndNow = i + 1;
                    else break;
                }
                for (i = nrow; i >= 0; i--)
                {
                    if (i == 0) break;
                    if (new Guid(myTb.Rows[i - 1]["ID"].ToString()) == Guid.Empty) BeginNow = i - 1;
                    else break;
                }
            }
            #endregion

            //数据库事务开始
            InstanceForm._database.BeginTransaction();

            try
            {
                //先删除医嘱模板
                //  InstanceForm._database.DoCommand("update ZY_ORDERRECORD_MODEL set delete_bit=1 where delete_bit=0 and operator=" + this.YS_ID.ToString() + " and MODEL_NAME='" + MODEL_NAME.Trim() + "'");
                #region 模板头表

                ParameterEx[] parameters = new ParameterEx[16];
                parameters[0].Value = Guid.Empty;
                parameters[0].Text = "@mbid";
                parameters[1].Value = FrmMdiMain.Jgbm;
                parameters[1].Text = "@jgbm";
                parameters[2].Value = MODEL_NAME.Trim();
                parameters[2].Text = "@mbmc";
                parameters[3].Value = PubStaticFun.GetPYWBM(MODEL_NAME.Trim(), 0);
                parameters[3].Text = "@pym";
                parameters[4].Value = PubStaticFun.GetPYWBM(MODEL_NAME.Trim(), 1);
                parameters[4].Text = "@wbm";
                parameters[5].Value = Content;
                parameters[5].Text = "@bz";
                parameters[6].Value = ad;
                parameters[6].Text = "@mbjb";
                parameters[7].Value = this.DeptID;
                parameters[7].Text = "@ksdm";
                parameters[8].Value = this.YS_ID;
                parameters[8].Text = "@ysdm";
                parameters[9].Value = myTb.Rows[i]["执行科室"].ToString();
                parameters[9].Text = "@zxks";
                parameters[10].Value = DateManager.ServerDateTimeByDBType(FrmMdiMain.Database).ToString("yyyy-MM-dd HH:mm");
                parameters[10].Text = "@djsj";
                parameters[11].Value = this.YS_ID;
                parameters[11].Text = "@djy";
                parameters[12].Value = Guid.Empty;
                parameters[12].Text = "@NewMbid";
                parameters[12].ParaDirection = System.Data.ParameterDirection.Output;
                parameters[13].Value = 0;
                parameters[13].Text = "@ERR_CODE";
                parameters[13].ParaDirection = System.Data.ParameterDirection.Output;
                parameters[14].Value = "";
                parameters[14].Text = "@ERR_TEXT";
                parameters[14].ParaDirection = System.Data.ParameterDirection.Output;
                //add by zouchihua 
                parameters[15].Value = Guid.Empty;//父亲节点id
                parameters[15].Text = "@fid";

                try
                {
                    InstanceForm._database.DoCommand("SP_JC_CFMB", parameters, 10);

                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
                Guid mbid = new Guid(parameters[12].Value.ToString());
                #endregion
                int fzzh = -1;
                int pxxh = 0;
                Guid cfxh = Guid.Empty;
                int strcfxh = 0;
                #region 循环保存数据,需要插入的数据
                for (i = BeginNow; i <= EndNow; i++)//光标上的一组医嘱
                {
                    if (myTb.Rows[i]["开始时间"].ToString() != "")
                    {
                        fzzh++;//用户分组
                        cfxh = new Guid(FrmMdiMain.Database.GetDataTable("select top 1 DBO.FUN_GETGUID(NEWID(),GETDATE()) as cfxh").Rows[0]["cfxh"].ToString());
                    }
                    parameters = new ParameterEx[23];
                    parameters[0].Value = Guid.Empty;
                    parameters[0].Text = "@MBMXID";
                    parameters[1].Value = mbid;
                    parameters[1].Text = "@MBID";

                    int xmid = Convert.ToInt32(myTb.Rows[i]["HOItem_ID"]);
                    if (myTb.Rows[i]["xmly"].ToString() == "1")
                    {
                        DataTable ttbbxm = FrmMdiMain.Database.GetDataTable("select * from YP_ypcjd where cjid=" + myTb.Rows[i]["HOItem_ID"].ToString() + "");
                        if (ttbbxm.Rows.Count > 0)
                            xmid = Convert.ToInt32(ttbbxm.Rows[0]["ggid"]);
                    }
                    parameters[2].Value = xmid;//药品为厂家ggid
                    parameters[2].Text = "@XMID";
                    parameters[3].Value = myTb.Rows[i]["xmly"];
                    parameters[3].Text = "@XMLY";
                    parameters[4].Value = myTb.Rows[i]["剂量"];
                    parameters[4].Text = "@jL";
                    parameters[5].Value = myTb.Rows[i]["单位"];
                    DataTable ttbb = FrmMdiMain.Database.GetDataTable("select * from YP_YPDW where dwmc='" + myTb.Rows[i]["单位"].ToString() + "'");
                    int jldwid = 0;
                    if (ttbb.Rows.Count > 0)
                        jldwid = Convert.ToInt32(ttbb.Rows[0]["id"]);
                    parameters[5].Text = "@jLDW";

                    parameters[6].Value = jldwid;
                    parameters[6].Text = "@jLDWID";
                    DataTable ttyf = FrmMdiMain.Database.GetDataTable("select  * from JC_USAGEDICTION where name='" + myTb.Rows[i]["用法"].ToString() + "'");
                    int yfid = 0;//用法id
                    if (ttyf.Rows.Count > 0)
                        yfid = Convert.ToInt32(ttyf.Rows[0]["id"]);

                    if (tc.SelectedTab.Title.Trim() == "临时医嘱")//临时医嘱用剂量单位类型
                        parameters[7].Value = myTb.Rows[i]["jldwlx"].ToString() == "" ? 1 : myTb.Rows[i]["jldwlx"];
                    else
                        parameters[7].Value = myTb.Rows[i]["dwlx"].ToString() == "" ? 0 : myTb.Rows[i]["dwlx"];
                    parameters[7].Text = "@DWLX";

                    parameters[8].Value = yfid;
                    parameters[8].Text = "@YF";
                    DataTable ttpc = FrmMdiMain.Database.GetDataTable("select  * from JC_FREQUENCY where name='" + myTb.Rows[i]["频率"].ToString() + "'");
                    int pcid = 0;//用法id
                    if (ttpc.Rows.Count > 0)
                        pcid = Convert.ToInt32(ttpc.Rows[0]["id"]);
                    parameters[9].Value = pcid;
                    parameters[9].Text = "@PC";

                    parameters[10].Value = "";
                    parameters[10].Text = "@ZT";
                    parameters[11].Value = 1;//天数
                    parameters[11].Text = "@ts";
                    parameters[12].Value = fzzh;//分组序号
                    parameters[12].Text = "@FZXH";
                    parameters[13].Value = pxxh++;
                    parameters[13].Text = "@PXXH";

                    if (myTb.Rows[nrow]["hoitem_id"].ToString().Trim() == "-1"
               && myTb.Rows[nrow]["执行科室"].ToString().Trim() == "-1" && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["xmly"], "-1")) == 1)
                    {
                        //外来药品
                        parameters[14].Value = Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["ntype"], "1"));
                    }
                    else
                        parameters[14].Value = 0;
                    parameters[14].Text = "@bzby";
                    int cjid = 0;
                    if (myTb.Rows[i]["xmly"].ToString() == "1")
                        cjid = Convert.ToInt32(myTb.Rows[i]["HOItem_ID"]);
                    parameters[15].Value = cjid;
                    parameters[15].Text = "@cjid";
                    parameters[16].Value = 0;
                    parameters[16].Text = "@js";


                    parameters[17].Value = Guid.Empty;
                    parameters[17].Text = "@NewMbmxid";
                    parameters[17].ParaDirection = System.Data.ParameterDirection.Output;
                    parameters[18].Value = 0;
                    parameters[18].Text = "@ERR_CODE";
                    parameters[18].ParaDirection = System.Data.ParameterDirection.Output;
                    parameters[19].Value = "";
                    parameters[19].Text = "@ERR_TEXT";
                    parameters[19].ParaDirection = System.Data.ParameterDirection.Output;
                    parameters[20].Value = cfxh;
                    parameters[20].Text = "@cfxh";
                    parameters[21].Value = myTb.Rows[i]["执行科室"];
                    parameters[21].Text = "@zxks";
                    parameters[22].Value = myTb.Rows[i]["医嘱内容"];
                    parameters[22].Text = "@xmmc";
                    #region
                    //同一组医嘱的用法 频率 开始执行时间 首日执行次数 是取第一条医嘱的
                    //保存时增加模板名字段
                    //非药品医嘱
                    //					if(char.IsNumber(myTb.Rows[i]["HOItem_ID"].ToString(),0)==true)
                    //if (myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) != "1" && myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) != "2" && myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) != "3")
                    //{
                    //    //构成SQL语句,并执行,默认婴儿ID为0，医嘱录入人为医生本人，默认病人科室为医生科室,中草药剂量默认为1,操作员为医生本人
                    //    if (myTb.Rows[i]["开始时间"].ToString() == "")
                    //    {
                    //        sSql = "INSERT INTO ZY_ORDERRECORD_MODEL(" +
                    //            "MODEL_NAME,Group_ID,Dept_ID,nType," +
                    //            "HOItem_ID,xmly,Order_context,Num,Dosage,Unit,exec_dept," +
                    //            "level,Operator,book_date,Delete_Bit,content)" +
                    //            " VALUES('" + MODEL_NAME.Trim() + "'," + Order_Num.ToString() + "," + this.DeptID.ToString() + "," + myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) + "," +
                    //            "" + myTb.Rows[i]["HOItem_ID"] + "," + myTb.Rows[i]["xmly"] + ",'" + myTb.Rows[i]["医嘱内容"] + "'," + myTb.Rows[i]["剂量"] + "," + "1" + ",'" + myTb.Rows[i]["单位"] + "'," + myTb.Rows[i]["执行科室"] + "," +
                    //            //								"'" + myTb.Rows[i]["用法"] + "','" + myTb.Rows[i]["频率"] + "',"  +		
                    //            "" + ad.ToString() + "," + this.YS_ID.ToString() + ",GetDate(),0,'" + Content + "')";
                    //    }
                    //    else
                    //    {
                    //        sSql = "INSERT INTO ZY_ORDERRECORD_MODEL(" +
                    //            "MODEL_NAME,Group_ID,Dept_ID,nType," +
                    //            "HOItem_ID,xmly,Order_context,Num,Dosage,Unit,exec_dept," +
                    //            "Order_bDate,Order_Usage,frequency," +
                    //            "level,Operator,book_date,Delete_Bit,content)" +
                    //            " VALUES('" + MODEL_NAME.Trim() + "'," + Order_Num.ToString() +
                    //            "," + this.DeptID.ToString() + "," + myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) + "," +
                    //            "" + myTb.Rows[i]["HOItem_ID"] + "," + myTb.Rows[i]["xmly"] + ",'" + myTb.Rows[i]["医嘱内容"] + "'," + myTb.Rows[i]["剂量"] + "," + "1" + ",'" + myTb.Rows[i]["单位"] + "'," + myTb.Rows[i]["执行科室"] + "," +
                    //            "'" + myTb.Rows[i]["开始时间"] + "','" + myTb.Rows[i]["用法"] + "','" + myTb.Rows[i]["频率"] + "'," +
                    //            "" + ad.ToString() + "," + this.YS_ID.ToString() + ",GetDate(),0,'" + Content + "')";
                    //    }
                    //}
                    //else//药品医嘱
                    //{
                    //    //构成SQL语句,并执行,默认婴儿ID为0，医嘱录入人为医生本人，默认病人科室为医生科室,中草药剂量默认为1,操作员为医生本人

                    //    string medType = myQuery.GetyzTypeCode(GetGroupType(myTb, i));
                    //    string medTypeId = myTb.Rows[i]["HOItem_ID"].ToString(); ;
                    //    string itemCode = myTb.Rows[i]["ITEM_CODE"].ToString();
                    //    int srcs = 0;
                    //    if (myTb.Rows[i]["首日执行次数"].ToString() == "") srcs = 1;
                    //    else srcs = Convert.ToInt32(myTb.Rows[i]["首日执行次数"].ToString());

                    //    if (myTb.Rows[i]["嘱号"].ToString() == "0" || myTb.Rows[i]["嘱号"] == System.DBNull.Value)//新开未保存的医嘱
                    //    {
                    //        //if (medType == "1") medTypeId = "1";
                    //        //if (medType == "2") medTypeId = "2";
                    //        //if (medType == "3") medTypeId = "3";
                    //        itemCode = myTb.Rows[i]["HOItem_ID"].ToString();
                    //    }
                    //    if (myTb.Rows[i]["开始时间"].ToString() == "")
                    //    {
                    //        sSql = "INSERT INTO ZY_ORDERRECORD_MODEL(" +
                    //            "MODEL_NAME,Group_ID,Dept_ID,nType," +
                    //            "hoitem_id,xmly,ITEM_CODE,Order_context,Num,Dosage,Unit,exec_dept," +
                    //            //								"First_times,Order_Usage,frequency," +
                    //            "level,Operator,book_date,Delete_Bit,content,dwlx)" +
                    //            " VALUES('" + MODEL_NAME.Trim() + "'," +
                    //            Order_Num.ToString() + "," + this.DeptID.ToString() + "," + myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) + "," +
                    //            "" + medTypeId + "," + myTb.Rows[i]["xmly"] + ",'" + itemCode + "','" + myTb.Rows[i]["医嘱内容"] + "'," + myTb.Rows[i]["剂量"] + "," + "1" + ",'" + myTb.Rows[i]["单位"] + "'," + myTb.Rows[i]["执行科室"] + "," +
                    //            //							    "" + myTb.Rows[i]["首日执行次数"] + ",'" + myTb.Rows[i]["用法"] + "','" + myTb.Rows[i]["频率"] + "',"  +		
                    //            "" + ad.ToString() + "," + this.YS_ID.ToString() + ",GetDate(),0,'" + Content + "'," + Convertor.IsNull(myTb.Rows[i]["dwlx"], "0") + ")";
                    //    }
                    //    else
                    //    {
                    //        sSql = "INSERT INTO ZY_ORDERRECORD_MODEL(" +
                    //            "MODEL_NAME,Group_ID,Dept_ID,nType," +
                    //            "hoitem_id,xmly,ITEM_CODE,Order_context,Num,Dosage,Unit,exec_dept," +
                    //            "Order_bDate,First_times,Order_Usage,frequency," +
                    //            "level,Operator,book_date,Delete_Bit,content,dwlx)" +
                    //            " VALUES('" + MODEL_NAME.Trim() + "'," +
                    //            Order_Num.ToString() + "," + this.DeptID.ToString() + "," + myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) + "," +
                    //            "" + medTypeId + "," + myTb.Rows[i]["xmly"] + ",'" + itemCode + "','" + myTb.Rows[i]["医嘱内容"] + "'," + myTb.Rows[i]["剂量"] + "," + "1" + ",'" + myTb.Rows[i]["单位"] + "'," + myTb.Rows[i]["执行科室"] + "," +
                    //            "'" + myTb.Rows[i]["开始时间"] + "'," + srcs + ",'" + myTb.Rows[i]["用法"] + "','" + myTb.Rows[i]["频率"] + "'," +
                    //            "" + ad.ToString() + "," + this.YS_ID.ToString() + ",GetDate(),0,'" + Content + "'," + Convertor.IsNull(myTb.Rows[i]["dwlx"], "0") + ")";
                    //    }
                    //}
                    #endregion
                    // InstanceForm._database.DoCommand(sSql);
                    InstanceForm._database.DoCommand("SP_JC_CFMB_MX_ZY", parameters, 30);
                }
                #endregion

                InstanceForm._database.CommitTransaction();
                //				InstanceForm._database.Close();
                MessageBox.Show("保存成功！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);

                this.listView1.Items.Clear();
                mbtj = "";
                InitModel(ad);
                mbtype = ad.ToString();
            }
            catch (System.Data.OleDb.OleDbException err)
            {
                InstanceForm._database.RollbackTransaction();
                //				InstanceForm._database.Close();
                MessageBox.Show("保存失败\n 第" + Convert.ToString(i + 1) + "医嘱错误，请重输。\n " + err.ToString(), "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                //定位
                FocusCell(myDataGrid1, i, 6);//6 没有加警示列
            }
            catch (Exception err)
            {
                InstanceForm._database.RollbackTransaction();
                //				InstanceForm._database.Close();
                MessageBox.Show("保存失败\n 第" + Convert.ToString(i + 1) + "医嘱错误，请重输。\n " + err.ToString(), "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                //定位
                FocusCell(myDataGrid1, i, 6);//5 没有加警示列
            }
        }
        #endregion

        #region 原模板，不支持多组医嘱
        private void oo20041026ooSaveMoDel(DataGridEx myDataGrid1)
        {
            //变量定义
            int i;
            long Order_Num = 0;//医嘱模板的医嘱号为0
            //得到网格的数据
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            //首先得到基本的网格信息
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            //			if(myTb.Rows[nrow]["status_flag"]==System.DBNull.Value) return;
            if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim() == "") return;
            //构成SQL语句
            string sSql = "";
            int BeginNow = nrow, EndNow = nrow;
            string MODEL_NAME = this.txtModelName.Text.Trim();
            string Content = this.txtContent.Text.Trim();

            DataTable dt = InstanceForm._database.GetDataTable("select * from zy_orderrecord_model where delete_bit=0 and operator=" + this.YS_ID.ToString() + " and MODEL_NAME='" + MODEL_NAME.Trim() + "'");
            if (dt.Rows.Count > 0)
            {
                if (MessageBox.Show("该模板已经存在，是否替换？", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Question) == DialogResult.Cancel) return;
            }

            //先删除医嘱模板
            InstanceForm._database.DoCommand("update ZY_ORDERRECORD_MODEL set delete_bit=1 where delete_bit=0 and operator=" + this.YS_ID.ToString() + " and MODEL_NAME='" + MODEL_NAME.Trim() + "'");


            //得到光标所在行的行坐标
            for (i = nrow; i <= myTb.Rows.Count - 1; i++)
            {
                if (i + 1 == myTb.Rows.Count) break;

                if (myTb.Rows[i + 1]["开始时间"].ToString() == "" && myTb.Rows[i + 1]["医嘱内容"].ToString() != "") EndNow = i + 1;
                else break;
                //				if(myTb.Rows[i+1]["开始时间"]!=System.DBNull.Value || (myTb.Rows[i+1]["开始时间"]==System.DBNull.Value && myTb.Rows[i+1]["医嘱内容"].ToString()=="")) break;
                //				else EndNow=i+1;

            }
            for (i = nrow; i >= 0; i--)
            {
                if (i == 0) break;
                if (myTb.Rows[i]["开始时间"].ToString() == "") BeginNow = i - 1;
                else break;

            }
            int ad = 2;//属本人
            if (rdDept.Checked == true) ad = 1;//属科室
            else if (rdAll.Checked == true) ad = 0;//属本院

            //数据库事务开始
            //生成数据库访问对象
            //			RelationalDatabase _Database=RelationalDatabase.GetDatabase(DatabaseType.IbmDb2ZY);
            //			InstanceForm._database.Initialize("");
            //			InstanceForm._database.Open();
            //			IDbCommand cmd=InstanceForm._database.GetCommand();

            //数据库事务开始
            InstanceForm._database.BeginTransaction();
            try
            {
                #region 循环保存数据,需要插入的数据
                for (i = BeginNow; i <= EndNow; i++)//光标上的一组医嘱
                {
                    //同一组医嘱的用法 频率 开始执行时间 首日执行次数 是取第一条医嘱的
                    //保存时增加模板名字段
                    //非药品医嘱
                    //					if(char.IsNumber(myTb.Rows[i]["HOItem_ID"].ToString(),0)==true)
                    if (myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) != "1" && myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) != "2" && myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString()) != "3")
                    {
                        //构成SQL语句,并执行,默认婴儿ID为0，医嘱录入人为医生本人，默认病人科室为医生科室,中草药剂量默认为1,操作员为医生本人
                        sSql = "INSERT INTO ZY_ORDERRECORD_MODEL(" +
                            "MODEL_NAME,Group_ID,Inpatient_ID,Dept_ID,nType,Order_Doc," +
                            "HOItem_ID,Order_context,Num,Dosage,Unit,exec_dept," +
                            "Order_bDate,Order_Usage,frequency," +
                            "Auditing_user,Operator,book_date,Delete_Bit,content)" +
                            " VALUES('" + MODEL_NAME.Trim() + "'," +
                            Order_Num.ToString() + ",'" + BinID.ToString() + "'" +
                            "," + this.DeptID.ToString() + "," + myQuery.GetyzTypeCode(myTb.Rows[BeginNow]["类型"].ToString()) + "," + this.YS_ID.ToString() + "," +
                            "" + myTb.Rows[i]["HOItem_ID"] + ",'" + myTb.Rows[i]["医嘱内容"] + "'," + myTb.Rows[i]["剂量"] + "," + "1" + ",'" + myTb.Rows[i]["单位"] + "'," + myTb.Rows[i]["执行科室"] + "," +
                            "'" + myTb.Rows[BeginNow]["开始时间"] + "','" + myTb.Rows[BeginNow]["用法"] + "','" + myTb.Rows[BeginNow]["频率"] + "'," +
                            "" + ad.ToString() + "," + this.YS_ID.ToString() + ",GetDate(),0,'" + Content + "')";
                    }
                    else//药品医嘱
                    {
                        //构成SQL语句,并执行,默认婴儿ID为0，医嘱录入人为医生本人，默认病人科室为医生科室,中草药剂量默认为1,操作员为医生本人

                        string medType = myQuery.GetyzTypeCode(GetGroupType(myTb, i));
                        string medTypeId = myTb.Rows[i]["HOItem_ID"].ToString(); ;
                        string itemCode = myTb.Rows[i]["ITEM_CODE"].ToString();

                        if (myTb.Rows[i]["嘱号"].ToString() == "0" || myTb.Rows[i]["嘱号"] == System.DBNull.Value)//新开未保存的医嘱
                        {
                            if (medType == "1") medTypeId = "1";
                            if (medType == "2") medTypeId = "2";
                            if (medType == "3") medTypeId = "3";
                            itemCode = myTb.Rows[i]["HOItem_ID"].ToString();
                        }
                        sSql = "INSERT INTO ZY_ORDERRECORD_MODEL(" +
                            "MODEL_NAME,Group_ID,Inpatient_ID,Dept_ID,nType,Order_Doc," +
                            "hoitem_id,ITEM_CODE,Order_context,Num,Dosage,Unit,exec_dept," +
                            "Order_bDate,First_times,Order_Usage,frequency," +
                            "Auditing_user,Operator,book_date,Delete_Bit,content)" +
                            " VALUES('" + MODEL_NAME.Trim() + "'," +
                            Order_Num.ToString() + ",'" + BinID.ToString() + "'" +
                            "," + this.DeptID.ToString() + "," + myQuery.GetyzTypeCode(myTb.Rows[BeginNow]["类型"].ToString()) + "," + this.YS_ID.ToString() + "," +
                            "" + medTypeId + ",'" + itemCode + "','" + myTb.Rows[i]["医嘱内容"] + "'," + myTb.Rows[i]["剂量"] + "," + "1" + ",'" + myTb.Rows[i]["单位"] + "'," + myTb.Rows[i]["执行科室"] + "," +
                            "'" + myTb.Rows[BeginNow]["开始时间"] + "'," + myTb.Rows[BeginNow]["首日执行次数"] + ",'" + myTb.Rows[BeginNow]["用法"] + "','" + myTb.Rows[BeginNow]["频率"] + "'," +
                            "" + ad.ToString() + "," + this.YS_ID.ToString() + ",GetDate(),0,'" + Content + "')";
                    }

                    InstanceForm._database.DoCommand(sSql);

                }
                #endregion

                InstanceForm._database.CommitTransaction();
                //				InstanceForm._database.Close();
                MessageBox.Show("保存成功！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);

                //				System.Windows.Forms.ListViewItem myItem=new ListViewItem(MODEL_NAME);
                //				myItem.SubItems.Add("本人");
                //				myItem.SubItems.Add(Content);
                //				this.listView1.Items.Add(myItem);
                this.listView1.Items.Clear();
                mbtj = "";
                InitModel(ad);
            }
            catch (System.Data.OleDb.OleDbException err)
            {
                InstanceForm._database.RollbackTransaction();
                //				InstanceForm._database.Close();
                MessageBox.Show("保存失败" + " " + err.ToString(), "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            catch (Exception err)
            {
                InstanceForm._database.RollbackTransaction();
                //				InstanceForm._database.Close();
                MessageBox.Show("保存失败" + " " + err.ToString(), "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);

            }

        }
        #endregion
        #endregion

        #region 打开医嘱模板
        private void btnOpen_Click(object sender, System.EventArgs e)
        {
            mbtj = "";
            this.tabControl2.SelectedIndex = 2;
            this.listView1.Items.Clear();
            int ad = 2;
            if (rdDept.Checked == true) ad = 1;
            else if (rdAll.Checked == true) ad = 0;
            InitModel(ad);
            mbtype = ad.ToString();
            this.tabControl2.SelectedTab = this.tabPage4;
        }
        private void InitModel(int ad)
        {

            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            DataTable myTb = new DataTable();   //长期、临时医嘱模板
            DataTable myTb1 = new DataTable();  //长期、临时账单模版
            //调用住院模板，暂时废掉
            //string str = "and operator=" + this.YS_ID.ToString() + " ";//本人
            //if (ad == 1) str = "and dept_id=" + this.DeptID.ToString() + " ";//科室
            //else if (ad == 0) str = "";//全院
            //string sSql = "select distinct MODEL_NAME ,(case when level=2 then '本人' when level=1 then '科室' when level=0 then '全院' end) 归属,content 内容说明,dbo.FUN_JC_EMPNAME(CAST(operator AS INTEGER)) 创建人  from ZY_ORDERRECORD_MODEL where delete_bit=0 " + str + "and level=" + ad.ToString() + " ";
            string str = "";
            if (_tszl || mz || _hzsq)
                str = "and btree=0 and ysdm=" + this.YS_ID.ToString() + "  ";//本人 -- 特殊治疗手术麻醉不做限制
            else
                str = "and btree=0 and ysdm=" + this.YS_ID.ToString() + " and  exists ( select DEPT_ID from JC_DEPT_PROPERTY where ZY_FLAG=1 and DEPT_ID=ksdm )";//本人 -- 个人模板只能看住院科室的
            if (ad == 1) str = "and btree=0  and ksdm=" + this.DeptID.ToString() + " ";//科室--
            else if (ad == 0) str = "";//全院


            //string sSql = "select distinct MODEL_NAME ,(case when level=2 then '本人' when level=1 then '科室' when level=0 then '全院' end) 归属,content 内容说明,dbo.FUN_JC_EMPNAME(CAST(operator AS INTEGER)) 创建人  from ZY_ORDERRECORD_MODEL where delete_bit=0 " + str + "and level=" + ad.ToString() + " ";
            //modify by zouchihua 2011-11-14
            string sSql = "select MBMC MODEL_NAME,dbo.FUN_JC_EMPNAME(CAST(case when bz='套餐转换为模板' then ysdm else DJY end AS INTEGER)) 创建人 ,(case mbjb when 0 then '全院'when 1 then '科室' when 2 then '个人'  else '' end) 归属,bz 内容说明 ,mbxh as mbid,pym 拼音码 from  JC_CFMB  where BSCBZ=0 " + str + "and mbjb=" + ad.ToString() + " and pym like    '%" + mbtj.Trim() + "%' ";
            string sSql1 = "select distinct MODEL_NAME,(case when level=2 then '本人' when level=1 then '科室' when level=0 then '全院' end) 归属,dbo.FUN_JC_EMPNAME(CAST(operator AS INTEGER)) 创建人 FROM ZY_ORDERMODEL WHERE CANCEL_BIT=0 and level=" + ad.ToString() + "";


            if (tc.SelectedTab.Title.Trim() == "长期医嘱" || tc.SelectedTab.Title.Trim() == "临时医嘱")
            {
                myTb = InstanceForm._database.GetDataTable(sSql);
            }
            else
            {
                myTb1 = InstanceForm._database.GetDataTable(sSql1);
            }
            listView1.Items.Clear();
            if (tc.SelectedTab.Title.Trim() == "长期医嘱" || tc.SelectedTab.Title.Trim() == "临时医嘱")
            {
                for (int i = 0; i <= myTb.Rows.Count - 1; i++)
                {
                    System.Windows.Forms.ListViewItem myItem = new ListViewItem(myTb.Rows[i]["MODEL_NAME"].ToString());
                    myItem.SubItems.Add(myTb.Rows[i]["创建人"].ToString());
                    myItem.SubItems.Add(myTb.Rows[i]["内容说明"].ToString());
                    myItem.SubItems.Add(myTb.Rows[i]["拼音码"].ToString());//Modify zouchihua 2011-11-14;
                    myItem.Tag = myTb.Rows[i]["mbid"].ToString();
                    this.listView1.Items.Add(myItem);
                }
                if (myTb.Rows.Count > 0)
                {
                    this.lb_Model.Text = myTb.Rows[0]["归属"].ToString().Trim() + "模板";
                }
                else
                {
                    this.lb_Model.Text = "模板列表";
                }
                return;
            }
            else
            {
                for (int i = 0; i <= myTb1.Rows.Count - 1; i++)
                {
                    System.Windows.Forms.ListViewItem myItem1 = new ListViewItem(myTb1.Rows[i]["MODEL_NAME"].ToString());
                    myItem1.SubItems.Add(myTb1.Rows[i]["创建人"].ToString());
                    this.listView1.Items.Add(myItem1);
                }
                if (myTb1.Rows.Count > 0)
                {
                    this.lb_Model.Text = myTb1.Rows[0]["归属"].ToString().Trim() + "模板";
                }
                else
                {
                    this.lb_Model.Text = "模板列表";
                }
            }
        }
        #endregion

        #region 更改模板归属
        private void ChgAscription_Click(object sender, System.EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            if (this.listView1.SelectedItems.Count == 0)
            {
                MessageBox.Show("请先选择模板名！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            MenuItem mitem = (MenuItem)sender;
            string MODEL_NAME = this.listView1.FocusedItem.Text.Trim();
            string str0 = this.lb_Model.Text.Trim().Substring(0, 2);//this.listView1.FocusedItem.SubItems[1].Text.Trim();//源归属
            string str1 = mitem.Text.Substring(2, 2);//目的归属
            string mbxh = this.listView1.FocusedItem.Tag.ToString();
            if (str0.Trim() == str1) return;
            if (str0.Trim() == "科室" || str0.Trim() == "全院")
            {
                if (tc.SelectedTab.Title.Trim() == "长期医嘱" || tc.SelectedTab.Title.Trim() == "临时医嘱")
                {
                    if (InstanceForm._database.GetDataTable("select * from JC_CFMB where bscbz=0 and mbxh='" + mbxh + "' and djy=" + this.YS_ID.ToString() + "").Rows.Count == 0)
                    {
                        MessageBox.Show("该模板不是你创建的，你不能更改归属！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                        return;
                    }
                }
                else
                {
                    if (InstanceForm._database.GetDataTable("select * from ZY_ORDERMODEL where CANCEL_BIT=0 and MODEL_NAME='" + MODEL_NAME.Trim() + "' and operator=" + this.YS_ID.ToString() + "").Rows.Count == 0)
                    {
                        MessageBox.Show("该模板不是你创建的，你不能更改归属！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                        return;
                    }
                }
            }

            int ad = 2;
            if (str1 == "科室") ad = 1;
            else if (str1 == "全院") ad = 0;

            if (tc.SelectedTab.Title.Trim() == "长期医嘱" || tc.SelectedTab.Title.Trim() == "临时医嘱")
            {
                if (InstanceForm._database.DoCommand("update JC_CFMB set mbjb=" + ad.ToString() + ",KSDM=" + FrmMdiMain.CurrentDept.DeptId.ToString() + "  where bscbz=0  and mbxh='" + mbxh + "'  and djy=" + this.YS_ID.ToString() + "") > 0)
                {
                    MessageBox.Show("更改归属成功！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }
            else
            {
                if (InstanceForm._database.DoCommand("update ZY_ORDERMODEL set level=" + ad.ToString() + " where CANCEL_BIT=0 and operator=" + this.YS_ID.ToString() + " and MODEL_NAME='" + MODEL_NAME.Trim() + "'") > 0)
                {
                    MessageBox.Show("更改归属成功！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }
            this.listView1.Items.Clear();
            InitModel(ad);
            mbtype = ad.ToString();

        }
        #endregion

        #region 通过模板输入医嘱
        private void listView1_DoubleClick(object sender, System.EventArgs e)
        {
            Mbmc = "";
            //每次进入清空表
            if (Mbtb != null)
                Mbtb.Clear();
            #region//调用门诊模板
            if (this.listView1.SelectedItems.Count >= 0)
            {
                ts_mzys_blcflr.InstanceForm.BDatabase = FrmMdiMain.Database;
                Guid mbid = new Guid(this.listView1.SelectedItems[0].Tag.ToString());
                Mbmc = this.listView1.SelectedItems[0].Tag.ToString();//获得模版id名称
                //MessageBox.Show(mbid.ToString());
                ts_mzys_blcflr.FrmSelectMb frmmb = new ts_mzys_blcflr.FrmSelectMb(mbid);
                DataTable Mbmx;
                try
                {

                    DialogResult dr = frmmb.ShowDialog();
                    Mbtb = frmmb.tb.Clone();
                    Mbmx = FrmMdiMain.Database.GetDataTable("exec SP_JC_CFMB_SELECT '" + mbid.ToString() + "'," + FrmMdiMain.Jgbm + " ");
                    //DataTable dept_xz =new DataTable();
                    //dept_xz = dept_bwxz();
                    //for (int j = 0; j < Mbmx.Rows.Count; j++)
                    //{
                    //    for (int m = 0; m < dept_xz.Rows.Count;m++ )
                    //    {
                    //        if (Mbmx.Rows[j]["执行科室id"].ToString() == dept_xz.Rows[m]["dept_id"].ToString())
                    //        {
                    //            MessageBox.Show("根据医院规定：检查类项目请在医嘱界面左侧开具申请单!");
                    //            return;
                    //        }
                    //    }

                    //}
                }
                catch (Exception ex)
                {
                    return;
                    MessageBox.Show(ex.Message);
                }
                DataTable dept_xz = new DataTable();
                dept_xz = dept_bwxz();
                string[] GroupbyField ={ "CFXH" };
                string[] ComputeField ={ };
                string[] CField ={ };
                TrasenFrame.Classes.TsSet xcset = new TrasenFrame.Classes.TsSet();
                xcset.TsDataTable = Mbmx;
                DataTable tbcf = xcset.GroupTable(GroupbyField, ComputeField, CField, "序号<>'小计'");
                int nrow = 0;
                for (int x = 0; x <= tbcf.Rows.Count - 1; x++)
                {
                    DataRow[] rows_cf = frmmb.tb.Select("CFXH='" + tbcf.Rows[x]["CFXH"].ToString().Trim() + "'");
                    for (int i = 0; i < rows_cf.Length; i++)
                    {
                        for (int m = 0; m < dept_xz.Rows.Count; m++)
                        {
                            if (rows_cf[i]["执行科室id"].ToString() == dept_xz.Rows[m]["dept_id"].ToString())
                            {
                                MessageBox.Show("根据医院规定：检查类项目请在医嘱界面左侧开具申请单!");
                                return;
                            }
                            if (rows_cf[i]["用法"].ToString() == "皮试")
                            {
                                MessageBox.Show("根据医院规定：不允许单独开未关联药品的皮试医嘱,请从医嘱管理界面开此医嘱!");
                                return;
                            }

                        }
                        Mbtb.ImportRow(rows_cf[i]);
                    }
                }

                if (Mbtb == null || Mbtb.Rows.Count <= 0) return;
            }
            else
            {
                return;
            }
            #endregion
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            if (outType == true) return;
            checkPage();
            if (tc.SelectedTab.Title.Trim() == "长期医嘱")
            { loadModel(this.dataGrid_LongOrder); XG1 = true; return; }
            if (tc.SelectedTab.Title.Trim() == "临时医嘱")
            { loadModel(this.dataGrid_TempOrder); XG2 = true; return; }
            if (tc.SelectedTab.Title.Trim() == sTab0)
            { loadModels(this.dataGrid_LongZD); return; }
            if (tc.SelectedTab.Title.Trim() == sTab1)
            { loadModels(this.dataGrid_TempZD); }
        }
        /// <summary>
        /// 右键点击使用模版
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void menuItem1_Click(object sender, System.EventArgs e)
        {
            listView1_DoubleClick(sender, e);
        }

        private DataTable dept_bwxz()
        {
            DataTable dt = new DataTable();
            string sql = "select  dept_id  from  dept_bwxz";
            dt = InstanceForm._database.GetDataTable(sql);
            return dt;
        }

        #region 长期账单和临时账单
        private void loadModels(DataGridEx myDataGrid)
        {
            string sSql = "";
            int NullRowCount = 0;
            //首先得到基本的网格信息
            DataTable myTb = (DataTable)myDataGrid.DataSource;
            int nrow = myDataGrid.CurrentCell.RowNumber;
            int ncol = myDataGrid.CurrentCell.ColumnNumber;

            //得到选择的模板的基本信息
            string Model_Name = this.listView1.FocusedItem.Text.Trim();
            if (myDataGrid.Name == "dataGrid_LongZD")
            {
                sSql = "select a.group_id as 嘱号,b.BOOK_DATE as 开始时间,d.name as 类型,a.order_context as 医嘱内容,a.num as 剂量,(Case When a.order_context = e.ITEMNAME Then e.PRICE else f.retail_price end) as 单价,a.unit as 单位," +
                    "a.order_usage as 用法,a.frequency as 频率,a.first_times as 首次 from zy_ordermodel_dtl a " +

                    "inner join zy_ordermodel b on a.id= b.id inner join jc_dept_property c on a.exec_dept=c.dept_id " +

                    "inner join jc_OrderType d on a.ntype = d.code " +

                    "left join VI_JC_ITEMS e on a.order_context = e.ITEMNAME " +

                    "inner join jc_HSItemDiction f on a.order_context = f.ORDER_NAME where b.MODEL_NAME = '" + Model_Name.ToString().Trim() + "'";
            }
            else
            {
                sSql = "select a.group_id as 嘱号,b.BOOK_DATE as 开始时间,d.name as 类型,a.order_context as 医嘱内容,a.num as 剂量,(Case When a.order_context = e.ITEMNAME Then e.PRICE else f.retail_price end) as 单价,a.unit as 单位," +
                    "a.order_usage as 用法 from zy_ordermodel_dtl a " +

                    "inner join zy_ordermodel b on a.id= b.id inner join jc_dept_property c on a.exec_dept=c.dept_id " +

                    "inner join jc_OrderType d on a.ntype = d.code " +

                    "left join VI_JC_ITEMS e on a.order_context = e.ITEMNAME " +

                    "inner join jc_HSItemDiction f on a.order_context = f.ORDER_NAME where b.MODEL_NAME = '" + Model_Name.ToString().Trim() + "'";
            }
            DataTable myTb_Model = new DataTable();
            myTb_Model = InstanceForm._database.GetDataTable(sSql, 30);

            //定位行于最后一组医嘱以下的第二行
            int tbCount = myTb.Rows.Count - 1;
            for (int i = myTb.Rows.Count - 1; i >= 0; i--)
            {
                if (myTb.Rows[i]["医嘱内容"].ToString() == "")
                {
                    //继续
                    NullRowCount++;
                }
                else
                {
                    //跳出
                    break;
                }
            }
            for (int i = NullRowCount; i > 0; i--) myTb.Rows.RemoveAt(tbCount--);
            DateTime dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);

            for (int i = 0; i <= myTb_Model.Rows.Count - 1; i++)
            {
                DataRow myRow = myTb.NewRow();
                if (myDataGrid.Name == "dataGrid_LongZD")
                {
                    if (myTb_Model.Rows[i]["开始时间"].ToString() != "")
                    {
                        myRow["嘱号"] = myTb_Model.Rows[i]["嘱号"];
                        myRow["开始时间"] = dTime;
                        myRow["类型"] = myTb_Model.Rows[i]["类型"];
                        myRow["剂量"] = myTb_Model.Rows[i]["剂量"];
                        myRow["单价"] = myTb_Model.Rows[i]["单价"];
                        myRow["单位"] = myTb_Model.Rows[i]["单位"];
                        myRow["用法"] = myTb_Model.Rows[i]["用法"];
                        myRow["频率"] = myTb_Model.Rows[i]["频率"];
                        myRow["首次"] = myTb_Model.Rows[i]["首次"];
                        if (myRow["医嘱内容"].ToString().Trim() == "") myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim();
                    }
                    else myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim();
                }
                else
                {
                    if (myTb_Model.Rows[i]["开始时间"].ToString() != "")
                    {
                        myRow["嘱号"] = myTb_Model.Rows[i]["嘱号"];
                        myRow["开始时间"] = dTime;
                        myRow["类型"] = myTb_Model.Rows[i]["类型"];
                        myRow["剂量"] = myTb_Model.Rows[i]["剂量"];
                        myRow["单价"] = myTb_Model.Rows[i]["单价"];
                        myRow["单位"] = myTb_Model.Rows[i]["单位"];
                        myRow["用法"] = myTb_Model.Rows[i]["用法"];
                        if (myRow["医嘱内容"].ToString().Trim() == "") myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim();
                    }
                    else myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim();
                }
                myTb.Rows.Add(myRow);
            }
            myTb.Rows.Add(myTb.NewRow());
            myDataGrid.DataSource = null;
            myDataGrid.DataSource = myTb.Copy();
            //为防止失去焦点
            DataGridCell myCell = new DataGridCell(nrow, ncol);
            myDataGrid.CurrentCell = myCell;
            myDataGrid.CurrentRowIndex = myTb.Rows.Count;
        }

        #endregion

        #region 长期医嘱和临时医嘱
        private void loadModel(DataGridEx myDataGrid1)
        {
            //add by zouchihua 2013-5-21控制转科后电子病例不能录入医嘱
            Yxlyz();
            bool JBR = false;//是否交病人
            bool KCF = false;//是否在长嘱上开草药处方
            string strQY = "";//缺药内容
            string strTY = "";//停药内容
            string strpc = "";//频次
            string stryf = "";//用法
            string strfs = "";//付数
            bool TY = false;//是否被停药
            int QYisZdyh = 0;//停药是否为一组的第一行
            string Jbkz = "";//级别控制
            int i, NullRowCount = 0;
            //首先得到基本的网格信息			
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            //得到选择的模板的基本信息
            string MODEL_NAME = this.listView1.FocusedItem.Text.Trim();
            Guid mbid = new Guid(this.listView1.FocusedItem.Tag.ToString());
            string str = this.lb_Model.Text.Trim().Substring(0, 2);//this.listView1.FocusedItem.SubItems[1].Text.Trim();
            DataTable myTb_Model = new DataTable();
            //if (str == "本人") myTb_Model = myQuery.GetModel(MODEL_NAME, this.DeptID, this.YS_ID, 2);
            //else if (str == "科室") myTb_Model = myQuery.GetModel(MODEL_NAME, this.DeptID, this.YS_ID, 1);
            //else myTb_Model = myQuery.GetModel(MODEL_NAME, this.DeptID, this.YS_ID, 0);
            //modify by  zouchihua 2011-11-14
            if (str == "本人") myTb_Model = myQuery.GetModel(Mbtb);
            else if (str == "科室") myTb_Model = myQuery.GetModel(Mbtb);
            else myTb_Model = myQuery.GetModel(Mbtb);
            if (myTb_Model.Rows.Count == 0)
                return;
            //如果在长期医嘱上开中草药处方，给予提示
            if (myTb_Model.Rows[0]["ntype"].ToString() == "3" && myDataGrid1 == this.dataGrid_LongOrder && KCF == false)
            {
                if (MessageBox.Show("你确定要在长期医嘱上开中草药处方吗?", "警告", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning) == DialogResult.Cancel) return;
                KCF = true;
            }

            //定位行于最后一组医嘱以下的第二行
            int tbCount = myTb.Rows.Count - 1;
            for (i = myTb.Rows.Count - 1; i >= 0; i--)
            {
                if (myTb.Rows[i]["医嘱内容"].ToString() == "")
                {
                    //继续
                    NullRowCount++;
                }
                else
                {
                    //跳出
                    break;
                }
            }
            for (i = NullRowCount; i > 0; i--) myTb.Rows.RemoveAt(tbCount--);
            //modify by zouchihua  补录模板时，时间改为补录时间；
            DateTime dTime;
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //if(this.Blbj==1&&tc.SelectedTab.Title.Trim() == "临时医嘱")//只有临时医嘱补录模板
            // dTime=this.DtpbeginDate.Value;
            //else
            // dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);
            //add by zouchihua  控制医嘱补录 2011-11-23
            string Config = new SystemCfg(6028).Config;
            Config = string.IsNullOrEmpty(Config) ? "0" : Config;
            int blzt = 0;//补录状态
            switch (new SystemCfg(6028).Config)
            {
                case "0"://不允许补录
                    dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                    break;
                case "1":
                    {
                        if (this.Blbj == 1 && tc.SelectedTab.Title.Trim() == "长期医嘱")//只有长期医嘱补录模板
                        {
                            dTime = this.DtpbeginDate.Value;
                            blzt = 9;
                        }
                        else
                            dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                    }
                    break;
                case "2":
                    {
                        if (this.Blbj == 1 && tc.SelectedTab.Title.Trim() == "临时医嘱")//只有临时医嘱补录模板
                        {
                            dTime = this.DtpbeginDate.Value;
                            blzt = 9;
                        }
                        else
                            dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                    }
                    break;
                case "3":
                    if (this.Blbj == 1 && (tc.SelectedTab.Title.Trim() == "长期医嘱" || tc.SelectedTab.Title.Trim() == "临时医嘱"))
                    {
                        dTime = this.DtpbeginDate.Value;
                        blzt = 9;
                    }
                    else
                        dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                    break;
                default:
                    dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);
                    break;
            }
            string sSql = "select a.dept_id warddept,b.dept_id " +
                         "from JC_ward a " +
                         " left join " +
                         " JC_wardrdept b on a.ward_id=b.ward_id and b.dept_id=" + this.DeptID +
                         " order by b.dept_id ";

            DataTable temptb = (str == "本人" || str == "全院") ? InstanceForm._database.GetDataTable(sSql) : null;

            sSql = "select a.DEPT_ID from JC_EMP_DEPT_ROLE a inner join JC_wardrdept b on a.dept_id=b.dept_id where a.employee_id=" + this.YS_ID;

            DataTable temptb2 = (str == "本人" || str == "全院") ? InstanceForm._database.GetDataTable(sSql) : null;
            int Olddwlx = 0;
            for (i = 0; i <= myTb_Model.Rows.Count - 1; i++)
            {

                //ValideMedOrder();myTb_Model.Rows[i]["xmly"].ToString(),myTb_Model.Rows[i]["HOITEM_ID"].ToString()
                string strMsg = "";
                bool bValideMed = ValideMedOrder(myTb_Model.Rows[i]["xmly"].ToString(), myTb_Model.Rows[i]["HOITEM_ID"].ToString(), myTb_Model.Rows[i]["医嘱内容"].ToString(), out strMsg);//myRecallTb.Rows[i]["HOITEM_ID"].ToString()//myRecallTb.Rows[i]["xmly"].ToString()

                if (!bValideMed)
                {
                    continue;
                }

                DataRow myRow = myTb.NewRow();

                #region//武汉中心医院(Modify by jchl)
                if (this.fylb != "" && this.fylb != "自费")
                {
                    if (!myTb.Columns.Contains("zfbl"))
                    {
                        myTb.Columns.Add("zfbl", typeof(System.Decimal));
                    }
                    int type = 0;
                    if (this.fylb.Contains("公费"))
                        type = 1;
                    else
                        type = 2;
                    decimal zfbl = 1;
                    if (!myTb_Model.Rows[i]["NTYPE"].ToString().Equals("7"))
                    {
                        try
                        {
                            //2,001064725,1276,2,特殊视力检查(点视力表）,
                            if (!myQuery.GetGfxx(type, this.patientInfo1.lbID.Text.Trim(), myTb_Model.Rows[i]["HOITEM_ID"].ToString(),
                                 myTb_Model.Rows[i]["xmly"].ToString(), myTb_Model.Rows[i]["医嘱内容"].ToString(), this.fylb, ref zfbl))
                            {
                                //this.GrdSel.Visible = false;
                                //myTb.Rows[nrow]["医嘱内容"] = "";
                                ////txtCol.TextBox.Text = "";
                                //myDataGrid1.Focus();
                                //myDataGrid1.CurrentCell = new DataGridCell(nrow, 6);//医嘱内容列
                                continue;
                            }
                            else
                            {
                                myRow["zfbl"] = zfbl;
                            }
                        }
                        catch (Exception ex)//Modify By Tany 2015-03-18 加上捕获错误并返回，不继续操作
                        {
                            MessageBox.Show(ex.Message);
                            continue;
                        }
                    }
                    else
                    {
                        myRow["zfbl"] = 1;
                    }
                }
                #endregion

                #region 判断执行科室是否正确
                if (str == "本人" || str == "全院")
                {
                    //药品
                    if (myTb_Model.Rows[i]["nType"].ToString().Trim() == "1" || myTb_Model.Rows[i]["nType"].ToString().Trim() == "2" || myTb_Model.Rows[i]["nType"].ToString().Trim() == "3")
                    {
                        try
                        {
                            for (int j = 0; j < temptb.Rows.Count; j++)
                            {
                                if (myTb_Model.Rows[i]["执行科室"].ToString() == temptb.Rows[j]["warddept"].ToString())
                                {
                                    for (int k = 0; k < this.SelectDataView.Table.Rows.Count; k++)
                                    {
                                        if (myTb_Model.Rows[i]["hoitem_id"].ToString() == this.SelectDataView.Table.Rows[k]["hoitem_id"].ToString()
                                            && myTb_Model.Rows[i]["xmly"].ToString() == this.SelectDataView.Table.Rows[k]["xmly"].ToString())
                                        {
                                            myTb_Model.Rows[i]["执行科室"] = this.SelectDataView.Table.Rows[k]["default_dept"];
                                            break;
                                        }
                                    }
                                    break;
                                }
                            }
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(ex.Message + ex.StackTrace.ToString());
                        }
                    }
                    //说明类
                    else if (myTb_Model.Rows[i]["nType"].ToString().Trim() == "7")
                    {
                        myTb_Model.Rows[i]["执行科室"] = this.Dept_Br;
                    }
                    //治疗、医技、手术类
                    else
                    {
                        for (int j = 0; j < temptb2.Rows.Count; j++)
                        {

                            if (myTb_Model.Rows[i]["执行科室"].ToString() == temptb2.Rows[j]["DEPT_ID"].ToString() && !this.mz)
                            {
                                myTb_Model.Rows[i]["执行科室"] = this.Dept_Br;
                                break;
                            }
                        }
                    }
                }
                #endregion
                if (myTb_Model.Rows[i]["开始时间"].ToString() != "")
                {
                    if (myTb_Model.Rows[i]["ntype"].ToString() == "3" && KCF == false)
                    {
                        if (MessageBox.Show("该模板是中草药处方，是否需要（代煎）？\r\r如需要（代煎）,默认用法为【水煎服】！", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) == DialogResult.Yes)
                        {
                            myRow["用法"] = "水煎服";
                            //保存收取煎药费的日志信息 add by zouchihua 2012-12-28
                            myQuery.SaveLog(DeptID, YS_ID, "收取煎药费", this.BinID.ToString() + "的医嘱【" + myRow["医嘱内容"] + "】收取煎药费", 0, 41);
                            if (tc.SelectedTab.Title.Trim() == "临时医嘱")//临时医嘱用jldwlx
                            {
                                myRow["jldwlx"] = 9;
                                myRow["dwlx"] = 9;
                            }
                            else
                                myRow["dwlx"] = 9;
                            Olddwlx = 9;
                        }
                        else
                        {
                            JBR = true;
                            //Modiby by zouchihua 2011-09-22 增加交病人显示判断
                            string IsJbr = "0";
                            try
                            {
                                IsJbr = new SystemCfg(19001).Config;
                            }
                            catch (Exception ex)
                            {
                                MessageBox.Show(ex.Message);
                            }
                            if (IsJbr == "0")
                            {
                                myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim();// +"「交病人」"; Modify By tany 2011-06-29 不要默认交病人
                                if (tc.SelectedTab.Title.Trim() == "临时医嘱")//临时医嘱用jldwlx
                                    myRow["jldwlx"] = 1;
                                else
                                    myRow["dwlx"] = 1;
                                Olddwlx = 1;
                            }
                            else
                            {
                                myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + "「交病人」"; //Modify By tany 2011-06-29 不要默认交病人
                                if (tc.SelectedTab.Title.Trim() == "临时医嘱")//临时医嘱用jldwlx
                                    myRow["jldwlx"] = 1;
                                else
                                    myRow["dwlx"] = 1;
                                myRow["dwlx"] = 1;
                                Olddwlx = 1;
                            }


                        }
                    }
                    if (KCF == true)
                    {
                        if (tc.SelectedTab.Title.Trim() == "临时医嘱")//临时医嘱用jldwlx
                            myRow["jldwlx"] = 9;
                        else
                            myRow["dwlx"] = 9;//在长嘱上开中草药处方要收煎药费，不交病人
                        Olddwlx = 9;
                    }
                    myRow["开始时间"] = dTime;
                    myRow["用法"] = myTb_Model.Rows[i]["用法"];
                    stryf = myTb_Model.Rows[i]["用法"].ToString();
                    strpc = myTb_Model.Rows[i]["频率"].ToString();
                    strfs = myTb_Model.Rows[i]["付数"].ToString();
                    myRow["频率"] = myTb_Model.Rows[i]["频率"];
                    myRow["剂数"] = myTb_Model.Rows[i]["付数"];
                    myRow["首日执行次数"] = myTb_Model.Rows[i]["首日执行次数"];
                    if (myRow["医嘱内容"].ToString().Trim() == "") myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim();
                }
                else
                {
                    myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim();
                    //add by zouchihua 2012-5-7
                    if (myTb_Model.Rows[i]["ntype"].ToString() == "3")
                    {
                        if (tc.SelectedTab.Title.Trim() == "临时医嘱")//临时医嘱用jldwlx
                            myRow["jldwlx"] = Olddwlx;
                        else
                            myRow["dwlx"] = Olddwlx;
                    }
                }

                if (JBR == true)
                {
                    myRow["mngtype"] = 5;
                }
                myRow["类型"] = myTb_Model.Rows[i]["类型"];
                myRow["剂量"] = myTb_Model.Rows[i]["剂量"];
                myRow["单位"] = myTb_Model.Rows[i]["单位"];
                #region modify by zouchihua  补录模板处理
                if (this.Blbj == 1)//只有临时医嘱补录模板
                    myRow["status_flag"] = blzt;
                else
                    myRow["status_flag"] = 0;
                #endregion
                myRow["执行科室"] = myTb_Model.Rows[i]["执行科室"];
                myRow["ID"] = Guid.Empty;
                myRow["xmly"] = myTb_Model.Rows[i]["xmly"];
                myRow["ps_flag"] = -1;
                myRow["ps_orderid"] = Guid.Empty;
                myRow["规格"] = myTb_Model.Rows[i]["规格"];//Add By Tany 2011-02-28
                if (myTb_Model.Rows[i]["nType"].ToString().Trim() == "1" || myTb_Model.Rows[i]["nType"].ToString().Trim() == "2" || myTb_Model.Rows[i]["nType"].ToString().Trim() == "3")
                {
                    #region//Add by zouchihua 是否启用要比控制 2013-5-2
                    string ts = GetYPkz(FrmMdiMain.CurrentDept.DeptId, 1);
                    if (ts.Trim() != "")
                    {
                        MessageBox.Show(ts, "温馨提示");
                        return;
                    }
                    #endregion


                    //add by zouchihua 2013-7-18 药品科室限制
                    DataTable tbksxz = FrmMdiMain.Database.GetDataTable("select * from jc_ypksxz where  delete_bit=0 and  dept_id=" + InstanceForm._currentDept.DeptId + " and ggid=" + myTb_Model.Rows[i]["ITEM_CODE"].ToString() + "");
                    if (tbksxz.Rows.Count > 0)
                    {
                        Jbkz = "对不起，药品【" + myTb_Model.Rows[i]["医嘱内容"].ToString() + "】在本科室受限制，请联系管理员";
                        continue;
                    }
                    //add by zouchihua 2012-5-25  中草药权限控制
                    if (cfg6046.Config.Trim() == "1" && myTb_Model.Rows[i]["nType"].ToString().Trim() == "3" && doctor.ZY_Right == false)
                    {
                        // FrmMessageBox.Show("此药品为中药，受权限限，不允许你开此药品！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                        Jbkz = "【" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + "】，此药品为中药，受级别限制，不允许你开此药品！\n";
                        continue;
                        //return;
                    }
                    //add by zouchihua 2012-01-13 模板中加级别控制
                    #region 判断本人是否可以开该药品医嘱（药品分级控制,临时医嘱不受限制）
                    if (!mz && !_hs && !hs && !_tszl)//非手术麻醉站和护士站
                    {
                        DataTable _dt = InstanceForm._database.GetDataTable("select * from vi_yp_ypcd where cjid = " + myTb_Model.Rows[i]["HOitem_ID"] + " and (mzyp != 0 or djyp != 0 or JSYP != 0)");
                        DataTable _dt1 = InstanceForm._database.GetDataTable("select * from JC_ROLE_DOCTOR a left join JC_DOCTOR_TYPE b on a.YS_TYPEID=b.TYPE_ID  where employee_id = '" + YS_ID + "'");

                        if (_dt.Rows.Count != 0 && _dt1.Rows.Count != 0)
                        {

                            if (doctor.MZ_Right != true || doctor.DM_Right != true)
                            {
                                if (doctor.MZ_Right == false && Convert.ToInt32(_dt.Rows[0]["mzyp"]) != Convert.ToInt32(_dt1.Rows[0]["mz_right"]))
                                {
                                    //FrmMessageBox.Show("此药品为麻醉药品，受级别限制，不允许你开此药品！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                    Jbkz = "【" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + "】，此药品为麻醉药品，受级别限制，不允许你开此药品！\n";
                                    continue;
                                }
                                if (doctor.DM_Right == false && Convert.ToInt32(_dt.Rows[0]["djyp"]) != Convert.ToInt32(_dt1.Rows[0]["dm_right"]))
                                {
                                    //FrmMessageBox.Show("此药品为毒剧药品，受级别限制，不允许你开此药品！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                    Jbkz = "【" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + "】，此药品为毒剧药品，受级别限制，不允许你开此药品！\n";
                                    continue;
                                }
                            }

                        }
                        _dt = InstanceForm._database.GetDataTable("select * from vi_yp_ypcd where cjid = " + myTb_Model.Rows[i]["HOitem_ID"] + " ");
                        if (_dt.Rows.Count != 0 && _dt1.Rows.Count != 0)
                        {
                            //Modify by zouchihua doctor.TypeID 改为zcjb 2012-10-10
                            long TypeID = long.Parse(_dt1.Rows[0]["YS_TYPEID"].ToString());
                            //Modify by Zouchihua 增加药品分级控制的参数
                            if (new SystemCfg(19004).Config == "1" && (cfg6053.Config.Trim() == "1" || tc.SelectedTab.Title.Trim() == "长期医嘱"))
                            {
                                if ((cfg6053.Config.Trim() == "1" || pageType == 0) && TypeID > Convert.ToInt64(_dt.Rows[0]["CFJB"]))
                                {
                                    //FrmMessageBox.Show("此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                    //Modify by jchl
                                    //Jbkz = "【" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + "】，此药品级别高于你现在的级别，受级别限制，不允许你开该药品的长期医嘱！\n";
                                    //continue;
                                    if (!IsCanMadeHighTypeHosItem())
                                        return;
                                }
                            }
                        }
                        //add by yaokx 2014-05-13
                        if ((new SystemCfg(6093, InstanceForm._database)).Config == "1" && _dt.Rows.Count > 0)
                        {
                            if (Convert.ToBoolean(_dt.Rows[0]["mzyp"].ToString()) == true || Convert.ToBoolean(_dt.Rows[0]["djyp"].ToString()) == true || Convert.ToBoolean(_dt.Rows[0]["JSYP"].ToString()) == true)
                            {
                                FrmMessageBox.Show("毒麻精神类药品必须凭当日处方取药，过期处方无效且不能取药！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            }
                        }
                    }

                    #endregion

                    if (myRow["医嘱内容"].ToString().IndexOf("「交病人」") > 0 ||
                        myRow["医嘱内容"].ToString().IndexOf("「出院带药」") > 0 ||
                        myRow["医嘱内容"].ToString().IndexOf("「交医生」") > 0 ||
                        myRow["医嘱内容"].ToString().IndexOf("「交护办」") > 0)
                    {
                        myRow["mngtype"] = 5;
                        if (myRow["医嘱内容"].ToString().IndexOf("「出院带药」") > 0)
                        {
                            myRow["jz_flag"] = 1;
                        }
                    }
                    TY = true;
                    if (tc.SelectedTab.Title.Trim() == "临时医嘱")//临时医嘱用jldwlx
                    {
                        if (myRow["jldwlx"].ToString() == "")
                        {
                            if (pageType == 0) myRow["jldwlx"] = 1;
                            else
                                myRow["jldwlx"] = myTb_Model.Rows[i]["单位类型"];
                        }
                    }
                    else
                    {
                        if (myRow["dwlx"].ToString() == "")
                        {
                            if (pageType == 0) myRow["dwlx"] = 1;
                            else
                                myRow["dwlx"] = myTb_Model.Rows[i]["单位类型"];
                        }
                    }
                    myRow["HOitem_ID"] = myTb_Model.Rows[i]["HOitem_ID"];

                    if (myTb_Model.Rows[i]["nType"].ToString().Trim() == "1" && myQuery.PSYP(myTb_Model.Rows[i]["hoitem_id"].ToString()) == true)
                    {
                        FrmMessageBox.Show("注 意！\n“" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + "”是皮试药品，请添加皮试！",
                                           new Font("宋体", 12f), Color.Red, "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        myRow["ps_flag"] = 3;
                        if (myRow["医嘱内容"].ToString().IndexOf("「免试」", 0) < 0)
                        {
                            myRow["医嘱内容"] += " 「免试」";
                        }
                    }
                    int FlagYdgy = 0;//是否有多个执行科室
                    string execdeptname = "";
                    bool Wpp = false;
                    //判断是否缺药
                    for (int j = 0; j < this.SelectDataView.Table.Rows.Count; j++)
                    {
                        if (myTb_Model.Rows[i]["HOITEM_ID"].ToString().Trim() == "-1" && myTb_Model.Rows[i]["执行科室"].ToString().Trim() == "-1")
                        {
                            //外来药品，不需要判断停药
                            TY = false;
                            break;
                        }
                        //DataRow[] row1 = this.SelectDataView.Table.Select("order_id=1304 and xmly=" + myTb_Model.Rows[i]["xmly"].ToString().Trim() + "");
                        //s-----------------------------------
                        if (SelectDataView.Table.Rows[j]["order_id"].ToString().Trim() == myTb_Model.Rows[i]["hoitem_id"].ToString().Trim()
                            && SelectDataView.Table.Rows[j]["xmly"].ToString().Trim() == myTb_Model.Rows[i]["xmly"].ToString().Trim())
                        {

                            //增加医保的判断 add by zouchihua 2012-8-27
                            if ((new SystemCfg(6021, InstanceForm._database)).Config == "1"
                        && patientInfo1.lbJSLX.Text.IndexOf("医保") >= 0
                        && SelectDataView.Table.Rows[j]["自付比"].ToString().Trim() == ""
                        && SelectDataView.Table.Rows[j]["type"].ToString().Trim() != "7")
                            {
                                FrmMessageBox.Show("【" + SelectDataView.Table.Rows[j]["医嘱内容"].ToString().Trim() + "】未匹配" + "  \n该病人为医保病人，不允许开未匹配的药品或项目！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                Wpp = true;
                                break;
                            }




                            int flag = 0;//是否有多个执行科室
                            DataRow[] row = this.SelectDataView.Table.Select("order_id=" + myTb_Model.Rows[i]["hoitem_id"].ToString().Trim() + " and xmly=" + myTb_Model.Rows[i]["xmly"].ToString().Trim() + "");
                            //add by zouchihua 2012-2-17 如果选择的药房与模板中药房不相同时 则弹出提示选择
                            if (cmbYF.SelectedValue.ToString().Trim() != myTb_Model.Rows[i]["执行科室"].ToString().Trim())
                            {
                                int jfflag = 0;
                                //默认执行科室是否与选择药房一致
                                DataRow[] mbrrow;
                                DataRow[] rroww = this.SelectDataView.Table.Select("order_id=" + myTb_Model.Rows[i]["hoitem_id"].ToString().Trim() + " and xmly=" + myTb_Model.Rows[i]["xmly"].ToString().Trim() + " and  default_dept=" + cmbYF.SelectedValue.ToString().Trim() + "");
                                if (rroww.Length > 0)
                                {
                                    myRow["执行科室"] = cmbYF.SelectedValue.ToString().Trim();//默认执行科室
                                    jfflag = 1;
                                }
                                else
                                {
                                    //默认执行科室是否与模板保存呢执行科室一致
                                    mbrrow = this.SelectDataView.Table.Select("order_id=" + myTb_Model.Rows[i]["hoitem_id"].ToString().Trim() + " and xmly=" + myTb_Model.Rows[i]["xmly"].ToString().Trim() + " and  default_dept=" + myTb_Model.Rows[i]["执行科室"].ToString().Trim() + "");
                                    if (mbrrow.Length > 0)
                                    {
                                        myRow["执行科室"] = myTb_Model.Rows[i]["执行科室"].ToString().Trim();//默认执行科室
                                        jfflag = 1;
                                    }
                                }
                                if (jfflag == 0)
                                {
                                    if (row != null && row.Length > 1)
                                    {
                                        flag = 1;
                                    }
                                    if (FlagYdgy >= 1)
                                    {
                                        if (myRow["执行科室"].ToString().Trim() != SelectDataView.Table.Rows[j]["default_dept"].ToString().Trim())
                                        {
                                            // MessageBox.Show(myRow["执行科室"].ToString().Trim() + "++" + SelectDataView.Table.Rows[j]["default_dept"].ToString().Trim());
                                            if (MessageBox.Show(myRow["医嘱内容"].ToString() + "有多个执行科室\n是否将现有执行科室【" + execdeptname + "】改为【" + SelectDataView.Table.Rows[j]["deptname"].ToString() + "】", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) == DialogResult.Yes)
                                            {
                                                myRow["执行科室"] = SelectDataView.Table.Rows[j]["default_dept"];//默认执行科室
                                                execdeptname = SelectDataView.Table.Rows[j]["deptname"].ToString();
                                            }
                                        }
                                    }
                                    else
                                    {
                                        //Add by Zouchihua 2011-11-14 更改执行科室
                                        myRow["执行科室"] = SelectDataView.Table.Rows[j]["default_dept"];//默认执行科室
                                        //MessageBox.Show(myRow["执行科室"].ToString() + " ee" + SelectDataView.Table.Rows[j]["default_dept"].ToString());
                                        execdeptname = SelectDataView.Table.Rows[j]["deptname"].ToString();

                                    }
                                }
                            }
                            else
                            {
                                myRow["执行科室"] = myTb_Model.Rows[i]["执行科室"].ToString().Trim();//默认执行科室
                            }
                            myRow["医嘱内容"] = SelectDataView.Table.Rows[j]["医嘱内容"].ToString();
                            if (SelectDataView.Table.Rows[j]["缺"].ToString() == "缺" && SelectDataView.Table.Rows[j]["基数"].ToString() != "√")
                            {
                                // myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + " 「自备」";
                                myRow["医嘱内容"] = SelectDataView.Table.Rows[j]["医嘱内容"].ToString() + " 「自备」";//Modify by zouchihua 2011-11-14
                                myRow["执行科室"] = -1;
                                execdeptname = "无";
                                strQY += "\n" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim();
                            }
                            if (pageType == 0 || (myTb_Model.Rows[i]["nType"].ToString().Trim() == "3"))//长嘱，或中草药时，判断剂量单位是否和现在维护的一样（单位类型为1的情况）
                            {
                                if (SelectDataView.Table.Rows[j]["单位"].ToString().Trim() != myTb_Model.Rows[i]["单位"].ToString().Trim())
                                {
                                    FrmMessageBox.Show("模板中“ " + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + " ”的单位“ " + myTb_Model.Rows[i]["单位"].ToString().Trim() + " ”已被药房停用，" +
                                        "\n系统将自动修正单位，请查验剂量是否正确！\n有必要重新创建模板。", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                    myRow["单位"] = SelectDataView.Table.Rows[j]["单位"].ToString().Trim();
                                }
                            }
                            FlagYdgy += 1;
                            TY = false;
                            if (flag == 0 || row.Length == FlagYdgy)
                                break;
                        }

                    }
                    if (Wpp == true)
                        continue;

                    if (TY)
                    {
                        for (int j = 0; j < this.SelectDataView.Table.Rows.Count; j++)
                        {
                            //找不到去找规格相同的
                            if (SelectDataView.Table.Rows[j]["项目代码"].ToString().Trim() == myTb_Model.Rows[i]["item_code"].ToString().Trim()
                           && SelectDataView.Table.Rows[j]["xmly"].ToString().Trim() == myTb_Model.Rows[i]["xmly"].ToString().Trim())
                            {
                                myRow["执行科室"] = SelectDataView.Table.Rows[j]["default_dept"];
                                myRow["医嘱内容"] = SelectDataView.Table.Rows[j]["医嘱内容"].ToString().Trim();
                                myRow["HOitem_ID"] = SelectDataView.Table.Rows[j]["order_id"];
                                myRow["item_code"] = SelectDataView.Table.Rows[j]["项目代码"];
                                TY = false;
                                break;
                            }
                        }
                    }
                    if (TY) //被停用的药品
                    {
                        if (myTb_Model.Rows[i]["开始时间"].ToString() != "")//一组第一行
                            QYisZdyh = 1;

                        myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"].ToString().Trim() + " 「自备」";
                        myRow["执行科室"] = -1;

                        strTY += "\n" + myTb_Model.Rows[i]["医嘱内容"].ToString().Trim();
                        continue; //被停用的药不显示
                    }
                    else
                    {
                        //如果第一组第一行停药了
                        if (QYisZdyh == 1)
                        {
                            myRow["开始时间"] = dTime;
                            myRow["用法"] = stryf;
                            myRow["频率"] = strpc;
                            myRow["剂数"] = strfs;
                            QYisZdyh = 0;

                        }
                        if (myTb_Model.Rows[i]["开始时间"].ToString() != "")//没停药且开始时间不为空
                            QYisZdyh = 0;
                    }

                }
                else
                {
                    //add by zouchihua 2013-9-23 模版增加判断
                    if (cfg6082.Config.Trim() == "1" && tc.SelectedTab.Title.Trim() == "长期医嘱" && myQuery.IsExsitsorderid(myTb, myTb_Model.Rows[i]["hoitem_id"].ToString().Trim(), DateManager.ServerDateTimeByDBType(InstanceForm._database), this.BinID.ToString(), this.BabyID.ToString()))
                    {
                        if (MessageBox.Show("已经开了相同的【" + myTb_Model.Rows[i]["医嘱内容"] + "】！是否继续开此医嘱？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                        {
                            continue;
                        }
                    }
                    //Modify by zouchihua 检查项目执行科室
                    int j = 0;
                    string FirstExecdept = "-1";//找到的第一个执行科室
                    int BZ = -1;
                    int fistrow = -1;
                    bool wpps = false;
                    for (j = 0; j < this.SelectDataView.Table.Rows.Count; j++)
                    {

                        if (SelectDataView.Table.Rows[j]["order_id"].ToString().Trim() == myTb_Model.Rows[i]["hoitem_id"].ToString().Trim()
                            && SelectDataView.Table.Rows[j]["xmly"].ToString().Trim() == myTb_Model.Rows[i]["xmly"].ToString().Trim())
                        {
                            //增加医保的判断 add by zouchihua 2012-8-27
                            if ((new SystemCfg(6021, InstanceForm._database)).Config == "1"
                        && patientInfo1.lbJSLX.Text.IndexOf("医保") >= 0
                        && SelectDataView.Table.Rows[j]["自付比"].ToString().Trim() == ""
                        && SelectDataView.Table.Rows[j]["type"].ToString().Trim() != "7")
                            {
                                FrmMessageBox.Show("【" + SelectDataView.Table.Rows[j]["医嘱内容"].ToString().Trim() + "】未匹配" + "该病人为医保病人，不允许开未匹配的药品或项目！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                wpps = true;
                                break;
                            }
                            //1 先保存第一个匹配的执行科室
                            // 2 如果找到与模板中保存的执行科室相同的记录，复制，并且跳出循环
                            //3 如果没有找到保存模板中匹配的就 赋值第一个匹配的执行科室
                            //4 都不满足，执行科室改为-1
                            //add by zouchihua 2012-3-27 获得选项卡中的第一个执行科室
                            if (FirstExecdept == "-1")
                            {
                                FirstExecdept = SelectDataView.Table.Rows[j]["default_dept"].ToString();
                                fistrow = j;
                            }
                            if (SelectDataView.Table.Rows[j]["default_dept"].ToString().Trim() == myTb_Model.Rows[i]["执行科室"].ToString().Trim())
                            {
                                //Add by Zouchihua 2011-11-14 更改执行科室
                                myRow["执行科室"] = SelectDataView.Table.Rows[j]["default_dept"];//默认执行科室
                                myRow["医嘱内容"] = SelectDataView.Table.Rows[j]["医嘱内容"].ToString();
                                myRow["类型"] = myTb_Model.Rows[i]["类型"];
                                myRow["剂量"] = myTb_Model.Rows[i]["剂量"];
                                myRow["单位"] = myTb_Model.Rows[i]["单位"];
                                myRow["HOitem_ID"] = SelectDataView.Table.Rows[j]["order_id"];
                                myRow["item_code"] = SelectDataView.Table.Rows[j]["项目代码"];
                                BZ = 1;
                                break;
                            }
                        }
                    }
                    if (wpps == true)
                        continue;
                    if (BZ == -1 && fistrow == -1)
                    {
                        if (myTb_Model.Rows[i]["HOitem_ID"].ToString() != "-1")
                        {
                            FrmMessageBox.Show("模板中有如下项目被禁用：" + myRow["医嘱内容"].ToString() + "\n\n▲请重新输入。", new Font("宋体", 10.5f), Color.Blue, "缺药提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            // myRow["HOitem_ID"] = myTb_Model.Rows[i]["HOitem_ID"];
                            continue;
                        }
                        else
                        {
                            myRow["HOitem_ID"] = -1;
                            myRow["item_code"] = -1;
                            myRow["剂量"] = 1;
                        }
                    }
                    else
                        if (BZ == -1 && fistrow != -1)
                        {
                            //add by zouchihua 2012-3-27
                            myRow["执行科室"] = SelectDataView.Table.Rows[fistrow]["default_dept"];//默认执行科室
                            myRow["医嘱内容"] = SelectDataView.Table.Rows[fistrow]["医嘱内容"].ToString();
                            myRow["类型"] = myTb_Model.Rows[i]["类型"];
                            myRow["剂量"] = myTb_Model.Rows[i]["剂量"];
                            myRow["单位"] = myTb_Model.Rows[i]["单位"];
                            myRow["HOitem_ID"] = SelectDataView.Table.Rows[fistrow]["order_id"];
                            myRow["item_code"] = SelectDataView.Table.Rows[fistrow]["项目代码"];
                        }

                }
                string dllxsrt = "";
                if (tc.SelectedTab.Title.Trim() == "临时医嘱")//临时医嘱用jldwlx
                    dllxsrt = myRow["jldwlx"].ToString().Trim();
                else
                    dllxsrt = myRow["dwlx"].ToString().Trim();
                if (dllxsrt.Trim() == "9")
                {
                    if (cfg6048.Config.Trim() == "1")//add by zouchihua 2012-5-31 开中药处方收取中药费是否关联用法 0=否 1=是
                        //add by zouchihua 2012-5-7 如果是收取煎药费默认用法为 待煎
                        myRow["用法"] = "代煎";
                }
                else
                {
                    if (myTb_Model.Rows[i]["ntype"].ToString() == "3")
                    {
                        if (cfg6048.Config.Trim() == "1")//add by zouchihua 2012-5-31 开中药处方收取中药费是否关联用法 0=否 1=是
                            myRow["用法"] = "自煎";
                        //用法自煎是否交病人 add by zouchiua 2012-5-8 
                        string IsJbr = "0";
                        try
                        {
                            IsJbr = new SystemCfg(19001).Config;
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(ex.Message);
                        }
                        //只有临时医嘱才能交病人
                        if (myDataGrid1 == this.dataGrid_TempOrder)
                        {
                            if (IsJbr == "0")
                            {
                                myRow["医嘱内容"] = myRow["医嘱内容"].ToString();// +" 「交病人」";Modify By Tany 2011-06-29 不要默认煎药费
                            }
                            else
                            {
                                myRow["医嘱内容"] = myRow["医嘱内容"].ToString() + " 「交病人」";//Modify By Tany 2011-06-29 不要默认煎药费
                                myRow["mngtype"] = 5;
                            }

                        }
                    }
                }
                //add by zouchihua 2013-8-4 中草药用ps_order来保存模版id，以便获取模版名称
                if (Mbmc != null && myTb_Model.Rows[i]["ntype"].ToString() == "3" && cfg6070.Config.Trim() == "1")
                {
                    try
                    {
                        myRow["PS_ORDERID"] = new Guid(Mbmc);
                    }
                    catch
                    {

                    }
                }
                myTb.Rows.Add(myRow);
            }
            if (strQY != "") FrmMessageBox.Show("模板中有如下药品缺少：" + strQY + "\n\n▲以上药品系统已自动默认为自备药，\n 有必要请用户重新输入。", new Font("宋体", 10.5f), Color.Blue, "缺药提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
            if (strTY != "") FrmMessageBox.Show("模板中有如下药品被药房停用：" + strTY + "\n\n▲请用户重新输入。", new Font("宋体", 10.5f), Color.Blue, "停药提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
            if (Jbkz != "") FrmMessageBox.Show(Jbkz + "！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            myTb.Rows.Add(myTb.NewRow());
            myDataGrid1.DataSource = null;
            myDataGrid1.DataSource = myTb.Copy();
            //为防止失去焦点
            DataGridCell myCell = new DataGridCell(nrow, ncol);
            myDataGrid1.CurrentCell = myCell;
            myDataGrid1.CurrentRowIndex = myTb.Rows.Count;
        }
        #endregion

        private void oo20041026ooloadModel(DataGridEx myDataGrid1)
        {
            int i, NullRowCount = 0;
            //首先得到基本的网格信息			
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            //得到选择的模板的基本信息
            string MODEL_NAME = this.listView1.FocusedItem.Text.Trim();
            string str = this.listView1.FocusedItem.SubItems[1].Text.Trim();
            DataTable myTb_Model = new DataTable();
            if (str == "本人") myTb_Model = myQuery.GetModel(MODEL_NAME, this.DeptID, this.YS_ID, 2);
            else if (str == "科室") myTb_Model = myQuery.GetModel(MODEL_NAME, this.DeptID, this.YS_ID, 1);
            else myTb_Model = myQuery.GetModel(MODEL_NAME, this.DeptID, this.YS_ID, 0);

            //如果在长期医嘱上开中草药处方，给予提示
            if (myTb_Model.Rows[0]["ntype"].ToString() == "3" && myDataGrid1 == this.dataGrid_LongOrder)
            {
                if (MessageBox.Show("你确定要在长期医嘱上开中草药处方吗?", "警告", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning) == DialogResult.Cancel) return;
            }

            //定位行于最后一组医嘱以下的第二行
            int tbCount = myTb.Rows.Count - 1;
            for (i = myTb.Rows.Count - 1; i >= 0; i--)
            {
                if (myTb.Rows[i]["医嘱内容"].ToString() == "")
                {
                    //继续
                    NullRowCount++;
                }
                else
                {
                    //跳出
                    break;
                }
            }
            for (i = NullRowCount; i > 0; i--) myTb.Rows.RemoveAt(tbCount--);

            DateTime dTime = DateManager.ServerDateTimeByDBType(InstanceForm._database);

            for (i = 0; i <= myTb_Model.Rows.Count - 1; i++)
            {
                DataRow myRow = myTb.NewRow();
                if (i == 0)
                {
                    if (myTb_Model.Rows[0]["ntype"].ToString() == "3")
                    {
                        if (MessageBox.Show("该模板是中草药处方，是否需要（代煎）？\r\r如需要（代煎）,默认用法为【水煎服】！", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) == DialogResult.Yes)
                        {
                            myRow["用法"] = "水煎服";
                            myRow["dwlx"] = 9;
                            //保存收取煎药费的日志信息 add by zouchihua 2012-12-28
                            myQuery.SaveLog(DeptID, YS_ID, "收取煎药费", this.BinID.ToString() + "的医嘱【" + myRow["医嘱内容"] + "】收取煎药费", 0, 41);
                        }
                    }
                    myRow["开始时间"] = dTime;

                    myRow["用法"] = myTb_Model.Rows[i]["用法"];
                    myRow["频率"] = myTb_Model.Rows[i]["频率"];
                    myRow["剂数"] = myTb_Model.Rows[i]["付数"];
                    myRow["首日执行次数"] = myTb_Model.Rows[i]["首日执行次数"];
                }

                myRow["类型"] = myTb_Model.Rows[i]["类型"];
                myRow["医嘱内容"] = myTb_Model.Rows[i]["医嘱内容"];
                myRow["剂量"] = myTb_Model.Rows[i]["剂量"];
                myRow["单位"] = myTb_Model.Rows[i]["单位"];
                myRow["status_flag"] = 0;
                myRow["执行科室"] = myTb_Model.Rows[i]["执行科室"];
                myRow["ID"] = Guid.Empty;
                if (myTb_Model.Rows[i]["nType"].ToString().Trim() == "1" || myTb_Model.Rows[i]["nType"].ToString().Trim() == "2" || myTb_Model.Rows[i]["nType"].ToString().Trim() == "3")
                {
                    myRow["HOitem_ID"] = myTb_Model.Rows[i]["Item_Code"];
                }
                else
                {
                    myRow["HOitem_ID"] = myTb_Model.Rows[i]["HOitem_ID"];
                }
                myTb.Rows.Add(myRow);
            }


            myTb.Rows.Add(myTb.NewRow());
            myDataGrid1.DataSource = myTb.Copy();
            //为防止失去焦点
            DataGridCell myCell = new DataGridCell(nrow, ncol);
            myDataGrid1.CurrentCell = myCell;
            myDataGrid1.CurrentRowIndex = myTb.Rows.Count;
        }


        #endregion

        #region 模板右键菜单事件
        private void menuItem2_Click(object sender, System.EventArgs e)
        {
            this.tabControl2.SelectedIndex = 2;
        }

        //删除模版
        private void menuItem4_Click(object sender, System.EventArgs e)
        {
            #region
            //string MODEL_NAME = this.listView1.FocusedItem.Text.Trim();  //获得模版名称
            //Crownwood.Magic.Controls.TabControl tc = null;
            //tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //string ssql = "select ID from ZY_ORDERMODEL where MODEL_NAME='" + MODEL_NAME.Trim() + "' and ward_id='" + InstanceForm._currentDept.WardId + "'";
            //DataTable dt = InstanceForm._database.GetDataTable(ssql);

            //if (this.listView1.SelectedItems.Count == 0) return;

            //if (tc.SelectedTab.Title.Trim() == "长期医嘱" || tc.SelectedTab.Title.Trim() == "临时医嘱")
            //{
            //    if (InstanceForm._database.GetDataTable("select * from ZY_ORDERRECORD_MODEL where delete_bit=0 and MODEL_NAME='" + MODEL_NAME.Trim() + "' and operator=" + this.YS_ID.ToString() + "").Rows.Count == 0)
            //    {
            //        MessageBox.Show("该模板不是你创建的，你不能删除！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            //        return;
            //    }
            //    if (MessageBox.Show("你确定删除 ‘" + MODEL_NAME + "’ 模板吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No) return;

            //    InstanceForm._database.DoCommand("update ZY_ORDERRECORD_MODEL set delete_bit=1 where delete_bit=0 and MODEL_NAME='" + MODEL_NAME.Trim() + "' and operator=" + this.YS_ID.ToString() + "");

            //    this.listView1.FocusedItem.Remove();
            //    return;
            //}
            //if (tc.SelectedTab.Title.Trim() == sTab0 || tc.SelectedTab.Title.Trim() == sTab1)
            //{
            //    if (InstanceForm._database.GetDataTable("select * from ZY_ORDERMODEL where CANCEL_BIT=0 and MODEL_NAME='" + MODEL_NAME.Trim() + "' and operator=" + this.YS_ID.ToString() + "").Rows.Count == 0)
            //    {
            //        MessageBox.Show("该模板不是你创建的，你不能删除！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            //        return;
            //    }
            //    if (MessageBox.Show("你确定删除 ‘" + MODEL_NAME + "’ 模板吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No) return;

            //    InstanceForm._database.DoCommand("DELETE ZY_ORDERMODEL_DTL WHERE ID = " + Convert.ToInt32(dt.Rows[0]["ID"].ToString()) + "");
            //    InstanceForm._database.DoCommand("DELETE ZY_ORDERMODEL WHERE ID = " + Convert.ToInt32(dt.Rows[0]["ID"].ToString()) + "");
            //    this.listView1.FocusedItem.Remove();
            //}
            #endregion
            if (this.listView1.SelectedItems.Count == 0) return;
            string mbid = this.listView1.FocusedItem.Tag.ToString().Trim();  //获得模版id
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            string ssql = "select *,mbmc from JC_CFMB where  MBXH='" + mbid + "'";
            DataTable dt = InstanceForm._database.GetDataTable(ssql);
            string MODEL_NAME = dt.Rows[0]["mbmc"].ToString();
            if (tc.SelectedTab.Title.Trim() == "长期医嘱" || tc.SelectedTab.Title.Trim() == "临时医嘱")
            {
                if (InstanceForm._database.GetDataTable("select * from JC_CFMB where  MBXH='" + mbid + "' and djy=" + this.YS_ID.ToString() + "").Rows.Count == 0)
                {
                    MessageBox.Show("该模板不是你创建的，你不能删除！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }
                if (MessageBox.Show("你确定删除 ‘" + MODEL_NAME + "’ 模板吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No) return;
                InstanceForm._database.BeginTransaction();
                try
                {
                    InstanceForm._database.DoCommand("update JC_CFMB  set BSCBZ=1 where  MBXH='" + mbid + "' ");
                    InstanceForm._database.DoCommand("delete  from  JC_CFMB_MX where  MBXH='" + mbid + "' ");
                    InstanceForm._database.CommitTransaction();
                    this.listView1.FocusedItem.Remove();
                }
                catch (Exception ex)
                {
                    InstanceForm._database.RollbackTransaction();
                    MessageBox.Show(ex.Message, "删除失败！！");
                }

            }
        }
        #region 显示本人的、全院的、科室的模版
        /// <summary>
        /// 显示本人的、全院的、科室的模版
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void menuItem_Click(object sender, System.EventArgs e)
        {
            mbtj = "";
            MenuItem mitem = (MenuItem)sender;
            this.listView1.Items.Clear();
            if (mitem.Text == "本人的")
            {
                mbtype = "2";
                InitModel(2);
            }
            else if (mitem.Text == "科室的")
            {
                InitModel(1);
                mbtype = "1";
            }
            else
            {
                InitModel(0);
                mbtype = "0";
            }
        }
        #endregion

        #endregion
        #endregion

        #region 插入皮试结果说明(未用)
        private void button1_Click(object sender, System.EventArgs e)
        {
            checkPage();
            if (pageType == 0) InsertPsResult(this.dataGrid_LongOrder, "+");
            else InsertPsResult(this.dataGrid_TempOrder, "+");

        }
        private void button2_Click(object sender, System.EventArgs e)
        {
            checkPage();
            if (pageType == 0) InsertPsResult(this.dataGrid_LongOrder, "-");
            else InsertPsResult(this.dataGrid_TempOrder, "-");
        }
        private void InsertPsResult(DataGridEx myDataGrid1, string result)
        {
            //首先得到基本的网格信息
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            myTb.Rows[nrow]["医嘱内容"] = myTb.Rows[nrow]["医嘱内容"].ToString().Trim() + "   皮试(" + result + ")";
        }
        #endregion

        #region 插入医嘱加急(或其它)说明、长期和临时账单的整理功能
        private void button3_Click(object sender, System.EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            checkPage();
            if (tc.SelectedTab.Title.Trim() == "长期医嘱")
            {
                InsertAddi(this.dataGrid_LongOrder, "加  急");
                return;
            }
            if (tc.SelectedTab.Title.Trim() == "临时医嘱")
            {
                InsertAddi(this.dataGrid_TempOrder, "加  急");
                return;
            }
            if (tc.SelectedTab.Title.Trim() == sTab0)
            {
                DataGrid_ZD_ZL(this.dataGrid_LongZD);
                return;
            }
            if (tc.SelectedTab.Title.Trim() == sTab1)
            {
                DataGrid_ZD_ZL(this.dataGrid_TempZD);
                return;
            }
        }

        private void InsertAddi(DataGridEx myDataGrid1, string str)
        {
            this.statusBar1.Text = hint[6].Trim();
            //首先得到基本的网格信息
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            if (myTb.Rows.Count == 0) return;
            if (myTb.Rows[nrow]["医嘱内容"] == System.DBNull.Value) return;
            if (Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString()) > 1) return;
            if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("(" + str + ")", 0) >= 0) return;
            myTb.Rows[nrow]["医嘱内容"] = myTb.Rows[nrow]["医嘱内容"].ToString().Trim() + "   (" + str + ")";

            //为防止失去焦点
            myDataGrid1.Focus();
            DataGridCell myCell = new DataGridCell(nrow, ncol);
            myDataGrid1.CurrentCell = myCell;
            myDataGrid1.CurrentRowIndex = nrow;//myTb.Rows.Count;
            if (pageType == 0) XG1 = true;
            else XG2 = true;
        }

        #region 整理长期和临时账单
        /// <summary>
        /// 整理长期和临时账单
        /// </summary>
        /// <param name="myDataGrid1"></param>
        private void DataGrid_ZD_ZL(DataGridEx myDataGrid1)
        {
            this.statusBar1.Text = "清理已写账单以下的空白列,产生新账单组的嘱号";
            //变量定义
            int nrow, ncol, i;
            long tempYZH = 0, minYZH = 0;

            //变量付初始值
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            nrow = myDataGrid1.CurrentCell.RowNumber;
            ncol = myDataGrid1.CurrentCell.ColumnNumber;

            try
            {
                //整理空行
                if (myTb.Rows.Count > 0)
                {
                    for (i = 0; i <= myTb.Rows.Count - 2; i++)
                    {
                        if (myTb.Rows[i]["医嘱内容"].ToString().Trim() == "" && myTb.Rows[i + 1]["医嘱内容"].ToString().Trim() == "")
                        {
                            myTb.Rows[i].Delete();
                            i--;
                        }
                    }
                }

                if (myTb.Rows.Count > 2)
                {
                    minYZH = Convert.ToInt32(myTb.Rows[0]["嘱号"]);
                    tempYZH = minYZH;
                    //整理嘱号
                    for (i = 0; i <= myTb.Rows.Count - 1; i++)
                    {
                        if (myTb.Rows[i]["医嘱内容"].ToString().Trim() != "")
                        {
                            myTb.Rows[i]["嘱号"] = tempYZH.ToString();
                        }
                        else
                        {
                            tempYZH++;
                            myTb.Rows[i]["嘱号"] = "";
                        }
                    }

                    //整理用法，频率，执行科室
                    for (i = 1; i <= myTb.Rows.Count - 1; i++)
                    {
                        //如果上一行的内容不为空,且本行不为空
                        if (myTb.Rows[i - 1]["医嘱内容"].ToString().Trim() != "" && myTb.Rows[i]["医嘱内容"].ToString().Trim() != "")
                        {
                            if (myDataGrid1.Name.Trim() == "dataGrid_LongZD")
                            {
                                //则本行的 类型 ,用法，频率，首次,执行科室 与上一行相同
                                myTb.Rows[i]["类型"] = myTb.Rows[i - 1]["类型"];
                                myTb.Rows[i]["频率"] = myTb.Rows[i - 1]["频率"];
                                myTb.Rows[i]["首次"] = myTb.Rows[i - 1]["首次"];
                            }
                            else
                                myTb.Rows[i]["类型"] = myTb.Rows[i - 1]["类型"];
                        }
                    }
                }
                myDataGrid1.DataSource = myTb;
            }
            catch
            {
                MessageBox.Show("账单录入错误，你可以在清空账单内容后再认真填写", "提示", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
            }
        }
        #endregion

        #endregion

        #region 药品信息显示
        private void ShowInfo(DataGridEx myDataGrid1)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            int nrow, ncol;
            nrow = myDataGrid1.CurrentCell.RowNumber;
            ncol = myDataGrid1.CurrentCell.ColumnNumber;
            string ColumnName = myDataGrid1.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();
            DataTable myTb = (DataTable)myDataGrid1.DataSource;

            if (myTb == null) return;
            if (myTb.Rows.Count == 0)
            {
                this.priceInfo1.ClearYpInfo();
                return;
            }

            //更改停嘱按钮
            if (tc.SelectedTab.Title.ToString() == "长期医嘱" || tc.SelectedTab.Title.ToString() == "临时医嘱")
            {
                if (myTb.Rows[nrow]["status_flag"].ToString() == "3")
                {
                    btStopOrder.Text = "取消停F6";
                }
                else btStopOrder.Text = "停嘱F6";
                if (myTb.Rows[nrow]["status_flag"].ToString() == "2" || myTb.Rows[nrow]["status_flag"].ToString() == "3")
                    btStopOrder.Enabled = true;
                else btStopOrder.Enabled = false;
            }

            //如果是医嘱内容列
            if (ColumnName == "医嘱内容" || myTb.Rows[nrow]["ID"].ToString().Trim() != "" && new Guid(myTb.Rows[nrow]["ID"].ToString()) != Guid.Empty && myTb.Rows[nrow]["医嘱内容"].ToString() != "")
            {
                //显示药品信息
                //				myTb=(DataTable)myDataGrid1.DataSource;
                if (myTb.Rows.Count > 0)
                {
                    string xmly = Convertor.IsNull(myTb.Rows[nrow]["xmly"], "0");
                    string myDept_ID = myTb.Rows[nrow]["执行科室"].ToString().Trim();
                    //if(myType.Trim()=="")return;   //可以查看新开药品信息
                    //有效性判断
                    //					if((Convert.ToInt16(myType)==1 || Convert.ToInt16(myType)==2) && myDept_ID!="-1")//执行科室为 -1 是自备药，不做处理
                    if (Convert.ToInt16(xmly) == 1 && myDept_ID != "-1")//执行科室为 -1 是自备药，不做处理，且可以查看新开药品信息
                    {
                        int cjid = Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["hoitem_id"], "0"));
                        if (cjid <= 0) return;
                        double myNum = 0;
                        //Modify by zouchihua 2012-6-20 临时用总量
                        if (tc.SelectedTab.Title.ToString() == "临时医嘱")
                        {
                            if (myTb.Rows[nrow]["总量"].ToString() != "")
                                myNum = Convert.ToDouble(myTb.Rows[nrow]["总量"]);
                            else
                                myNum = Convert.ToDouble(myTb.Rows[nrow]["剂量"]);
                        }
                        else
                            myNum = Convert.ToDouble(myTb.Rows[nrow]["剂量"]);

                        int dwlx = 0;
                        try
                        {
                            dwlx = Convert.ToInt32(myTb.Rows[nrow]["dwlx"]);
                        }
                        catch
                        {
                            dwlx = Convert.ToInt32(myTb.Rows[nrow]["jldwlx"]);
                        }
                        //显示药品信息
                        //Modify By tany 2011-04-12 获取病人医保类型
                        int yblx = Convert.ToInt32(InstanceForm._database.GetDataResult("select yblx from zy_inpatient where inpatient_id='" + BinID + "'"));
                        //add by zouchihua 2012-6-12 dwlx=9时进行转化
                        if (dwlx == 9)
                            dwlx = 1;
                        else
                            if (dwlx.ToString().IndexOf("9") >= 0)
                                dwlx = int.Parse(dwlx.ToString().Replace("9", ""));
                        this.priceInfo1.SetYpInfo(cjid, myNum, dwlx, Convert.ToInt64(myDept_ID), yblx);
                        //显示药房
                        this.lb_dept.Tag = myDept_ID;
                        if (chk_dept.Checked) this.lb_dept.Text = new Department(Convert.ToInt32(myDept_ID), InstanceForm._database).DeptName;
                        else this.lb_dept.Text = "";

                        //add by zouchihua 2012-02-06  合理用药显示药品信息
                        #region
                        if (ColumnName == "医嘱内容")
                        {

                            if (cfg6032 == "1")
                            {
                                Rectangle rc = myDataGrid1.GetCellBounds(nrow, ncol);

                                Point po = Cursor.Position;
                                try
                                {

                                    //暂时先屏蔽 2012-6-27
                                    // hl.ShowPoint(new StringBuilder(Convert.ToInt32(this.Width - po.X - 350).ToString() + "," + Convert.ToInt32(this.Height - po.Y - 230).ToString() + "," + po.X + "," + Convert.ToInt32(po.Y + 20) + "," + myTb.Rows[nrow]["hoitem_id"].ToString() + "," + myTb.Rows[nrow]["医嘱内容"].ToString()));
                                }
                                catch (Exception ex)
                                {
                                    MessageBox.Show(ex.Message);
                                }
                            }
                        }
                        else
                            if (ColumnName == "警示灯")
                            {
                                try
                                {
                                    if (cfg6032 == "1")
                                    {
                                        hl.GetYpjgxx(myDataGrid1);
                                    }
                                }
                                catch (Exception ex)
                                {
                                    MessageBox.Show(ex.Message);
                                }
                            }
                        #endregion
                    }
                    else
                    {
                        this.priceInfo1.ClearYpInfo();
                        this.lb_dept.Tag = "";
                        this.lb_dept.Text = "";
                    }
                }
            }
        }
        #region 药品科室显示控制
        private void chk_dept_CheckedChanged(object sender, System.EventArgs e)
        {
            if (chk_dept.Checked)
            {
                try
                {
                    this.lb_dept.Visible = true;
                    this.lb_dept.Text = this.lb_dept.Tag.ToString() != "" ? new Department(Convert.ToInt32(this.lb_dept.Tag), InstanceForm._database).DeptName : "";
                }
                catch (Exception ex)
                {
                    MessageBox.Show("无该药品所属药房信息", "提示", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                }
            }
            else
            {
                this.lb_dept.Visible = false;
                this.lb_dept.Text = "";
            }
        }
        #endregion
        #endregion

        # region 交病人
        private void btJZYF_Click(object sender, System.EventArgs e)
        {

            if (this.lg == 0 || this.lg == 4) return;
            checkPage();
            if (pageType == 0)
            {
                //ChangeExec_dept(this.dataGrid_LongOrder); 
                MessageBox.Show("只能是临时医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            if (pageType == 1) ChangeExec_dept(this.dataGrid_TempOrder, btJZYF.Text.ToString().Trim());

        }

        //改变为交病人医嘱 mngtype=5 ，出院带药jz_flag=1
        private void ChangeExec_dept(DataGridEx myDataGrid1, string str)
        {
            this.statusBar1.Text = hint[11].Trim() + str + "，指定后要修改请重开。";
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            if (myTb.Rows[nrow]["status_flag"].ToString() == "") return;

            //参数控制已发送医嘱是否允许出院带药 0=不 1=是  
            if (str.Trim().Equals("出院带药") && (!(cfg6213.Config.ToString().Trim().Equals("1") && (cfg6220.Config.Trim() == "1" || myQuery.IsDeptOk(DeptID.ToString())))) && myTb.Rows[nrow]["status_flag"].ToString() == "1")
            {
                MessageBox.Show("该医嘱已经发送，不能更改为出院带药。", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            //if (myTb.Rows[nrow]["status_flag"].ToString() == "") return;
            //			if(Convert.ToInt32(myTb.Rows[nrow]["ID"].ToString().Trim())==0)
            //			{
            //				MessageBox.Show("请先保存医嘱!", "保存提示");
            //				return;
            //			}

            if (!(Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString()) == 0 || Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString()) == 1)) return;
            if (myTb.Rows[nrow]["类型"].ToString() == "") return;
            if (myTb.Rows[nrow]["mngtype"].ToString() == "5")
            {
                MessageBox.Show("该药品已经被指定，不能重新指定。", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            string typeNum = myQuery.GetyzTypeCode(myTb.Rows[nrow]["类型"].ToString());
            if (!(typeNum == "1" || typeNum == "2" || typeNum == "3"))
            {
                MessageBox.Show("医嘱选择错误！只能是药品医嘱。", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }

            #region 计算该组药品的记录行范围
            int i = 0, EndNow = -1, BeginNow = -1;
            for (i = nrow; i <= myTb.Rows.Count - 1; i++)
            {
                if (myTb.Rows[i]["医嘱内容"].ToString().Trim() == "") break;
                if (myTb.Rows[i + 1]["开始时间"].ToString() == "" && myTb.Rows[i + 1]["医嘱内容"].ToString().Trim() != "") EndNow = i + 1;
                else
                {
                    if (EndNow == -1)
                    {
                        EndNow = nrow;
                    }
                    break;
                }
            }
            for (i = nrow; i >= 0; i--)
            {
                if (i == 0) break;
                if (myTb.Rows[i]["开始时间"].ToString() == "") BeginNow = i - 1;
                else
                {
                    if (nrow == i)
                        BeginNow = i;
                    break;
                }
            }
            #endregion

            #region 本病室的药不能开出院带药
            if (str == "出院带药")
            {
                //是否允许开本病室的出院带药
                string cfgStr = (new SystemCfg(6013, InstanceForm._database)).Config;
                int cfg = 0;
                if (cfgStr != "")
                {
                    try
                    {
                        cfg = Convert.ToInt16(cfgStr);
                    }
                    catch (System.InvalidCastException err)
                    {
                        err.ToString();
                        cfg = 1;
                    }
                }
                if (cfg == 0)
                {
                    int beginN = -1, endN = -1;
                    if (BeginNow != -1 && EndNow != -1)
                    {
                        beginN = BeginNow;
                        endN = EndNow;
                    }
                    else if (BeginNow != -1 && EndNow == -1)
                    {
                        beginN = BeginNow;
                        endN = nrow;
                    }
                    else if (BeginNow == -1 && EndNow != -1)
                    {
                        beginN = nrow;
                        endN = EndNow;
                    }
                    else
                    {
                        beginN = nrow;
                        endN = nrow;
                    }

                    for (i = beginN; i <= endN; i++)
                    {
                        if (myTb.Rows[i]["执行科室"].ToString().Trim() == this.Ward_dept.ToString())
                        {
                            MessageBox.Show("“" + myTb.Rows[i]["医嘱内容"].ToString().Trim() + "”是本病室的药,不允许设为出院带药，请修改。", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                            FocusCell(myDataGrid1, i, 6);//5 没有加警示列
                            return;
                        }
                    }
                }
            }
            #endregion

            //Modify by jchl
            if (BeginNow != -1)
            {
                for (i = BeginNow; i <= EndNow; i++)
                {
                    string cjid = myTb.Rows[i]["hoitem_id"].ToString();
                    string strSql = string.Format("select COUNT(1) as num from VI_YP_YPCD where cjid='{0}' and (MZYP>0 or jsypfl=1)", cjid);
                    int iNum = int.Parse(InstanceForm._database.GetDataResult(strSql).ToString());
                    if (iNum > 0)
                    {
                        MessageBox.Show(myTb.Rows[i]["医嘱内容"].ToString() + "：麻醉药品或者第一类精神药品不允许出院带药", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        return;
                    }
                }
            }
            else
            {
                string cjid = myTb.Rows[nrow]["hoitem_id"].ToString();
                string strSql = string.Format("select COUNT(1) as num from VI_YP_YPCD where cjid='{0}' and (MZYP>0 or jsypfl=1)", cjid);
                int iNum = int.Parse(InstanceForm._database.GetDataResult(strSql).ToString());
                if (iNum > 0)
                {
                    MessageBox.Show(myTb.Rows[nrow]["医嘱内容"].ToString() + "：麻醉药品或者第一类精神药品不允许出院带药", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return;
                }
            }

            if (MessageBox.Show("你确定要将“" + myTb.Rows[nrow]["医嘱内容"].ToString().Trim() + "”" + str + "吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No) return;

            #region 修改后台记录
            Guid OrderID = new Guid(myTb.Rows[nrow]["ID"].ToString().Trim());
            int GroupID = 0;
            if (myTb.Rows[nrow]["嘱号"] != System.DBNull.Value) GroupID = Convert.ToInt32(myTb.Rows[nrow]["嘱号"].ToString().Trim());
            if (OrderID != Guid.Empty)
            {
                try
                {
                    string sSqlUpdate = "UPDATE ZY_ORDERRECORD set order_context=(case when serial_no = 0 then rtrim(order_context) + ' 「" + str + "」" + "' else order_context end),mngtype=5 " +
                        (str == "出院带药" ? ",jz_flag=1" : "") + " WHERE inpatient_id='" + this.BinID.ToString() + "' and delete_bit=0 and Group_ID=" + GroupID.ToString() + "";

                    InstanceForm._database.DoCommand(sSqlUpdate);
                    MessageBox.Show("已成功确认‘" + str + "’。", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
                catch (Exception err)
                {
                    MessageBox.Show(str + "失败" + " " + err.ToString(), "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return;
                }

            }
            #endregion

            #region 修改前台记录

            if (BeginNow != -1)
            {
                for (i = BeginNow; i <= EndNow; i++)
                {
                    myTb.Rows[i]["mngtype"] = 5;
                    myTb.Rows[i]["jz_flag"] = str == "出院带药" ? 1 : 0;
                }
                myTb.Rows[BeginNow]["医嘱内容"] = myTb.Rows[BeginNow]["医嘱内容"].ToString().Trim() + " 「" + str + "」";
            }
            else
            {
                myTb.Rows[nrow]["mngtype"] = 5;
                myTb.Rows[nrow]["jz_flag"] = str == "出院带药" ? 1 : 0;
                myTb.Rows[nrow]["医嘱内容"] = myTb.Rows[nrow]["医嘱内容"].ToString().Trim() + " 「" + str + "」";
            }
            #endregion
            // if (MessageBox.Show("你确定要将“" + myTb.Rows[nrow]["医嘱内容"].ToString().Trim() + " 总单位修改为药库单位吗 ？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No) return;
            //修改为药库单位
            //ChangeDw(null,null);
        }
        # endregion

        #region 新开医嘱费用 功能控制
        private void ChkWillGetFee_CheckedChanged(object sender, System.EventArgs e)
        {
            if (this.ChkWillGetFee.Checked == true)
            {
                timer1.Enabled = true;
                timer2.Enabled = false;
            }
            else
            {
                timer1.Enabled = false;
                timer2.Enabled = true;
                this.lViewFee.Items.Clear();
                this.lViewFee.Height = 0;
                this.label5.Visible = false;
                this.lbHJ.Text = "";
                this.lbHJ.Visible = false;
            }
        }

        private void timer1_Tick(object sender, System.EventArgs e)
        {
            if (this.lViewFee.Top <= 24)
            {
                timer1.Enabled = false;
                this.label5.Visible = true;
                this.lbHJ.Visible = true;
            }
            this.lViewFee.Height += 2;
        }


        /// <summary>
        /// 新开医嘱费用实时显示
        /// </summary>
        /// <param name="item_id">项目id</param>
        /// <param name="cjid">厂家id（项目=-1）</param>
        /// <param name="type">医嘱类型</param>
        /// <param name="dwhl">单位含量（项目=1）</param>
        /// <param name="execDept">执行科室</param>
        /// <param name="content">医嘱内容</param>
        private void GetFee(string item_id, int xmly, int type, decimal dwhl, int execDept, string content, int Jgbm)
        {
            if (type == 7) return;//说明性医嘱
            DataTable ddtt = new DataTable();
            if (type == 1 || type == 2)//成药、西药医嘱
            {
                System.Windows.Forms.ListViewItem Litem = new ListViewItem(content);
                ddtt = myQuery.getJG(dwhl, item_id.ToString(), 1, execDept, 0, Jgbm);
                string str = ddtt.Rows[0]["price"].ToString();
                Litem.SubItems.Add(str);
                this.lViewFee.Items.Add(Litem);
            }
            else if (type == 4 || type == 5 || type == 6)//治疗、医技、手术类医嘱
            {
                System.Windows.Forms.ListViewItem Litem = new ListViewItem(content);
                ddtt = myQuery.getJG(0, item_id, 0, 0, 1, Jgbm);
                string str = ddtt.Rows[0][0].ToString();
                Litem.SubItems.Add(str);
                this.lViewFee.Items.Add(Litem);
            }
            else if (type == 3)//草药医嘱
            {
                System.Windows.Forms.ListViewItem Litem = new ListViewItem(content);

                ddtt = myQuery.getJG(1, item_id.ToString(), 1, execDept, 0, Jgbm);
                decimal dd = Convert.ToDecimal(ddtt.Rows[0]["price"].ToString());
                string str = removeZero(dd).ToString();
                Litem.SubItems.Add(str);
                Litem.SubItems.Add("10");
                Litem.SubItems.Add(Convert.ToString(removeZero(Decimal.Round(dd * 10, 3))));
                this.lViewFee.Items.Add(Litem);
            }
        }

        //显示新医嘱费用
        private void GetPricehj(DataGridEx myDataGrid1)
        {
            int i, nrow, ncol;
            nrow = myDataGrid1.CurrentCell.RowNumber;
            ncol = myDataGrid1.CurrentCell.ColumnNumber;
            int BeginNow = nrow, EndNow = nrow;
            decimal HJ = 0;

            try
            {
                DataTable myTb = (DataTable)myDataGrid1.DataSource;

                for (i = 0; i < myTb.Rows.Count; i++)
                {
                    if (myTb.Rows[i]["医嘱内容"].ToString().Trim() == "")
                    {
                        continue;
                    }
                    string type = myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString());
                    int dwType = 1;
                    if (myTb.Rows[i]["dwlx"].ToString() != "") dwType = Convert.ToInt32(myTb.Rows[i]["dwlx"].ToString());
                    DataTable ddtt = new DataTable();
                    int deptID = Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["执行科室"].ToString(), "0"));
                    decimal dd = 0;//单价
                    decimal num = 0;//数量
                    decimal dwbl = 1;//单位比例
                    if (type == "1" || type == "2" || type == "3")
                    {
                        //					string str0=myTb.Rows[nrow]["ID"].ToString();
                        //add by zouchihua 2012-7-6 临时医嘱按照总量
                        decimal sl = 0;
                        if (myDataGrid1.Name != "dataGrid_TempOrder")
                            sl = Convert.ToDecimal(Convertor.IsNull(myTb.Rows[i]["剂量"].ToString(), "0")) * Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["剂数"].ToString(), "1"));
                        else
                            sl = Convert.ToDecimal(Convertor.IsNull(myTb.Rows[i]["总量"].ToString(), "0"));
                        if (sl == 0)
                            sl = Convert.ToDecimal(Convertor.IsNull(myTb.Rows[i]["剂量"].ToString(), "0")) * Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["剂数"].ToString(), "1"));
                        ddtt = myQuery.getJG(sl, Convertor.IsNull(myTb.Rows[i]["HOItem_ID"].ToString(), "0"), Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["dwlx"], "1")), Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["执行科室"], "0")), 0, Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["JGBM"], FrmMdiMain.Jgbm.ToString())));
                        if (ddtt.Rows.Count == 0) return;
                        dd = Convert.ToDecimal(ddtt.Rows[0]["price"].ToString());
                        num = Convert.ToDecimal(ddtt.Rows[0]["yl"].ToString());
                        dwbl = Convert.ToDecimal(ddtt.Rows[0]["ydwbl"].ToString());

                    }
                    else if (type == "4" || type == "5" || type == "6" || type == "8" || type == "9")
                    {
                        ddtt = myQuery.getJG(0, myTb.Rows[i]["HOItem_ID"].ToString(), 0, 0, 1, (new Department(deptID, InstanceForm._database)).Jgbm);//modify By tany 2010-12-07
                        if (ddtt.Rows.Count == 0) return;
                        if (ddtt.Rows[0][0].ToString() == "") dd = 0;
                        else dd = Convert.ToDecimal(ddtt.Rows[0][0].ToString());
                        //add by zouchihua 2012-7-6 临时医嘱按照总量
                        decimal sl = 0;
                        if (myDataGrid1.Name != "dataGrid_TempOrder")
                            sl = Convert.ToDecimal(Convertor.IsNull(myTb.Rows[i]["剂量"].ToString(), "0"));
                        else
                            sl = Convert.ToDecimal(Convertor.IsNull(myTb.Rows[i]["总量"].ToString(), "0"));
                        if (sl == 0)
                            sl = Convert.ToDecimal(Convertor.IsNull(myTb.Rows[i]["剂量"].ToString(), "0"));
                        num = sl;
                    }
                    //AddItem(myTb.Rows[i]["医嘱内容"].ToString().Trim(), dd, num);
                    HJ += dd * num;
                }
                if (cfg6063.Config.Trim() == "1")
                    this.labTempOrderHj.Text = System.Decimal.Round(HJ, 2).ToString();
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }
        //显示新医嘱费用
        private void ShowPrice(DataGridEx myDataGrid1)
        {
            int i, nrow, ncol;
            nrow = myDataGrid1.CurrentCell.RowNumber;
            ncol = myDataGrid1.CurrentCell.ColumnNumber;
            int BeginNow = nrow, EndNow = nrow;
            decimal HJ = 0;

            try
            {
                DataTable myTb = (DataTable)myDataGrid1.DataSource;
                //if (!(myTb.Rows[nrow]["status_flag"].ToString() == null || myTb.Rows[nrow]["status_flag"].ToString() == "0" || myTb.Rows[nrow]["status_flag"].ToString() == "1")) return;//不是新开就退出
                //			MessageBox.Show("abcd");//测试用
                for (i = nrow; i <= myTb.Rows.Count - 1; i++)
                {
                    if (myTb.Rows[i]["医嘱内容"].ToString() == "") break;
                    if (myTb.Rows[i + 1]["开始时间"].ToString() == "" && myTb.Rows[i + 1]["医嘱内容"].ToString() != "") EndNow = i + 1;
                    else break;
                }
                for (i = nrow; i >= 0; i--)
                {
                    if (i == 0) break;
                    if (myTb.Rows[i]["开始时间"].ToString() == "") BeginNow = i - 1;
                    else break;
                }
                this.lViewFee.Items.Clear();//先清空
                this.lbHJ.Text = "";
                for (i = BeginNow; i <= EndNow; i++)
                {
                    if (Convertor.IsNull(myTb.Rows[i]["HOItem_ID"].ToString(), "0") == "0")
                    {
                        break;
                    }
                    string type = myQuery.GetyzTypeCode(myTb.Rows[i]["类型"].ToString());
                    int dwType = 1;
                    if (myTb.Rows[i]["dwlx"].ToString() != "") dwType = Convert.ToInt32(myTb.Rows[i]["dwlx"].ToString());
                    DataTable ddtt = new DataTable();
                    int deptID = Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["执行科室"].ToString(), "0"));
                    decimal dd = 0;//单价
                    decimal num = 0;//数量
                    decimal dwbl = 1;//单位比例
                    if (type == "1" || type == "2" || type == "3")
                    {
                        //					string str0=myTb.Rows[nrow]["ID"].ToString();
                        //add by zouchihua 2012-7-6 临时医嘱按照总量
                        decimal sl = 0;
                        if (myDataGrid1.Name != "dataGrid_TempOrder")
                            sl = Convert.ToDecimal(Convertor.IsNull(myTb.Rows[i]["剂量"].ToString(), "0")) * Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["剂数"].ToString(), "1"));
                        else
                            sl = Convert.ToDecimal(Convertor.IsNull(myTb.Rows[i]["总量"].ToString(), "0"));
                        if (sl == 0)
                            sl = Convert.ToDecimal(Convertor.IsNull(myTb.Rows[i]["剂量"].ToString(), "0")) * Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["剂数"].ToString(), "1"));
                        ddtt = myQuery.getJG(sl, Convertor.IsNull(myTb.Rows[i]["HOItem_ID"].ToString(), "0"), Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["dwlx"], "1")), Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["执行科室"], "0")), 0, Convert.ToInt32(Convertor.IsNull(myTb.Rows[i]["JGBM"], FrmMdiMain.Jgbm.ToString())));
                        if (ddtt.Rows.Count == 0) return;
                        dd = Convert.ToDecimal(ddtt.Rows[0]["price"].ToString());
                        num = Convert.ToDecimal(ddtt.Rows[0]["yl"].ToString());
                        dwbl = Convert.ToDecimal(ddtt.Rows[0]["ydwbl"].ToString());

                    }
                    else if (type == "4" || type == "5" || type == "6" || type == "8" || type == "9")
                    {
                        ddtt = myQuery.getJG(0, myTb.Rows[i]["HOItem_ID"].ToString(), 0, 0, 1, (new Department(deptID, InstanceForm._database)).Jgbm);//modify By tany 2010-12-07
                        if (ddtt.Rows.Count == 0) return;
                        if (ddtt.Rows[0][0].ToString() == "") dd = 0;
                        else dd = Convert.ToDecimal(ddtt.Rows[0][0].ToString());
                        //add by zouchihua 2012-7-6 临时医嘱按照总量
                        decimal sl = 0;
                        if (myDataGrid1.Name != "dataGrid_TempOrder")
                            sl = Convert.ToDecimal(Convertor.IsNull(myTb.Rows[i]["剂量"].ToString(), "0"));
                        else
                            sl = Convert.ToDecimal(Convertor.IsNull(myTb.Rows[i]["总量"].ToString(), "0"));
                        if (sl == 0)
                            sl = Convert.ToDecimal(Convertor.IsNull(myTb.Rows[i]["剂量"].ToString(), "0"));
                        num = sl;
                    }
                    AddItem(myTb.Rows[i]["医嘱内容"].ToString().Trim(), dd, num);
                    HJ += dd * num;
                }
                this.lbHJ.Text = System.Decimal.Round(HJ, 2).ToString();
            }
            catch
            {
            }
        }
        private void AddItem(string content, decimal price, decimal num)
        {
            System.Windows.Forms.ListViewItem Litem = new ListViewItem(content);
            decimal HJ = removeZero(price * num);
            Litem.SubItems.Add(removeZero(price).ToString());//.Substring(0,price.ToString().Length-2));
            Litem.SubItems.Add(removeZero(num).ToString());//.Substring(0,num.ToString().Length-2));
            Litem.SubItems.Add(HJ.ToString());//.Substring(0,HJ.ToString().Length-2));
            this.lViewFee.Items.Add(Litem);

        }

        #region
        private void timer2_Tick(object sender, System.EventArgs e)
        {
            hh--;
            if (hh == -40) hh = 80;
            ShowEx(lbE1, hh + 20);
            ShowEx(lbE2, hh + 40);
            ShowEx(lbE3, hh + 60);
        }
        private void ShowEx(System.Windows.Forms.Label lbE, int h)
        {
            if (h < 40 || h > 100) lbE.Visible = false;
            else lbE.Visible = true;
            lbE.Top = h;
        }
        #endregion
        #endregion

        #region 刷新按钮
        private void btRefur_Click(object sender, System.EventArgs e)
        {
            if (this.btRefur.Enabled == false) return;
            this.btRefur.Enabled = false;
            this.Cursor = PubStaticFun.WaitCursor();
            try
            {
                checkPage();
                if (pageType == 0)
                {
                    loadGrid_LongOrder();
                    YXCZ = false;
                }
                else
                {
                    loadGrid_TempOrder();
                }
            }
            catch (System.Exception err)
            {
                err.ToString();
            }
            finally
            {
                this.btRefur.Enabled = true;
                this.Cursor = Cursors.Arrow;
            }
        }
        #endregion

        # region 显示有效长嘱
        private void btAVA_Click(object sender, System.EventArgs e)
        {
            checkPage();
            if (pageType == 0)
            {
                //获取长嘱中被药房停用的药品
                //				DataTable tempTb=myQuery.StopYP(this.BinID,this.BabyID);
                //				if(tempTb.Rows.Count>0)
                //				{
                //					FrmChangYP cy=new FrmChangYP();
                //					cy.dv=SelectDataView;
                //					cy.changTb=tempTb;
                //					cy.DeptID=this.DeptID;
                //					cy.YS_ID=this.YS_ID;
                //					cy.ShowDialog();
                //				}

                DataTable myTb = myQuery.GetBinOrders(3, this.BabyID, this.BinID, this.DeptID);
                DataTable myTbb = CheckGrdDataLong(myTb);
                DataRow myRow = myTbb.NewRow();
                myTbb.Rows.Add(myRow);
                DataTable myTbBk = myTbb.Copy();
                this.dataGrid_LongOrder.DataSource = null;
                this.dataGrid_LongOrder.DataSource = myTbBk;
                this.dataGrid_LongOrder.CurrentRowIndex = myTbBk.Rows.Count - 1;
                YXCZ = true;
            }
            else
            {
                this.statusBar1.Text = "临时医嘱录入界面不能显示有效长嘱！";
            }
        }
        # endregion

        #region 自由录入状态改变提示
        private void chkAddi_CheckedChanged(object sender, System.EventArgs e)
        {
            if (chkAddi.Checked == true) this.statusBar1.Text = hint[12].Trim();
            else this.statusBar1.Text = hint[18];
        }
        #endregion
        bool jr = false;
        #region “新药信息”滑动控制
        private void timer3_Elapsed(object sender, System.Timers.ElapsedEventArgs e)
        {
            #region Modify by zouchihua 2012-9-28 交病人panel显示处理
            if (this.pnExplain.Visible)
            {

                Point p = Cursor.Position;
                Rectangle rc = new Rectangle(pnExplain.Location, pnExplain.Size);
                rc = this.RectangleToScreen(rc);
                if (!rc.Contains(p) && jr)
                {
                    this.pnExplain.Visible = false;
                    jr = false;
                }
                else
                {
                    if (rc.Contains(p))
                        jr = true;
                }
            }

            #endregion
            if (this.lbXYTS.Left >= 480) this.lbXYTS.Left = 100;
            if (this.lbXYTS.Left % 20 == 0 && SS == true)
            {
                this.lbXYTS.ForeColor = Color.Red;
                SS = false;
            }
            else if (this.lbXYTS.Left % 20 == 0 && SS == false)
            {
                this.lbXYTS.ForeColor = Color.Navy;
                SS = true;
            }
            this.lbXYTS.Left += 2;
        }

        private void btXY_Click(object sender, System.EventArgs e)
        {
            timer3.Enabled = false;
            this.btXY.Enabled = false;
            this.lbXYTS.Visible = false;
            FrmNewLack nl = new FrmNewLack();
            nl.dt = myQuery.GetNewYP();
            nl.bt = this.btXY;
            nl.Show();
        }

        private void lbXYTS_MouseEnter(object sender, System.EventArgs e)
        {
            timer3.Enabled = false;
        }

        private void lbXYTS_MouseLeave(object sender, System.EventArgs e)
        {
            timer3.Enabled = true;
        }
        #endregion

        #region 医嘱管理窗口关闭事件
        private void FrmYZGL_Closing(object sender, System.ComponentModel.CancelEventArgs e)
        {
            string str = "";
            if (this.dataGrid_LongOrder.DataSource != null)
            {
                if (Change((DataTable)this.dataGrid_LongOrder.DataSource) == true || XG1 == true) str += "长嘱";
            }
            if (this.dataGrid_TempOrder.DataSource != null)
            {
                if (Change((DataTable)this.dataGrid_TempOrder.DataSource) == true || XG2 == true) str += "临嘱";
            }
            isClose = true;
            bool isEnd = true;
            if (str != "")
            {
                if (FrmMessageBox.Show("还有" + str + "（或修改）未保存，是否现在退出？", new Font("宋体", 11F), Color.Blue, "询问", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                {
                    isClose = false;
                    isEnd = false;
                    e.Cancel = true;
                }
                else
                {
                    isClose = true;
                    if (cfg6032 == "1")//modify by zouchihua 2011-12-27
                    {
                        this.hl.Refresh();//Add By Tany 2014-08-05
                        //modify by jchl 2016-07-13
                        //this.hl.UNRegisterServer();
                        if (mz)
                        {
                            this.hl.UNRegisterServer();
                        }
                    }
                }
            }
            if (isEnd)
            {
                //是否还有未发送的医嘱
                if (myQuery.IsNotSend(this.BinID, this.BabyID) == true)
                {
                    if (FrmMessageBox.Show("还有未发送的医嘱！是否现在退出？", new Font("宋体", 11F), Color.Blue, "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Information, MessageBoxDefaultButton.Button2) == DialogResult.No)
                    {
                        isClose = false;
                        e.Cancel = true;
                    }
                    else
                    {
                        isClose = true;
                        if (cfg6032 == "1" && hl != null)//modify by zouchihua 2011-12-27
                        {

                            //modify by jchl 2016-07-13
                            if (mz)
                            {
                                this.hl.UNRegisterServer();
                            }
                            //this.hl.UNRegisterServer();
                        }
                    }
                }
            }
        }
        #endregion

        #region 母婴选择改变事件
        private void cmbChild_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            this.Cursor = PubStaticFun.WaitCursor();
            try
            {
                if (cmbChild.SelectedIndex != cmbChild.Items.Count - 1)
                {
                    this.BabyID = Convert.ToInt64(cmbChild.SelectedValue);
                    this.patientInfo1.SetInpatientInfo(this.BinID, this.BabyID, 1);
                    outTypeTemp = outType;//保存母亲的出院状态
                    outType = myQuery.OutFlag(this.BinID, this.BabyID);
                }
                else
                {
                    this.BabyID = 0;
                    this.patientInfo1.SetInpatientInfo(this.BinID, 0, 1);
                    outType = outTypeTemp;
                }
                this.Text = "";
                this.Text = cmbChild.Text;

                //Modify By tany 2011-05-09 
                Crownwood.Magic.Controls.TabControl tc = ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]);
                if (tc.TabPages.Contains(tc.TabPages["长期医嘱"]))
                {
                    loadGrid_LongOrder();
                }
                loadGrid_TempOrder();
                SelTabPage(0);//选择长嘱页面
                this.dataGrid_LongOrder.Focus();
            }
            finally
            {
                this.Cursor = Cursors.Arrow;
            }

        }
        #endregion

        #region 添加中药脚注
        private void btFootnote_Click(object sender, System.EventArgs e)
        {
            checkPage();
            if (pageType == 0) InsertZYnote(this.dataGrid_LongOrder, "");
            else InsertZYnote(this.dataGrid_TempOrder, "");

        }

        private void InsertZYnote(DataGridEx myDataGrid1, string note)
        {
            this.statusBar1.Text = hint[20].Trim();
            //首先得到基本的网格信息
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            if (myTb.Rows.Count == 0) return;
            if (myTb.Rows[nrow]["医嘱内容"] == System.DBNull.Value) return;
            if (myTb.Rows[nrow]["类型"].ToString() != "3-中草药") return;
            if (Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString()) > 1) return;
            FrmZYnote fz = new FrmZYnote();
            fz.ShowDialog();
            note = fz.note;
            if (note.Trim() != "")
            {
                string str = myTb.Rows[nrow]["医嘱内容"].ToString().Trim() + " ";
                if (str.IndexOf("【") > 0) str = str.Substring(0, str.IndexOf("【"));
                myTb.Rows[nrow]["医嘱内容"] = str + " 【" + note + "】";
            }

            //为防止失去焦点
            myDataGrid1.Focus();
            DataGridCell myCell = new DataGridCell(nrow, ncol);
            myDataGrid1.CurrentCell = myCell;
            myDataGrid1.CurrentRowIndex = nrow;//myTb.Rows.Count;
        }
        #endregion

        #region 加急、交病人按钮的右键菜单控制
        private void button3_MouseDown(object sender, System.Windows.Forms.MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Right)
            {
                MessageBox.Show("该药需要交护办摆药的：\n请在长嘱开药‘自备’；\n在临嘱开药，用法选‘摆药用’。", "注意！", MessageBoxButtons.OK, MessageBoxIcon.Information);
                //				this.Controls.Add(pnExplain);
                //				pnExplain.Visible=true;
                //				pnExplain.BringToFront();
                //				pnExplain.Left=this.panel3.Left+396;
                //				pnExplain.Top=this.panel3.Top+435;
            }
        }
        private void linkLabel1_LinkClicked(object sender, System.Windows.Forms.LinkLabelLinkClickedEventArgs e)
        {
            this.pnExplain.Visible = false;
        }
        private void pnExplain_MouseLeave(object sender, System.EventArgs e)
        {
            //Point p = Cursor.Position;
            //Rectangle rc = new Rectangle(pnExplain.Location, pnExplain.Size);
            //rc = this.RectangleToScreen(rc);
            //if (!rc.Contains(p))
            //    this.pnExplain.Visible = false;
        }
        private void linkLbJJ_LinkClicked(object sender, System.Windows.Forms.LinkLabelLinkClickedEventArgs e)
        {
            LinkLabel LK = (LinkLabel)sender;
            string str = LK.Text;
            checkPage();
            if (pageType == 0) MessageBox.Show("只能是临时医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
            else ChangeExec_dept(this.dataGrid_TempOrder, str);
            this.pnExplain.Visible = false;
        }
        private void btJZYF_MouseDown(object sender, System.Windows.Forms.MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Right)
            {
                this.Controls.Add(pnExplain);
                pnExplain.Visible = true;
                pnExplain.BringToFront();
                pnExplain.Left = this.splitter1.Location.X + this.btJZYF.Left;  //this.panel3.Left + 840;
                pnExplain.Top = this.panel4.Top - pnExplain.Height + 13; //this.panel3.Top + 395;
            }
        }
        #endregion

        #region 右下脚tabPage页选择事件
        private void tabControl2_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            this.lb_Model.Visible = false;
            if (tabControl2.SelectedIndex == 0 && this.ChkWillGetFee.Checked == false)
            {
                this.timer2.Enabled = true;
            }
            else
            {
                this.timer2.Enabled = false;
                mbtj = "";
                if (tabControl2.SelectedIndex == 2 || tabControl2.SelectedIndex == 3)
                {
                    int ad = 2;
                    if (rdDept.Checked == true) ad = 1;
                    else if (rdAll.Checked == true) ad = 0;
                    //初始化医嘱模板
                    InitModel(ad);//Modify By Tany 2010-04-19
                    //this.lb_Model.Visible = true;
                    mbtype = ad.ToString();
                }
            }
        }
        #endregion

        #region 病人信息卡双击事件
        private void patientInfo1_DoubleClick(object sender, System.EventArgs e)
        {
            MessageBox.Show(this.BinID.ToString() + "\n" + this.BabyID.ToString() + "\n" + this.DeptID.ToString(), "BinID.BabyID.DeptID");
        }
        #endregion

        # region 显示药品信息Checked改变事件
        private void chk_ypInfo_CheckedChanged(object sender, System.EventArgs e)
        {
            int nrow, ncol;
            DataGridEx myDataGrid1 = null;
            if (pageType == 0)
            {
                myDataGrid1 = this.dataGrid_LongOrder;
            }
            else
            {
                myDataGrid1 = this.dataGrid_TempOrder;
            }
            nrow = myDataGrid1.CurrentCell.RowNumber;
            ncol = myDataGrid1.CurrentCell.ColumnNumber;
            DataTable myTb = (DataTable)myDataGrid1.DataSource;

            if (this.chk_ypInfo.Checked)
            {
                try
                {
                    string myType = myTb.Rows[nrow]["类型"].ToString().Trim();
                    if (myType == "1-西药" || myType == "2-中成药")
                    {
                        int cjid = Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["HOItem_ID"], "-1"));
                        double myNum = Convert.ToDouble(Convertor.IsNull(myTb.Rows[nrow]["剂量"], "0"));
                        int dwlx = Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["dwlx"], "1"));
                        long myDept_ID = Convert.ToInt64(Convertor.IsNull(myTb.Rows[nrow]["执行科室"], "-1"));
                        //显示药品信息
                        //Modify By tany 2011-04-12 获取病人医保类型
                        int yblx = Convert.ToInt32(InstanceForm._database.GetDataResult("select yblx from zy_inpatient where inpatient_id='" + BinID + "'"));
                        this.priceInfo1.SetYpInfo(cjid, myNum, dwlx, myDept_ID, yblx);
                        //显示药房
                        this.lb_dept.Tag = myDept_ID;
                        if (chk_dept.Checked) this.lb_dept.Text = new Department(Convert.ToInt32(myDept_ID), InstanceForm._database).DeptName;
                        else this.lb_dept.Text = "";
                    }
                    else
                    {
                        this.priceInfo1.ClearYpInfo();
                        this.lb_dept.Tag = "";
                        this.lb_dept.Text = "";
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show("医嘱中无药品信息!", "提示", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                }
            }
            else
            {
                this.priceInfo1.ClearYpInfo();
                this.lb_dept.Tag = "";
                this.lb_dept.Text = "";
            }
        }
        #endregion

        #region 刷新选项卡
        private void bt_NewSelect_Click(object sender, System.EventArgs e)
        {
            this.Cursor = PubStaticFun.WaitCursor();
            myQuery.NewSelectTb(FrmMdiMain.Jgbm);
            SelectDataView = new DataView(DbQuery.SelectTb.Copy());
            //选择框增加一列
            DataColumn dc = new DataColumn("序号", typeof(int));
            this.SelectDataView.Table.Columns.Add(dc);

            LoadYbzfbl();

            this.XXC = true;
            usageTb = InstanceForm._database.GetDataTable("select upper(PY_CODE) AS 代码,name as 用法名称 from JC_UsageDiction ");
            frequencyTb = InstanceForm._database.GetDataTable("select name as 频率名称 ,execnum as 日执行次数,cycleday as 周期,exectime as 时间点,upper(py_code) 代码,type from JC_Frequency ");
            this.Cursor = Cursors.Arrow;
        }
        #endregion

        private Region GetReg(int R, System.Drawing.Size size)
        {
            int nWidth = size.Width;
            int nHeight = size.Height;
            Region rgn = new Region();
            rgn.MakeEmpty();
            System.Drawing.Drawing2D.GraphicsPath gp = new System.Drawing.Drawing2D.GraphicsPath();
            gp.FillMode = System.Drawing.Drawing2D.FillMode.Winding;

            gp.AddEllipse(0, 0, 2 * R, 2 * R);
            gp.AddEllipse(nWidth - (2 * R + 1) - 50, 0, 2 * R, 2 * R);
            gp.AddEllipse(0, nHeight - (2 * R + 1), 2 * R, 2 * R);
            gp.AddEllipse(nWidth - (2 * R + 1) - 50, nHeight - (2 * R + 1), 2 * R, 2 * R);
            gp.AddRectangle(new Rectangle(R, 0, nWidth - (2 * R + 1) - 50, nHeight));
            gp.AddRectangle(new Rectangle(0, R, nWidth - 50, nHeight - (2 * R + 1)));
            gp.AddPolygon(new Point[3] { new Point(nWidth - R - 51, 10), new Point(nWidth, 20), new Point(nWidth - R - 51, 35) });

            rgn.Union(gp);
            gp.Dispose();
            return rgn;
        }

        #region 得到长期账单中的账单内容
        /// <summary>
        /// 得到长期账单中的账单内容
        /// </summary>
        /// <param name="msg"></param>
        /// <param name="keyData"></param>
        /// <returns></returns>
        private bool dataGrid_LongZD_myKeyDown(ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData)
        {
            try
            {
                if (outType == true && lg != 0) return true;

                //变量定义
                long keyInt = Convert.ToInt32(keyData);

                //除跳格键外，其他的全屏蔽,必须放在最前面
                if (keyInt == 9 || keyInt == 37 || keyInt == 39 || (keyInt == 38 && this.GrdSel.Visible == false)) return false;

                Crownwood.Magic.Controls.TabControl tc = null;
                tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
                if (tc.SelectedTab.Title.ToString().Trim() != sTab0 && tc.SelectedTab.Title.ToString().Trim() != sTab1) return false;

                InputLanguage.CurrentInputLanguage = PubStaticFun.GetInputLanguage("美式键盘");
                shortcut(keyData);

                //变量定义
                //string sSql="";
                DataTable myTb = (DataTable)this.dataGrid_LongZD.DataSource;
                int nrow = this.dataGrid_LongZD.CurrentCell.RowNumber;
                int ncol = this.dataGrid_LongZD.CurrentCell.ColumnNumber;
                string ColumnName = this.dataGrid_LongZD.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();
                string SelStrType = "";

                //确定此列为只读,输入数字或字母或F功能键等，屏蔽输入
                //if(this.myDataGrid1.TableStyles[0].GridColumnStyles[ncol].ReadOnly==true && (keyInt>=65 && keyInt<=122))return true;
                if (dataGrid_LongZD.TableStyles[0].GridColumnStyles[ncol].ReadOnly == true && ((keyInt >= 65 && keyInt <= 135) && keyInt != 104 && keyInt != 105)) return true;

                DataGridTextBoxColumn txtColYz = (DataGridTextBoxColumn)this.dataGrid_LongZD.TableStyles[0].GridColumnStyles["医嘱内容"];
                #region 类型的输入
                if (ColumnName == "类型" && txtColYz.TextBox.Text.Trim() == "")//如果有医嘱内容则不允许修改类型			 
                {
                    //判断是否输入了数字键
                    //if(keyInt>=48 && keyInt<=57)  
                    if ((keyInt >= 56 && keyInt <= 57) || keyInt == 104 || keyInt == 105)   //只允许输入 8、9
                    {
                        string tempType = GetyzType(keyInt > 57 ? keyInt - 96 : keyInt - 48);
                        if (tempType != "" && (nrow == 0 || (nrow > 0 && myTb.Rows[nrow - 1]["医嘱内容"].ToString().Trim() == "")))
                        {
                            myTb.Rows[nrow][ColumnName] = tempType;
                            this.dataGrid_LongZD.DataSource = myTb;
                            SendKeys.Send("{tab}");
                        }
                        //屏蔽输入
                        return true;
                    }
                }
                #endregion

                #region 医嘱内容、频率、用法的列录入
                if (ColumnName == "医嘱内容" || (ColumnName == "频率" && tc.SelectedTab.Title.ToString().Trim() == sTab0) || (ColumnName == "用法" && tc.SelectedTab.Title.ToString().Trim() == sTab0))
                {
                    #region 有效性判断
                    //"类型"若为空，则取上一行的"类型"
                    if (ColumnName == "医嘱内容")
                    {
                        SelStrType = (myTb.Rows[nrow]["类型"].ToString() != "" ? myTb.Rows[nrow]["类型"].ToString() : "");
                        if (nrow > 0 && SelStrType == "")
                        {
                            SelStrType = (myTb.Rows[nrow - 1]["类型"].ToString() != "" ? myTb.Rows[nrow - 1]["类型"].ToString() : "");
                        }
                    }

                    //若上一行的“医嘱内容”不为空，则屏蔽录入频率、用法
                    if (nrow > 0 && keyInt >= 65 && keyInt <= 105 && myTb.Rows[nrow - 1]["医嘱内容"].ToString().Trim() != "" && (ColumnName == "用法" || ColumnName == "频率"))
                    {
                        return true;
                    }

                    #endregion

                    #region 判断在当前输入状态下是不是输入了英文字或数字
                    //if ( (keyInt>=65 && keyInt<=90 && isPY==true) || ( ( (keyInt>=48 && keyInt<=57) || (keyInt>=96 && keyInt<=105) ) && this.isPY==false))
                    if ((keyInt >= 65 && keyInt <= 90) || ((keyInt >= 48 && keyInt <= 57) || (keyInt >= 96 && keyInt <= 105)))
                    {
                        if (keyInt > 90) keyInt -= 48;

                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongZD.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (SelData.Trim() != "")
                        {
                            SelData = (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength ? "" : SelData);
                        }

                        //显示查到的数据
                        if (ColumnName == "医嘱内容")
                        {
                            ShowSelCard(SelData + Convert.ToChar(keyInt), SelStrType, this.dataGrid_LongZD);
                            //不屏蔽输入
                            return false;
                        }
                        else if (myTb.Rows[nrow]["医嘱内容"].ToString() != "")
                        {
                            ShowSelCardOther(SelData + Convert.ToChar(keyInt), ColumnName, nrow, ncol, this.dataGrid_LongZD);
                            //不屏蔽输入
                            return false;
                        }
                        else
                        {
                            //医嘱内容为空时,屏蔽输入用法和频率
                            return true;
                        }
                    }
                    #endregion

                    #region 判断不在当前输入状态下是不是输入了英文字或数字 (屏蔽此功能，允许在拼音状态下输入数字)
                    //if ( (keyInt>=65 && keyInt<=90 && isPY==false) || ( ( (keyInt>=48 && keyInt<=57) || (keyInt>=96 && keyInt<=105) ) && this.isPY==true))
                    //{
                    //	//屏蔽输入
                    //	return true;
                    //}
                    #endregion

                    #region 退格键
                    if (keyInt == 8 && this.GrdSel.Visible == true)
                    {
                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongZD.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (SelData.Trim() != "")
                        {
                            if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                            {
                                SelData = "";
                            }
                            else
                            {
                                SelData = SelData.Substring(0, SelData.Length - 1);
                            }
                        }
                        //显示查到的数据					
                        if (SelData.Trim() != "")
                        {
                            if (ColumnName == "医嘱内容")
                            {
                                ShowSelCard(SelData, SelStrType, this.dataGrid_LongZD);
                            }
                            else
                            {
                                ShowSelCardOther(SelData, ColumnName, nrow, ncol, this.dataGrid_LongZD);
                            }
                        }
                        else
                        {
                            this.GrdSel.Visible = false;
                        }
                        //不屏蔽输入
                        return false;
                    }
                    #endregion

                    #region 上下左右键
                    if ((keyInt == 40 || keyInt == 38 || keyInt == 37 || keyInt == 39) && this.GrdSel.Visible == true)
                    {
                        if (this.GrdSel.VisibleRowCount > 0)
                        {
                            //this.GrdSel.CurrentCell=new DataGridCell(0,1);
                            if (ColumnName == "医嘱内容")
                                this.GrdSel.Select(0);
                            else
                                this.GrdSel.Select(this.GrdSel.CurrentCell.RowNumber);
                        }
                        this.GrdSel.Focus();
                        //屏蔽输入
                        return true;
                    }
                    #endregion

                    #region 回车键
                    if (keyInt == 13 && this.GrdSel.Visible)
                    {
                        switch (ColumnName)
                        {
                            case "医嘱内容":
                                GetCardDatas(48, this.dataGrid_LongZD);
                                break;
                            case "用法":
                                GetCardDataUsages(this.GrdSel.CurrentCell.RowNumber, this.dataGrid_LongZD);
                                break;
                            case "频率":
                                GetCardDataPL(this.GrdSel.CurrentCell.RowNumber, this.dataGrid_LongZD);
                                break;
                        }
                    }
                    #endregion
                }
                #endregion

                #region 剂量的输入
                if (ColumnName == "剂量")
                {
                    //医嘱内容为空，屏蔽输入数字和小数点
                    if (((keyInt >= 48 && keyInt <= 57) || (keyInt == 110)) && (myTb.Rows[nrow]["医嘱内容"].ToString() == "")) return true;

                    //有效性判断
                    if (keyInt == 13)
                    {
                        try
                        {
                            this.dataGrid_LongZD.EndEdit(this.dataGrid_LongZD.TableStyles[0].GridColumnStyles[ncol], nrow, false);
                            if (myTb.Rows[nrow]["剂量"].ToString() != "")	//确认输入了剂量
                            {
                                if (Convert.ToDouble(myTb.Rows[nrow]["剂量"].ToString()) <= 0)
                                {
                                    MessageBox.Show(this, "剂量不能为0或负数！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                    myTb.Rows[nrow]["剂量"] = 1;
                                }
                            }
                            else
                            {
                                myTb.Rows[nrow]["剂量"] = 1;
                            }
                        }
                        catch (System.Data.OleDb.OleDbException err)
                        {
                            MessageBox.Show(err.ToString());
                        }
                        catch (System.Exception err)
                        {
                            MessageBox.Show("输入字符串的格式不正确,请正确填写", "提示", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                        }
                    }
                }
                #endregion

                #region 单价的输入
                if (ColumnName == "单价")
                {
                    //医嘱内容为空，屏蔽输入数字和小数点
                    if (((keyInt >= 48 && keyInt <= 57) || (keyInt == 110)) && (myTb.Rows[nrow]["医嘱内容"].ToString() == "")) return true;

                    //有效性判断
                    if (keyInt == 13)
                    {
                        try
                        {
                            this.dataGrid_LongZD.EndEdit(this.dataGrid_LongZD.TableStyles[0].GridColumnStyles[ncol], nrow, false);
                            if (myTb.Rows[nrow]["单价"].ToString() != "")	//确认输入了
                            {
                                if (Convert.ToDouble(myTb.Rows[nrow]["单价"].ToString()) <= 0)
                                {
                                    MessageBox.Show(this, "单价不能为零或负数！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                    myTb.Rows[nrow]["单价"] = myTb.Rows[nrow]["oldprice"];
                                }
                            }
                            else
                            {
                                myTb.Rows[nrow]["单价"] = myTb.Rows[nrow]["oldprice"];
                            }
                        }
                        catch (System.Data.OleDb.OleDbException err)
                        {
                            MessageBox.Show(err.ToString());
                        }
                        catch (System.Exception err)
                        {
                            MessageBox.Show("输入字符串的格式不正确,请正确填写", "提示", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                        }
                    }

                }
                #endregion

                #region 首次的输入
                if (ColumnName == "首次" && (keyInt == 13 || keyInt == 9) && tc.SelectedTab.Title.Trim() == sTab0)  // (enter or tab)长嘱时
                {
                    if (Convert.ToSingle(myTb.Rows[nrow]["首次"]) < 0)
                    {
                        MessageBox.Show(this, "首次执行次数不能小于零！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        myTb.Rows[nrow]["首次"] = myTb.Rows[nrow]["times_defalut"].ToString().Trim();
                    }
                    else if (Convert.ToSingle(myTb.Rows[nrow]["首次"]) > Convert.ToSingle(myTb.Rows[nrow]["times_defalut"]))
                    {
                        MessageBox.Show(this, "首次执行次数不能大于" + myTb.Rows[nrow]["times_defalut"].ToString() + "！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        myTb.Rows[nrow]["首次"] = myTb.Rows[nrow]["times_defalut"].ToString().Trim();
                    }
                }
                #endregion

                #region 按键整体控制

                //屏蔽输入上下左右键
                if ((keyInt == 40 || keyInt == 38 || keyInt == 37 || keyInt == 39) && this.GrdSel.Visible == true)
                {
                    return true;
                }

                //判断是不是控制键,针对所有列   //====================================================================================================================
                switch (keyInt)
                {
                    case 13:
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongZD.TableStyles[0].GridColumnStyles[ncol];
                        if (txtCol.TextBox.Text.Trim() == "" && txtCol.MappingName == "医嘱内容")
                        {
                            SendKeys.Send("{esc}");
                            txtCol.TextBox.Focus();
                            this.GrdSel.Visible = false;
                            return true;
                        }

                        //长嘱最后一列
                        if (ColumnName == "首次" && tc.SelectedTab.Title.Trim() == sTab0)
                        {
                            this.button3_Click(this.dataGrid_LongZD, new EventArgs());		//先整理数据				
                            this.SendTabKey(11);											//为最后一个，连续送七格
                            return true;												//屏蔽输入
                        }

                        //长嘱为剂量  用来实现连续跳格
                        if (ColumnName == "剂量" && tc.SelectedTab.Title.Trim() == sTab0)
                        {
                            //第0行
                            if (nrow == 0)
                            {
                                if (myTb.Rows[nrow]["oldprice"].ToString().Trim() == "0" && myTb.Rows[nrow]["iscomplex"].ToString().Trim() == "0")
                                {
                                    this.SendTabKey(1);			//价格为0并且不为套餐，跳到价格
                                    return true;
                                }
                                else
                                {
                                    this.SendTabKey(3);			//单位为只渎	连续跳格
                                    return true;				//屏蔽输入
                                }
                            }

                            //上一行无内容
                            if (myTb.Rows[nrow - 1]["医嘱内容"].ToString().Trim() == "" || myTb.Rows[nrow - 1]["HOItem_ID"].ToString().Trim() == "")
                            {
                                if (myTb.Rows[nrow]["oldprice"].ToString().Trim() == "0" && myTb.Rows[nrow]["iscomplex"].ToString().Trim() == "0")
                                {
                                    this.SendTabKey(1);			//价格为0并且不为套餐，跳到价格
                                    return true;
                                }
                                else
                                {
                                    this.SendTabKey(3);			//单位为只渎	连续跳格
                                    return true;				//屏蔽输入
                                }
                            }
                            else
                            {
                                if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim() == "" || myTb.Rows[nrow]["HOItem_ID"].ToString().Trim() == "")
                                {
                                    if (myTb.Rows[nrow]["oldprice"].ToString().Trim() == "0" && myTb.Rows[nrow]["iscomplex"].ToString().Trim() == "0")
                                    {
                                        this.SendTabKey(1);			//价格为0并且不为套餐，跳到价格
                                        return true;
                                    }
                                    else
                                    {
                                        this.SendTabKey(3);			//单位为只渎	连续跳格
                                        return true;				//屏蔽输入
                                    }
                                }
                                else
                                {
                                    if (myTb.Rows[nrow]["oldprice"].ToString().Trim() == "0" && myTb.Rows[nrow]["iscomplex"].ToString().Trim() == "0")
                                    {
                                        this.SendTabKey(1);			//价格为0并且不为套餐，跳到价格
                                        return true;
                                    }
                                    else
                                    {
                                        //上行有内容，直接跳到下行
                                        this.SendTabKey(16);										//为最后一个，连续送十二格
                                        return true;												//屏蔽输入
                                    }
                                }
                            }
                        }

                        //长嘱为单价 跳到用法
                        if (ColumnName == "单价" && tc.SelectedTab.Title.Trim() == sTab0)
                        {
                            //第0行
                            if (nrow == 0)
                            {
                                this.SendTabKey(2);			//单位为只读	连续跳格
                                return true;				//屏蔽输入
                            }

                            //上一行无内容
                            if (myTb.Rows[nrow - 1]["医嘱内容"].ToString().Trim() == "" || myTb.Rows[nrow - 1]["HOItem_ID"].ToString().Trim() == "")
                            {
                                this.SendTabKey(2);			//单位为只渎	连续跳格
                                return true;				//屏蔽输入
                            }
                            else
                            {
                                if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim() == "" || myTb.Rows[nrow]["HOItem_ID"].ToString().Trim() == "")
                                {
                                    this.SendTabKey(2);			//单位为只渎	连续跳格
                                    return true;				//屏蔽输入	
                                }
                                else
                                {
                                    //上行有内容，直接跳到下行
                                    this.SendTabKey(15);										//为最后一个，连续送十二格
                                    return true;												//屏蔽输入
                                }
                            }
                        }

                        //临嘱最后一列
                        if (ColumnName == "单位" && tc.SelectedTab.Title.Trim() == sTab1)
                        {
                            this.button3_Click(this.dataGrid_TempZD, new EventArgs());		//先整理数据				
                            this.SendTabKey(14);										//为最后一个，连续送十三格
                            return true;												//屏蔽输入
                        }

                        //临嘱为剂量  用来实现连续跳格
                        if (ColumnName == "剂量" && tc.SelectedTab.Title.Trim() == sTab1)
                        {
                            if (myTb.Rows[nrow]["oldprice"].ToString().Trim() == "0" && myTb.Rows[nrow]["iscomplex"].ToString().Trim() == "0")
                            {
                                this.SendTabKey(1);			//价格为0并且不为套餐，跳到价格
                                return true;
                            }
                        }

                        //临嘱为单价 连续跳格
                        if (ColumnName == "单价" && tc.SelectedTab.Title.Trim() == sTab1)
                        {
                            this.SendTabKey(14);			//单位为只渎	连续跳格
                            return true;				//屏蔽输入
                        }

                        //通用
                        SendKeys.Send("{tab}");
                        this.GrdSel.Visible = false;
                        //屏蔽输入
                        return true;
                    //break;
                    case 27:  //esc
                        this.GrdSel.Visible = false;
                        break;
                }
                #endregion
                //====================================================================================================================================================================							
                return false;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
                return true;
            }
        }
        #endregion

        #region 得到账单内容需要用到的方法
        /// <summary>
        /// 得到账单内容需要用到的方法
        /// </summary>
        /// <param name="msg"></param>
        /// <param name="keyData"></param>
        /// <returns></returns>

        private void ShowSelCard(string SelData, string Type, DataGridEx datagrid1)
        {
            //首先得到当前网格的信息			
            DataTable myTb = new DataTable();
            int nrow = datagrid1.CurrentCell.RowNumber;
            int ncol = datagrid1.CurrentCell.ColumnNumber;
            string sType = "";
            string sSql = "";

            if (Type.Trim() != "")
            {
                sType = Type.Substring(0, 1);
                sSql = " and type='" + sType + "'";
            }

            //查询得到数据 用DATAVIEW 来筛选
            DataView dvs = new DataView();
            dvs.Table = SelectDataViews.Table.Copy();
            if (this.isPY == true)
            {
                dvs.RowFilter = "拼音码 like '" + SelData + "%' " + sSql;
                dvs.Sort = "拼音码";
            }
            else
            {
                dvs.RowFilter = "标准码 like  '" + SelData + "%' " + sSql;
                dvs.Sort = "标准码";
            }
            //数据绑定	
            //			this.GrdSel.SetDataBinding(dv,null);	
            this.GrdSel.DataSource = null;
            this.GrdSel.DataSource = dvs;
            DataGridTableStyle myGridTableStyle = new DataGridTableStyle();
            myGridTableStyle.MappingName = dvs.Table.TableName;
            this.GrdSel.TableStyles.Remove(this.GrdSel.TableStyles[0]);
            this.GrdSel.TableStyles.Add(myGridTableStyle);

            //设置网格的位置
            this.GrdSel.Left = datagrid1.GetCellBounds(nrow, ncol).Left + datagrid1.Parent.Parent.Parent.Left;
            this.GrdSel.Top = datagrid1.GetCellBounds(nrow, ncol).Top + datagrid1.Top + datagrid1.GetCellBounds(nrow, ncol).Height + 24;

            this.GrdSel.Width = 720;
            this.GrdSel.TableStyles[0].RowHeaderWidth = 10;
            string[] GrdMappingName ={ "拼音码", "内容", "自付比", "单位", "单价", "剂量", "医嘱编号", "标准码", "备注", "type", "iscomplex", "Exec_Dept", "执行科室", "默认用法", "itemid", "D_CODE" };
            int[] GrdWidth ={ 60, 200, 40, 40, 60, 0, 0, 60, 100, 0, 0, 0, 80, 80, 0, 0 };
            InitGrd_sub(GrdMappingName, GrdMappingName, GrdWidth, this.GrdSel);

            this.GrdSel.CurrentRowIndex = 0;
            this.GrdSel.BringToFront();
            this.GrdSel.Visible = true;
            this.GrdSel.Refresh();
        }

        private void ShowSelCardOther(string CurrentChar, string ColumnName, int nrow, int ncol, DataGridEx datagrid1)
        {
            string[] GrdMappingName ={ "", "", "" };
            int[] GrdWidth ={ 0, 0, 0 };
            string sSql = "";

            if (ColumnName == "用法")
            {
                if (isPY)
                {
                    sSql = "select py_code as 拼音码,name as 用法,id as 数字码 from jc_UsageDiction order by py_code";
                    string[] GrdMappingName_tmp ={ "拼音码", "用法", "数字码" };
                    int[] GrdWidth_tmp ={ 60, 100, 60 };
                    GrdMappingName_tmp.CopyTo(GrdMappingName, 0);
                    GrdWidth_tmp.CopyTo(GrdWidth, 0);
                }
                else
                {
                    sSql = "select id as 数字码,name as 用法,py_code as 拼音码 from jc_UsageDiction order by id";
                    string[] GrdMappingName_tmp ={ "数字码", "用法", "拼音码" };
                    int[] GrdWidth_tmp ={ 60, 100, 60 };
                    GrdMappingName_tmp.CopyTo(GrdMappingName, 0);
                    GrdWidth_tmp.CopyTo(GrdWidth, 0);
                }
            }
            else
            {
                if (isPY)
                {
                    sSql = "select name as 频率 ,id as 数字码,ExecNum from jc_Frequency order by name";
                    string[] GrdMappingName_tmp ={ "频率", "数字码", "ExecNum" };
                    int[] GrdWidth_tmp ={ 60, 60, 0 };
                    GrdMappingName_tmp.CopyTo(GrdMappingName, 0);
                    GrdWidth_tmp.CopyTo(GrdWidth, 0);
                }
                else
                {
                    sSql = "select id as 数字码,name as 频率 ,ExecNum from jc_Frequency order by id";
                    string[] GrdMappingName_tmp ={ "数字码", "频率", "ExecNum" };
                    int[] GrdWidth_tmp ={ 60, 60, 0 };
                    GrdMappingName_tmp.CopyTo(GrdMappingName, 0);
                    GrdWidth_tmp.CopyTo(GrdWidth, 0);
                }
            }

            //创建临时数据表
            DataTable myTempTb = InstanceForm._database.GetDataTable(sSql);
            myTempTb.TableName = "选择表";

            //数据绑定
            DataView dv = new DataView();
            dv.Table = myTempTb;
            this.GrdSel.DataSource = dv;
            this.GrdSel.Refresh();
            DataGridTableStyle myGridTableStyle = new DataGridTableStyle();
            myGridTableStyle.MappingName = myTempTb.TableName;
            //this.GrdSel.TableStyles.Clear();
            this.GrdSel.TableStyles.Remove(this.GrdSel.TableStyles[0]);
            this.GrdSel.TableStyles.Add(myGridTableStyle);

            //设置网格的位置
            this.GrdSel.Left = datagrid1.GetCellBounds(nrow, ncol).Left + datagrid1.Parent.Parent.Parent.Left;
            this.GrdSel.Top = datagrid1.GetCellBounds(nrow, ncol).Top + datagrid1.Top + datagrid1.GetCellBounds(nrow, ncol).Height + 24;

            int i = 0, j = 0;
            this.GrdSel.Width = 0;
            for (i = 0; i <= GrdMappingName.Length - 1; i++) j += GrdWidth[i];
            this.GrdSel.Width = j + 70;
            this.InitGrd_sub(GrdMappingName, GrdMappingName, GrdWidth, this.GrdSel);
            this.GrdSel.Visible = true;

            //选择最接近的记录
            j = CurrentChar.Length;
            while (j > 0)
            {
                string sCode = CurrentChar.Substring(0, j);
                for (i = 0; i <= myTempTb.Rows.Count - 1; i++)
                {
                    if (Convert.ToString(this.GrdSel[i, 0]).Trim().Length < j) continue;
                    if (Convert.ToString(this.GrdSel[i, 0]).Trim().Substring(0, j).ToLower() == sCode.ToLower())
                    {
                        this.GrdSel.CurrentRowIndex = i;
                        j = 1;
                        break;
                    }
                }
                j--;
            }
            this.GrdSel.Refresh();
        }

        public void InitGrd_sub(string[] GrdMappingName, string[] GrdHeaderText, int[] GrdWidth, DataGrid dataGrid)
        {
            dataGrid.TableStyles[0].RowHeaderWidth = 15;
            for (int i = 0; i <= dataGrid.TableStyles[0].GridColumnStyles.Count - 1; i++)
            {
                dataGrid.TableStyles[0].GridColumnStyles[i].NullText = "";
                string aa = dataGrid.TableStyles[0].GridColumnStyles[i].MappingName.ToString();
                dataGrid.TableStyles[0].GridColumnStyles[i].MappingName = GrdMappingName[i].ToString();
                dataGrid.TableStyles[0].GridColumnStyles[i].Width = GrdWidth[i];
                if (GrdWidth[i] != 0) dataGrid.TableStyles[0].GridColumnStyles[i].HeaderText = GrdHeaderText[i].ToString();
            }
        }
        private void GetCardDatas(long keyInt, DataGridEx datagrid1)
        {
            //首先得到当前网格的信息
            DataTable myTb = (DataTable)datagrid1.DataSource;
            int nrow = datagrid1.CurrentCell.RowNumber;
            int ncol = datagrid1.CurrentCell.ColumnNumber;
            DataView mySelView = (DataView)this.GrdSel.DataSource;
            //获得服务器时间
            DateTime dt = DateManager.ServerDateTimeByDBType(InstanceForm._database);
            int nSelRow = (int)keyInt - 48;

            DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)datagrid1.TableStyles[0].GridColumnStyles[ncol];

            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;

            //选择超出范围
            if (nSelRow > mySelView.Count - 1)
            {
                txtCol.TextBox.Text = "";
                return;
            }
            else
            {
                #region 内容的添入

                if ((new SystemCfg(6021, InstanceForm._database)).Config == "1" && mySelView[nSelRow]["自付比"].ToString().Trim() == "" && patientInfo1.lbJSLX.Text.IndexOf("医保") >= 0)
                {
                    //if ((MessageBox.Show("[ " + mySelView[nSelRow]["内容"].ToString().Trim() + " ]是自费项目，" + "你确定要给该病人记帐吗？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2)) == DialogResult.No)
                    //{
                    FrmMessageBox.Show("该病人为医保病人，不允许开未匹配的项目！", new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    myTb.Rows[nrow]["医嘱内容"] = "";
                    txtCol.TextBox.Text = "";
                    datagrid1.Focus();
                    datagrid1.CurrentCell = new DataGridCell(nrow, 2);//医嘱内容列
                    return;
                    //}
                }

                //Add By Tany 2015-01-07
                #region//武汉中心医院
                if (this.fylb != "" && this.fylb != "自费")
                {
                    if (!myTb.Columns.Contains("zfbl"))
                    {
                        myTb.Columns.Add("zfbl", typeof(System.Decimal));
                    }
                    int type = 0;
                    if (this.fylb.Contains("公费"))
                        type = 1;
                    else
                        type = 2;
                    decimal zfbl = 1;
                    if (true)
                    {
                        try
                        {
                            //2,001064725,1276,2,特殊视力检查(点视力表）,
                            if (!myQuery.GetGfxx(type, this.patientInfo1.lbID.Text.Trim(), mySelView[nSelRow]["医嘱编号"].ToString(),
                                 "2", mySelView[nSelRow]["内容"].ToString(), this.fylb, ref zfbl))
                            {
                                this.GrdSel.Visible = false;
                                myTb.Rows[nrow]["医嘱内容"] = ""; //Modify By Tany 2014-12-26
                                txtCol.TextBox.Text = "";
                                datagrid1.Focus();
                                datagrid1.CurrentCell = new DataGridCell(nrow, 4);//医嘱内容列
                                return;
                            }
                            else
                            {
                                myTb.Rows[nrow]["zfbl"] = zfbl;
                            }
                        }
                        catch (Exception ex)//Modify By Tany 2015-03-18 加上捕获错误并返回，不继续操作
                        {
                            MessageBox.Show(ex.Message);
                            this.GrdSel.Visible = false;
                            myTb.Rows[nrow]["医嘱内容"] = ""; //Modify By Tany 2014-12-26
                            txtCol.TextBox.Text = "";
                            datagrid1.Focus();
                            datagrid1.CurrentCell = new DataGridCell(nrow, 4);//医嘱内容列
                            return;
                        }
                    }
                    else
                    {
                        myTb.Rows[nrow]["zfbl"] = 1;
                    }
                }
                #endregion

                txtCol.TextBox.Text = mySelView[nSelRow]["内容"].ToString();
                txtCol.TextBox.BackColor = System.Drawing.Color.SkyBlue;

                if (nrow == 0)
                {
                    //录入时间
                    myTb.Rows[nrow]["开始时间"] = dt;
                    //医嘱内容
                    myTb.Rows[nrow]["医嘱内容"] = mySelView[nSelRow]["内容"];
                    //剂量,单位，用法，频率，首次，执行科室
                    myTb.Rows[nrow]["剂量"] = mySelView[nSelRow]["剂量"];
                    myTb.Rows[nrow]["单价"] = mySelView[nSelRow]["iscomplex"].ToString().Trim() == "0" ? mySelView[nSelRow]["单价"] : "";
                    myTb.Rows[nrow]["单位"] = mySelView[nSelRow]["单位"];
                    myTb.Rows[nrow]["用法"] = mySelView[nSelRow]["默认用法"];
                    myTb.Rows[nrow]["iscomplex"] = mySelView[nSelRow]["iscomplex"];
                    myTb.Rows[nrow]["oldprice"] = mySelView[nSelRow]["单价"];

                    myTb.Rows[nrow]["类型"] = GetyzType(Convert.ToInt64(mySelView[nSelRow]["type"].ToString()));

                    //判断类型
                    if (tc.SelectedTab.Title.Trim() == this.sTab0)
                    {
                        //限长期账单
                        myTb.Rows[nrow]["频率"] = "Qd";
                        myTb.Rows[nrow]["首次"] = "1";
                        myTb.Rows[nrow]["times_defalut"] = 1;
                    }
                    else
                    {
                        //限临时账单
                        myTb.Rows[nrow]["频率"] = "";
                        myTb.Rows[nrow]["首次"] = "";
                        myTb.Rows[nrow]["times_defalut"] = 0;
                    }

                    myTb.Rows[nrow]["HOItem_ID"] = mySelView[nSelRow]["医嘱编号"];

                    //执行科室为病人当前所属科室
                    //如果项目有执行科室则为该执行科室，为0（没有）或1（全院）则为本科室 Modify By Tany 2005-05-22
                    myTb.Rows[nrow]["Exec_Dept"] = mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "0"
                        || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "1"
                        || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "-1"
                        || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == ""
                        ? this.DeptID : Convert.ToInt64(mySelView[nSelRow]["Exec_Dept"]);
                    myTb.Rows[nrow]["执行科室"] = mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "0"
                        || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "1"
                        || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "-1"
                        || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == ""
                        ? new Department(Convert.ToInt64(DeptID), InstanceForm._database).DeptName : mySelView[nSelRow]["执行科室"].ToString().Trim();
                }
                else
                {
                    //上一列无内容
                    if (myTb.Rows[nrow - 1][ncol].ToString().Trim() == "")
                    {
                        myTb.Rows[nrow]["开始时间"] = dt;
                        //医嘱内容
                        myTb.Rows[nrow]["医嘱内容"] = mySelView[nSelRow]["内容"];
                        //剂量,单位，用法，频率，首次，执行科室
                        myTb.Rows[nrow]["剂量"] = mySelView[nSelRow]["剂量"];
                        myTb.Rows[nrow]["单价"] = mySelView[nSelRow]["iscomplex"].ToString().Trim() == "0" ? mySelView[nSelRow]["单价"] : "";
                        myTb.Rows[nrow]["单位"] = mySelView[nSelRow]["单位"];
                        myTb.Rows[nrow]["用法"] = mySelView[nSelRow]["默认用法"];
                        myTb.Rows[nrow]["iscomplex"] = mySelView[nSelRow]["iscomplex"];
                        myTb.Rows[nrow]["oldprice"] = mySelView[nSelRow]["单价"];

                        myTb.Rows[nrow]["类型"] = GetyzType(Convert.ToInt64(mySelView[nSelRow]["type"].ToString()));

                        //判断类型
                        if (tc.SelectedTab.Title.Trim() == this.sTab0)
                        {
                            //限长期账单
                            myTb.Rows[nrow]["频率"] = "qd";
                            myTb.Rows[nrow]["首次"] = "1";
                            myTb.Rows[nrow]["times_defalut"] = 1;
                        }
                        else
                        {
                            //限临时账单
                            myTb.Rows[nrow]["频率"] = "";
                            myTb.Rows[nrow]["首次"] = "";
                            myTb.Rows[nrow]["times_defalut"] = 0;
                        }

                        myTb.Rows[nrow]["HOItem_ID"] = mySelView[nSelRow]["医嘱编号"];

                        //执行科室为病人当前所属科室
                        //如果项目有执行科室则为该执行科室，为0（没有）或1（全院）则为本科室 Modify By Tany 2005-05-22
                        myTb.Rows[nrow]["Exec_Dept"] = mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "0"
                            || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "1"
                            || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "-1"
                            || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == ""
                            ? DeptID : Convert.ToInt64(mySelView[nSelRow]["Exec_Dept"]);
                        myTb.Rows[nrow]["执行科室"] = mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "0"
                            || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "1"
                            || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "-1"
                            || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == ""
                            ? new Department(Convert.ToInt64(DeptID), InstanceForm._database).DeptName : mySelView[nSelRow]["执行科室"].ToString().Trim();
                    }
                    else
                    {
                        myTb.Rows[nrow]["开始时间"] = dt;
                        //医嘱内容
                        myTb.Rows[nrow]["医嘱内容"] = mySelView[nSelRow]["内容"];
                        //类型,剂量,单位，用法，频率，首次，执行科室
                        myTb.Rows[nrow]["剂量"] = mySelView[nSelRow]["剂量"];

                        myTb.Rows[nrow]["嘱号"] = myTb.Rows[nrow - 1]["嘱号"];
                        myTb.Rows[nrow]["类型"] = GetyzType(Convert.ToInt64(mySelView[nSelRow]["type"].ToString()));
                        myTb.Rows[nrow]["单价"] = mySelView[nSelRow]["iscomplex"].ToString().Trim() == "0" ? mySelView[nSelRow]["单价"] : "";
                        myTb.Rows[nrow]["单位"] = mySelView[nSelRow]["单位"];
                        myTb.Rows[nrow]["用法"] = mySelView[nSelRow]["默认用法"];
                        myTb.Rows[nrow]["频率"] = myTb.Rows[nrow - 1]["频率"];
                        myTb.Rows[nrow]["首次"] = myTb.Rows[nrow - 1]["首次"];
                        myTb.Rows[nrow]["times_defalut"] = myTb.Rows[nrow - 1]["times_defalut"];
                        myTb.Rows[nrow]["HOItem_ID"] = mySelView[nSelRow]["医嘱编号"];
                        myTb.Rows[nrow]["iscomplex"] = mySelView[nSelRow]["iscomplex"];
                        myTb.Rows[nrow]["oldprice"] = mySelView[nSelRow]["单价"];

                        myTb.Rows[nrow]["Exec_Dept"] = mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "0"
                            || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "1"
                            || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "-1"
                            || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == ""
                            ? DeptID : Convert.ToInt64(mySelView[nSelRow]["Exec_Dept"]);
                        myTb.Rows[nrow]["执行科室"] = mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "0"
                            || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "1"
                            || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == "-1"
                            || mySelView[nSelRow]["Exec_Dept"].ToString().Trim() == ""
                            ? new Department(Convert.ToInt64(DeptID), InstanceForm._database).DeptName : mySelView[nSelRow]["执行科室"].ToString().Trim();
                    }
                }
                #endregion

                datagrid1.DataSource = myTb;

                #region 显示药品信息

                string mySHH = myTb.Rows[nrow]["HOItem_ID"].ToString();
                //有效性判断
                if (mySHH != "")
                {
                    if (mySHH.Substring(1, 1) == "Y")
                    {
                        //this.priceInfo1.cCon=this.cCon ;
                        //this.priceInfo1.SetYpInfo(mySHH);
                    }
                    else
                    {
                        //this.priceInfo1.ClearYpInfo();
                    }
                }

                #endregion
            }
            this.GrdSel.Visible = false;
        }
        //显示医嘱类型
        private string GetyzType(long nType)
        {
            string sSql = "select name from jc_OrderType where code=" + nType.ToString();
            //string sSql="select name from jc_OrderType where code=8";  //只允许输入8项目
            DataTable myTb = InstanceForm._database.GetDataTable(sSql);
            if (myTb.Rows.Count > 0)
            {
                return myTb.Rows[0]["name"].ToString().Trim();
            }
            else
            {
                return "";
            }
        }

        private void GetCardDataUsages(int theSel, DataGridEx datagrid1)
        {
            //变量付初始值
            int nrow, ncol;
            DataTable myTb = (DataTable)datagrid1.DataSource;
            nrow = datagrid1.CurrentCell.RowNumber;
            ncol = datagrid1.CurrentCell.ColumnNumber;

            int nSelRow;
            DataTable mySelTbTemp = ((DataView)this.GrdSel.DataSource).Table;
            nSelRow = theSel;

            //判断选择的有效性
            if (nSelRow <= mySelTbTemp.Rows.Count - 1)
            {
                //给网格安全的付值
                myTb.Rows[nrow]["用法"] = mySelTbTemp.Rows[nSelRow]["用法"];
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)datagrid1.TableStyles[0].GridColumnStyles[ncol];
                txtCol.TextBox.Text = mySelTbTemp.Rows[nSelRow]["用法"].ToString().Trim();
                datagrid1.DataSource = myTb;
                this.GrdSel.Visible = false;
            }
            else
            {
                myTb.Rows[nrow]["用法"] = "";
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)datagrid1.TableStyles[0].GridColumnStyles[ncol];
                txtCol.TextBox.Text = "";
                datagrid1.DataSource = myTb;
                this.GrdSel.Visible = false;
            }
        }
        private void GetCardDataPL(int theSel, DataGridEx datagrid1)
        {
            int nrow, ncol;
            //首先得到当前网格的信息
            DataTable myTb = (DataTable)datagrid1.DataSource;
            nrow = datagrid1.CurrentCell.RowNumber;
            ncol = datagrid1.CurrentCell.ColumnNumber;


            int nSelRow;
            DataTable mySelTbTemp = ((DataView)this.GrdSel.DataSource).Table;
            myTb = (DataTable)datagrid1.DataSource;

            nSelRow = (int)theSel;

            //得到网格选择的信息
            //判断选择的有效性
            if (nSelRow <= mySelTbTemp.Rows.Count - 1)
            {
                //给网格安全的付值
                myTb.Rows[nrow]["频率"] = mySelTbTemp.Rows[nSelRow]["频率"];
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)datagrid1.TableStyles[0].GridColumnStyles[ncol];
                txtCol.TextBox.Text = mySelTbTemp.Rows[nSelRow]["频率"].ToString().Trim();

                myTb.Rows[nrow]["首次"] = mySelTbTemp.Rows[nSelRow]["ExecNum"];
                myTb.Rows[nrow]["times_defalut"] = mySelTbTemp.Rows[nSelRow]["ExecNum"];
                txtCol = (DataGridTextBoxColumn)datagrid1.TableStyles[0].GridColumnStyles[ncol + 1];
                txtCol.TextBox.Text = mySelTbTemp.Rows[nSelRow]["ExecNum"].ToString().Trim();

                datagrid1.DataSource = myTb;
                this.GrdSel.Visible = false;
            }
            else
            {
                myTb.Rows[nrow]["频率"] = "";
                DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)datagrid1.TableStyles[0].GridColumnStyles[ncol];
                txtCol.TextBox.Text = "";
                this.dataGrid_LongZD.DataSource = myTb;
                this.GrdSel.Visible = false;
            }
        }

        private void SendTabKey(int num)
        {
            for (int i = 0; i <= num - 1; i++)
            {
                SendKeys.Send("{tab}");
            }
        }
        #endregion

        #region 长期账单鼠标事件
        /// <summary>
        /// 长期账单鼠标事件
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>

        private void dataGrid_LongZD_MouseDown(object sender, System.Windows.Forms.MouseEventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            DataTable myTb = (DataTable)this.dataGrid_LongZD.DataSource;
            int nrow = this.dataGrid_LongZD.CurrentCell.RowNumber;
            int ncol = this.dataGrid_LongZD.CurrentCell.ColumnNumber;

            if (tc.SelectedTab.Title.Trim() != sTab0 && tc.SelectedTab.Title.Trim() != sTab1)
            {
                return;
            }
            else
            {
                //避免鼠标离开时产生的错误
                string ColumnName = this.dataGrid_LongZD.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();

                if (this.GrdSel.Visible == true)
                {
                    myTb.Rows[nrow][ColumnName] = "";
                    if (ColumnName.Trim() == "医嘱内容") myTb.Rows[nrow]["HOItem_ID"] = "";
                    if (ColumnName.Trim() == "执行科室") myTb.Rows[nrow]["Exec_Dept"] = "";

                    DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_LongZD.TableStyles[0].GridColumnStyles[ncol];
                    txtCol.TextBox.Text = "";

                    this.dataGrid_LongZD.DataSource = myTb;
                }
            }
        }

        private void dataGrid_LongZD_MouseUp(object sender, System.Windows.Forms.MouseEventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;

            DataTable myTb = (DataTable)this.dataGrid_LongZD.DataSource;
            int nrow = this.dataGrid_LongZD.CurrentCell.RowNumber;
            int ncol = this.dataGrid_LongZD.CurrentCell.ColumnNumber;

            if (tc.SelectedTab.Title.Trim() != sTab0 && tc.SelectedTab.Title.Trim() != sTab1)
            {
                if (myTb == null) return;

                //如果是医嘱内容列
                if (ncol == 25)
                {
                    //显示药品信息
                    if (myTb.Rows.Count > 0)
                    {
                        int myTYPE = Convert.ToInt32(myTb.Rows[nrow]["nType"]);
                        //有效性判断
                        if (myTYPE > 3)
                        {
                            long HOitem_ID = Convert.ToInt64(Convertor.IsNull(myTb.Rows[nrow]["item_code"].ToString(), "0"));
                            double num = Convert.ToDouble(Convertor.IsNull(myTb.Rows[nrow]["num"].ToString(), "0"));
                            string User_Name = myTb.Rows[nrow]["order_usage"].ToString();

                            this.dataGrid_LongZD.TableStyles.Clear();

                            DataTable myTbTemp = myQuery.SetItemInfo("", HOitem_ID, num, User_Name, (new Department(Convert.ToInt64(Convertor.IsNull(myTb.Rows[nrow]["exec_dept"].ToString(), InstanceForm._currentDept.DeptId.ToString())), InstanceForm._database)).Jgbm); //*js);
                            this.dataGrid_LongZD.DataSource = myTbTemp;

                            this.dataGrid_LongZD.CaptionText = "项目明细";
                            this.dataGrid_LongZD.Refresh();
                        }
                    }
                }
            }
        }
        #endregion

        #region 获得临时账单DataGrid控件中的内容
        /// <summary>
        /// 获得临时账单DataGrid控件中的内容
        /// </summary>
        /// <param name="msg"></param>
        /// <param name="keyData"></param>
        /// <returns></returns>
        private bool dataGrid_TempZD_myKeyDown(ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData)
        {
            try
            {
                if (outType == true && lg != 0) return true;

                //变量定义
                long keyInt = Convert.ToInt32(keyData);

                //除跳格键外，其他的全屏蔽,必须放在最前面
                if (keyInt == 9 || keyInt == 37 || keyInt == 39 || (keyInt == 38 && this.GrdSel.Visible == false)) return false;

                Crownwood.Magic.Controls.TabControl tc = null;
                tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
                if (tc.SelectedTab.Title.ToString().Trim() != sTab0 && tc.SelectedTab.Title.ToString().Trim() != sTab1) return false;

                InputLanguage.CurrentInputLanguage = PubStaticFun.GetInputLanguage("美式键盘");
                shortcut(keyData);

                //变量定义
                //string sSql="";
                DataTable myTb = (DataTable)this.dataGrid_TempZD.DataSource;
                int nrow = this.dataGrid_TempZD.CurrentCell.RowNumber;
                int ncol = this.dataGrid_TempZD.CurrentCell.ColumnNumber;
                string ColumnName = this.dataGrid_TempZD.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();
                string SelStrType = "";

                //确定此列为只读,输入数字或字母或F功能键等，屏蔽输入
                //if(this.myDataGrid1.TableStyles[0].GridColumnStyles[ncol].ReadOnly==true && (keyInt>=65 && keyInt<=122))return true;
                if (dataGrid_TempZD.TableStyles[0].GridColumnStyles[ncol].ReadOnly == true && ((keyInt >= 65 && keyInt <= 135) && keyInt != 104 && keyInt != 105)) return true;

                DataGridTextBoxColumn txtColYz = (DataGridTextBoxColumn)this.dataGrid_TempZD.TableStyles[0].GridColumnStyles["医嘱内容"];

                #region 类型的输入
                if (ColumnName == "类型" && txtColYz.TextBox.Text.Trim() == "")//如果有医嘱内容则不允许修改类型			 
                {
                    //判断是否输入了数字键
                    //if(keyInt>=48 && keyInt<=57)  
                    if ((keyInt >= 56 && keyInt <= 57) || keyInt == 104 || keyInt == 105)   //只允许输入 8、9
                    {
                        string tempType = GetyzType(keyInt > 57 ? keyInt - 96 : keyInt - 48);
                        if (tempType != "" && (nrow == 0 || (nrow > 0 && myTb.Rows[nrow - 1]["医嘱内容"].ToString().Trim() == "")))
                        {
                            myTb.Rows[nrow][ColumnName] = tempType;
                            this.dataGrid_TempZD.DataSource = myTb;
                            SendKeys.Send("{tab}");
                        }
                        //屏蔽输入
                        return true;
                    }
                }
                #endregion

                #region 医嘱内容、频率、用法的列录入
                if (ColumnName == "医嘱内容" || (ColumnName == "频率" && tc.SelectedTab.Title.ToString().Trim() == sTab1) || (ColumnName == "用法" && tc.SelectedTab.Title.ToString().Trim() == sTab1))
                {
                    #region 有效性判断
                    //"类型"若为空，则取上一行的"类型"
                    if (ColumnName == "医嘱内容")
                    {
                        SelStrType = (myTb.Rows[nrow]["类型"].ToString() != "" ? myTb.Rows[nrow]["类型"].ToString() : "");
                        if (nrow > 0 && SelStrType == "")
                        {
                            SelStrType = (myTb.Rows[nrow - 1]["类型"].ToString() != "" ? myTb.Rows[nrow - 1]["类型"].ToString() : "");
                        }
                    }

                    //若上一行的“医嘱内容”不为空，则屏蔽录入频率、用法
                    if (nrow > 0 && keyInt >= 65 && keyInt <= 105 && myTb.Rows[nrow - 1]["医嘱内容"].ToString().Trim() != "" && (ColumnName == "用法" || ColumnName == "频率"))
                    {
                        return true;
                    }

                    #endregion

                    #region 判断在当前输入状态下是不是输入了英文字或数字
                    //if ( (keyInt>=65 && keyInt<=90 && isPY==true) || ( ( (keyInt>=48 && keyInt<=57) || (keyInt>=96 && keyInt<=105) ) && this.isPY==false))
                    if ((keyInt >= 65 && keyInt <= 90) || ((keyInt >= 48 && keyInt <= 57) || (keyInt >= 96 && keyInt <= 105)))
                    {
                        if (keyInt > 90) keyInt -= 48;

                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempZD.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (SelData.Trim() != "")
                        {
                            SelData = (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength ? "" : SelData);
                        }

                        //显示查到的数据
                        if (ColumnName == "医嘱内容")
                        {
                            ShowSelCard(SelData + Convert.ToChar(keyInt), SelStrType, this.dataGrid_TempZD);
                            //不屏蔽输入
                            return false;
                        }
                        else if (myTb.Rows[nrow]["医嘱内容"].ToString() != "")
                        {
                            ShowSelCardOther(SelData + Convert.ToChar(keyInt), ColumnName, nrow, ncol, this.dataGrid_TempZD);
                            //不屏蔽输入
                            return false;
                        }
                        else
                        {
                            //医嘱内容为空时,屏蔽输入用法和频率
                            return true;
                        }
                    }
                    #endregion

                    #region 判断不在当前输入状态下是不是输入了英文字或数字 (屏蔽此功能，允许在拼音状态下输入数字)
                    //if ( (keyInt>=65 && keyInt<=90 && isPY==false) || ( ( (keyInt>=48 && keyInt<=57) || (keyInt>=96 && keyInt<=105) ) && this.isPY==true))
                    //{
                    //	//屏蔽输入
                    //	return true;
                    //}
                    #endregion

                    #region 退格键
                    if (keyInt == 8 && this.GrdSel.Visible == true)
                    {
                        //得到输入的数据
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempZD.TableStyles[0].GridColumnStyles[ncol];
                        string SelData = txtCol.TextBox.Text;
                        if (SelData.Trim() != "")
                        {
                            if (txtCol.TextBox.SelectionLength == txtCol.TextBox.TextLength)
                            {
                                SelData = "";
                            }
                            else
                            {
                                SelData = SelData.Substring(0, SelData.Length - 1);
                            }
                        }
                        //显示查到的数据					
                        if (SelData.Trim() != "")
                        {
                            if (ColumnName == "医嘱内容")
                            {
                                ShowSelCard(SelData, SelStrType, this.dataGrid_TempZD);
                            }
                            else
                            {
                                ShowSelCardOther(SelData, ColumnName, nrow, ncol, this.dataGrid_TempZD);
                            }
                        }
                        else
                        {
                            this.GrdSel.Visible = false;
                        }
                        //不屏蔽输入
                        return false;
                    }
                    #endregion

                    #region 上下左右键
                    if ((keyInt == 40 || keyInt == 38 || keyInt == 37 || keyInt == 39) && this.GrdSel.Visible == true)
                    {
                        if (this.GrdSel.VisibleRowCount > 0)
                        {
                            //this.GrdSel.CurrentCell=new DataGridCell(0,1);
                            if (ColumnName == "医嘱内容")
                                this.GrdSel.Select(0);
                            else
                                this.GrdSel.Select(this.GrdSel.CurrentCell.RowNumber);
                        }
                        this.GrdSel.Focus();
                        //屏蔽输入
                        return true;
                    }
                    #endregion

                    #region 回车键
                    if (keyInt == 13 && this.GrdSel.Visible)
                    {
                        switch (ColumnName)
                        {
                            case "医嘱内容":
                                GetCardDatas(48, this.dataGrid_TempZD);
                                break;
                            case "用法":
                                GetCardDataUsages(this.GrdSel.CurrentCell.RowNumber, this.dataGrid_TempZD);
                                break;
                            case "频率":
                                GetCardDataPL(this.GrdSel.CurrentCell.RowNumber, this.dataGrid_TempZD);
                                break;
                        }
                    }
                    #endregion
                }
                #endregion

                #region 剂量的输入
                if (ColumnName == "剂量")
                {
                    //医嘱内容为空，屏蔽输入数字和小数点
                    if (((keyInt >= 48 && keyInt <= 57) || (keyInt == 110)) && (myTb.Rows[nrow]["医嘱内容"].ToString() == "")) return true;

                    //有效性判断
                    if (keyInt == 13)
                    {
                        try
                        {
                            this.dataGrid_TempZD.EndEdit(this.dataGrid_TempZD.TableStyles[0].GridColumnStyles[ncol], nrow, false);
                            if (myTb.Rows[nrow]["剂量"].ToString() != "")	//确认输入了剂量
                            {
                                if (Convert.ToDouble(myTb.Rows[nrow]["剂量"].ToString()) <= 0)
                                {
                                    MessageBox.Show(this, "剂量不能为0或负数！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                    myTb.Rows[nrow]["剂量"] = 1;
                                }
                            }
                            else
                            {
                                myTb.Rows[nrow]["剂量"] = 1;
                            }
                        }
                        catch (System.Data.OleDb.OleDbException err)
                        {
                            MessageBox.Show(err.ToString());
                        }
                        catch (System.Exception err)
                        {
                            MessageBox.Show("输入字符串的格式不正确,请正确填写", "提示", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                        }

                    }
                }
                #endregion

                #region 单价的输入
                if (ColumnName == "单价")
                {
                    //医嘱内容为空，屏蔽输入数字和小数点
                    if (((keyInt >= 48 && keyInt <= 57) || (keyInt == 110)) && (myTb.Rows[nrow]["医嘱内容"].ToString() == "")) return true;

                    //有效性判断
                    if (keyInt == 13)
                    {
                        try
                        {
                            this.dataGrid_TempZD.EndEdit(this.dataGrid_TempZD.TableStyles[0].GridColumnStyles[ncol], nrow, false);
                            if (myTb.Rows[nrow]["单价"].ToString() != "")	//确认输入了
                            {
                                if (Convert.ToDouble(myTb.Rows[nrow]["单价"].ToString()) <= 0)
                                {
                                    MessageBox.Show(this, "单价不能为零或负数！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                    myTb.Rows[nrow]["单价"] = myTb.Rows[nrow]["oldprice"];
                                }
                            }
                            else
                            {
                                myTb.Rows[nrow]["单价"] = myTb.Rows[nrow]["oldprice"];
                            }
                        }
                        catch (System.Data.OleDb.OleDbException err)
                        {
                            MessageBox.Show(err.ToString());
                        }
                        catch (System.Exception err)
                        {
                            MessageBox.Show("输入字符串的格式不正确,请正确填写", "提示", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                        }
                    }

                }
                #endregion

                #region 首次的输入
                if (ColumnName == "首次" && (keyInt == 13 || keyInt == 9) && tc.SelectedTab.Title.Trim() == sTab0)  // (enter or tab)长嘱时
                {
                    if (Convert.ToSingle(myTb.Rows[nrow]["首次"]) < 0)
                    {
                        MessageBox.Show(this, "首次执行次数不能小于零！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        myTb.Rows[nrow]["首次"] = myTb.Rows[nrow]["times_defalut"].ToString().Trim();
                    }
                    else if (Convert.ToSingle(myTb.Rows[nrow]["首次"]) > Convert.ToSingle(myTb.Rows[nrow]["times_defalut"]))
                    {
                        MessageBox.Show(this, "首次执行次数不能大于" + myTb.Rows[nrow]["times_defalut"].ToString() + "！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        myTb.Rows[nrow]["首次"] = myTb.Rows[nrow]["times_defalut"].ToString().Trim();
                    }
                }
                #endregion

                #region 按键整体控制

                //屏蔽输入上下左右键
                if ((keyInt == 40 || keyInt == 38 || keyInt == 37 || keyInt == 39) && this.GrdSel.Visible == true)
                {
                    return true;
                }

                //判断是不是控制键,针对所有列   //====================================================================================================================
                switch (keyInt)
                {
                    case 13:
                        DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempZD.TableStyles[0].GridColumnStyles[ncol];
                        if (txtCol.TextBox.Text.Trim() == "" && txtCol.MappingName == "医嘱内容")
                        {
                            SendKeys.Send("{esc}");
                            txtCol.TextBox.Focus();
                            this.GrdSel.Visible = false;
                            return true;
                        }

                        //长嘱为剂量  用来实现连续跳格
                        if (ColumnName == "剂量" && tc.SelectedTab.Title.Trim() == sTab0)
                        {
                            //第0行
                            if (nrow == 0)
                            {
                                if (myTb.Rows[nrow]["oldprice"].ToString().Trim() == "0" && myTb.Rows[nrow]["iscomplex"].ToString().Trim() == "0")
                                {
                                    this.SendTabKey(1);			//价格为0并且不为套餐，跳到价格
                                    return true;
                                }
                                else
                                {
                                    this.SendTabKey(3);			//单位为只渎	连续跳格
                                    return true;				//屏蔽输入
                                }
                            }

                            //上一行无内容
                            if (myTb.Rows[nrow - 1]["医嘱内容"].ToString().Trim() == "" || myTb.Rows[nrow - 1]["HOItem_ID"].ToString().Trim() == "")
                            {
                                if (myTb.Rows[nrow]["oldprice"].ToString().Trim() == "0" && myTb.Rows[nrow]["iscomplex"].ToString().Trim() == "0")
                                {
                                    this.SendTabKey(1);			//价格为0并且不为套餐，跳到价格
                                    return true;
                                }
                                else
                                {
                                    this.SendTabKey(3);			//单位为只渎	连续跳格
                                    return true;				//屏蔽输入
                                }
                            }
                            else
                            {
                                if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim() == "" || myTb.Rows[nrow]["HOItem_ID"].ToString().Trim() == "")
                                {
                                    if (myTb.Rows[nrow]["oldprice"].ToString().Trim() == "0" && myTb.Rows[nrow]["iscomplex"].ToString().Trim() == "0")
                                    {
                                        this.SendTabKey(1);			//价格为0并且不为套餐，跳到价格
                                        return true;
                                    }
                                    else
                                    {
                                        this.SendTabKey(3);			//单位为只渎	连续跳格
                                        return true;				//屏蔽输入
                                    }
                                }
                                else
                                {
                                    if (myTb.Rows[nrow]["oldprice"].ToString().Trim() == "0" && myTb.Rows[nrow]["iscomplex"].ToString().Trim() == "0")
                                    {
                                        this.SendTabKey(1);			//价格为0并且不为套餐，跳到价格
                                        return true;
                                    }
                                    else
                                    {
                                        //上行有内容，直接跳到下行
                                        this.SendTabKey(15);										//为最后一个，连续送十二格
                                        return true;												//屏蔽输入
                                    }
                                }
                            }
                        }

                        //长嘱为单价 跳到用法
                        if (ColumnName == "单价" && tc.SelectedTab.Title.Trim() == sTab0)
                        {
                            //第0行
                            if (nrow == 0)
                            {
                                this.SendTabKey(2);			//单位为只读	连续跳格
                                return true;				//屏蔽输入
                            }

                            //上一行无内容
                            if (myTb.Rows[nrow - 1]["医嘱内容"].ToString().Trim() == "" || myTb.Rows[nrow - 1]["HOItem_ID"].ToString().Trim() == "")
                            {
                                this.SendTabKey(2);			//单位为只渎	连续跳格
                                return true;				//屏蔽输入
                            }
                            else
                            {
                                if (myTb.Rows[nrow]["医嘱内容"].ToString().Trim() == "" || myTb.Rows[nrow]["HOItem_ID"].ToString().Trim() == "")
                                {
                                    this.SendTabKey(2);			//单位为只渎	连续跳格
                                    return true;				//屏蔽输入	
                                }
                                else
                                {
                                    //上行有内容，直接跳到下行
                                    this.SendTabKey(14);										//为最后一个，连续送十二格
                                    return true;												//屏蔽输入
                                }
                            }
                        }

                        //临嘱为剂量  用来实现连续跳格
                        if (ColumnName == "剂量" && tc.SelectedTab.Title.Trim() == sTab1)
                        {
                            if (myTb.Rows[nrow]["oldprice"].ToString().Trim() == "0" && myTb.Rows[nrow]["iscomplex"].ToString().Trim() == "0")
                            {
                                this.SendTabKey(1);			//价格为0并且不为套餐，跳到价格
                                return true;
                            }
                        }

                        //临嘱为单价 连续跳格
                        if (ColumnName == "单价" && tc.SelectedTab.Title.Trim() == sTab1)
                        {
                            this.SendTabKey(15);			//单位为只渎	连续跳格
                            return true;				//屏蔽输入
                        }

                        //通用
                        SendKeys.Send("{tab}");
                        this.GrdSel.Visible = false;
                        //屏蔽输入
                        return true;
                    //break;
                    case 27:  //esc
                        this.GrdSel.Visible = false;
                        break;
                }
                #endregion
                //====================================================================================================================================================================							
                return false;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
                return true;
            }
        }
        #endregion

        #region 临时账单鼠标事件
        /// <summary>
        /// 临时账单鼠标事件
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>

        private void dataGrid_TempZD_MouseDown(object sender, System.Windows.Forms.MouseEventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            DataTable myTb = (DataTable)this.dataGrid_LongZD.DataSource;

            if (myTb == null)
            {
                return;
            }

            int nrow = this.dataGrid_TempZD.CurrentCell.RowNumber;
            int ncol = this.dataGrid_TempZD.CurrentCell.ColumnNumber;

            if (tc.SelectedTab.Title.Trim() != sTab0 && tc.SelectedTab.Title.Trim() != sTab1)
            {
                return;
            }
            else
            {
                //避免鼠标离开时产生的错误
                string ColumnName = this.dataGrid_TempZD.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();

                if (this.GrdSel.Visible == true)
                {
                    myTb.Rows[nrow][ColumnName] = "";
                    if (ColumnName.Trim() == "医嘱内容") myTb.Rows[nrow]["HOItem_ID"] = "";
                    if (ColumnName.Trim() == "执行科室") myTb.Rows[nrow]["Exec_Dept"] = "";

                    DataGridTextBoxColumn txtCol = (DataGridTextBoxColumn)this.dataGrid_TempZD.TableStyles[0].GridColumnStyles[ncol];
                    txtCol.TextBox.Text = "";

                    this.dataGrid_TempZD.DataSource = myTb;
                }
            }
        }

        private void dataGrid_TempZD_MouseUp(object sender, System.Windows.Forms.MouseEventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;

            DataTable myTb = (DataTable)this.dataGrid_TempZD.DataSource;
            int nrow = this.dataGrid_TempZD.CurrentCell.RowNumber;
            int ncol = this.dataGrid_TempZD.CurrentCell.ColumnNumber;

            if (tc.SelectedTab.Title.ToString().Trim() != sTab0 && tc.SelectedTab.Title.ToString().Trim() != sTab1)
            {
                if (myTb == null) return;

                //如果是医嘱内容列
                if (ncol == 25)
                {
                    //显示药品信息
                    if (myTb.Rows.Count > 0)
                    {
                        int myTYPE = Convert.ToInt32(myTb.Rows[nrow]["nType"]);
                        //有效性判断
                        if (myTYPE > 3)
                        {
                            long HOitem_ID = Convert.ToInt64(Convertor.IsNull(myTb.Rows[nrow]["item_code"].ToString(), "0"));
                            double num = Convert.ToDouble(Convertor.IsNull(myTb.Rows[nrow]["num"].ToString(), "0"));
                            string User_Name = myTb.Rows[nrow]["order_usage"].ToString();

                            this.dataGrid_TempZD.TableStyles.Clear();

                            DataTable myTbTemp = myQuery.SetItemInfo("", HOitem_ID, num, User_Name, (new Department(Convert.ToInt64(Convertor.IsNull(myTb.Rows[nrow]["exec_dept"].ToString(), InstanceForm._currentDept.DeptId.ToString())), InstanceForm._database)).Jgbm); //*js);
                            this.dataGrid_TempZD.DataSource = myTbTemp;

                            this.dataGrid_TempZD.CaptionText = "项目明细";
                            this.dataGrid_TempZD.Refresh();
                        }
                    }
                }
            }
        }
        #endregion

        #region 长期和临时账单页面转换触发的事件
        /// <summary>
        /// 长期和临时账单页面转换触发的事件
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>

        private void dataGrid_LongZD_CurrentCellChanged(object sender, System.EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;

            int nrow, ncol;
            //首先得到基本的网格信息
            DataTable myTb = (DataTable)this.dataGrid_LongZD.DataSource;
            nrow = this.dataGrid_LongZD.CurrentCell.RowNumber;
            ncol = this.dataGrid_LongZD.CurrentCell.ColumnNumber;

            if (tc.SelectedTab.Title.ToString().Trim() == sTab0 || tc.SelectedTab.Title.ToString().Trim() == sTab1)
            {
                //判断是不是最后一个
                if (nrow > myTb.Rows.Count - 1)
                {
                    myTb.Rows.Add(myTb.NewRow());
                    this.dataGrid_LongZD.DataSource = myTb;
                    //为防止失去焦点
                    DataGridCell myCell = new DataGridCell(nrow, ncol);
                    this.dataGrid_LongZD.CurrentCell = myCell;

                    DataTable myTbTemp = (DataTable)this.dataGrid1.DataSource;
                    if (myTbTemp != null) myTbTemp.Rows.Clear();
                }
                else
                {
                    long HOitem_ID = Convert.ToInt64(Convertor.IsNull(myTb.Rows[nrow]["HOitem_ID"].ToString(), "0"));
                    double num = Convert.ToDouble(Convertor.IsNull(myTb.Rows[nrow]["剂量"].ToString(), "0"));
                    string User_Name = myTb.Rows[nrow]["用法"].ToString();
                    if (cYZ != HOitem_ID || cJL != num || (cYF != User_Name && tc.SelectedTab.Title.ToString().Trim() == sTab1))
                    {
                        //赋当前值
                        cYZ = HOitem_ID;
                        cJL = num;
                        cYF = User_Name;

                        //不是一组医嘱的第一行，则不显示用法的附加项目
                        if (nrow > 0 && (myTb.Rows[nrow - 1]["医嘱内容"].ToString().Trim() != "" || myTb.Rows[nrow - 1]["HOItem_ID"].ToString().Trim() != ""))
                        {
                            User_Name = "";
                        }

                        DataTable myTbTemp = myQuery.SetItemInfo("", HOitem_ID, num, User_Name, (new Department(Convert.ToInt64(Convertor.IsNull(myTb.Rows[nrow]["exec_dept"].ToString(), InstanceForm._currentDept.DeptId.ToString())), InstanceForm._database)).Jgbm); //*js);
                        this.dataGrid1.DataSource = myTbTemp;

                    }
                    //判断是否为医嘱内容的输入
                    this.GrdSel.Visible = false;
                }

                //控制只有单价为0并且不是套餐才能够更改价格
                DataGridTextBoxColumn txtColPrice = (DataGridTextBoxColumn)dataGrid_LongZD.TableStyles[0].GridColumnStyles["单价"];
                if (Convert.ToDecimal(Convertor.IsNull(myTb.Rows[nrow]["oldprice"], "0")) == 0 && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["iscomplex"], "0")) == 0)
                {
                    txtColPrice.ReadOnly = false;
                }
                else
                {
                    txtColPrice.ReadOnly = true;
                }
            }
            else
            {
                DataTable tmpTb = (DataTable)this.dataGrid1.DataSource;
                if (tmpTb != null) tmpTb.Rows.Clear();
            }
        }

        private void dataGrid_TempZD_CurrentCellChanged(object sender, System.EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;

            int nrow, ncol;
            //首先得到基本的网格信息
            DataTable myTb = (DataTable)this.dataGrid_TempZD.DataSource;
            nrow = this.dataGrid_TempZD.CurrentCell.RowNumber;
            ncol = this.dataGrid_TempZD.CurrentCell.ColumnNumber;

            try
            {
                if (tc.SelectedTab.Title.ToString().Trim() == sTab0 || tc.SelectedTab.Title.ToString().Trim() == sTab1)
                {
                    //判断是不是最后一个
                    if (nrow > myTb.Rows.Count - 1)
                    {
                        myTb.Rows.Add(myTb.NewRow());
                        this.dataGrid_TempZD.DataSource = myTb;
                        //为防止失去焦点
                        DataGridCell myCell = new DataGridCell(nrow, ncol);
                        this.dataGrid_TempZD.CurrentCell = myCell;

                        DataTable myTbTemp = (DataTable)this.dataGrid1.DataSource;
                        if (myTbTemp != null) myTbTemp.Rows.Clear();
                    }
                    else
                    {
                        long HOitem_ID = Convert.ToInt64(Convertor.IsNull(myTb.Rows[nrow]["HOitem_ID"].ToString(), "0"));
                        double num = Convert.ToDouble(Convertor.IsNull(myTb.Rows[nrow]["剂量"].ToString(), "0"));
                        string User_Name = myTb.Rows[nrow]["用法"].ToString();
                        if (cYZ != HOitem_ID || cJL != num || (cYF != User_Name && tc.SelectedTab.Title.ToString().Trim() == sTab1))
                        {
                            //赋当前值
                            cYZ = HOitem_ID;
                            cJL = num;
                            cYF = User_Name;

                            //不是一组医嘱的第一行，则不显示用法的附加项目
                            if (nrow > 0 && (myTb.Rows[nrow - 1]["医嘱内容"].ToString().Trim() != "" || myTb.Rows[nrow - 1]["HOItem_ID"].ToString().Trim() != ""))
                            {
                                User_Name = "";
                            }

                            DataTable myTbTemp = myQuery.SetItemInfo("", HOitem_ID, num, User_Name, (new Department(Convert.ToInt64(Convertor.IsNull(myTb.Rows[nrow]["exec_dept"].ToString(), InstanceForm._currentDept.DeptId.ToString())), InstanceForm._database)).Jgbm); //*js);
                            this.dataGrid1.DataSource = myTbTemp;

                        }
                        //判断是否为医嘱内容的输入
                        this.GrdSel.Visible = false;
                    }

                    //控制只有单价为0并且不是套餐才能够更改价格
                    DataGridTextBoxColumn txtColPrice = (DataGridTextBoxColumn)dataGrid_TempZD.TableStyles[0].GridColumnStyles["单价"];
                    if (Convert.ToDecimal(Convertor.IsNull(myTb.Rows[nrow]["oldprice"], "0")) == 0 && Convert.ToInt32(Convertor.IsNull(myTb.Rows[nrow]["iscomplex"], "0")) == 0)
                    {
                        txtColPrice.ReadOnly = false;
                    }
                    else
                    {
                        txtColPrice.ReadOnly = true;
                    }
                }
                else
                {
                    DataTable tmpTb = (DataTable)this.dataGrid1.DataSource;
                    if (tmpTb != null) tmpTb.Rows.Clear();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        #endregion

        #region 点击左边病人列表，显示相关病人的信息个医嘱
        /// <summary>
        /// 点击左边病人列表，显示相关病人的信息个医嘱
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void dataGrid2_CurrentCellChanged(object sender, System.EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;

            if (this.dataGrid2.CurrentRowIndex == -1) return;

            this.dataGrid2.Select(this.dataGrid2.CurrentRowIndex);

            if (!mz)
            {
                string Bed_No = ((DataTable)this.dataGrid2.DataSource).Rows[this.dataGrid2.CurrentRowIndex]["床号"].ToString();
                string Name = ((DataTable)this.dataGrid2.DataSource).Rows[this.dataGrid2.CurrentRowIndex]["姓名"].ToString();

                string sSql = "SELECT INPATIENT_ID,Baby_ID,isMY FROM vi_zy_vInpatient_Bed WHERE NAME= '" + Name + "'AND BED_NO = '" + Bed_No + "'";
                DataTable tb = InstanceForm._database.GetDataTable(sSql);
                Guid _Bin_ID = new Guid(tb.Rows[0][0].ToString());
                GetBinID(_Bin_ID, null);
                long _Baby_ID = Convert.ToInt64(tb.Rows[0][1].ToString());
                int _isMY = Convert.ToInt32(tb.Rows[0][2].ToString());
                this.patientInfo1.SetInpatientInfo(_Bin_ID, _Baby_ID, _isMY);
            }
            else
            {
                string INPATIENT_NO = ((DataTable)this.dataGrid2.DataSource).Rows[this.dataGrid2.CurrentRowIndex]["住院号"].ToString();
                string Name = ((DataTable)this.dataGrid2.DataSource).Rows[this.dataGrid2.CurrentRowIndex]["姓名"].ToString();

                string sSql = "select c.INPATIENT_ID AS BINID,0 as Baby_ID,0 as isMY " +
                    "from ss_apprecord a,ss_arrrecord b,vi_zy_vinpatient_bed c " +
                    "where a.inpatient_id=c.inpatient_id and c.baby_id=0 and " +
                    "a.sno=b.sno and a.inpatient_id=b.inpatient_id and a.apbj=1 and  b.bdelete=0 and b.wcbj=0 and C.INPATIENT_NO = '" + INPATIENT_NO + "' and NAME= '" + Name + "' ORDER BY BINID";
                DataTable tb = InstanceForm._database.GetDataTable(sSql);
                Guid _Bin_ID = new Guid(tb.Rows[0][0].ToString());
                GetBinID(_Bin_ID, null);
                long _Baby_ID = Convert.ToInt64(tb.Rows[0][1].ToString());
                int _isMY = Convert.ToInt32(tb.Rows[0][2].ToString());
                this.patientInfo1.SetInpatientInfo(_Bin_ID, _Baby_ID, _isMY);
            }

            LoadYbzfbl_ZD();

            string str = patientInfo1.lbName.Text.Trim();
            this.Text = str;

            if (tc.SelectedTab.Title.Trim() == "长期医嘱")
            {
                loadGrid_LongOrder();
                return;
            }
            if (tc.SelectedTab.Title.Trim() == "临时医嘱")
            {
                loadGrid_TempOrder();
                return;
            }
            if (tc.SelectedTab.Title.Trim() == sTab0)
            {
                InitGrd_LongZD();
                return;
            }
            if (tc.SelectedTab.Title.Trim() == sTab1)
            {
                InitGrd_TempZD();
                return;
            }
        }

        #endregion

        private void statusBar1_MouseEnter(object sender, System.EventArgs e)
        {
            this.panel8.Visible = true;
        }

        private void statusBar1_MouseLeave(object sender, System.EventArgs e)
        {
            this.panel8.Visible = false;
        }

        private void GetForm(string dllName, string functionName, string chineseName, long userID, long deptID, object[] communicateValue, bool showType)
        {
            try
            {
                User _user_id = new User(Convert.ToInt32(userID), InstanceForm._database);
                Department _dept_id = new Department(Convert.ToInt32(deptID), InstanceForm._database);

                //获得DLL中窗体
                Form _dllform = (Form)WorkStaticFun.InstanceForm(dllName, functionName, chineseName, _user_id, _dept_id, null, InstanceForm._database, ref communicateValue);
                _dllform.StartPosition = FormStartPosition.CenterScreen;
                if (showType) _dllform.ShowDialog();
                else _dllform.Show();
                for (int i = 0; i < 10; i++) openForm[i] = -1;   //将已经打开的医嘱管理窗体进行初始化,如果没有这句话,在关闭医嘱窗体后再打开则会提示该医嘱窗体已经打开
                Cursor = Cursors.Default;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message + ex.StackTrace.ToString());
                Cursor = Cursors.Default;
                return;
            }
        }

        private void LoadYF()
        {
            DataTable yfTb = InstanceForm._database.GetDataTable("SELECT a.drugstore_id id,b.name FROM JC_DEPT_DRUGSTORE a inner join JC_DEPT_PROPERTY b on a.drugstore_id=b.dept_id where a.dept_id=" + DeptID + " and a.flag<2 and a.DELETE_BIT=0");
            if (yfTb.Rows.Count > 0)
            {
                SystemCfg cfg = new SystemCfg(6024, InstanceForm._database);
                if (cfg.Config == "0")
                {
                    DataRow dr = yfTb.NewRow();
                    dr[0] = 0;
                    dr[1] = "全部药房";
                    yfTb.Rows.Add(dr);
                }
                cmbYF.DisplayMember = "NAME";
                cmbYF.ValueMember = "ID";
                cmbYF.DataSource = yfTb;
                yfTb = null;
                if (cfg.Config == "0")
                {
                    cmbYF.SelectedValue = 0;
                }
                else
                {
                    cmbYF.SelectedIndex = 0;
                }
            }
        }

        private void chkRq_CheckedChanged(object sender, EventArgs e)
        {
            dtpRq1.Enabled = chkRq.Checked;
            dtpRq2.Enabled = chkRq.Checked;
        }

        //查看费用明细
        private void OnShowOrderFee(object sender, EventArgs e)
        {
            if (BinID == null || BinID == Guid.Empty)
            {
                MessageBox.Show("没有找到病人信息，请重新确认！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }

            DataTable myTb = new DataTable();
            DataGridEx dataGrid = new DataGridEx();
            int mngtype = 0;

            if (tabnum == 1)
            {
                dataGrid = this.dataGrid_LongOrder;
                mngtype = 0;
            }

            if (tabnum == 2)
            {
                dataGrid = this.dataGrid_TempOrder;
                mngtype = 1;
            }

            myTb = (DataTable)dataGrid.DataSource;
            if (myTb == null) return;
            if (myTb.Rows.Count == 0) return;

            int nrow = 0;
            nrow = dataGrid.CurrentCell.RowNumber;

            //如果医嘱ID为空
            if (myTb.Rows[nrow]["嘱号"].ToString() == "") return;

            if (myTb.Rows.Count > 0)
            {
                ts_zyhs_yzgl.frmYZXX f1 = new ts_zyhs_yzgl.frmYZXX();
                f1.sTitle = "病人“" + patientInfo1.lbName.Text.Trim() + "”医嘱详细信息";
                f1.MNGType = mngtype;
                f1.MNGType2 = f1.MNGType == 1 ? 5 : f1.MNGType;
                f1.Group_ID = Convert.ToInt32(myTb.Rows[nrow]["嘱号"]);
                f1.OrderID = new Guid(myTb.Rows[nrow]["id"].ToString());
                f1.nType = Convert.ToInt32(myTb.Rows[nrow]["ntype"]);
                f1.isSSMZ = mz;
                f1.isTSZL = _tszl;
                f1.isCX = !_tszl;//Modify By Tany 2010-03-10 如果是特殊治疗，可以允许冲正
                f1.isUNCZ = !_tszl;

                ClassStatic.Current_BinID = BinID;
                ClassStatic.Current_BabyID = BabyID;
                ClassStatic.Current_DeptID = Dept_Br;

                f1.ShowDialog();
            }

        }

        #region 根据病人医保类型获取医保自付比例
        /// <summary>
        /// 根据病人医保类型获取医保自付比例
        /// </summary>
        private void LoadYbzfbl_ZD()
        {
            if (BinID == Guid.Empty)
            {
                return;
            }
            DataTable tb = SelectDataViews.Table;
            if (tb == null || tb.Rows.Count == 0)
            {
                return;
            }

            try
            {
                string sql = "";
                //sql = "select c.YBJKLX, c.XMLY, c.XMID, c.ZYBZ, convert(varchar,convert(int,c.ZFBL*100))+'%' zfbl from zy_inpatient a " +
                //    " inner join jc_yblx b on a.yblx=b.id " +
                //    " inner join jc_yb_zfbl c on b.ybjklx=c.ybjklx " +
                //    " where c.zybz=1 and a.inpatient_id='" + ClassStatic.Current_BinID + "'";

                //Modify By Tany 2010-03-23 如果病人接口类型是0，不判断医保状态
                DataTable tbPat = InstanceForm._database.GetDataTable("select * from vi_zy_vinpatient_all where baby_id=0 and inpatient_id='" + BinID + "'");

                if (Convert.ToInt32(tbPat.Rows[0]["dischargetype"]) == 1 && Convert.ToInt32(tbPat.Rows[0]["ybjklx"]) == 0)
                {
                    for (int i = 0; i < tb.Rows.Count; i++)
                    {
                        tb.Rows[i]["自付比"] = "无";
                    }
                    return;
                }

                //更改表名
                sql = "select c.yblx, c.XMLY, c.XMID, ISNULL(c.ZYBZ,1)ZYBZ, convert(varchar,convert(int,c.ZFBL*100))+'%' zfbl from zy_inpatient a " +
                        " inner join jc_yb_bl c on a.yblx=c.yblx " +
                        " where (c.zybz=1 or c.zybz is null) and a.inpatient_id='" + BinID + "'";
                DataTable tbYbzfblZD = InstanceForm._database.GetDataTable(sql);

                //if (tbYbzfbl == null || tbYbzfbl.Rows.Count == 0)
                //{
                //    for (int i = 0; i < tb.Rows.Count; i++)
                //    {
                //        tb.Rows[i]["自付比"] = "";
                //    }
                //    return;
                //}

                int cfg = Convert.ToInt32(new SystemCfg(6022, InstanceForm._database).Config);//Modify By tany 2010-01-29 医嘱选项卡是否显示医保自付比例0=是1=不是

                for (int i = 0; i < tb.Rows.Count; i++)
                {
                    //if (tb.Rows[i]["xmly"].ToString().Trim() == "1")
                    //{
                    //for (int j = 0; j < tbYbzfbl.Rows.Count; j++)
                    //{
                    //    if (tb.Rows[i]["xmly"].ToString().Trim() == tbYbzfbl.Rows[j]["xmly"].ToString().Trim()
                    //        && tb.Rows[i]["order_id"].ToString().Trim() == tbYbzfbl.Rows[j]["xmid"].ToString().Trim())
                    //    {
                    //        tb.Rows[i]["自付比"] = tbYbzfbl.Rows[j]["zfbl"];
                    //        break;
                    //    }
                    //}
                    tb.Rows[i]["自付比"] = "";

                    if (tb.Rows[i]["itemid"].ToString().Trim() == "")
                        continue;

                    DataRow[] dr = tbYbzfblZD.Select("xmly=2 and xmid=" + tb.Rows[i]["itemid"].ToString().Trim());
                    if (dr.Length == 0)
                    {
                        continue;
                    }
                    else
                    {
                        tb.Rows[i]["自付比"] = cfg == 0 ? Convertor.IsNull(dr[0]["zfbl"], "已匹配") : "已匹配";//dr[0]["zfbl"]; Modify By Tany 2010-01-11 只显示已匹配
                    }
                    //}
                }

                SelectDataViews = new DataView(tb);
            }
            catch (Exception err)
            {
                MessageBox.Show(err.Message);
            }
        }
        #endregion

        private void 批量停嘱ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FrmStopOrders frmStopOders = new FrmStopOrders(BinID, BabyID, DeptID, YS_ID);
            frmStopOders.ShowDialog();

            loadGrid_LongOrder();//刷新数据
        }

        //查看费用明细
        private void OnShowPacs(object sender, EventArgs e)
        {
            if (ApiFunction.GetIniString("PACS", "是否启用", Constant.ApplicationDirectory + "\\pacs.ini").Trim() != "1")
            {
                MessageBox.Show("对不起，暂未启用PACS接口！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            if (BinID == null || BinID == Guid.Empty)
            {
                MessageBox.Show("没有找到病人信息，请重新确认！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }

            DataTable myTb = new DataTable();
            DataGridEx dataGrid = new DataGridEx();
            int mngtype = 0;

            if (tabnum == 1)
            {
                dataGrid = this.dataGrid_LongOrder;
                mngtype = 0;
            }

            if (tabnum == 2)
            {
                dataGrid = this.dataGrid_TempOrder;
                mngtype = 1;
            }

            myTb = (DataTable)dataGrid.DataSource;
            if (myTb == null) return;
            if (myTb.Rows.Count == 0) return;

            int nrow = 0;
            nrow = dataGrid.CurrentCell.RowNumber;

            //如果医嘱ID为空
            if (myTb.Rows[nrow]["嘱号"].ToString() == "") return;

            if (myTb.Rows.Count > 0)
            {
                myQuery.ReadPacsInfo(new Guid(myTb.Rows[nrow]["id"].ToString()));
            }

        }

        private void OnExecTime(object sender, EventArgs e)
        {
            if (BinID == null || BinID == Guid.Empty)
            {
                MessageBox.Show("没有找到病人信息，请重新确认！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }

            DataTable myTb = (DataTable)this.dataGrid_TempOrder.DataSource;
            if (myTb == null) return;
            if (myTb.Rows.Count == 0) return;

            int nrow = 0;
            nrow = dataGrid_TempOrder.CurrentCell.RowNumber;

            string sql = "select * from zy_orderexec where order_id='" + myTb.Rows[nrow]["id"].ToString().Trim() + "'";
            DataTable exeTb = InstanceForm._database.GetDataTable(sql);

            if (exeTb == null || exeTb.Rows.Count == 0)
            {
                MessageBox.Show("未找到该组医嘱的执行信息，请医嘱执行后再操作！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            else if (Convertor.IsNull(exeTb.Rows[0]["realexecdate"], "") != "")
            {
                if (MessageBox.Show("该组医嘱已经录入了实际执行时间，是否确定更改？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                {
                    return;
                }
            }
            else if (MessageBox.Show("是否确定更改医嘱的实际执行时间？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
            {
                return;
            }

            DateTime _execTime = new DateTime();
            long _employeeId = 0;

            frmExecTime frmET = new frmExecTime(InstanceForm._currentUser.UserID, InstanceForm._database);
            frmET.ShowDialog();
            if (frmET.DialogResult == DialogResult.OK)
            {
                _execTime = frmET._execTime;
                _employeeId = frmET._employeeId;
            }
            else
            {
                return;
            }

            //开始更新数据
            Cursor.Current = PubStaticFun.WaitCursor();

            string[] sSql = new string[2];
            //更新医嘱执行表
            sSql[0] = "update zy_orderexec set realexecdate='" + _execTime + "',realexeuser=" + _employeeId +
                " where order_id in (select order_id from zy_orderrecord where inpatient_id='" + BinID + "'" +
                " and baby_id=" + BabyID + " and group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() + ")";
            //更新医嘱打印表
            sSql[1] = "update zy_tmporderprt set execdate='" + _execTime + "',exeuser=" + _employeeId +
                " where order_id in (select order_id from zy_orderrecord where inpatient_id='" + BinID + "'" +
                " and baby_id=" + BabyID + " and group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() + ")";
            InstanceForm._database.DoCommand(null, null, null, sSql);

            //写日志 Add By Tany 2005-01-12
            SystemLog _systemLog = new SystemLog(-1, InstanceForm._currentDept.DeptId, InstanceForm._currentUser.EmployeeId, "更新执行时间", "将病人" + BinID + " " + BabyID + " Group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() + " 的医嘱执行时间更新为 " + _execTime.ToString() + " " + _employeeId, DateManager.ServerDateTimeByDBType(InstanceForm._database), 1, "主机名：" + System.Environment.MachineName, 6);
            _systemLog.Save();
            _systemLog = null;

            Cursor.Current = Cursors.Default;

            MessageBox.Show("更新执行时间成功！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }

        private void DtpbeginDate_ValueChanged(object sender, EventArgs e)
        {
            //Modify by jchl
            blsj = DtpbeginDate.Value;
        }

        private void FrmYZGL_FormClosed(object sender, FormClosedEventArgs e)
        {
            if (cfg6032 == "1" && hl != null)//modify by zouchihua 2011-12-27
            {
                this.hl.Refresh();

                //modify by jchl 2016-07-13
                if (mz)
                {
                    this.hl.UNRegisterServer();
                }
                //this.hl.UNRegisterServer();
            }
            try
            {
                int count = myQuery.Cpform.Count;
                for (int i = 0; i < count; i++)
                {
                    (myQuery.Cpform[i] as Form).Close();
                }
                myQuery.Cpform.Clear();
            }
            catch
            {
            }
        }

        private void dataGrid_LongOrder_Click(object sender, EventArgs e)
        {
            //控制BOOL列
            int nrow, ncol;
            DataGridEx myDataGrid1 = null;
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            //if (tc.TabPages["长期医嘱"].Selected)
            //modify by zouchihua 
            if (tc.SelectedTab.Title.ToString() == "长期医嘱")
            {
                myDataGrid1 = this.dataGrid_LongOrder;
            }
            if (tc.SelectedTab.Title.ToString() == "临时医嘱")
            {
                myDataGrid1 = this.dataGrid_TempOrder;
            }
            if (myDataGrid1 == null)
                return;
            nrow = myDataGrid1.CurrentCell.RowNumber;
            ncol = myDataGrid1.CurrentCell.ColumnNumber;
            string ssql = "";

            //提交网格数据
            if (ncol > 0 && nrow > 0) myDataGrid1.CurrentCell = new DataGridCell(nrow, ncol - 1);
            myDataGrid1.CurrentCell = new DataGridCell(nrow, ncol);

            DataTable myTb = ((DataTable)myDataGrid1.DataSource);
            if (nrow >= myTb.Rows.Count)
                return;
            if (myTb == null) return;
            if (myTb.Rows.Count <= 0) return;
            if (myTb.Rows[nrow]["医嘱内容"] == null || myTb.Rows[nrow]["医嘱内容"].ToString() == "")
                return;
            if (myDataGrid1.TableStyles[0].GridColumnStyles[ncol].MappingName.ToUpper().Trim() == "DEL_PRINT")
            {
                bool del_print = Convert.ToBoolean(myTb.Rows[nrow]["DEL_PRINT"]);

                Guid order_id = new Guid(myTb.Rows[nrow]["id"].ToString());

                if (del_print == true)
                {
                    if (MessageBox.Show(this, "您要该医嘱 [要] 打印吗?", "", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                    {
                        myTb.Rows[nrow]["DEL_PRINT"] = true;
                        DataTable dt = getgroupid(myTb, myTb.Rows[nrow]["嘱号"].ToString());
                        foreach (DataRow drGrp in dt.Rows)
                        {
                            if (drGrp["ID"].ToString().Equals(myTb.Rows[nrow]["id"].ToString()))
                                continue;

                            DataRow[] drMods = myTb.Select("id='" + drGrp["ID"].ToString() + "'");
                            foreach (DataRow drMod in drMods)
                            {
                                drMod["DEL_PRINT"] = myTb.Rows[nrow]["DEL_PRINT"];
                            }
                        }
                        btRefur_Click(null, null);
                        return;
                    }
                }
                else
                {
                    if (MessageBox.Show(this, "确定该医嘱 [不要] 打印吗?", "", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                    {
                        myTb.Rows[nrow]["DEL_PRINT"] = false;
                        DataTable dt = getgroupid(myTb, myTb.Rows[nrow]["嘱号"].ToString());
                        foreach (DataRow drGrp in dt.Rows)
                        {
                            if (drGrp["ID"].ToString().Equals(myTb.Rows[nrow]["id"].ToString()))
                                continue;

                            DataRow[] drMods = myTb.Select("id='" + drGrp["ID"].ToString() + "'");
                            foreach (DataRow drMod in drMods)
                            {
                                drMod["DEL_PRINT"] = myTb.Rows[nrow]["DEL_PRINT"];
                            }
                        }
                        btRefur_Click(null, null);
                        return;
                    }
                }

                if (del_print == true)
                {
                    ssql = "update zy_orderrecord set del_print=0 where INPATIENT_ID='" + BinID + "' and group_id='" + myTb.Rows[nrow]["嘱号"].ToString() + "'";
                    InstanceForm._database.DoCommand(ssql);
                    myTb.Rows[nrow]["DEL_PRINT"] = false;
                }
                else
                {
                    ssql = "update zy_orderrecord set del_print=1 where INPATIENT_ID='" + BinID + "'  and group_id='" + myTb.Rows[nrow]["嘱号"].ToString() + "'";
                    InstanceForm._database.DoCommand(ssql);
                    myTb.Rows[nrow]["DEL_PRINT"] = true;
                }

                //Modify by jchl(按嘱号不打印)
                DataTable dt1 = getgroupid(myTb, myTb.Rows[nrow]["嘱号"].ToString());
                foreach (DataRow drGrp in dt1.Rows)
                {
                    if (drGrp["ID"].ToString().Equals(myTb.Rows[nrow]["id"].ToString()))
                        continue;

                    DataRow[] drMods = myTb.Select("id='" + drGrp["ID"].ToString() + "'");
                    foreach (DataRow drMod in drMods)
                    {
                        drMod["DEL_PRINT"] = myTb.Rows[nrow]["DEL_PRINT"];
                    }
                }
                btRefur_Click(null, null);

            }
            else
                if (myDataGrid1.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim() == "IsprintYPGG")//add by zouchihua 2011-11-30
                {
                    bool del_print = Convert.ToBoolean(myTb.Rows[nrow]["ISPRINTYPGG"]);

                    Guid order_id = new Guid(myTb.Rows[nrow]["id"].ToString());

                    if (del_print == true)
                    {
                        if (MessageBox.Show(this, "确定该医嘱规格[不要] 打印吗?", "", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                        {
                            myTb.Rows[nrow]["isprintypgg"] = true;
                            DataTable dt = getgroupid(myTb, myTb.Rows[nrow]["嘱号"].ToString());
                            foreach (DataRow drGrp in dt.Rows)
                            {
                                if (drGrp["ID"].ToString().Equals(myTb.Rows[nrow]["id"].ToString()))
                                    continue;

                                DataRow[] drMods = myTb.Select("id='" + drGrp["ID"].ToString() + "'");
                                foreach (DataRow drMod in drMods)
                                {
                                    drMod["isprintypgg"] = myTb.Rows[nrow]["isprintypgg"];
                                }
                            }
                            btRefur_Click(null, null);
                            return;
                        }
                    }
                    else
                    {
                        if (MessageBox.Show(this, "您要该医嘱规格 [要] 打印吗?", "", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No)
                        {
                            myTb.Rows[nrow]["isprintypgg"] = false;
                            DataTable dt = getgroupid(myTb, myTb.Rows[nrow]["嘱号"].ToString());
                            foreach (DataRow drGrp in dt.Rows)
                            {
                                if (drGrp["ID"].ToString().Equals(myTb.Rows[nrow]["id"].ToString()))
                                    continue;

                                DataRow[] drMods = myTb.Select("id='" + drGrp["ID"].ToString() + "'");
                                foreach (DataRow drMod in drMods)
                                {
                                    drMod["isprintypgg"] = myTb.Rows[nrow]["isprintypgg"];
                                }
                            }
                            btRefur_Click(null, null);
                            return;
                        }
                    }

                    if (del_print == true)
                    {
                        ssql = "update zy_orderrecord set isprintypgg=0 where INPATIENT_ID='" + BinID + "' and group_id='" + myTb.Rows[nrow]["嘱号"].ToString() + "'";
                        InstanceForm._database.DoCommand(ssql);
                        myTb.Rows[nrow]["isprintypgg"] = false;
                    }
                    else
                    {
                        ssql = "update zy_orderrecord set isprintypgg=1 where INPATIENT_ID='" + BinID + "' and group_id='" + myTb.Rows[nrow]["嘱号"].ToString() + "'";
                        InstanceForm._database.DoCommand(ssql);
                        myTb.Rows[nrow]["ISPRINTYPGG"] = true;
                    }

                    DataTable dt1 = getgroupid(myTb, myTb.Rows[nrow]["嘱号"].ToString());
                    foreach (DataRow drGrp in dt1.Rows)
                    {
                        if (drGrp["ID"].ToString().Equals(myTb.Rows[nrow]["id"].ToString()))
                            continue;

                        DataRow[] drMods = myTb.Select("id='" + drGrp["ID"].ToString() + "'");
                        foreach (DataRow drMod in drMods)
                        {
                            drMod["DEL_PRINT"] = myTb.Rows[nrow]["ISPRINTYPGG"];
                        }
                    }
                    btRefur_Click(null, null);

                }

        }

        private void btngms_Click(object sender, EventArgs e)
        {
            try
            {
                hl.Gmsgl(null);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void 药物临床信息参考ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            DateTime severtime = DateManager.ServerDateTimeByDBType(InstanceForm._database);//取数据库时间;
            DataGridEx mydgv;
            if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                mydgv = this.dataGrid_LongOrder;
            else
                mydgv = this.dataGrid_TempOrder;
            DataTable tb = (DataTable)mydgv.DataSource;
            DataGridEx[] dgv = new DataGridEx[2];
            dgv[0] = dataGrid_LongOrder;
            dgv[1] = dataGrid_TempOrder;
            if (tb.Rows.Count == 0)
                return;
            int crow = mydgv.CurrentCell.RowNumber;
            try
            {
                string ss = tb.Rows[crow]["hoitem_id"].ToString() + "," + tb.Rows[crow]["医嘱内容"].ToString() + "," + tb.Rows[crow]["单位"].ToString() + "," + tb.Rows[crow]["用法"].ToString();

                //PassSetQueryDrug() (ls_DrugCode,ls_DrugName,ls_Unit,ls_RouteName)
                ToolStripMenuItem tl = sender as ToolStripMenuItem;
                Ts_Hlyy_Interface.CfInfo[] cf = new CfInfo[2];
                switch (tl.Text)
                {
                    case "药物临床信息参考":
                        hl.Pub_function(101, ss);
                        break;
                    case "药品说明书":
                        hl.Pub_function(102, ss);
                        break;
                    case "中国药典":
                        hl.Pub_function(107, ss);
                        break;
                    case "病人用药教育":
                        hl.Pub_function(103, ss);
                        break;
                    case "药物检验值":
                        hl.Pub_function(104, ss);
                        break;
                    case "临床检验信息参考":
                        hl.Pub_function(220, ss);
                        break;
                    case "医药信息中心":
                        hl.Pub_function(106, ss);
                        break;
                    case "药品配对信息":
                        hl.Pub_function(13, ss);
                        break;
                    case "给药途径配对信息":
                        hl.Pub_function(14, ss);
                        break;
                    case "医院药品信息":
                        hl.Pub_function(105, ss);
                        break;
                    case "系统设置":
                        hl.Pub_function(11, ss);
                        break;
                    case "用药研究":
                        hl.recipe_check(12, dgv, severtime, 0, ref cf, 0);
                        break;
                    case "警告":
                        hl.recipe_check(6, dgv, severtime, 0, ref cf, 0);
                        break;
                    case "审查":
                        hl.recipe_check(3, dgv, severtime, 0, ref cf, 0);
                        break;
                    case "药物-药物相互作用":
                        hl.Pub_function(201, ss);
                        break;
                    case "物-食物相互作用":
                        hl.Pub_function(202, ss);
                        break;
                    case "国内注射剂体外配伍":
                        hl.Pub_function(203, ss);
                        break;
                    case "国外注射剂体外配伍":
                        hl.Pub_function(204, ss);
                        break;
                    case "禁忌症":
                        hl.Pub_function(205, ss);
                        break;
                    case "副作用":
                        hl.Pub_function(206, ss);
                        break;
                    case "老年人用药":
                        hl.Pub_function(207, ss);
                        break;
                    case "儿童用药":
                        hl.Pub_function(208, ss);
                        break;
                    case "妊娠期用药":
                        hl.Pub_function(209, ss);
                        break;
                    case "哺乳期用药":
                        hl.Pub_function(210, ss);
                        break;
                    case "药品信息":
                        Rectangle rc = mydgv.GetCellBounds(mydgv.CurrentCell.RowNumber, mydgv.CurrentCell.ColumnNumber);
                        Point po = Cursor.Position;
                        try
                        {
                            hl.ShowPoint(new StringBuilder(Convert.ToInt32(this.Width - po.X - 350).ToString() + "," + Convert.ToInt32(this.Height - po.Y - 230).ToString() + "," + po.X + "," + Convert.ToInt32(po.Y + 20) + "," + tb.Rows[crow]["hoitem_id"].ToString() + "," + tb.Rows[crow]["医嘱内容"].ToString()));
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(ex.Message);
                        }
                        break;

                }
                mydgv.Refresh();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void toolStripMenuItem2_Click(object sender, EventArgs e)
        {

        }

        private void btnLsyz_Click(object sender, EventArgs e)
        {
            object[] value = new object[1];
            string cfg5026 = new SystemCfg(5026).Config;
            int cd = Convert.ToInt32(cfg5026);
            value[0] = patientInfo1.lbID.Text.Trim().Substring(0, cd);
            GetDllForm("Ts_zyys_brxx", "Fun_Ts_zyys_yzcx_yzgl", "历史医嘱查询", value).Show();
        }

        private void menuItem13_Click(object sender, EventArgs e)
        {
            FrmSerch frmserch = new FrmSerch();
            frmserch.Serch += new js(frmserch_Serch);
            frmserch.ShowDialog();
        }

        void frmserch_Serch(string tj)
        {
            mbtj = tj;
            InitModel(int.Parse(mbtype));
        }

        private void FrmYZGL_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (cfg6090.Config.Trim() == "1")
            {
                btSave_Click(null, null);
            }
            Ts_zyys_public.PulicStatiFuntion.GCCollect();
            //Ts_zyys_public.PulicStatiFuntion.ClearMemory();
        }

        private void cmbYF_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                (Cpinfo as Ts_Clinicalpathway_Factory.FrmTsCpInfo).yf = int.Parse(cmbYF.SelectedValue.ToString());
            }
            catch (Exception ex)
            {
                //MessageBox.Show(ex.Message);
            }
        }

        private void linkLabel3_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            try
            {
                string PID = "";
                // string Name = txtxm.Text.ToString();
                string ssql = "select * from qyyl_jmzcsc where PID is not null and BRXXID in(select PATIENT_ID from ZY_INPATIENT where INPATIENT_ID='" + this.BinID.ToString() + "' )";
                DataTable tb = FrmMdiMain.Database.GetDataTable(ssql);
                if (tb.Rows.Count == 0)
                    PID = "";
                else
                    PID = tb.Rows[0]["PID"].ToString();

                FrmJkdallq frmjkdallq = new FrmJkdallq(PID, this.patientInfo1.lbName.Text);
                frmjkdallq.Show();
            }
            catch
            {
                MessageBox.Show("没有启用健康档案浏览器!", "提示");
            }

        }

        private void txtserch_TextChanged(object sender, EventArgs e)
        {
            mbtj = this.txtserch.Text.Trim();
            InitModel(int.Parse(mbtype));
        }
        private bool IsActive = true;
        private void FrmYZGL_Activated(object sender, EventArgs e)
        {
            IsActive = true;
        }

        private void FrmYZGL_Deactivate(object sender, EventArgs e)
        {
            IsActive = false;
        }
        /// <summary>
        /// 外来药品录入
        /// 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void button1_Click_1(object sender, EventArgs e)
        {
            #region"add by jchl（修改为弹窗前校验）"
            if (true)
            {
                Crownwood.Magic.Controls.TabControl tc1 = null;
                tc1 = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
                int rowcout = 0;
                if (tc1.SelectedTab.Title.Trim() == "长期医嘱")
                {
                    rowcout = ((DataTable)this.dataGrid_LongOrder.DataSource).Rows.Count;
                    DataTable temptb = ((DataTable)this.dataGrid_LongOrder.DataSource);
                    int tempcur = this.dataGrid_LongOrder.CurrentCell.RowNumber;

                    //Modify by jchl(武汉中心医院 中草药不能开外来药)
                    string FirstRow = myQuery.GetyzTypeCode(temptb.Rows[tempcur]["类型"].ToString().Trim());
                    if (FirstRow.Trim().Equals("3"))
                    {
                        MessageBox.Show("中草药不能开【外来药】", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        return;
                    }

                    if (temptb.Rows[tempcur]["xmly"].ToString().Trim() == "2")
                    {
                        MessageBox.Show("对不起，请选择药品才可以插入！");
                        return;
                    }
                }
                if (tc1.SelectedTab.Title.Trim() == "临时医嘱")
                {
                    rowcout = ((DataTable)this.dataGrid_TempOrder.DataSource).Rows.Count;
                    DataTable temptb = ((DataTable)this.dataGrid_TempOrder.DataSource);
                    int tempcur = this.dataGrid_TempOrder.CurrentCell.RowNumber;

                    //Modify by jchl(武汉中心医院 中草药不能开外来药)
                    string FirstRow = myQuery.GetyzTypeCode(temptb.Rows[tempcur]["类型"].ToString().Trim());
                    if (FirstRow.Trim().Equals("3"))
                    {
                        MessageBox.Show("中草药不能开【外来药】", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        return;
                    }

                    if (temptb.Rows[tempcur]["xmly"].ToString().Trim() == "2")
                    {
                        MessageBox.Show("对不起，请选择药品才可以插入！");
                        return;
                    }
                }
            }
            #endregion

            FrmWlYp frmwlyp = new FrmWlYp();
            frmwlyp.ShowDialog();
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            DataGridEx dgex = null;
            DataTable tb = null;
            int currow = 0;
            int mngtype = 0;
            if (frmwlyp.Ypmc != "" && frmwlyp._cr == true)
            {
                int rowcout = 0;
                if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                {
                    rowcout = ((DataTable)this.dataGrid_LongOrder.DataSource).Rows.Count;
                    DataTable temptb = ((DataTable)this.dataGrid_LongOrder.DataSource);
                    int tempcur = this.dataGrid_LongOrder.CurrentCell.RowNumber;

                    //Modify by jchl(武汉中心医院 中草药不能开外来药)
                    string FirstRow = myQuery.GetyzTypeCode(temptb.Rows[tempcur]["类型"].ToString().Trim());
                    if (FirstRow.Trim().Equals("3"))
                    {
                        MessageBox.Show("中草药不能开【外来药】", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        return;
                    }

                    if (temptb.Rows[tempcur]["xmly"].ToString().Trim() == "2")
                    {
                        MessageBox.Show("对不起，请选择药品才可以插入！");
                        return;
                    }
                }
                if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                {
                    rowcout = ((DataTable)this.dataGrid_TempOrder.DataSource).Rows.Count;
                    DataTable temptb = ((DataTable)this.dataGrid_TempOrder.DataSource);
                    int tempcur = this.dataGrid_TempOrder.CurrentCell.RowNumber;

                    //Modify by jchl(武汉中心医院 中草药不能开外来药)
                    string FirstRow = myQuery.GetyzTypeCode(temptb.Rows[tempcur]["类型"].ToString().Trim());
                    if (FirstRow.Trim().Equals("3"))
                    {
                        MessageBox.Show("中草药不能开【外来药】", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        return;
                    }

                    if (temptb.Rows[tempcur]["xmly"].ToString().Trim() == "2")
                    {
                        MessageBox.Show("对不起，请选择药品才可以插入！");
                        return;
                    }
                }

                btInsert_Click(null, null);




                //然后在录入相关值
                if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                {
                    tb = (DataTable)this.dataGrid_LongOrder.DataSource;
                    currow = dataGrid_LongOrder.CurrentCell.RowNumber;
                    mngtype = 0;
                    dgex = dataGrid_LongOrder;
                }
                if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                {
                    tb = (DataTable)this.dataGrid_TempOrder.DataSource;
                    currow = dataGrid_TempOrder.CurrentCell.RowNumber;
                    mngtype = 1;
                    dgex = dataGrid_TempOrder;
                }

                //如果没有插入成功，就返回
                if (tb.Rows.Count == rowcout)
                {
                    MessageBox.Show("对不起，插入没有成功,请选择没有发送的药品医嘱！");
                    return;
                }

            }
            if (frmwlyp.Ypmc != "" && frmwlyp._cr == false)
            {
                btnNewGroup_Click(null, null);
                //然后在录入相关值
                if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                {
                    tb = (DataTable)this.dataGrid_LongOrder.DataSource;
                    currow = dataGrid_LongOrder.CurrentCell.RowNumber;
                    mngtype = 0;
                    dgex = dataGrid_LongOrder;
                }
                if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                {
                    tb = (DataTable)this.dataGrid_TempOrder.DataSource;
                    currow = dataGrid_TempOrder.CurrentCell.RowNumber;
                    mngtype = 1;
                    dgex = dataGrid_TempOrder;
                }
                currow = dgex.CurrentCell.RowNumber;
            }
            if (frmwlyp.Ypmc.Trim() == "")
                return;
            string lx = "";
            switch (frmwlyp._yplx)
            {
                case "1":
                    lx = "1-西药";
                    break;
                case "2":
                    lx = "2-中成药";
                    break;
                case "3":
                    lx = "3-中草药";
                    break;
            }
            tb.Rows[currow]["xmly"] = 1;
            tb.Rows[currow]["医嘱内容"] = frmwlyp.Ypmc + "[" + frmwlyp.Ypgg + " ] 「自备」";
            tb.Rows[currow]["ntype"] = int.Parse(frmwlyp._yplx);
            tb.Rows[currow]["mngtype"] = mngtype;
            tb.Rows[currow]["规格"] = frmwlyp.Ypgg;
            tb.Rows[currow]["hoitem_id"] = -1;
            tb.Rows[currow]["item_code"] = -1;
            tb.Rows[currow]["执行科室"] = -1;
            tb.Rows[currow]["exec_dept"] = -1;
            tb.Rows[currow]["ps_flag"] = -1;
            tb.Rows[currow]["类型"] = lx;
            tb.Rows[currow]["memo"] = "外来药品";
            tb.Rows[currow]["status_flag"] = 0;
            tb.Rows[currow]["id"] = Guid.Empty;
            if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                tb.Rows[currow]["jldwlx"] = 1;
            tb.Rows[currow]["dwlx"] = 1;
            tb.Rows[currow]["ps_orderid"] = Guid.Empty;
            dgex.CurrentCell = new DataGridCell(currow, 7);
        }

        private void backgroundWorker1_DoWork(object sender, DoWorkEventArgs e)
        {
            string ifqy = ApiFunction.GetIniString("SfQy", "SfQy", Constant.ApplicationDirectory + "\\Cpset.ini");
            if (ifqy == "1")
            {
                string typename = ApiFunction.GetIniString("Tpype", "typename", Constant.ApplicationDirectory + "\\Cpset.ini");
                if (typename == "曼德罗")
                {
                    try
                    {
                        //判断是否进入路径
                        Ts_Clinicalpathway_Factory.Ts_Manadal_path.GetCpstatus(this.BinID.ToString(), this.BabyID.ToString(), Dept_Br.ToString(), WardID.ToString(), this.patientInfo1.lbID.Text, this.patientInfo1.lbIn_Date.Text);
                    }
                    catch (Exception ex) { }
                }
            }
        }
        /// <summary>
        /// 已备药
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void 已备ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            checkPage();
            if (pageType == 0) InsertSelfMed(this.dataGrid_LongOrder, 0, 1);
            else InsertSelfMed(this.dataGrid_TempOrder, 1, 1);
        }
        #region add by yaokx 2014-03-04 插入整盒标记
        /// <summary>
        /// 插入整盒标记，必须先保存之后插入
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void buttZH_Click(object sender, EventArgs e)
        {
            checkPage();
            if (pageType == 0) InsertZH(this.dataGrid_LongOrder, 0);
        }

        private void InsertZH(DataGridEx myDataGrid1, int tab)
        {
            //首先得到基本的网格信息
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            //判断医嘱为空
            if (myTb.Rows[nrow]["医嘱内容"] == System.DBNull.Value) return;
            //只对status_flag为0保存，1转抄，9补录的医嘱进行整盒
            if (Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString()) > 1 && myTb.Rows[nrow]["status_flag"].ToString() != "9")
            {
                MessageBox.Show("医嘱已经执行不能【整盒】");
                return;
            }

            if (new Guid(myTb.Rows[nrow]["id"].ToString()) == Guid.Empty)
            {
                MessageBox.Show("必须先保存才能【整盒】");
                return;
            }
            if ((myTb.Rows[nrow]["医嘱内容"].ToString().Trim().IndexOf("「自备」", 0) >= 0)
                            && myTb.Rows[nrow]["执行科室"].ToString() == "-1")
            {
                MessageBox.Show("对自备的药品不能【整盒】");
                return;
            }
            string s_zhbj = "select * from ZY_ORDERRECORD where ORDER_ID='" + new Guid(myTb.Rows[nrow]["id"].ToString()) + "'";
            DataTable dt_zhbj = FrmMdiMain.Database.GetDataTable(s_zhbj);
            if (dt_zhbj == null) return;
            DataTable dt_group = getgroupid(myTb, dt_zhbj.Rows[0]["GROUP_ID"].ToString());
            FrmMdiMain.Database.BeginTransaction();
            try
            {
                for (int ii = 0; ii < dt_group.Rows.Count; ii++)
                {
                    if ((dt_group.Rows[ii]["医嘱内容"].ToString().Trim().IndexOf("「整盒」", 0) >= 0)
                        && dt_group.Rows[ii]["执行科室"].ToString() == "-1")
                    {
                        string context = dt_group.Rows[ii]["医嘱内容"].ToString().Replace("「整盒」", "");
                        try
                        {
                            if (dt_zhbj.Rows.Count > 0)
                            {
                                string sql = "update ZY_ORDERRECORD set ZHBJ=0,ORDER_CONTEXT='" + context + "',EXEC_DEPT=" + dt_zhbj.Rows[0]["ZHBJ"] + " where ORDER_ID='" + new Guid(dt_group.Rows[ii]["id"].ToString()) + "'";
                                FrmMdiMain.Database.DoCommand(sql);
                            }
                        }
                        catch
                        {
                            MessageBox.Show("取消标记整盒失败");
                            dt_group.Rows[ii]["医嘱内容"] = dt_group.Rows[ii]["医嘱内容"].ToString().Trim() + "「整盒」";
                        }
                    }
                    else
                    {

                        //只对西药进行整盒
                        string typeNum = myQuery.GetyzTypeCode(dt_group.Rows[ii]["类型"].ToString());
                        //判断是否为口服药品
                        string s = "select TLFL, * from VI_YP_YPCD where TLFL='01' and  cjid=" + dt_group.Rows[ii]["HOITEM_ID"] + "";
                        DataTable dt = FrmMdiMain.Database.GetDataTable(s);
                        if (dt == null) return;
                        if (dt.Rows.Count == 0)
                        {
                            MessageBox.Show("必须为口服药品才能【整盒】");
                            return;
                        }

                        if ((typeNum == "1" || typeNum == "2") && dt.Rows.Count > 0)
                        {
                            if (dt_group.Rows[ii]["医嘱内容"].ToString().Trim() != "")
                            {
                                string context = dt_group.Rows[ii]["医嘱内容"].ToString().Trim() + "「整盒」";

                                try
                                {
                                    string sql = "update ZY_ORDERRECORD set ORDER_CONTEXT='" + context + "',ZHBJ=" + dt_group.Rows[ii]["执行科室"] + ",EXEC_DEPT=-1 where ORDER_ID='" + new Guid(dt_group.Rows[ii]["id"].ToString()) + "'";
                                    FrmMdiMain.Database.DoCommand(sql);
                                }
                                catch
                                {
                                    MessageBox.Show("标记整盒失败");
                                    dt_group.Rows[nrow]["医嘱内容"] = dt_group.Rows[ii]["医嘱内容"].ToString().Trim();
                                }
                            }
                        }
                    }
                }
                FrmMdiMain.Database.CommitTransaction();
                //为防止失去焦点
                myDataGrid1.Focus();
                DataGridCell myCell = new DataGridCell(nrow, ncol);
                myDataGrid1.CurrentCell = myCell;
                myDataGrid1.CurrentRowIndex = nrow;//myTb.Rows.Count;
                if (tab == 0) XG1 = true;
                else XG2 = true;
                this.btRefur_Click(null, null);
            }
            catch
            {
                FrmMdiMain.Database.RollbackTransaction();
            }
        }
        #endregion

        #region yaokx 2012-03-10 加同上功能
        private void buttGS_Click(object sender, EventArgs e)
        {
            checkPage();
            if (pageType == 0) getGS(this.dataGrid_LongOrder);
            else if (pageType == 1) getGS(this.dataGrid_TempOrder);

        }

        private void getGS(DataGridEx myDataGrid1)
        {
            DataTable myTb = (DataTable)myDataGrid1.DataSource;
            int nrow = myDataGrid1.CurrentCell.RowNumber;
            int ncol = myDataGrid1.CurrentCell.ColumnNumber;
            //判断医嘱为空
            if (myTb.Rows[nrow]["医嘱内容"] == System.DBNull.Value) return;
            //只对status_flag为0保存
            if (Convert.ToInt32(myTb.Rows[nrow]["status_flag"].ToString()) == 0)
            {
                ChangeGroupNum(myDataGrid1);
                string date = getgrouptime(nrow, ncol, myTb);
                getDateTime(myDataGrid1, Convert.ToDateTime(date));
                sameDTlist.Add(date);
            }
        }

        private string getgrouptime(int nrow, int ncol, DataTable myTb)
        {
            string timestr = myTb.Rows[nrow]["开始时间"].ToString();
            if (timestr == "")
            {
                timestr = myTb.Rows[nrow - 1]["开始时间"].ToString();
                if (timestr != "")
                    return timestr;
                else
                    return getgrouptime(nrow - 1, ncol, myTb);
            }
            else
            {
                return timestr;
            }
        }

        /// <summary>
        /// 获取一组的医嘱
        /// </summary>
        /// <param name="myTb"></param>
        /// <param name="group_id"></param>
        /// <returns></returns>
        private DataTable getgroupid(DataTable myTb, string group_id)
        {
            DataRow[] drArr = myTb.Select("嘱号 =" + group_id + "");//查询

            DataTable dtNew = myTb.Clone();
            for (int i = 0; i < drArr.Length; i++)
            {
                dtNew.ImportRow(drArr[i]);

            }
            return dtNew;
        }


        #endregion

        private void dataGrid_LongOrder_MouseClick(object sender, MouseEventArgs e)
        {

            //首先得到基本的网格信息
            DataTable myTb = (DataTable)dataGrid_LongOrder.DataSource;
            int nrow = dataGrid_LongOrder.CurrentCell.RowNumber;
            int ncol = dataGrid_LongOrder.CurrentCell.ColumnNumber;
            string ColumnName = this.dataGrid_LongOrder.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();

        }

        private void dataGrid_TempOrder_MouseClick(object sender, MouseEventArgs e)
        {
            //MessageBox.Show("临时调用啦");
            //首先得到基本的网格信息
            DataTable myTb = (DataTable)dataGrid_TempOrder.DataSource;
            int nrow = dataGrid_TempOrder.CurrentCell.RowNumber;
            int ncol = dataGrid_TempOrder.CurrentCell.ColumnNumber;
            string ColumnName = this.dataGrid_TempOrder.TableStyles[0].GridColumnStyles[ncol].MappingName.Trim();

        }

        /// <summary>
        /// 调用IE查询检查结果
        /// </summary>
        /// <param name="url"></param>
        public static void DoQueryJcJyInfo(string url)
        {
            System.Diagnostics.Process.Start(@"C:\Program Files\Internet Explorer\iexplore.exe", url);
        }

        /// <summary>
        /// 调用医嘱打印界面 add by jchl
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnYzPrint_Click(object sender, EventArgs e)
        {
            try
            {

                ts_zyhs_yzdy.InstanceForm.BDatabase = InstanceForm._database;
                ts_zyhs_yzdy.InstanceForm.BCurrentDept = InstanceForm._currentDept;
                ts_zyhs_yzdy.InstanceForm.BCurrentUser = InstanceForm._currentUser;
                ts_zyhs_yzdy.frmYZDY frmYzdy = new ts_zyhs_yzdy.frmYZDY("医嘱打印");

                frmYzdy.Show();
                frmYzdy.FindInpInfo(BinID.ToString().Trim());
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message + "\n" + ex.StackTrace, "提示", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void DcHoitem(DataGridEx myDataGrid1)
        {
            try
            {
                int nrow = myDataGrid1.CurrentCell.RowNumber;
                int ncol = myDataGrid1.CurrentCell.ColumnNumber;
                DataTable myTb = ((DataTable)myDataGrid1.DataSource);
                if (myTb == null) return;
                if (myTb.Rows.Count <= 0) return;
                string sSql = "";
                bool isYJ = false;  //是否是医技项目

                #region 一次性提示错误信息和提交成功的信息   yaokx2013-11-20
                ArrayList errorlist = new ArrayList();
                Hashtable sumbitht = new Hashtable();
                string reaseon = "";
                #endregion
                int count = 0;

                count++;
                Hashtable errorht = new Hashtable();
                int x = nrow;

                string content = myTb.Rows[nrow]["医嘱内容"].ToString();

                #region 未执行
                if (Convert.ToInt16(myTb.Rows[nrow]["Status_flag"]) == 0)  //Modi fy by jchl
                {
                    string s = "'" + content + "'未发送 请直接 [取消]！";
                    MessageBox.Show(s, "提示", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                string groupid = myTb.Rows[nrow]["嘱号"].ToString().Trim();
                int nWzx = Convert.ToInt16(myTb.Rows[nrow]["wzx_flag"]);

                //这组医嘱中如果有皮试则不允许通过
                for (int i = 0; i < myTb.Rows.Count; i++)
                {
                    if (myTb.Rows[i]["嘱号"].ToString().Trim() == groupid)
                    {
                        if (Convert.ToInt16(myTb.Rows[i]["ps_flag"]) == 1 || Convert.ToInt16(myTb.Rows[i]["ps_flag"]) == 2)
                        {
                            string s = "'" + content + "'该组医嘱已经设置了皮试结果！";
                            errorht.Add(Guid.NewGuid(), s);
                        }
                    }
                }

                if (nWzx > 0)
                {
                    string s = "'" + content + "'该条医嘱已经设置“未执行”！";
                    errorht.Add(Guid.NewGuid(), s);
                }

                #region ////判断是否执行过
                //sSql = "select 1 from zy_orderrecord a inner join zy_orderexec b on a.order_id=b.order_id " +
                //    " where a.group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() +
                //    "      and a.mngtype in(0,1,5) " +//Modify by zouchihua 2013-7-10 增加5类型交病人的判断
                //    "      and a.inpatient_id='" + ClassStatic.Current_BinID + "' and a.baby_id=" + ClassStatic.Current_BabyID;
                //DataTable myTb1 = InstanceForm._database.GetDataTable(sSql);
                //if (myTb1.Rows.Count > 0)
                //{
                //    //检查是否是已经预约或安排（只要是医技项目）
                //    sSql = "select BJSBZ from YJ_ZYSQ " +
                //        "  where yzid in (select order_id from zy_orderrecord  " +
                //        "				       where group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() +
                //        "                            and mngtype in(0,1) " +
                //        "                            and inpatient_id='" + BinID + "' and baby_id=" + BabyID +
                //        "                     )";
                //    DataTable myTb2 = InstanceForm._database.GetDataTable(sSql);
                //    if (myTb2.Rows.Count > 0)
                //    {
                //        if (Convert.ToInt16(myTb2.Rows[0]["BJSBZ"]) == 0)
                //        {
                //            //还没有安排！
                //            isYJ = true;
                //        }
                //        else
                //        {
                //            #region  //Modiby by zouchihua 2011-11-27
                //            string yjfee = "select sum(acvalue) fy  from (select *  from  zy_fee_speci  where charge_bit=1 and delete_bit=0 and  order_id in "
                //                    + " (select order_id from zy_orderrecord where group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim()
                //                    + "  and mngtype in (0,1,5)  and inpatient_id='" + BinID + "' and baby_id=" + BabyID + "   ) "
                //                     + " ) aa ";
                //            decimal _fy = Convert.ToDecimal(Convertor.IsNull(InstanceForm._database.GetDataResult(yjfee), "0"));
                //            if (_fy != 0)//费用不为零时 不未执行
                //            {
                //                //已经安排
                //                string s = "'" + content + "'该组医嘱已做安排，请要求执行科室进行取消安排或冲正操作！";
                //                errorht.Add(Guid.NewGuid(), s);
                //            }
                //            else
                //            {
                //                isYJ = true;
                //            }
                //            #endregion
                //        }

                //        //检查是否已经记费
                //        sSql = "select sum(acvalue) fy from zy_fee_speci" +
                //            " where charge_bit=1 and delete_bit=0 and order_id in (select order_id from zy_orderrecord " +
                //            "                     where group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() +
                //            "                           and mngtype in (0,1,5) " +
                //            "                           and inpatient_id='" + BinID + "' and baby_id=" + BabyID +
                //            "                    )";
                //        decimal _fy1 = Convert.ToDecimal(Convertor.IsNull(InstanceForm._database.GetDataResult(sSql), "0"));
                //        if (_fy1 != 0)
                //        {
                //            string s = "'" + content + "'该组医嘱已经记费，请要求执行科室进行冲正操作！";
                //            errorht.Add(Guid.NewGuid(), s);
                //        }
                //    }
                //    else
                //    {
                //        //Modify By tany 2011-05-31 如果不是医技项目，则判断是否有费用，如果没有费用则允许未执行
                //        sSql = "select sum(acvalue) fy from zy_fee_speci" +
                //            " where charge_bit=1 and delete_bit=0 and order_id in (select order_id from zy_orderrecord " +
                //            "                     where group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() +
                //            "                           and mngtype in (0,1,5) " +
                //            "                           and inpatient_id='" + BinID + "' and baby_id=" + BabyID +
                //            "                    )";
                //        decimal _fy = Convert.ToDecimal(Convertor.IsNull(InstanceForm._database.GetDataResult(sSql), "0"));
                //        if (_fy != 0)
                //        {

                //            string s = "'" + content + "'该组医嘱已经产生了费用，不允许标记未执行！可以将费用冲正后再标记未执行";
                //            errorht.Add(Guid.NewGuid(), s);
                //        }
                //    }
                //}
                #endregion

                //Modify By tany 2011-05-31 如果不是医技项目，则判断是否有费用，如果没有费用则允许未执行
                sSql = "select sum(acvalue) fy from zy_fee_speci" +
                    " where charge_bit=1 and delete_bit=0 and order_id in (select order_id from zy_orderrecord " +
                    "                     where group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() +
                    "                           and mngtype in (0,1,5) " +
                    "                           and inpatient_id='" + BinID + "' and baby_id=" + BabyID +
                    "                    )";
                decimal _fy = Convert.ToDecimal(Convertor.IsNull(InstanceForm._database.GetDataResult(sSql), "0"));
                if (_fy != 0)
                {

                    //string s = "'" + content + "'该组医嘱已经产生了费用，不允许标记 DC ！可以将费用冲正后再标记 DC ";
                    //errorht.Add(Guid.NewGuid(), s);

                    //临时方案 add by jchl
                    if (MessageBox.Show("请确认 '" + content + "' 该组医嘱是否费用已冲减为0", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Information) == DialogResult.No)
                    {
                        string s = "'" + content + "'该组医嘱已经产生了费用，不允许标记 DC ！可以将费用冲正后再标记 DC ";
                        errorht.Add(Guid.NewGuid(), s);
                    }
                }

                //同一组只需要一次
                if (x != 0 && myTb.Rows[x]["嘱号"].ToString().Trim() == myTb.Rows[x - 1]["嘱号"].ToString().Trim())
                {
                    errorlist.Add(errorht);
                    //continue;
                }
                //add by zouchihua 2012-6-15 未执行是否需要输入原因

                if (errorht.Count == 0)
                {
                    if (sumbitht.Count == 0)
                    {
                        if (cfg7129.Config.Trim() == "1")
                        {
                            FrmReason fr = new FrmReason();
                            fr.ShowDialog();
                            if (fr.DialogResult == DialogResult.No || fr.ss.Trim() == "")
                            {
                                MessageBox.Show(this, "对不起，请填写未执行的理由！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                                return;
                            }
                            else
                            {
                                reaseon = fr.ss;
                            }
                        }

                        //Modify  by  jchl
                        //if (MessageBox.Show(this, "确认选中的医嘱‘未执行’吗？（注意：确认后则不允许修改！）", "确认", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) == DialogResult.No) return;

                        //Modify By Tany 2010-06-08 是否使用密码确认 0=使用 1=不使用
                        if (new SystemCfg(7066).Config == "0")
                        {
                            frmInPassword f1 = new frmInPassword();
                            f1.ShowDialog();
                            bool isHSZ = f1.isHSZ;
                            if (f1.isLogin == false) return;
                        }
                    }

                    InstanceForm._database.BeginTransaction();

                    try
                    {
                        string strCancer = "";
                        //写停止标志和未执行标志 
                        if (cfg6218.Config.Equals("0"))
                        {
                            strCancer = "";
                        }
                        else
                        {
                            strCancer = "取消：" + DateManager.ServerDateTimeByDBType(FrmMdiMain.Database) + "-" + InstanceForm._currentUser.Name;
                        }
                        sSql = "update zy_orderrecord set order_context='" + "【取消】" + "'+order_context,wzx_flag=" + InstanceForm._currentUser.EmployeeId + ",status_flag=5 ,order_edate=getdate() , memo2='" + reaseon + strCancer + "' " +//Modify By Tany 2005-01-31 ,order_edate=getdate() //add by zouchihua 2012-6-15增加未执行的原因
                                " where group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() +
                                "    and  wzx_flag<=0   and mngtype in (0,1,5) " +
                                "       and inpatient_id='" + BinID + "' and baby_id=" + BabyID;

                        //Modify by Tany 2005-02-21	
                        if (InstanceForm._database.DoCommand(sSql) == 0)
                            throw new Exception("未找到需要更新的医嘱记录，请重新确认！");

                        #region//add by zouchihua 同时更新医嘱打印记录表 2013-4-23
                        sSql = "  update ZY_LOGORDERPRT set order_context='" + "【取消】" + "'+order_context  " +
                           " where group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() +
                            "       and inpatient_id='" + BinID + "' and baby_id=" + BabyID;//没有打印的情况下
                        InstanceForm._database.DoCommand(sSql);
                        sSql = "  update ZY_TMPORDERPRT set order_context='" + "【取消】" + "'+order_context  " +
                          " where group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() +
                           "       and inpatient_id='" + BinID + "' and baby_id=" + BabyID;//没有打印的情况下
                        InstanceForm._database.DoCommand(sSql);

                        sSql = "  update ZY_LOGORDERPRT set PRT_STATUS=4,memo='" + reaseon + strCancer + "'  " +
                          " where group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() +
                           "       and inpatient_id='" + BinID + "' and baby_id=" + BabyID + " and PRT_STATUS not in(0,-1)";//打印的情况下
                        InstanceForm._database.DoCommand(sSql);
                        sSql = "  update ZY_TMPORDERPRT set    PRT_STATUS=4 ,memo='" + reaseon + strCancer + "' " +
                          " where group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() +
                           "       and inpatient_id='" + BinID + "' and baby_id=" + BabyID + " and PRT_STATUS not in(0,-1)";//打印的情况下 无条件改为4
                        InstanceForm._database.DoCommand(sSql);
                        #endregion

                        #region"暂时不要"
                        //add by zouchihua 2012-5-18 如果没有执行过，往执行表插入数据
                        //if (myTb1.Rows.Count == 0)
                        //{
                        //    string order_id = myTb.Rows[nrow]["id"].ToString().Trim();//jchl
                        //    string inpatient_id = BinID.ToString();
                        //    string baby_id = BabyID.ToString();
                        //    string id = Guid.NewGuid().ToString();
                        //    DateTime dt = DateManager.ServerDateTimeByDBType(FrmMdiMain.Database);
                        //    string insert = " insert into zy_orderexec(id, ORDER_ID,BOOK_DATE,inpatient_id,baby_id,REALEXEUSER,jgbm,EXECDATE) select  DBO.FUN_GETGUID(NEWID(),GETDATE()),order_id,getdate(),'" + inpatient_id + "'," + baby_id + "," + FrmMdiMain.CurrentUser.EmployeeId + "," + FrmMdiMain.Jgbm + ",'" + dt + "' from ZY_ORDERRECORD  " +
                        //    "   where inpatient_id='" + BinID + "'" +
                        //    " and baby_id=" + BabyID + " and group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() + "";
                        //    InstanceForm._database.DoCommand(insert);
                        //    string update = " update ZY_ORDERRECORD set LASTEXECDATE='" + dt + "' where inpatient_id='" + BinID + "'" +
                        //    " and baby_id=" + BabyID + " and group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() + "";
                        //    InstanceForm._database.DoCommand(update);
                        //}
                        //else
                        //{
                        //    string sql = " update zy_orderexec  set REALEXEUSER='" + FrmMdiMain.CurrentUser.EmployeeId + "' where  order_id in ( select order_id from ZY_ORDERRECORD where inpatient_id='" + BinID + "'" +
                        //    " and baby_id=" + BabyID + " and group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() + " )";
                        //    InstanceForm._database.DoCommand(sql);
                        //}
                        #endregion

                        //已发送的医技
                        if (myTb.Rows[nrow]["类型"].ToString() == "5-医技" && myTb.Rows[nrow]["status_flag"].ToString().Trim() != "0")
                        {
                            DataRow[] drs = myTb.Select("嘱号=" + myTb.Rows[nrow]["嘱号"].ToString().Trim());
                            foreach (DataRow dr in drs)
                            {
                                //取消检验申请医嘱（zy_jc_print中的记录）
                                myQuery.DelJY(new Guid(dr["ID"].ToString()));
                                //取消医技申请
                                myQuery.DelApply(this.YS_ID, new Guid(dr["ID"].ToString()));
                            }

                        }
                        //string _lisGroup = "-1";

                        #region"暂时不要"
                        //DelJY
                        //if (isYJ)  jchl
                        //{
                        //    //是医技项目
                        //    //看看是否有lis组合
                        //    //sSql = "select lis_group from yj_applyrecord " +
                        //    //    " where orderid in (select order_id from zy_orderrecord " +
                        //    //    "                     where group_id=" + myTb.Rows[nrow]["Group_ID"].ToString().Trim() +
                        //    //    "                           and mngtype=1 " +
                        //    //    "                           and inpatient_id='" + ClassStatic.Current_BinID + "' and baby_id=" + ClassStatic.Current_BabyID +
                        //    //    "                    )";
                        //    //_lisGroup = InstanceForm.BDatabase.GetDataResult(sSql).ToString().Trim();
                        //    //if (_lisGroup != "-1" && _lisGroup != "")
                        //    //{
                        //    //    sSql = "update yj_applyrecord set lis_group=-1 where lis_group=" + _lisGroup;
                        //    //    InstanceForm.BDatabase.DoCommand(sSql);
                        //    //}
                        //    //取消申请表
                        //    sSql = "update YJ_ZYSQ set bscbz=1,scsj=getdate() ,scr=" + InstanceForm._currentUser.EmployeeId +
                        //        " where YZID in (select order_id from zy_orderrecord " +
                        //        "                     where group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() +
                        //        "                           and mngtype in (0,1,5) " +
                        //        "                           and inpatient_id='" + BinID + "' and baby_id=" + BabyID +
                        //        "                    )";
                        //    //Modify by Tany 2005-02-21
                        //    if (InstanceForm._database.DoCommand(sSql) == 0)
                        //        throw new Exception("未找到需要更新的医技申请记录，请重新确认！");
                        //}
                        //Add by zouchihua  冲正的费用与正费用发送不在同一天时不删除
                        #endregion

                        //Modify By Tany 2011-05-31 移出来，允许对其他的医嘱未执行
                        //费用表做删除标志
                        sSql = "update zy_fee_speci set delete_bit=1" +
                            " where discharge_bit=0 and charge_bit=0 and order_id in (select order_id from zy_orderrecord " +
                            "                     where group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() +
                            "                           and mngtype in (0,1,5) " +
                            "                           and inpatient_id='" + BinID + "' and baby_id=" + BabyID +
                            "                    )";
                        //Modify by Tany 2005-02-21
                        InstanceForm._database.DoCommand(sSql);
                        //if (InstanceForm.BDatabase.DoCommand(sSql) == 0)
                        //    throw new Exception("未找到需要更新的费用记录，请重新确认！");

                        ////取消检查打印 Add By Tany 2004-12-02  jchl
                        //sSql = "update zy_jy_print set delete_bit=1" +
                        //    " where order_id in (select order_id from zy_orderrecord " +
                        //    "                     where group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() +
                        //    "                           and mngtype in (0,1,5) " +
                        //    "                           and inpatient_id='" + BinID + "' and baby_id=" + BabyID +
                        //    "                    )";
                        //InstanceForm._database.DoCommand(sSql);

                        InstanceForm._database.CommitTransaction();

                        //更新lis条形码表
                        //					if(_lisGroup!="-1" && _lisGroup!="")
                        //					{
                        //						sSql="update ls_as_txm set delete_bit=1 where id="+_lisGroup;
                        //						InstanceForm.BDatabase.DoCommand(sSql);
                        //					}

                        //写日志 Add By Tany 2005-01-12
                        SystemLog _systemLog = new SystemLog(-1, InstanceForm._currentDept.DeptId, InstanceForm._currentUser.EmployeeId, "未执行", "将inpatient_id=" + BinID + " and baby_id=" + BabyID + "病人的group_id=" + myTb.Rows[nrow]["嘱号"].ToString().Trim() + "的医嘱未执行", DateManager.ServerDateTimeByDBType(InstanceForm._database), 1, "主机名：" + System.Environment.MachineName, 39);
                        _systemLog.Save();

                        string s = "'" + content + "'，该医嘱‘未执行’提交成功";
                        sumbitht.Add(x, s);

                        _systemLog = null;
                    }
                    catch (Exception err)
                    {
                        InstanceForm._database.RollbackTransaction();
                        //					database.Close();

                        //写错误日志 Add By Tany 2005-01-12
                        SystemLog _systemErrLog = new SystemLog(-1, InstanceForm._currentDept.DeptId, InstanceForm._currentUser.EmployeeId, "程序错误", "未执行错误：" + err.Message + "  Source：" + err.Source, DateManager.ServerDateTimeByDBType(InstanceForm._database), 1, "主机名：" + System.Environment.MachineName, 39);
                        _systemErrLog.Save();
                        _systemErrLog = null;

                        MessageBox.Show("错误：" + err.Message + "\n" + "Source：" + err.Source + "\n数据已经回滚，请检查后重新执行！", "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }
                else
                {
                    errorlist.Add(errorht);
                }

                //if (x == myTb.Rows.Count-1)
                //{
                //    update(sumbitht, errorlist, sSql);
                //}

                //				database.Close();
                #endregion

                #region 一次性提示错误信息和提交成功的信息   yaokx2013-11-20
                int SuccessCount = sumbitht.Count;
                int FailureCount = errorlist.Count;
                string str = "您选中" + count + "条医嘱，\r\n‘未执行’成功" + SuccessCount + "条(\r\n";
                foreach (DictionaryEntry de in sumbitht)
                {
                    str += "   " + de.Value.ToString().Replace(" ", "") + "\r\n";
                }
                if (FailureCount > 0)
                    str += ");\r\n‘未执行’失败" + FailureCount + "条(\r\n";
                else
                    str += "";
                for (int i = 0; i < FailureCount; i++)
                {
                    Hashtable ht = (Hashtable)errorlist[i];
                    foreach (DictionaryEntry de in ht)
                    {
                        str += "  " + de.Value.ToString().Replace(" ", "") + "\r\n";
                    }
                }
                str += ");";

                if (FailureCount > 0)
                {
                    MessageBox.Show(str, "错误", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                else
                {
                    MessageBox.Show(str, "成功", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
                #endregion
                //this.ShowDate();  jchl
            }
            catch
            { }
        }

        private void btnDc_Click(object sender, EventArgs e)
        {
            try
            {
                Crownwood.Magic.Controls.TabControl tc = null;
                tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
                if (tc.SelectedTab.Title.Trim() == "长期医嘱")
                {
                    MessageBox.Show("长期医嘱不能DC！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                    DataGridEx myDataGrid1 = dataGrid_LongOrder;

                    int nrow = myDataGrid1.CurrentCell.RowNumber;
                    //定位
                    FocusCell(myDataGrid1, nrow, 6);//5没有加警示列
                    return;
                    DcHoitem(myDataGrid1);
                    loadGrid_LongOrder();

                }
                else if (tc.SelectedTab.Title.Trim() == "临时医嘱")
                {
                    DataGridEx myDataGrid1 = dataGrid_TempOrder;

                    int nrow = myDataGrid1.CurrentCell.RowNumber;
                    DcHoitem(myDataGrid1);
                    loadGrid_TempOrder();
                    //定位
                    FocusCell(myDataGrid1, nrow, 6);//5没有加警示列
                }
            }
            catch { }
        }

        /// <summary>
        /// 拒绝流程（删除和发送医嘱时判断如果存在拒绝医嘱，同步更新标志Refuse_Flag）
        /// </summary>
        private bool DoRefuse(string orderId)
        {
            try
            {
                string vSql = "select * from zy_jjyzzc where order_id='" + orderId + "' and refuse_flag=0 ";

                //校验是否存在未处理的拒绝记录
                DataTable vTb = FrmMdiMain.Database.GetDataTable(vSql);

                if (vTb.Rows.Count > 0)
                {
                    //refuse_flag=1打上已处理标志
                    string iSql = "update zy_jjyzzc set refuse_flag=1 where order_id='" + orderId + "' and refuse_flag=0 ";
                    InstanceForm._database.DoCommand(iSql);
                }

                return true;
            }
            catch
            {
                return false;
            }
        }

        /// <summary>
        /// Modify by jchl
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnYkDw_Click(object sender, EventArgs e)
        {
            try
            {
                Crownwood.Magic.Controls.TabControl tc = null;
                if (tabControl1.SelectedIndex == 0)
                {
                    if (tabbedGroups1.ActiveLeaf != null)
                        tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
                }
                else
                {
                    if (tabControl1.SelectedIndex == 1)
                    {
                    }
                    else
                    {
                    }
                }

                if (tc != null)
                {
                    if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                    {
                        MessageBox.Show("只能是临时医嘱！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        return;
                    }
                }

                ChangeDw(null, null);
                if (bYkDw)
                {
                    btSave_Click(null, null);
                }
            }
            catch { }
        }


        private bool ValideMedOrder(string xmly, string cjid, string yppm, out string strMsg)
        {
            strMsg = "";
            string ssql = "";
            bool bSuc = true;
            //不启用辅助用药
            SystemCfg cfg6229 = new SystemCfg(6229);
            if (cfg6229.Config.Equals("0"))
                return true;

            try
            {
                if (xmly.Equals("1"))
                {
                    bSuc = DoValideFzyy(xmly, cjid, out strMsg);//抛出诊断strMsg

                    if (!bSuc)
                    {
                        //检查是否主任医生
                        ssql = string.Format(@"select COUNT(1) as num from jc_kss_tsshr where employee_id='{0}' and dept_id='{1}'",
                            InstanceForm._currentUser.EmployeeId, InstanceForm._currentDept.DeptId);

                        int iNum = Convert.ToInt32(InstanceForm._database.GetDataResult(ssql).ToString());

                        if (iNum <= 0)
                        {
                            //非主任医生
                            //入院诊断、不匹配辅助用药,查询菜单

                            //MessageBox.Show("【" + myRecallTb.Rows[i]["医嘱内容"].ToString().Trim() + "】\r\r入院诊断为：" + strMsg + "\r\r患者入院诊断不匹配所开的辅助用药，如果对匹配有疑问，请咨询临床药学室！\n",
                            //    new Font("宋体", 10.5f), Color.Blue, "提示", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                            //MessageBox.Show(strMsg);

                            if (
                            MessageBox.Show("辅助用药：【" + yppm.Trim() + "】\r\r与住院电子病历系统的入院诊断不匹配,如果继续,则需要科主任审批后才能发送成功,是否继续？\r\r***【查询功能下：查询菜单-辅助用药适应症查询】界面中可以查询匹配关系，如对诊断匹配有疑问，请联系临床药学室！",
                                 "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button3) == DialogResult.Cancel
                                )
                            {
                                bSuc = false;
                            }
                            else
                            {
                                bSuc = true;
                            }

                        }
                        else
                        {
                            //主任医生  处理bSuc
                            //入院诊断、不匹配辅助用药,查询菜单
                            if (
                            MessageBox.Show("辅助用药：【" + yppm.Trim() + "】\r\r与住院电子病历系统的入院诊断不匹配,是否继续？\r\r***【查询功能下：辅助用药对应诊断(医生)】界面可以查询匹配关系，如对诊断匹配有疑问，请联系临床药学室！",
                                 "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button3) == DialogResult.Cancel
                                )
                            {
                                bSuc = false;
                            }
                            else
                            {
                                bSuc = true;
                            }
                        }

                        return bSuc;
                    }
                }
            }
            catch (Exception ex)
            {
                bSuc = false;
                strMsg = ex.Message;

                MessageBox.Show("辅助用药：【" + yppm.Trim() + "】出错！\r\r" + strMsg,
                     "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning);
            }
            return bSuc;
        }

        private bool IsFzyy(string xmly, string cjid)
        {
            if (!xmly.Equals("1"))
                return false;

            try
            {
                string ssql = string.Format(@"select COUNT(1) as num from VI_YP_YPCD where cjid='{0}' and fzyy=1 and BDELETE=0 and cjbdelete=0", cjid);
                int iNum = Convert.ToInt32(InstanceForm._database.GetDataResult(ssql).ToString());
                bool bRet = iNum > 0;

                return bRet;
            }
            catch
            {
                return false;
            }
        }

        private DataTable GetDiagnosis()
        {
            DataTable dt = new DataTable();
            string strMsg = "";
            bool isSuc = TrasenHIS.BLL.HisFunctions.GetEmrDiagnosis(this.patientInfo1.lbID.Text.Trim(), out strMsg);

            //处理strMsg成DataTable
            try
            {
                if (!isSuc)
                {
                    throw new Exception("获取Emr诊断出错,请重开医嘱");
                }

                StringBuilder sb = new StringBuilder();
                sb.Append(strMsg);
                XmlDocument xx = new XmlDocument();
                xx.LoadXml(sb.ToString());//加载xml
                XmlNodeList xxList = xx.SelectNodes("/root"); //取得节点XmlNode集合

                string ret = (xxList[0].SelectSingleNode("//RETCODE")).InnerText.Trim();
                if (!ret.Equals("0"))
                {
                    //诊断未获取成功
                    throw new Exception("诊断未获取成功0");
                }

                string retText = (xxList[0].SelectSingleNode("//DIAGNOSE_LIST")).InnerXml.Trim();

                retText = "<DIAGNOSE_LIST>" + retText + "</DIAGNOSE_LIST>";

                //XML转DataSet
                DataSet dset = HisFunctions.ConvertXmlToDataSet(retText);

                if (dset.Tables.Count <= 0)
                {
                    throw new Exception("诊断未获取成功1");
                }

                DataTable tb = dset.Tables[0];

                if (tb.Rows.Count <= 0)
                {
                    throw new Exception("诊断未获取成功2");
                }

                return tb;
            }
            catch
            {
                return null;
            }

        }

        private bool IsMatch(DataTable dtDia, DataTable dt, out string strMsg)
        {
            strMsg = "";

            if (dtDia == null || dtDia.Rows.Count <= 0)
            {
                strMsg = "未对该病人在病历系统中填写入院诊断，需要科主任审核后再发送，如果入院诊断已经补充，则需要删除该辅助用药后，在重新开";
                return false;
                //throw new Exception("未对该病人在病历系统中填写入院诊断，需要科主任审核后再发送，如果入院诊断已经补充，则需要删除该辅助用药后，在重新开！");
            }


            if (dt == null || dt.Rows.Count <= 0)
            {
                strMsg = "有辅助药品未设置诊断匹配关系";
                return true;
                throw new Exception("有辅助药品未设置诊断匹配关系");
            }

            foreach (DataRow drDia in dtDia.Rows)
            {
                strMsg += "||" + Convertor.IsNull(drDia["CICD"], "").Trim() + "：" + Convertor.IsNull(drDia["NAME"], "").Trim();//"<CICD>" +  + "</CICD>";
                foreach (DataRow dr in dt.Rows)
                {
                    string code = Convertor.IsNull(dr["coding"], "").Trim();// "<CICD>" + +"</CICD>";
                    string diaCode = Convertor.IsNull(drDia["CICD"], "").Trim();

                    //诊断匹配
                    bool bCodeSuc = code.Equals(diaCode);

                    if (bCodeSuc)
                    {
                        return true;
                    }
                }
            }

            return false;
        }

        /// <summary>
        /// false:不匹配   true:匹配   else:异常
        /// </summary>
        /// <param name="xmly"></param>
        /// <param name="cjid"></param>
        /// <param name="strMsg"></param>
        /// <returns></returns>
        private bool DoValideFzyy(string xmly, string cjid, out string strMsg)
        {
            strMsg = "";
            try
            {
                bool bFzyy = IsFzyy(xmly, cjid);

                //是辅助用药，匹配药品和诊断
                if (bFzyy)
                {
                    DataTable dtDia = GetDiagnosis();

                    string ssql = string.Format(@"select * from jc_yp_fzyywh_new where ypid='{0}' and deletebit=0", cjid);

                    DataTable dt = InstanceForm._database.GetDataTable(ssql);

                    bool bCodeSuc = IsMatch(dtDia, dt, out strMsg);

                    return bCodeSuc;
                }

                return true;
            }
            catch (Exception ex)
            {
                strMsg = ex.Message;
                throw ex;
            }
        }

        /// <summary>
        /// false:不匹配   true:匹配   else:异常
        /// </summary>
        /// <param name="xmly"></param>
        /// <param name="cjid"></param>
        /// <param name="strMsg"></param>
        /// <returns></returns>
        private bool DoValideFzyy(string xmly, string cjid, DataTable dtDia, out string strMsg)
        {
            strMsg = "";
            try
            {
                bool bFzyy = IsFzyy(xmly, cjid);

                //是辅助用药，匹配药品和诊断
                if (bFzyy)
                {
                    string ssql = string.Format(@"select * from jc_yp_fzyywh_new where ypid='{0}' and deletebit=0", cjid);

                    DataTable dt = InstanceForm._database.GetDataTable(ssql);

                    bool bCodeSuc = IsMatch(dtDia, dt, out strMsg);

                    return bCodeSuc;
                }

                return true;
            }
            catch (Exception ex)
            {
                strMsg = ex.Message;
                throw ex;
            }
        }

        /// <summary>
        /// 保存调用【辅助用药与诊断不符，保存医嘱的时候，生成待审核记录】
        /// </summary>
        private bool DoInsertCheckInfo(string xmly, string cjid, DataTable dtDia, DataRow drFzyy)
        {
            SystemCfg cfg6229 = new SystemCfg(6229);
            if (cfg6229.Config.Equals("0"))
                return true;

            string strMsg = "";
            bool bSuc = false;

            int iRet = -1;

            int bCheckBit = -1;//0:待审   1:审核   2：自审【主任开单】
            try
            {

                bSuc = DoValideFzyy(xmly, cjid, dtDia, out strMsg);

                //不匹配
                if (!bSuc)
                {
                    string ssql = string.Format(@"select * from zy_fzyy_sh where order_id='{0}' and del_bit=0", drFzyy["ID"].ToString());

                    DataTable dt = InstanceForm._database.GetDataTable(ssql);

                    if (dt == null)
                    {
                        throw new Exception("辅助用药：【" + drFzyy["医嘱内容"].ToString() + "】，查询待审核信息出错");
                    }

                    if (dt.Rows.Count <= 0)
                    {
                        //插入：检查是否主任医生，是则 插入自审 记录，否则 插入待审 记录

                        //检查是否主任医生
                        ssql = string.Format(@"select COUNT(1) as num from jc_kss_tsshr where employee_id='{0}' and dept_id='{1}'",
                           drFzyy["order_doc"].ToString(), InstanceForm._currentDept.DeptId);

                        int iNum = Convert.ToInt32(InstanceForm._database.GetDataResult(ssql).ToString());

                        Doctor docKss = new Doctor(long.Parse(drFzyy["order_doc"].ToString().Trim()), InstanceForm._database);
                        string memo = "";

                        if (iNum <= 0)
                        {
                            //0:待审
                            bCheckBit = 0;

                            string orderInfo = "辅助用药：【" + drFzyy["医嘱内容"].ToString() + "】";
                            //strMsg：病人诊断信息
                            FrmFzyyMemo frm = new FrmFzyyMemo(strMsg, orderInfo);
                            if (frm.ShowDialog() == DialogResult.OK)
                            {
                                memo = frm._memo;
                            }

                            ssql = string.Format(@"insert into zy_fzyy_sh (ID, ORDER_ID, INPATIENT_ID, BABY_ID, GROUP_ID, 
                                                    CJID, DEPT_ID, S_YPPM, EMPLOYEE_ID, YS_TYPEID, FZYY, SHBZ, DJR, DJSJ, DEL_BIT,zd,reason) 
                                                    values
                                                    ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}','{16}') ",
                                PubStaticFun.NewGuid(), drFzyy["ID"].ToString(), BinID.ToString(), BabyID, drFzyy["嘱号"].ToString(), drFzyy["hoitem_id"].ToString(), InstanceForm._currentDept.DeptId,
                                drFzyy["医嘱内容"].ToString(), docKss.Employee_ID, docKss.TypeID, 1, bCheckBit, InstanceForm._currentUser.EmployeeId, DateManager.ServerDateTimeByDBType(InstanceForm._database), 0, strMsg, memo);

                            iRet = InstanceForm._database.DoCommand(ssql);

                            if (iRet <= 0)
                            {
                                throw new Exception("辅助用药：【" + drFzyy["医嘱内容"].ToString() + "】，新增审核信息出错");
                            }

                            return false;
                        }
                        else
                        {
                            //2：自审
                            bCheckBit = 2;

                            ssql = string.Format(@"insert into zy_fzyy_sh (ID, ORDER_ID, INPATIENT_ID, BABY_ID, GROUP_ID,
                                                    CJID, DEPT_ID, S_YPPM, EMPLOYEE_ID, YS_TYPEID, FZYY, SHBZ, DJR, DJSJ, DEL_BIT,zd,reason) 
                                                    values
                                                    ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}','{16}') ",
                                PubStaticFun.NewGuid(), drFzyy["ID"].ToString(), BinID.ToString(), BabyID, drFzyy["嘱号"].ToString(), drFzyy["hoitem_id"].ToString(), InstanceForm._currentDept.DeptId,
                                drFzyy["医嘱内容"].ToString(), docKss.Employee_ID, docKss.TypeID, 1, bCheckBit, InstanceForm._currentUser.EmployeeId, DateManager.ServerDateTimeByDBType(InstanceForm._database), 0, strMsg, memo);

                            iRet = InstanceForm._database.DoCommand(ssql);

                            if (iRet <= 0)
                            {
                                throw new Exception("辅助用药：【" + drFzyy["医嘱内容"].ToString() + "】，新增审核信息出错");
                            }

                            return true;
                        }
                    }
                    else
                    {
                        //有审核信息！校验辅助用药是否审核1、自审2,已审核则返回true，未审核返回false
                        string strCheckBit = dt.Rows[0]["SHBZ"].ToString().Trim();

                        bCheckBit = Convert.ToInt32(strCheckBit);

                        if (strCheckBit.Equals("1") || strCheckBit.Equals("2"))
                        {
                            return true;
                        }
                        else
                        {
                            return false;
                        }
                    }
                }
                else
                {
                    return true;
                }
            }
            catch (Exception ex)
            {
                throw new Exception("辅助用药校验出错\r" + ex.Message);
            }
        }

        //医保智审相关
        #region

        /// <summary>
        /// 医保智审开关
        /// </summary>
        private bool _bAuditCheck = false;

        /// <summary>
        /// 初始化设置_bAuditCheck是否开启医保医保智审
        /// </summary>
        //        /// <returns></returns>
        //        private bool CheckIsAuditCheck(string inpatient_id)
        //        {
        //            try
        //            {
        //                //所在科室是否实行医保智审
        //                //病人类型是否为医保
        //                //这个病人是否满足开启智审开关
        //                string strSql = string.Format(@"select count(1) as Num from VI_ZY_VINPATIENT_BED a 
        //                                                where  INPATIENT_ID='{0}' and YBLX=1 and exists(select 1 from V_JC_YBZNSH_USEDEPT b where a.DEPT_ID=b.dept_id) ", inpatient_id);

        //                int iNum = Convert.ToInt32(FrmMdiMain.Database.GetDataResult(strSql).ToString());

        //                if (iNum <= 0)
        //                {
        //                    return false;
        //                }

        //                return true;
        //            }
        //            catch (Exception ex)
        //            {
        //                MessageBox.Show("初始化医保智审接口出错 \r\t " + ex.Message);
        //                return false;
        //            }
        //        }

        /// <summary>
        /// 医嘱明细
        /// </summary>
        /// <param name="dtDetials"></param>
        /// <param name="sum"></param>
        /// <returns></returns>
        private DataTable GetDetailBill(DataTable dtDetials, string yblx, string ybzlx, out decimal sum)
        {
            sum = 0M;
            try
            {

                DataTable dt = new DataTable();
                dt.Columns.Add("AKF003", typeof(string));//饮片贴数 his转换为贴 （草药dosage）默认0不能为空
                dt.Columns.Add("AKF005", typeof(string));//出国带药标志
                dt.Columns.Add("ApprovalNumber", typeof(string));//备案审批号
                dt.Columns.Add("BKA609", typeof(string));//因公因战
                dt.Columns.Add("BKC227", typeof(string));//外院费用标志
                dt.Columns.Add("COSTS", typeof(string));//总费用（前台总费用）
                dt.Columns.Add("DEPTNAME", typeof(string));//科室名称（“科室|医生”）
                dt.Columns.Add("ELIGIBLE_AMOUNT", typeof(string));//医保内金额  （前台总费用=医保总费用）
                dt.Columns.Add("FREQUENCY_INTERVAL", typeof(string));//使用频次
                dt.Columns.Add("ID", typeof(string));//id
                dt.Columns.Add("ITEM_DATE", typeof(string));//费用日期（处方日期）
                dt.Columns.Add("ITEM_ID", typeof(string));//项目编码
                dt.Columns.Add("ITEM_NAME", typeof(string));//项目名称
                dt.Columns.Add("ITEM_TYPE", typeof(string));//类型 1 药品  0 诊疗、服务设施、耗材
                dt.Columns.Add("NUMBERS", typeof(string));//数量  （his金额/医保单价）
                dt.Columns.Add("PRICE", typeof(string));//单价  （医保单价）
                dt.Columns.Add("PhysicianLevel", typeof(string));//医师级别
                dt.Columns.Add("Specification", typeof(string));//规格
                dt.Columns.Add("USAGE", typeof(string));//每次用量  （his金额/医保单价/频率（注意首末次））
                dt.Columns.Add("USAGE_DAYS", typeof(string));//用药天数   0
                dt.Columns.Add("USAGE_UNIT", typeof(string));//包装单位   医保单位
                dt.Columns.Add("ZZZ_Flag", typeof(string));//计费标记（-1未设置 0未计费 1已计费）：住院默认是已计费的  门诊治疗费默认是已计费   门诊其他费根据结算时标记已计费为准
                dt.Columns.Add("Z_PhysicianAP", typeof(string));//医师行政职务（默认''）

                for (int i = 0; i < dtDetials.Rows.Count; i++)
                {
                    DataRow drDet = dtDetials.Rows[i];

                    DataRow[] drGrps = dtDetials.Select("嘱号='" + drDet["嘱号"].ToString() + "' and 开始时间<>''");
                    //if(drGrps.Length>)

                    string xmly = drDet["xmly"].ToString().Trim();
                    string xmid = drDet["HOITEM_ID"].ToString().Trim();
                    string zfbl = Convertor.IsNull(drDet["zfbl"], "-1").Trim();//对应医保自费：带z字的头

                    DataTable dtYbItem = ClsAuditCheck.GetOldYbItemInfo(xmly, xmid, yblx, ybzlx, "0", zfbl, FrmMdiMain.Database);
                    //DataTable dtYbItem = ClsAuditCheck.GetOldYbItemInfo(xmly, xmid, "0", FrmMdiMain.Database);
                    for (int j = 0; j < dtYbItem.Rows.Count; j++)
                    {
                        DataRow row = dtYbItem.Rows[j];

                        //审核上传明细
                        DataRow drMx = dt.NewRow();

                        drMx["AKF003"] = "0";//饮片贴数 
                        if (drDet["NTYPE"].ToString().Trim().Equals("3"))
                        {
                            //中草药处理
                            drMx["AKF003"] = drDet["剂数"].ToString(); //付数
                        }

                        drMx["AKF005"] = "0";//出国带药标志 
                        drMx["ApprovalNumber"] = "";//备案审批号 
                        drMx["BKA609"] = "0";//因公因战 
                        drMx["BKC227"] = "0";//外院费用标志 

                        Department dept = new Department(Dept_Br, FrmMdiMain.Database);

                        drMx["COSTS"] = "";//sdVal.ToString(); //wait jchl 总费用=单次用量的费用*频次 ]
                        drMx["DEPTNAME"] = dept.DeptName + "|" + drDet["下嘱医生"].ToString().Trim();//科室名称（“科室|医生”）
                        drMx["ELIGIBLE_AMOUNT"] = "";// sdVal.ToString();//医保内金额  （前台总费用=医保总费用）
                        drMx["FREQUENCY_INTERVAL"] = ClsAuditCheck.GetAuditFrq(drDet["频率"].ToString());//使用频次
                        drMx["ID"] = drDet["ID"].ToString();//id
                        drMx["ITEM_DATE"] = drGrps[0]["开始时间"].ToString(); //drDet["开始时间"].ToString();//费用日期

                        drMx["ITEM_TYPE"] = row["XMLY"].ToString().Trim().Equals("1") ? "1" : "0";//类型 1 药品  0 诊疗、服务设施、耗材


                        drMx["PhysicianLevel"] = ClsAuditCheck.GetDocType(doctor.TypeID.ToString());//医师级别
                        drMx["Specification"] = drDet["规格"].ToString();//规格

                        drMx["USAGE_DAYS"] = "0";//规格
                        drMx["ZZZ_Flag"] = "0";//医嘱明细 0：未计费      费用明细 1：已计费
                        drMx["Z_PhysicianAP"] = "";//医师行政职务（默认''）


                        if (yblx.Equals("1")) 
                        //if (yblx.Equals("1") || yblx.Equals("-1"))//新增自费智审
                        {
                            #region"武汉市医保"
                            //计算明细金额
                            decimal sdVal = 0M;
                            if (row["XMLY"].ToString().Trim().Equals("1"))
                            {
                                //非中草药的临时医嘱才使用总量
                                if (drDet["MNGTYPE"].ToString().Trim().Equals("1") && (!drDet["NTYPE"].ToString().Trim().Equals("3")))
                                //if (drDet["NTYPE"].ToString().Trim().Equals("1"))
                                {
                                    //临嘱需要上传 总单位、总量
                                    DataTable dtPrc = HisFunctions.SP_FUN_DW_NUM(drDet["dwlx"].ToString(), decimal.Parse(drDet["总量"].ToString()), row["ITEM_ID"].ToString(), drDet["执行科室"].ToString(), FrmMdiMain.Database);
                                    sdVal = decimal.Parse(dtPrc.Rows[0]["sdvalue"].ToString().Trim());//单次用量的费用
                                }
                                else
                                {
                                    string ydw = "1";
                                    if (drDet["dwlx"].ToString().Trim().Length > 1)
                                    {
                                        ydw = drDet["dwlx"].ToString().Trim().Substring(1, 1);
                                    }
                                    else
                                    {
                                        ydw = drDet["dwlx"].ToString().Trim();
                                    }

                                    //其他传单位类型和剂量
                                    DataTable dtPrc = HisFunctions.SP_FUN_DW_NUM(ydw, decimal.Parse(drDet["剂量"].ToString()), row["ITEM_ID"].ToString(), drDet["执行科室"].ToString(), FrmMdiMain.Database);
                                    sdVal = decimal.Parse(dtPrc.Rows[0]["sdvalue"].ToString().Trim());//单次用量的费用
                                }
                            }
                            else
                            {
                                //项目金额
                                string sql = string.Format(@"select * from JC_HSITEM where ITEM_ID='{0}' ", row["ITEM_ID"].ToString());
                                DataTable dtPrc = FrmMdiMain.Database.GetDataTable(sql);
                                int iNum = Convert.ToInt32(drDet["剂量"].ToString());

                                sdVal = decimal.Parse(dtPrc.Rows[0]["RETAIL_PRICE"].ToString()) * iNum;//单次用量的费用
                            }

                            //数量   临嘱：(his金额/医保单价)     长嘱：((his金额/医保单价)*频率)   频率：医嘱传首次,费用传频次
                            decimal usage = sdVal / decimal.Parse(row["dj"].ToString());//用量 

                            //临嘱频次默认为1
                            int iFir = 1;
                            if (drDet["MNGTYPE"].ToString().Trim().Equals("0"))
                            {
                                //iFir = int.Parse(drDet["首日执行次数"].ToString().Trim());
                                iFir = 1;//如果 首日执行次数 为0,医保智审不能识别,无法校验 限定适应症条件用药 等判断
                            }
                            decimal dNum = usage * iFir;

                            if (drDet["NTYPE"].ToString().Trim().Equals("3"))
                            {
                                //中草药处理
                                usage = 0;//草药默认为0
                            }

                            //drMx["DEPTNAME"] = dept.DeptName + "|" + drDet["下嘱医生"].ToString().Trim();//科室名称（“科室|医生”）
                            drMx["DEPTNAME"] = dept.DeptId + "|" + dept.DeptName + ";" + Convertor.IsNull(drDet["ORDER_DOC"], "").Trim() + "|" + drDet["下嘱医生"].ToString().Trim();//“科室ID|科室名称；医生ID|医生名称“

                            drMx["PRICE"] = row["dj"].ToString();//单价
                            drMx["USAGE_UNIT"] = row["dw"].ToString();//医保单位


                            drMx["ITEM_ID"] = row["xmid"].ToString();//上传xmid
                            drMx["ITEM_NAME"] = row["xmmc"].ToString();//上传xmmc

                            drMx["NUMBERS"] = dNum.ToString("0.0000");//单次用量*频次

                            drMx["USAGE"] = usage.ToString("0.0000");//每次用量  （his金额/医保单价/频率（注意首末次））  （总数量/总次数=单次用量）

                            drMx["COSTS"] = sdVal * iFir;//本次上传总费用=单次用量价格*频次
                            drMx["ELIGIBLE_AMOUNT"] = sdVal * iFir;//医保内金额  （前台总费用=医保总费用）
                            sum += sdVal * iFir;
                            #endregion
                        }
                            //else if (yblx.Equals("3") && ybzlx.Equals("55"))
                        else if ((yblx.Equals("3") && ybzlx.Equals("55")) || yblx.Equals("-1"))////增加自费审核  add by  chenli  2017-01-26
                        {
                            #region"省医保"
                            //计算明细金额
                            decimal sdVal = 0M;
                            decimal djVal = 0M;
                            decimal yl = 0M;
                            if (row["XMLY"].ToString().Trim().Equals("1"))
                            {
                                if (drDet["MNGTYPE"].ToString().Trim().Equals("1") && (!drDet["NTYPE"].ToString().Trim().Equals("3")))
                                //if (drDet["NTYPE"].ToString().Trim().Equals("1"))
                                {
                                    //临嘱需要上传 总单位、总量
                                    DataTable dtPrc = HisFunctions.SP_FUN_DW_NUM(drDet["dwlx"].ToString(), decimal.Parse(drDet["总量"].ToString()), row["ITEM_ID"].ToString(), drDet["执行科室"].ToString(), FrmMdiMain.Database);
                                    sdVal = decimal.Parse(dtPrc.Rows[0]["sdvalue"].ToString().Trim());//单次用量的费用
                                    yl = decimal.Parse(dtPrc.Rows[0]["yl"].ToString().Trim());
                                }
                                else
                                {
                                    string ydw = "1";
                                    if (drDet["dwlx"].ToString().Trim().Length > 1)
                                    {
                                        ydw = drDet["dwlx"].ToString().Trim().Substring(1, 1);
                                    }
                                    else
                                    {
                                        ydw = drDet["dwlx"].ToString().Trim();
                                    }

                                    //其他传单位类型和剂量
                                    DataTable dtPrc = HisFunctions.SP_FUN_DW_NUM(ydw, decimal.Parse(drDet["剂量"].ToString()), row["ITEM_ID"].ToString(), drDet["执行科室"].ToString(), FrmMdiMain.Database);
                                    sdVal = decimal.Parse(dtPrc.Rows[0]["sdvalue"].ToString().Trim());//单次用量的费用
                                    yl = decimal.Parse(dtPrc.Rows[0]["yl"].ToString().Trim());
                                }


                                string sql = string.Format(@"select * from VI_YP_YPCD where cjid='{0}' ", row["ITEM_ID"].ToString());
                                DataTable dtYp = FrmMdiMain.Database.GetDataTable(sql);

                                drMx["PRICE"] = dtYp.Rows[0]["lsj"].ToString();//单价
                                drMx["USAGE_UNIT"] = dtYp.Rows[0]["s_ypdw"].ToString();//医保单位
                                drMx["ITEM_NAME"] = dtYp.Rows[0]["s_yppm"].ToString();//上传xmmc
                            }
                            else
                            {
                                //项目金额
                                string sql = string.Format(@"select * from JC_HSITEM where ITEM_ID='{0}' ", row["ITEM_ID"].ToString());
                                DataTable dtPrc = FrmMdiMain.Database.GetDataTable(sql);
                                yl = Convert.ToDecimal(drDet["剂量"].ToString());

                                sdVal = decimal.Parse(dtPrc.Rows[0]["RETAIL_PRICE"].ToString()) * yl;//单次用量的费用


                                drMx["PRICE"] = dtPrc.Rows[0]["RETAIL_PRICE"].ToString();//单价
                                drMx["USAGE_UNIT"] = dtPrc.Rows[0]["ITEM_UNIT"].ToString();//医保单位
                                drMx["ITEM_NAME"] = dtPrc.Rows[0]["ITEM_NAME"].ToString();//上传xmmc
                            }

                            djVal = decimal.Parse(drMx["PRICE"].ToString());

                            //数量   临嘱：(his金额/医保单价)     长嘱：((his金额/医保单价)*频率)   频率：医嘱传首次,费用传频次
                            decimal usage = sdVal / djVal;//用量 

                            //临嘱频次默认为1
                            int iFir = 1;
                            if (drDet["MNGTYPE"].ToString().Trim().Equals("0"))
                            {
                                //iFir = int.Parse(drDet["首日执行次数"].ToString().Trim());
                                iFir = 1;//如果 首日执行次数 为0,医保智审不能识别,无法校验 限定适应症条件用药 等判断
                            }
                            decimal dNum = usage * iFir;
                            //decimal dNum = sdVal / djVal;

                            if (drDet["NTYPE"].ToString().Trim().Equals("3"))
                            {
                                //中草药处理
                                usage = 0;//草药默认为0
                            }

                            drMx["ITEM_ID"] = row["xmid"].ToString();//上传xmid

                            drMx["DEPTNAME"] = dept.DeptId + "|" + dept.DeptName + ";" + Convertor.IsNull(drDet["ORDER_DOC"], "").Trim() + "|" + drDet["下嘱医生"].ToString().Trim();//“科室ID|科室名称；医生ID|医生名称“
                            drMx["NUMBERS"] = dNum.ToString("0.0000");//单次用量*频次
                            drMx["USAGE"] = usage.ToString("0.0000");//每次用量  （his金额/医保单价/频率（注意首末次））  （总数量/总次数=单次用量）
                            drMx["COSTS"] = sdVal * iFir;//本次上传总费用=单次用量价格*频次
                            drMx["ELIGIBLE_AMOUNT"] = sdVal * iFir;//医保内金额  （前台总费用=医保总费用）
                            sum += sdVal * iFir;
                            #endregion
                        }

                        dt.Rows.Add(drMx);
                    }
                }

                return dt;
            }
            catch (Exception ex)
            {
                MessageBox.Show("智审出错：医嘱明细 \r\t " + ex.Message);
                return null;
            }
        }

        /// <summary>
        /// 调用：医嘱发送、费用生成
        /// </summary>
        /// <param name="inpatient_id"></param>
        /// <param name="inpNo"></param>
        /// <returns></returns>
        private bool DoVaildYbOrder(string inpatient_id, string inpNo, DataTable dtOrderSrc)
        {

            string yblx = "";
            string ybzlx = "";
            string zyh = "";
            try
            {
                string inAGENCIES_ID = "";
                string ssql = string.Format("select YBLX,XZLX,INPATIENT_NO from VI_ZY_VINPATIENT_ALL where INPATIENT_ID ='{0}' ", BinID.ToString());
                try
                {
                    DataTable dtInp = InstanceForm._database.GetDataTable(ssql);

                    if (dtInp == null || dtInp.Rows.Count <= 0)
                        throw new Exception("未找到该住院号的病人信息\r");

                    yblx = dtInp.Rows[0]["YBLX"].ToString().Trim();
                    ybzlx = dtInp.Rows[0]["XZLX"].ToString().Trim();
                    zyh = dtInp.Rows[0]["INPATIENT_NO"].ToString().Trim();
                    if (yblx.Equals("1"))
                    {
                        inAGENCIES_ID = "1";
                    }
                    else if (yblx.Equals("3") && ybzlx.Equals("55"))
                    {
                        inAGENCIES_ID = "2";
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("未找到该住院号的病人信息\r" + ex.Message);
                }

                Crownwood.Magic.Controls.TabControl tc = ((Crownwood.Magic.Controls.TabControl)tabbedGroups1.Controls[0]);

                decimal sum = 0M;

                if (dtOrderSrc.Rows.Count <= 0)
                {
                    //待抛出异常
                    return false;
                }

                //dtOrderSrc.DefaultView.RowFilter = "STATUS_FLAG=0 and ntype not in(0,7) ";
                dtOrderSrc.DefaultView.RowFilter = "STATUS_FLAG=0 and ntype not in(0,7) and HOITEM_ID<>-1";
                DataTable dtOrder = dtOrderSrc.DefaultView.ToTable();

                //没有要审核的医嘱
                if (dtOrder.Rows.Count <= 0)
                    return true;


                //明细Info
                DataTable dtDetail = GetDetailBill(dtOrder, yblx, ybzlx, out sum);


                //无上传明细,不审
                if (dtDetail.Rows.Count <= 0)
                    return true;

                //主单info
                DataTable dtMain = ClsAuditCheck.RetAfSetMainInfo(inpatient_id, inpNo, sum, FrmMdiMain.Database);

                BmiAuditClass clsAudit = new BmiAuditClass();
                string strRet = clsAudit.ClaimAudit4Hospital_N(dtMain, dtDetail);

                //if (strRet.Equals("0") || strRet.Equals("2") || strRet.Equals("3"))
                if (strRet.Equals("0") || strRet.Equals("2"))
                {
                    ///返回： 0：审核失败
                    //1：审核结果正常
                    //2：调用步骤出错
                    //3：审核结果有违规（取消）
                    //4：审核结果有违规（保存）；申明方法如下：
                    throw new Exception(clsAudit.l_error_message);
                }
                else if (strRet.Equals("3"))
                {
                    return false;
                }
                return true;
            }
            catch (Exception ex)
            {
                MessageBox.Show("智审出错：审核调用 \r\t " + ex.Message);
                return false;
            }
        }

        #endregion

        /// <summary>
        /// 判断是否合理用药部门
        /// </summary>
        /// <returns></returns>
        private void BoHLYYDept()
        {
            string strSql = "SELECT dept_id FROM dbo.V_HLYY_DEPT where dept_id=" + InstanceForm._currentDept.DeptId;
            DataTable dtHlyyDept = InstanceForm._database.GetDataTable(strSql);
            if (dtHlyyDept != null && dtHlyyDept.Rows.Count > 0)
            {
                boHLYYDept = true;
            }
            else
            {
                boHLYYDept = false;
            }
        }

        /// <summary>
        /// 查询H7N9维护的医嘱
        /// </summary>
        /// <returns></returns>
        private DataTable SearchHoitemIds()
        {
            string strSql = "SELECT hoitem_id FROM V_H7N9_ORDER";
            return InstanceForm._database.GetDataTable(strSql);
        }

        /// <summary>
        /// 判断当前登录医生是否有H7N9开单权限
        /// </summary>
        /// <returns></returns>
        private bool IsDoctorH7N9()
        {
            string str = "SELECT * FROM H7N9_DOCTOR WHERE EMPLOYEE_ID=" + InstanceForm._currentUser.EmployeeId;
            DataTable dt = InstanceForm._database.GetDataTable(str);
            if (dt != null && dt.Rows.Count > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        /// <summary>
        /// 获取输液用法  必须填写滴量 add by  chenli 2017-09-05
        /// </summary>
        /// <returns></returns>
        private DataTable getsy_yf()
        {
            DataTable dt = new DataTable();
            string sql = "select  yf from VI_ZY_ORDER_SY_YF";
            dt = InstanceForm._database.GetDataTable(sql);
            return dt;
        }

        private void btn_jcyy_Click(object sender, EventArgs e)
        {
            DataTable dt = new DataTable();
            string zyh = this.patientInfo1.lbID.Text;
            string yqid = "";
            string sql = "select b.YQID from  ZY_INPATIENT a left join  JC_DEPT_PROPERTY b on a.DEPT_ID=b.DEPT_ID  where INPATIENT_NO= " + zyh;
            dt = InstanceForm._database.GetDataTable(sql);
            try
            {
                if (dt.Rows.Count > 0)
                {
                    yqid = dt.Rows[0]["YQID"].ToString();
                }
                else
                {
                    MessageBox.Show("未找到该病人！");
                    return;
                }
                if (yqid == "1001")
                {
                    zyh = zyh.Remove(0, 2);
                    string url = string.Format(@"http://192.168.201.40/IMCISClient/Interface/ExamScheduleRequest?UserID=slcyy&UserPwd=123456&MedRecNO={0}", zyh);
                    System.Diagnostics.Process.Start(@"D:\bsoft\portal\360\360chrome.exe", url);
                }
                if (yqid == "1002")
                {
                    zyh = zyh.Remove(0, 2);
                    string url = string.Format(@"http://192.168.201.40/IMCISClient/Interface/ExamScheduleRequest?UserID=nlcyy&UserPwd=123456&MedRecNO={0}", zyh);
                    System.Diagnostics.Process.Start(@"D:\bsoft\portal\360\360chrome.exe", url);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
                this.Close();
            }
        }

        private void ss_renew_Click(object sender, EventArgs e)
        {
            DataTable dt_brfy = new DataTable();
            dt_brfy = br_fyxx();
            Ts_zyys_yzgl.DataSet1 dest = new Ts_zyys_yzgl.DataSet1();
            DataRow myrow;
            myrow = dest.BRFYXX.NewRow();
            myrow["床号"] = dt_brfy.Rows[0]["床号"].ToString();
            myrow["住院号"] = dt_brfy.Rows[0]["住院号"].ToString();
            myrow["姓名"] = dt_brfy.Rows[0]["姓名"].ToString();
            myrow["病室"] = dt_brfy.Rows[0]["所属科室"].ToString();
            myrow["入院日期"] = dt_brfy.Rows[0]["入院日期"].ToString();
            myrow["补交费用"] = dt_brfy.Rows[0]["补缴款"].ToString();
            myrow["已预交"] = dt_brfy.Rows[0]["预交款"].ToString();
            myrow["总费用"] = dt_brfy.Rows[0]["未结算总费用"].ToString();
            myrow["余额"] = dt_brfy.Rows[0]["余额"].ToString();
            dest.BRFYXX.Rows.Add(myrow);


            TrasenFrame.Forms.FrmReportView f = new TrasenFrame.Forms.FrmReportView(dest, Constant.ApplicationDirectory + "\\Report\\ZYYS_术前续款单.rpt", null,false);

            if (f.LoadReportSuccess)
            {
                f.Show();
            }
            else
                f.Dispose();

        }

        private DataTable br_fyxx()
        {
            DataTable dt = new DataTable();
            string sSql = "";
            sSql = "select 床号,姓名,住院号,性别,年龄,所属科室,结算类型,病人类型,险种类型,待遇类型,dbo.FUN_ZY_SEEKPATFEEINFO(a.inpatient_id,a.baby_id,1) 未结算总费用," +
                           " (SELECT ISNULL(SUM(ACVALUE),0)   FROM ZY_FEE_SPECI  WHERE CHARGE_BIT = 1  AND DELETE_BIT=0  AND DISCHARGE_BIT = 1  and INPATIENT_ID=a.inpatient_id and a.baby_id=a.baby_id)  已结算总费用," +//已经结算费用
                           " DBJE 担保金额,dbo.FUN_ZY_SEEKPATFEEINFO(a.inpatient_id,a.baby_id,2) 预交款,dbo.FUN_ZY_SEEKPATFEEINFO(a.inpatient_id,a.baby_id,3) 未到帐支票," +
                           " dbo.FUN_ZY_SEEKPATFEEYE(a.inpatient_id,a.baby_id) 余额, ''as 补缴款," +
                           "        入院日期,e.上次催款日期,a.INPATIENT_ID,a.Baby_ID,a.DEPT_ID,出院日期,医保类型,工作单位,身份证,病区,管床医生, 费用限额 ,flag,ryts" +
                             " ,isnull((select top 1 XJZF from ZY_YB_JSB_RJJL where DELETE_BIT=0 and inpatient_id=a.inpatient_id order by YBJS_DATE desc ) ,(select top 1 XJZF from zy_yb_jsb where delete_bit=0 and cz_flag=0 and inpatient_id=a.inpatient_id )) 现金支付 " +//add by zouchihua 2013-8-12获得现金支付
                           "   from (SELECT BED_NO 床号,INPATIENT_NO 住院号,NAME 姓名,SEX_NAME 性别,age 年龄," +
                           "         CUR_DEPT_NAME 所属科室,JSFS_NAME 结算类型,BRLX_NAME 病人类型,xzlx_name 险种类型,dylx_name 待遇类型,in_date 入院日期,'' 上次催款日期,INPATIENT_ID,Baby_ID,DEPT_ID,YBYE,DBJE ,flag ,ryts" +
                           "         ,out_date 出院日期,yblx_name 医保类型,gzdw 工作单位,social_no 身份证,WARD_NAME 病区,zydoc_name 管床医生, YJJ_LIMIT 费用限额" +
                           "    FROM vi_zy_vInpatient_All " +
                           "   WHERE inpatient_no='" + patientInfo1.lbID.Text.ToString() + "' and flag<>10) a " +
                           "         left join ( SELECT INPATIENT_ID,MAX(CK_DATE) AS 上次催款日期 " +
                           "                       FROM ZY_CK " +
                           "                      GROUP BY INPATIENT_ID) as e " +
                           "         on a.INPATIENT_ID=e.INPATIENT_ID " +
                           "  order by dbo.Fun_GetBedToOrder(床号),a.INPATIENT_ID,a.Baby_ID";
            dt = InstanceForm._database.GetDataTable(sSql);
            return dt;
        }
        /// <summary>
        /// 双击显示长期医嘱审方未通过的原因
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void dataGrid_LongOrder_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            DataTable myTb = (DataTable)this.dataGrid_LongOrder.DataSource;
            int nrow = dataGrid_LongOrder.CurrentCell.RowNumber;
            if (myTb.Rows[nrow]["审"].ToString() == "×")
            {
                DataTable dt_sfreson = new DataTable();
                string sql_sfreson = "";
                sql_sfreson = "select SFReason from  YHS_PRESC_STATE where PRESC_NO= '" + myTb.Rows[nrow]["ID"].ToString() + "'";
                dt_sfreson = InstanceForm._database.GetDataTable(sql_sfreson);
                MessageBox.Show(dt_sfreson.Rows[0]["SFReason"].ToString());
            }
        }
        /// <summary>
        /// 双击显示临时医嘱审方未通过的原因
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void dataGrid_TempOrder_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            DataTable myTb = (DataTable)this.dataGrid_TempOrder.DataSource;
            int nrow = dataGrid_TempOrder.CurrentCell.RowNumber;
            if (myTb.Rows[nrow]["审"].ToString() == "×")
            {
                DataTable dt_sfreson = new DataTable();
                string sql_sfreson = "";
                sql_sfreson = "select SFReason from  YHS_PRESC_STATE where PRESC_NO= '" + myTb.Rows[nrow]["ID"].ToString() + "'";
                dt_sfreson = InstanceForm._database.GetDataTable(sql_sfreson);
                MessageBox.Show(dt_sfreson.Rows[0]["SFReason"].ToString());
            }
        }

        private void Onsfreson(object sender, EventArgs e)
        {
            Crownwood.Magic.Controls.TabControl tc = null;
            tc = tabbedGroups1.ActiveLeaf.GroupControl as Crownwood.Magic.Controls.TabControl;
            DataGridEx mydgv;
            if (tc.SelectedTab.Title.ToString() == "长期医嘱")
                mydgv = this.dataGrid_LongOrder;
            else
                mydgv = this.dataGrid_TempOrder;
            DataTable myTb = (DataTable)mydgv.DataSource;
            int nrow = mydgv.CurrentCell.RowNumber;
            if (myTb.Rows[nrow]["审"].ToString() == "×")
            {
                DataTable dt_sfreson = new DataTable();
                string sql_sfreson = "";
                sql_sfreson = "select SFReason from  YHS_PRESC_STATE where PRESC_NO= '" + myTb.Rows[nrow]["ID"].ToString() + "'";
                dt_sfreson = InstanceForm._database.GetDataTable(sql_sfreson);
                MessageBox.Show(dt_sfreson.Rows[0]["SFReason"].ToString());
            }
        }

        private void outlookBar1_Click(object sender, EventArgs e)
        {

        }

        public void showdbz()
        {
            string sql = string.Format("select inpatient_id from  zy_inpatient_dbz  where  inpatient_id='{0}'", BinID);
            DataTable dt = InstanceForm._database.GetDataTable(sql);
            if (dt.Rows.Count > 0)
            {
                label18.Text += this.patientInfo1.lbAge.Text.ToString();
                label18.Visible = true;
            }
            else
            {
                label18.Visible = false;
            }
        }

    }
}
