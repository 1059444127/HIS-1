//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace 护士工作站.报表 {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class TheReportDateSet : DataSet {
        
        private tabzxdDataTable tabletabzxd;
        
        private tabfeelistDataTable tabletabfeelist;
        
        private tabGrdDataTable tabletabGrd;
        
        private tabscjlDataTable tabletabscjl;
        
        private tabYbhljlDataTable tabletabYbhljl;
        
        private tabWzhljlDataTable tabletabWzhljl;
        
        private tabWardjbjlDataTable tabletabWardjbjl;
        
        private tabWardjbjl_brdtDataTable tabletabWardjbjl_brdt;
        
        private tabRypgDataTable tabletabRypg;
        
        private tabpbbDataTable tabletabpbb;
        
        private tabPbgzlDataTable tabletabPbgzl;
        
        private tabJydprtDataTable tabletabJydprt;
        
        private MedYPMXDDataTable tableMedYPMXD;
        
        private MedYPTLDDataTable tableMedYPTLD;
        
        private ZXD_SYKDataTable tableZXD_SYK;
        
        private BRFeeMXDDataTable tableBRFeeMXD;
        
        private BRFeeCKDDataTable tableBRFeeCKD;
        
        private BRFeeHZDDataTable tableBRFeeHZD;
        
        private EQUAPPLSDataTable tableEQUAPPLS;
        
        private EQUAPPLYDataTable tableEQUAPPLY;
        
        private tabJbrMedprtDataTable tabletabJbrMedprt;
        
        private tabWardGzrzDataTable tabletabWardGzrz;
        
        private tabWardGzrzMxDataTable tabletabWardGzrzMx;
        
        private EQUAPPLS1DataTable tableEQUAPPLS1;
        
        private tabBqkssrDataTable tabletabBqkssr;
        
        public TheReportDateSet() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected TheReportDateSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tabzxd"] != null)) {
                    this.Tables.Add(new tabzxdDataTable(ds.Tables["tabzxd"]));
                }
                if ((ds.Tables["tabfeelist"] != null)) {
                    this.Tables.Add(new tabfeelistDataTable(ds.Tables["tabfeelist"]));
                }
                if ((ds.Tables["tabGrd"] != null)) {
                    this.Tables.Add(new tabGrdDataTable(ds.Tables["tabGrd"]));
                }
                if ((ds.Tables["tabscjl"] != null)) {
                    this.Tables.Add(new tabscjlDataTable(ds.Tables["tabscjl"]));
                }
                if ((ds.Tables["tabYbhljl"] != null)) {
                    this.Tables.Add(new tabYbhljlDataTable(ds.Tables["tabYbhljl"]));
                }
                if ((ds.Tables["tabWzhljl"] != null)) {
                    this.Tables.Add(new tabWzhljlDataTable(ds.Tables["tabWzhljl"]));
                }
                if ((ds.Tables["tabWardjbjl"] != null)) {
                    this.Tables.Add(new tabWardjbjlDataTable(ds.Tables["tabWardjbjl"]));
                }
                if ((ds.Tables["tabWardjbjl_brdt"] != null)) {
                    this.Tables.Add(new tabWardjbjl_brdtDataTable(ds.Tables["tabWardjbjl_brdt"]));
                }
                if ((ds.Tables["tabRypg"] != null)) {
                    this.Tables.Add(new tabRypgDataTable(ds.Tables["tabRypg"]));
                }
                if ((ds.Tables["tabpbb"] != null)) {
                    this.Tables.Add(new tabpbbDataTable(ds.Tables["tabpbb"]));
                }
                if ((ds.Tables["tabPbgzl"] != null)) {
                    this.Tables.Add(new tabPbgzlDataTable(ds.Tables["tabPbgzl"]));
                }
                if ((ds.Tables["tabJydprt"] != null)) {
                    this.Tables.Add(new tabJydprtDataTable(ds.Tables["tabJydprt"]));
                }
                if ((ds.Tables["MedYPMXD"] != null)) {
                    this.Tables.Add(new MedYPMXDDataTable(ds.Tables["MedYPMXD"]));
                }
                if ((ds.Tables["MedYPTLD"] != null)) {
                    this.Tables.Add(new MedYPTLDDataTable(ds.Tables["MedYPTLD"]));
                }
                if ((ds.Tables["ZXD_SYK"] != null)) {
                    this.Tables.Add(new ZXD_SYKDataTable(ds.Tables["ZXD_SYK"]));
                }
                if ((ds.Tables["BRFeeMXD"] != null)) {
                    this.Tables.Add(new BRFeeMXDDataTable(ds.Tables["BRFeeMXD"]));
                }
                if ((ds.Tables["BRFeeCKD"] != null)) {
                    this.Tables.Add(new BRFeeCKDDataTable(ds.Tables["BRFeeCKD"]));
                }
                if ((ds.Tables["BRFeeHZD"] != null)) {
                    this.Tables.Add(new BRFeeHZDDataTable(ds.Tables["BRFeeHZD"]));
                }
                if ((ds.Tables["EQUAPPLS"] != null)) {
                    this.Tables.Add(new EQUAPPLSDataTable(ds.Tables["EQUAPPLS"]));
                }
                if ((ds.Tables["EQUAPPLY"] != null)) {
                    this.Tables.Add(new EQUAPPLYDataTable(ds.Tables["EQUAPPLY"]));
                }
                if ((ds.Tables["tabJbrMedprt"] != null)) {
                    this.Tables.Add(new tabJbrMedprtDataTable(ds.Tables["tabJbrMedprt"]));
                }
                if ((ds.Tables["tabWardGzrz"] != null)) {
                    this.Tables.Add(new tabWardGzrzDataTable(ds.Tables["tabWardGzrz"]));
                }
                if ((ds.Tables["tabWardGzrzMx"] != null)) {
                    this.Tables.Add(new tabWardGzrzMxDataTable(ds.Tables["tabWardGzrzMx"]));
                }
                if ((ds.Tables["EQUAPPLS1"] != null)) {
                    this.Tables.Add(new EQUAPPLS1DataTable(ds.Tables["EQUAPPLS1"]));
                }
                if ((ds.Tables["tabBqkssr"] != null)) {
                    this.Tables.Add(new tabBqkssrDataTable(ds.Tables["tabBqkssr"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabzxdDataTable tabzxd {
            get {
                return this.tabletabzxd;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabfeelistDataTable tabfeelist {
            get {
                return this.tabletabfeelist;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabGrdDataTable tabGrd {
            get {
                return this.tabletabGrd;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabscjlDataTable tabscjl {
            get {
                return this.tabletabscjl;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabYbhljlDataTable tabYbhljl {
            get {
                return this.tabletabYbhljl;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabWzhljlDataTable tabWzhljl {
            get {
                return this.tabletabWzhljl;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabWardjbjlDataTable tabWardjbjl {
            get {
                return this.tabletabWardjbjl;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabWardjbjl_brdtDataTable tabWardjbjl_brdt {
            get {
                return this.tabletabWardjbjl_brdt;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabRypgDataTable tabRypg {
            get {
                return this.tabletabRypg;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabpbbDataTable tabpbb {
            get {
                return this.tabletabpbb;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabPbgzlDataTable tabPbgzl {
            get {
                return this.tabletabPbgzl;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabJydprtDataTable tabJydprt {
            get {
                return this.tabletabJydprt;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MedYPMXDDataTable MedYPMXD {
            get {
                return this.tableMedYPMXD;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MedYPTLDDataTable MedYPTLD {
            get {
                return this.tableMedYPTLD;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ZXD_SYKDataTable ZXD_SYK {
            get {
                return this.tableZXD_SYK;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BRFeeMXDDataTable BRFeeMXD {
            get {
                return this.tableBRFeeMXD;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BRFeeCKDDataTable BRFeeCKD {
            get {
                return this.tableBRFeeCKD;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BRFeeHZDDataTable BRFeeHZD {
            get {
                return this.tableBRFeeHZD;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EQUAPPLSDataTable EQUAPPLS {
            get {
                return this.tableEQUAPPLS;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EQUAPPLYDataTable EQUAPPLY {
            get {
                return this.tableEQUAPPLY;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabJbrMedprtDataTable tabJbrMedprt {
            get {
                return this.tabletabJbrMedprt;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabWardGzrzDataTable tabWardGzrz {
            get {
                return this.tabletabWardGzrz;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabWardGzrzMxDataTable tabWardGzrzMx {
            get {
                return this.tabletabWardGzrzMx;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EQUAPPLS1DataTable EQUAPPLS1 {
            get {
                return this.tableEQUAPPLS1;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabBqkssrDataTable tabBqkssr {
            get {
                return this.tabletabBqkssr;
            }
        }
        
        public override DataSet Clone() {
            TheReportDateSet cln = ((TheReportDateSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tabzxd"] != null)) {
                this.Tables.Add(new tabzxdDataTable(ds.Tables["tabzxd"]));
            }
            if ((ds.Tables["tabfeelist"] != null)) {
                this.Tables.Add(new tabfeelistDataTable(ds.Tables["tabfeelist"]));
            }
            if ((ds.Tables["tabGrd"] != null)) {
                this.Tables.Add(new tabGrdDataTable(ds.Tables["tabGrd"]));
            }
            if ((ds.Tables["tabscjl"] != null)) {
                this.Tables.Add(new tabscjlDataTable(ds.Tables["tabscjl"]));
            }
            if ((ds.Tables["tabYbhljl"] != null)) {
                this.Tables.Add(new tabYbhljlDataTable(ds.Tables["tabYbhljl"]));
            }
            if ((ds.Tables["tabWzhljl"] != null)) {
                this.Tables.Add(new tabWzhljlDataTable(ds.Tables["tabWzhljl"]));
            }
            if ((ds.Tables["tabWardjbjl"] != null)) {
                this.Tables.Add(new tabWardjbjlDataTable(ds.Tables["tabWardjbjl"]));
            }
            if ((ds.Tables["tabWardjbjl_brdt"] != null)) {
                this.Tables.Add(new tabWardjbjl_brdtDataTable(ds.Tables["tabWardjbjl_brdt"]));
            }
            if ((ds.Tables["tabRypg"] != null)) {
                this.Tables.Add(new tabRypgDataTable(ds.Tables["tabRypg"]));
            }
            if ((ds.Tables["tabpbb"] != null)) {
                this.Tables.Add(new tabpbbDataTable(ds.Tables["tabpbb"]));
            }
            if ((ds.Tables["tabPbgzl"] != null)) {
                this.Tables.Add(new tabPbgzlDataTable(ds.Tables["tabPbgzl"]));
            }
            if ((ds.Tables["tabJydprt"] != null)) {
                this.Tables.Add(new tabJydprtDataTable(ds.Tables["tabJydprt"]));
            }
            if ((ds.Tables["MedYPMXD"] != null)) {
                this.Tables.Add(new MedYPMXDDataTable(ds.Tables["MedYPMXD"]));
            }
            if ((ds.Tables["MedYPTLD"] != null)) {
                this.Tables.Add(new MedYPTLDDataTable(ds.Tables["MedYPTLD"]));
            }
            if ((ds.Tables["ZXD_SYK"] != null)) {
                this.Tables.Add(new ZXD_SYKDataTable(ds.Tables["ZXD_SYK"]));
            }
            if ((ds.Tables["BRFeeMXD"] != null)) {
                this.Tables.Add(new BRFeeMXDDataTable(ds.Tables["BRFeeMXD"]));
            }
            if ((ds.Tables["BRFeeCKD"] != null)) {
                this.Tables.Add(new BRFeeCKDDataTable(ds.Tables["BRFeeCKD"]));
            }
            if ((ds.Tables["BRFeeHZD"] != null)) {
                this.Tables.Add(new BRFeeHZDDataTable(ds.Tables["BRFeeHZD"]));
            }
            if ((ds.Tables["EQUAPPLS"] != null)) {
                this.Tables.Add(new EQUAPPLSDataTable(ds.Tables["EQUAPPLS"]));
            }
            if ((ds.Tables["EQUAPPLY"] != null)) {
                this.Tables.Add(new EQUAPPLYDataTable(ds.Tables["EQUAPPLY"]));
            }
            if ((ds.Tables["tabJbrMedprt"] != null)) {
                this.Tables.Add(new tabJbrMedprtDataTable(ds.Tables["tabJbrMedprt"]));
            }
            if ((ds.Tables["tabWardGzrz"] != null)) {
                this.Tables.Add(new tabWardGzrzDataTable(ds.Tables["tabWardGzrz"]));
            }
            if ((ds.Tables["tabWardGzrzMx"] != null)) {
                this.Tables.Add(new tabWardGzrzMxDataTable(ds.Tables["tabWardGzrzMx"]));
            }
            if ((ds.Tables["EQUAPPLS1"] != null)) {
                this.Tables.Add(new EQUAPPLS1DataTable(ds.Tables["EQUAPPLS1"]));
            }
            if ((ds.Tables["tabBqkssr"] != null)) {
                this.Tables.Add(new tabBqkssrDataTable(ds.Tables["tabBqkssr"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletabzxd = ((tabzxdDataTable)(this.Tables["tabzxd"]));
            if ((this.tabletabzxd != null)) {
                this.tabletabzxd.InitVars();
            }
            this.tabletabfeelist = ((tabfeelistDataTable)(this.Tables["tabfeelist"]));
            if ((this.tabletabfeelist != null)) {
                this.tabletabfeelist.InitVars();
            }
            this.tabletabGrd = ((tabGrdDataTable)(this.Tables["tabGrd"]));
            if ((this.tabletabGrd != null)) {
                this.tabletabGrd.InitVars();
            }
            this.tabletabscjl = ((tabscjlDataTable)(this.Tables["tabscjl"]));
            if ((this.tabletabscjl != null)) {
                this.tabletabscjl.InitVars();
            }
            this.tabletabYbhljl = ((tabYbhljlDataTable)(this.Tables["tabYbhljl"]));
            if ((this.tabletabYbhljl != null)) {
                this.tabletabYbhljl.InitVars();
            }
            this.tabletabWzhljl = ((tabWzhljlDataTable)(this.Tables["tabWzhljl"]));
            if ((this.tabletabWzhljl != null)) {
                this.tabletabWzhljl.InitVars();
            }
            this.tabletabWardjbjl = ((tabWardjbjlDataTable)(this.Tables["tabWardjbjl"]));
            if ((this.tabletabWardjbjl != null)) {
                this.tabletabWardjbjl.InitVars();
            }
            this.tabletabWardjbjl_brdt = ((tabWardjbjl_brdtDataTable)(this.Tables["tabWardjbjl_brdt"]));
            if ((this.tabletabWardjbjl_brdt != null)) {
                this.tabletabWardjbjl_brdt.InitVars();
            }
            this.tabletabRypg = ((tabRypgDataTable)(this.Tables["tabRypg"]));
            if ((this.tabletabRypg != null)) {
                this.tabletabRypg.InitVars();
            }
            this.tabletabpbb = ((tabpbbDataTable)(this.Tables["tabpbb"]));
            if ((this.tabletabpbb != null)) {
                this.tabletabpbb.InitVars();
            }
            this.tabletabPbgzl = ((tabPbgzlDataTable)(this.Tables["tabPbgzl"]));
            if ((this.tabletabPbgzl != null)) {
                this.tabletabPbgzl.InitVars();
            }
            this.tabletabJydprt = ((tabJydprtDataTable)(this.Tables["tabJydprt"]));
            if ((this.tabletabJydprt != null)) {
                this.tabletabJydprt.InitVars();
            }
            this.tableMedYPMXD = ((MedYPMXDDataTable)(this.Tables["MedYPMXD"]));
            if ((this.tableMedYPMXD != null)) {
                this.tableMedYPMXD.InitVars();
            }
            this.tableMedYPTLD = ((MedYPTLDDataTable)(this.Tables["MedYPTLD"]));
            if ((this.tableMedYPTLD != null)) {
                this.tableMedYPTLD.InitVars();
            }
            this.tableZXD_SYK = ((ZXD_SYKDataTable)(this.Tables["ZXD_SYK"]));
            if ((this.tableZXD_SYK != null)) {
                this.tableZXD_SYK.InitVars();
            }
            this.tableBRFeeMXD = ((BRFeeMXDDataTable)(this.Tables["BRFeeMXD"]));
            if ((this.tableBRFeeMXD != null)) {
                this.tableBRFeeMXD.InitVars();
            }
            this.tableBRFeeCKD = ((BRFeeCKDDataTable)(this.Tables["BRFeeCKD"]));
            if ((this.tableBRFeeCKD != null)) {
                this.tableBRFeeCKD.InitVars();
            }
            this.tableBRFeeHZD = ((BRFeeHZDDataTable)(this.Tables["BRFeeHZD"]));
            if ((this.tableBRFeeHZD != null)) {
                this.tableBRFeeHZD.InitVars();
            }
            this.tableEQUAPPLS = ((EQUAPPLSDataTable)(this.Tables["EQUAPPLS"]));
            if ((this.tableEQUAPPLS != null)) {
                this.tableEQUAPPLS.InitVars();
            }
            this.tableEQUAPPLY = ((EQUAPPLYDataTable)(this.Tables["EQUAPPLY"]));
            if ((this.tableEQUAPPLY != null)) {
                this.tableEQUAPPLY.InitVars();
            }
            this.tabletabJbrMedprt = ((tabJbrMedprtDataTable)(this.Tables["tabJbrMedprt"]));
            if ((this.tabletabJbrMedprt != null)) {
                this.tabletabJbrMedprt.InitVars();
            }
            this.tabletabWardGzrz = ((tabWardGzrzDataTable)(this.Tables["tabWardGzrz"]));
            if ((this.tabletabWardGzrz != null)) {
                this.tabletabWardGzrz.InitVars();
            }
            this.tabletabWardGzrzMx = ((tabWardGzrzMxDataTable)(this.Tables["tabWardGzrzMx"]));
            if ((this.tabletabWardGzrzMx != null)) {
                this.tabletabWardGzrzMx.InitVars();
            }
            this.tableEQUAPPLS1 = ((EQUAPPLS1DataTable)(this.Tables["EQUAPPLS1"]));
            if ((this.tableEQUAPPLS1 != null)) {
                this.tableEQUAPPLS1.InitVars();
            }
            this.tabletabBqkssr = ((tabBqkssrDataTable)(this.Tables["tabBqkssr"]));
            if ((this.tabletabBqkssr != null)) {
                this.tabletabBqkssr.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "TheReportDateSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TheReportDateSet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletabzxd = new tabzxdDataTable();
            this.Tables.Add(this.tabletabzxd);
            this.tabletabfeelist = new tabfeelistDataTable();
            this.Tables.Add(this.tabletabfeelist);
            this.tabletabGrd = new tabGrdDataTable();
            this.Tables.Add(this.tabletabGrd);
            this.tabletabscjl = new tabscjlDataTable();
            this.Tables.Add(this.tabletabscjl);
            this.tabletabYbhljl = new tabYbhljlDataTable();
            this.Tables.Add(this.tabletabYbhljl);
            this.tabletabWzhljl = new tabWzhljlDataTable();
            this.Tables.Add(this.tabletabWzhljl);
            this.tabletabWardjbjl = new tabWardjbjlDataTable();
            this.Tables.Add(this.tabletabWardjbjl);
            this.tabletabWardjbjl_brdt = new tabWardjbjl_brdtDataTable();
            this.Tables.Add(this.tabletabWardjbjl_brdt);
            this.tabletabRypg = new tabRypgDataTable();
            this.Tables.Add(this.tabletabRypg);
            this.tabletabpbb = new tabpbbDataTable();
            this.Tables.Add(this.tabletabpbb);
            this.tabletabPbgzl = new tabPbgzlDataTable();
            this.Tables.Add(this.tabletabPbgzl);
            this.tabletabJydprt = new tabJydprtDataTable();
            this.Tables.Add(this.tabletabJydprt);
            this.tableMedYPMXD = new MedYPMXDDataTable();
            this.Tables.Add(this.tableMedYPMXD);
            this.tableMedYPTLD = new MedYPTLDDataTable();
            this.Tables.Add(this.tableMedYPTLD);
            this.tableZXD_SYK = new ZXD_SYKDataTable();
            this.Tables.Add(this.tableZXD_SYK);
            this.tableBRFeeMXD = new BRFeeMXDDataTable();
            this.Tables.Add(this.tableBRFeeMXD);
            this.tableBRFeeCKD = new BRFeeCKDDataTable();
            this.Tables.Add(this.tableBRFeeCKD);
            this.tableBRFeeHZD = new BRFeeHZDDataTable();
            this.Tables.Add(this.tableBRFeeHZD);
            this.tableEQUAPPLS = new EQUAPPLSDataTable();
            this.Tables.Add(this.tableEQUAPPLS);
            this.tableEQUAPPLY = new EQUAPPLYDataTable();
            this.Tables.Add(this.tableEQUAPPLY);
            this.tabletabJbrMedprt = new tabJbrMedprtDataTable();
            this.Tables.Add(this.tabletabJbrMedprt);
            this.tabletabWardGzrz = new tabWardGzrzDataTable();
            this.Tables.Add(this.tabletabWardGzrz);
            this.tabletabWardGzrzMx = new tabWardGzrzMxDataTable();
            this.Tables.Add(this.tabletabWardGzrzMx);
            this.tableEQUAPPLS1 = new EQUAPPLS1DataTable();
            this.Tables.Add(this.tableEQUAPPLS1);
            this.tabletabBqkssr = new tabBqkssrDataTable();
            this.Tables.Add(this.tabletabBqkssr);
        }
        
        private bool ShouldSerializetabzxd() {
            return false;
        }
        
        private bool ShouldSerializetabfeelist() {
            return false;
        }
        
        private bool ShouldSerializetabGrd() {
            return false;
        }
        
        private bool ShouldSerializetabscjl() {
            return false;
        }
        
        private bool ShouldSerializetabYbhljl() {
            return false;
        }
        
        private bool ShouldSerializetabWzhljl() {
            return false;
        }
        
        private bool ShouldSerializetabWardjbjl() {
            return false;
        }
        
        private bool ShouldSerializetabWardjbjl_brdt() {
            return false;
        }
        
        private bool ShouldSerializetabRypg() {
            return false;
        }
        
        private bool ShouldSerializetabpbb() {
            return false;
        }
        
        private bool ShouldSerializetabPbgzl() {
            return false;
        }
        
        private bool ShouldSerializetabJydprt() {
            return false;
        }
        
        private bool ShouldSerializeMedYPMXD() {
            return false;
        }
        
        private bool ShouldSerializeMedYPTLD() {
            return false;
        }
        
        private bool ShouldSerializeZXD_SYK() {
            return false;
        }
        
        private bool ShouldSerializeBRFeeMXD() {
            return false;
        }
        
        private bool ShouldSerializeBRFeeCKD() {
            return false;
        }
        
        private bool ShouldSerializeBRFeeHZD() {
            return false;
        }
        
        private bool ShouldSerializeEQUAPPLS() {
            return false;
        }
        
        private bool ShouldSerializeEQUAPPLY() {
            return false;
        }
        
        private bool ShouldSerializetabJbrMedprt() {
            return false;
        }
        
        private bool ShouldSerializetabWardGzrz() {
            return false;
        }
        
        private bool ShouldSerializetabWardGzrzMx() {
            return false;
        }
        
        private bool ShouldSerializeEQUAPPLS1() {
            return false;
        }
        
        private bool ShouldSerializetabBqkssr() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tabzxdRowChangeEventHandler(object sender, tabzxdRowChangeEvent e);
        
        public delegate void tabfeelistRowChangeEventHandler(object sender, tabfeelistRowChangeEvent e);
        
        public delegate void tabGrdRowChangeEventHandler(object sender, tabGrdRowChangeEvent e);
        
        public delegate void tabscjlRowChangeEventHandler(object sender, tabscjlRowChangeEvent e);
        
        public delegate void tabYbhljlRowChangeEventHandler(object sender, tabYbhljlRowChangeEvent e);
        
        public delegate void tabWzhljlRowChangeEventHandler(object sender, tabWzhljlRowChangeEvent e);
        
        public delegate void tabWardjbjlRowChangeEventHandler(object sender, tabWardjbjlRowChangeEvent e);
        
        public delegate void tabWardjbjl_brdtRowChangeEventHandler(object sender, tabWardjbjl_brdtRowChangeEvent e);
        
        public delegate void tabRypgRowChangeEventHandler(object sender, tabRypgRowChangeEvent e);
        
        public delegate void tabpbbRowChangeEventHandler(object sender, tabpbbRowChangeEvent e);
        
        public delegate void tabPbgzlRowChangeEventHandler(object sender, tabPbgzlRowChangeEvent e);
        
        public delegate void tabJydprtRowChangeEventHandler(object sender, tabJydprtRowChangeEvent e);
        
        public delegate void MedYPMXDRowChangeEventHandler(object sender, MedYPMXDRowChangeEvent e);
        
        public delegate void MedYPTLDRowChangeEventHandler(object sender, MedYPTLDRowChangeEvent e);
        
        public delegate void ZXD_SYKRowChangeEventHandler(object sender, ZXD_SYKRowChangeEvent e);
        
        public delegate void BRFeeMXDRowChangeEventHandler(object sender, BRFeeMXDRowChangeEvent e);
        
        public delegate void BRFeeCKDRowChangeEventHandler(object sender, BRFeeCKDRowChangeEvent e);
        
        public delegate void BRFeeHZDRowChangeEventHandler(object sender, BRFeeHZDRowChangeEvent e);
        
        public delegate void EQUAPPLSRowChangeEventHandler(object sender, EQUAPPLSRowChangeEvent e);
        
        public delegate void EQUAPPLYRowChangeEventHandler(object sender, EQUAPPLYRowChangeEvent e);
        
        public delegate void tabJbrMedprtRowChangeEventHandler(object sender, tabJbrMedprtRowChangeEvent e);
        
        public delegate void tabWardGzrzRowChangeEventHandler(object sender, tabWardGzrzRowChangeEvent e);
        
        public delegate void tabWardGzrzMxRowChangeEventHandler(object sender, tabWardGzrzMxRowChangeEvent e);
        
        public delegate void EQUAPPLS1RowChangeEventHandler(object sender, EQUAPPLS1RowChangeEvent e);
        
        public delegate void tabBqkssrRowChangeEventHandler(object sender, tabBqkssrRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabzxdDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnbedno;
            
            private DataColumn columnname;
            
            private DataColumn columndeptname;
            
            private DataColumn columnnl;
            
            private DataColumn columnbegindate;
            
            private DataColumn columns_spm;
            
            private DataColumn columnnum;
            
            private DataColumn columnusage;
            
            private DataColumn columnfrequency;
            
            internal tabzxdDataTable() : 
                    base("tabzxd") {
                this.InitClass();
            }
            
            internal tabzxdDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn bednoColumn {
                get {
                    return this.columnbedno;
                }
            }
            
            internal DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            internal DataColumn deptnameColumn {
                get {
                    return this.columndeptname;
                }
            }
            
            internal DataColumn nlColumn {
                get {
                    return this.columnnl;
                }
            }
            
            internal DataColumn begindateColumn {
                get {
                    return this.columnbegindate;
                }
            }
            
            internal DataColumn s_spmColumn {
                get {
                    return this.columns_spm;
                }
            }
            
            internal DataColumn numColumn {
                get {
                    return this.columnnum;
                }
            }
            
            internal DataColumn usageColumn {
                get {
                    return this.columnusage;
                }
            }
            
            internal DataColumn frequencyColumn {
                get {
                    return this.columnfrequency;
                }
            }
            
            public tabzxdRow this[int index] {
                get {
                    return ((tabzxdRow)(this.Rows[index]));
                }
            }
            
            public event tabzxdRowChangeEventHandler tabzxdRowChanged;
            
            public event tabzxdRowChangeEventHandler tabzxdRowChanging;
            
            public event tabzxdRowChangeEventHandler tabzxdRowDeleted;
            
            public event tabzxdRowChangeEventHandler tabzxdRowDeleting;
            
            public void AddtabzxdRow(tabzxdRow row) {
                this.Rows.Add(row);
            }
            
            public tabzxdRow AddtabzxdRow(long bedno, string name, string deptname, int nl, System.DateTime begindate, string s_spm, System.Double num, string usage, string frequency) {
                tabzxdRow rowtabzxdRow = ((tabzxdRow)(this.NewRow()));
                rowtabzxdRow.ItemArray = new object[] {
                        bedno,
                        name,
                        deptname,
                        nl,
                        begindate,
                        s_spm,
                        num,
                        usage,
                        frequency};
                this.Rows.Add(rowtabzxdRow);
                return rowtabzxdRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabzxdDataTable cln = ((tabzxdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabzxdDataTable();
            }
            
            internal void InitVars() {
                this.columnbedno = this.Columns["bedno"];
                this.columnname = this.Columns["name"];
                this.columndeptname = this.Columns["deptname"];
                this.columnnl = this.Columns["nl"];
                this.columnbegindate = this.Columns["begindate"];
                this.columns_spm = this.Columns["s_spm"];
                this.columnnum = this.Columns["num"];
                this.columnusage = this.Columns["usage"];
                this.columnfrequency = this.Columns["frequency"];
            }
            
            private void InitClass() {
                this.columnbedno = new DataColumn("bedno", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbedno);
                this.columnname = new DataColumn("name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnname);
                this.columndeptname = new DataColumn("deptname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndeptname);
                this.columnnl = new DataColumn("nl", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnl);
                this.columnbegindate = new DataColumn("begindate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbegindate);
                this.columns_spm = new DataColumn("s_spm", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columns_spm);
                this.columnnum = new DataColumn("num", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnum);
                this.columnusage = new DataColumn("usage", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnusage);
                this.columnfrequency = new DataColumn("frequency", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfrequency);
            }
            
            public tabzxdRow NewtabzxdRow() {
                return ((tabzxdRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabzxdRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabzxdRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabzxdRowChanged != null)) {
                    this.tabzxdRowChanged(this, new tabzxdRowChangeEvent(((tabzxdRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabzxdRowChanging != null)) {
                    this.tabzxdRowChanging(this, new tabzxdRowChangeEvent(((tabzxdRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabzxdRowDeleted != null)) {
                    this.tabzxdRowDeleted(this, new tabzxdRowChangeEvent(((tabzxdRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabzxdRowDeleting != null)) {
                    this.tabzxdRowDeleting(this, new tabzxdRowChangeEvent(((tabzxdRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabzxdRow(tabzxdRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabzxdRow : DataRow {
            
            private tabzxdDataTable tabletabzxd;
            
            internal tabzxdRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabzxd = ((tabzxdDataTable)(this.Table));
            }
            
            public long bedno {
                get {
                    try {
                        return ((long)(this[this.tabletabzxd.bednoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabzxd.bednoColumn] = value;
                }
            }
            
            public string name {
                get {
                    try {
                        return ((string)(this[this.tabletabzxd.nameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabzxd.nameColumn] = value;
                }
            }
            
            public string deptname {
                get {
                    try {
                        return ((string)(this[this.tabletabzxd.deptnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabzxd.deptnameColumn] = value;
                }
            }
            
            public int nl {
                get {
                    try {
                        return ((int)(this[this.tabletabzxd.nlColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabzxd.nlColumn] = value;
                }
            }
            
            public System.DateTime begindate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletabzxd.begindateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabzxd.begindateColumn] = value;
                }
            }
            
            public string s_spm {
                get {
                    try {
                        return ((string)(this[this.tabletabzxd.s_spmColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabzxd.s_spmColumn] = value;
                }
            }
            
            public System.Double num {
                get {
                    try {
                        return ((System.Double)(this[this.tabletabzxd.numColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabzxd.numColumn] = value;
                }
            }
            
            public string usage {
                get {
                    try {
                        return ((string)(this[this.tabletabzxd.usageColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabzxd.usageColumn] = value;
                }
            }
            
            public string frequency {
                get {
                    try {
                        return ((string)(this[this.tabletabzxd.frequencyColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabzxd.frequencyColumn] = value;
                }
            }
            
            public bool IsbednoNull() {
                return this.IsNull(this.tabletabzxd.bednoColumn);
            }
            
            public void SetbednoNull() {
                this[this.tabletabzxd.bednoColumn] = System.Convert.DBNull;
            }
            
            public bool IsnameNull() {
                return this.IsNull(this.tabletabzxd.nameColumn);
            }
            
            public void SetnameNull() {
                this[this.tabletabzxd.nameColumn] = System.Convert.DBNull;
            }
            
            public bool IsdeptnameNull() {
                return this.IsNull(this.tabletabzxd.deptnameColumn);
            }
            
            public void SetdeptnameNull() {
                this[this.tabletabzxd.deptnameColumn] = System.Convert.DBNull;
            }
            
            public bool IsnlNull() {
                return this.IsNull(this.tabletabzxd.nlColumn);
            }
            
            public void SetnlNull() {
                this[this.tabletabzxd.nlColumn] = System.Convert.DBNull;
            }
            
            public bool IsbegindateNull() {
                return this.IsNull(this.tabletabzxd.begindateColumn);
            }
            
            public void SetbegindateNull() {
                this[this.tabletabzxd.begindateColumn] = System.Convert.DBNull;
            }
            
            public bool Iss_spmNull() {
                return this.IsNull(this.tabletabzxd.s_spmColumn);
            }
            
            public void Sets_spmNull() {
                this[this.tabletabzxd.s_spmColumn] = System.Convert.DBNull;
            }
            
            public bool IsnumNull() {
                return this.IsNull(this.tabletabzxd.numColumn);
            }
            
            public void SetnumNull() {
                this[this.tabletabzxd.numColumn] = System.Convert.DBNull;
            }
            
            public bool IsusageNull() {
                return this.IsNull(this.tabletabzxd.usageColumn);
            }
            
            public void SetusageNull() {
                this[this.tabletabzxd.usageColumn] = System.Convert.DBNull;
            }
            
            public bool IsfrequencyNull() {
                return this.IsNull(this.tabletabzxd.frequencyColumn);
            }
            
            public void SetfrequencyNull() {
                this[this.tabletabzxd.frequencyColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabzxdRowChangeEvent : EventArgs {
            
            private tabzxdRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabzxdRowChangeEvent(tabzxdRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabzxdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabfeelistDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnItem_Name;
            
            private DataColumn columnItemValues;
            
            private DataColumn columnName;
            
            internal tabfeelistDataTable() : 
                    base("tabfeelist") {
                this.InitClass();
            }
            
            internal tabfeelistDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn Item_NameColumn {
                get {
                    return this.columnItem_Name;
                }
            }
            
            internal DataColumn ItemValuesColumn {
                get {
                    return this.columnItemValues;
                }
            }
            
            internal DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            public tabfeelistRow this[int index] {
                get {
                    return ((tabfeelistRow)(this.Rows[index]));
                }
            }
            
            public event tabfeelistRowChangeEventHandler tabfeelistRowChanged;
            
            public event tabfeelistRowChangeEventHandler tabfeelistRowChanging;
            
            public event tabfeelistRowChangeEventHandler tabfeelistRowDeleted;
            
            public event tabfeelistRowChangeEventHandler tabfeelistRowDeleting;
            
            public void AddtabfeelistRow(tabfeelistRow row) {
                this.Rows.Add(row);
            }
            
            public tabfeelistRow AddtabfeelistRow(string Item_Name, System.Double ItemValues, string Name) {
                tabfeelistRow rowtabfeelistRow = ((tabfeelistRow)(this.NewRow()));
                rowtabfeelistRow.ItemArray = new object[] {
                        Item_Name,
                        ItemValues,
                        Name};
                this.Rows.Add(rowtabfeelistRow);
                return rowtabfeelistRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabfeelistDataTable cln = ((tabfeelistDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabfeelistDataTable();
            }
            
            internal void InitVars() {
                this.columnItem_Name = this.Columns["Item_Name"];
                this.columnItemValues = this.Columns["ItemValues"];
                this.columnName = this.Columns["Name"];
            }
            
            private void InitClass() {
                this.columnItem_Name = new DataColumn("Item_Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnItem_Name);
                this.columnItemValues = new DataColumn("ItemValues", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnItemValues);
                this.columnName = new DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnName);
            }
            
            public tabfeelistRow NewtabfeelistRow() {
                return ((tabfeelistRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabfeelistRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabfeelistRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabfeelistRowChanged != null)) {
                    this.tabfeelistRowChanged(this, new tabfeelistRowChangeEvent(((tabfeelistRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabfeelistRowChanging != null)) {
                    this.tabfeelistRowChanging(this, new tabfeelistRowChangeEvent(((tabfeelistRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabfeelistRowDeleted != null)) {
                    this.tabfeelistRowDeleted(this, new tabfeelistRowChangeEvent(((tabfeelistRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabfeelistRowDeleting != null)) {
                    this.tabfeelistRowDeleting(this, new tabfeelistRowChangeEvent(((tabfeelistRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabfeelistRow(tabfeelistRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabfeelistRow : DataRow {
            
            private tabfeelistDataTable tabletabfeelist;
            
            internal tabfeelistRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabfeelist = ((tabfeelistDataTable)(this.Table));
            }
            
            public string Item_Name {
                get {
                    try {
                        return ((string)(this[this.tabletabfeelist.Item_NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabfeelist.Item_NameColumn] = value;
                }
            }
            
            public System.Double ItemValues {
                get {
                    try {
                        return ((System.Double)(this[this.tabletabfeelist.ItemValuesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabfeelist.ItemValuesColumn] = value;
                }
            }
            
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tabletabfeelist.NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabfeelist.NameColumn] = value;
                }
            }
            
            public bool IsItem_NameNull() {
                return this.IsNull(this.tabletabfeelist.Item_NameColumn);
            }
            
            public void SetItem_NameNull() {
                this[this.tabletabfeelist.Item_NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsItemValuesNull() {
                return this.IsNull(this.tabletabfeelist.ItemValuesColumn);
            }
            
            public void SetItemValuesNull() {
                this[this.tabletabfeelist.ItemValuesColumn] = System.Convert.DBNull;
            }
            
            public bool IsNameNull() {
                return this.IsNull(this.tabletabfeelist.NameColumn);
            }
            
            public void SetNameNull() {
                this[this.tabletabfeelist.NameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabfeelistRowChangeEvent : EventArgs {
            
            private tabfeelistRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabfeelistRowChangeEvent(tabfeelistRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabfeelistRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabGrdDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column床号;
            
            private DataColumn column住院号;
            
            private DataColumn column姓名;
            
            private DataColumn column性别;
            
            private DataColumn column年龄;
            
            private DataColumn column入院日期;
            
            private DataColumn column所属科室;
            
            private DataColumn column结算类型;
            
            private DataColumn column总费用;
            
            private DataColumn column预交款;
            
            private DataColumn column未到帐支票;
            
            private DataColumn column余额;
            
            private DataColumn columnINPATIENT_ID;
            
            private DataColumn columnBABY_NO;
            
            private DataColumn columnDEPT_ID;
            
            internal tabGrdDataTable() : 
                    base("tabGrd") {
                this.InitClass();
            }
            
            internal tabGrdDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 床号Column {
                get {
                    return this.column床号;
                }
            }
            
            internal DataColumn 住院号Column {
                get {
                    return this.column住院号;
                }
            }
            
            internal DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            internal DataColumn 性别Column {
                get {
                    return this.column性别;
                }
            }
            
            internal DataColumn 年龄Column {
                get {
                    return this.column年龄;
                }
            }
            
            internal DataColumn 入院日期Column {
                get {
                    return this.column入院日期;
                }
            }
            
            internal DataColumn 所属科室Column {
                get {
                    return this.column所属科室;
                }
            }
            
            internal DataColumn 结算类型Column {
                get {
                    return this.column结算类型;
                }
            }
            
            internal DataColumn 总费用Column {
                get {
                    return this.column总费用;
                }
            }
            
            internal DataColumn 预交款Column {
                get {
                    return this.column预交款;
                }
            }
            
            internal DataColumn 未到帐支票Column {
                get {
                    return this.column未到帐支票;
                }
            }
            
            internal DataColumn 余额Column {
                get {
                    return this.column余额;
                }
            }
            
            internal DataColumn INPATIENT_IDColumn {
                get {
                    return this.columnINPATIENT_ID;
                }
            }
            
            internal DataColumn BABY_NOColumn {
                get {
                    return this.columnBABY_NO;
                }
            }
            
            internal DataColumn DEPT_IDColumn {
                get {
                    return this.columnDEPT_ID;
                }
            }
            
            public tabGrdRow this[int index] {
                get {
                    return ((tabGrdRow)(this.Rows[index]));
                }
            }
            
            public event tabGrdRowChangeEventHandler tabGrdRowChanged;
            
            public event tabGrdRowChangeEventHandler tabGrdRowChanging;
            
            public event tabGrdRowChangeEventHandler tabGrdRowDeleted;
            
            public event tabGrdRowChangeEventHandler tabGrdRowDeleting;
            
            public void AddtabGrdRow(tabGrdRow row) {
                this.Rows.Add(row);
            }
            
            public tabGrdRow AddtabGrdRow(string 床号, string 住院号, string 姓名, string 性别, string 年龄, string 入院日期, string 所属科室, string 结算类型, string 总费用, string 预交款, string 未到帐支票, string 余额, string INPATIENT_ID, string BABY_NO, string DEPT_ID) {
                tabGrdRow rowtabGrdRow = ((tabGrdRow)(this.NewRow()));
                rowtabGrdRow.ItemArray = new object[] {
                        床号,
                        住院号,
                        姓名,
                        性别,
                        年龄,
                        入院日期,
                        所属科室,
                        结算类型,
                        总费用,
                        预交款,
                        未到帐支票,
                        余额,
                        INPATIENT_ID,
                        BABY_NO,
                        DEPT_ID};
                this.Rows.Add(rowtabGrdRow);
                return rowtabGrdRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabGrdDataTable cln = ((tabGrdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabGrdDataTable();
            }
            
            internal void InitVars() {
                this.column床号 = this.Columns["床号"];
                this.column住院号 = this.Columns["住院号"];
                this.column姓名 = this.Columns["姓名"];
                this.column性别 = this.Columns["性别"];
                this.column年龄 = this.Columns["年龄"];
                this.column入院日期 = this.Columns["入院日期"];
                this.column所属科室 = this.Columns["所属科室"];
                this.column结算类型 = this.Columns["结算类型"];
                this.column总费用 = this.Columns["总费用"];
                this.column预交款 = this.Columns["预交款"];
                this.column未到帐支票 = this.Columns["未到帐支票"];
                this.column余额 = this.Columns["余额"];
                this.columnINPATIENT_ID = this.Columns["INPATIENT_ID"];
                this.columnBABY_NO = this.Columns["BABY_NO"];
                this.columnDEPT_ID = this.Columns["DEPT_ID"];
            }
            
            private void InitClass() {
                this.column床号 = new DataColumn("床号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column床号);
                this.column住院号 = new DataColumn("住院号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column住院号);
                this.column姓名 = new DataColumn("姓名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column姓名);
                this.column性别 = new DataColumn("性别", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column性别);
                this.column年龄 = new DataColumn("年龄", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column年龄);
                this.column入院日期 = new DataColumn("入院日期", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column入院日期);
                this.column所属科室 = new DataColumn("所属科室", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column所属科室);
                this.column结算类型 = new DataColumn("结算类型", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column结算类型);
                this.column总费用 = new DataColumn("总费用", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column总费用);
                this.column预交款 = new DataColumn("预交款", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column预交款);
                this.column未到帐支票 = new DataColumn("未到帐支票", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column未到帐支票);
                this.column余额 = new DataColumn("余额", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column余额);
                this.columnINPATIENT_ID = new DataColumn("INPATIENT_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnINPATIENT_ID);
                this.columnBABY_NO = new DataColumn("BABY_NO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBABY_NO);
                this.columnDEPT_ID = new DataColumn("DEPT_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDEPT_ID);
            }
            
            public tabGrdRow NewtabGrdRow() {
                return ((tabGrdRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabGrdRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabGrdRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabGrdRowChanged != null)) {
                    this.tabGrdRowChanged(this, new tabGrdRowChangeEvent(((tabGrdRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabGrdRowChanging != null)) {
                    this.tabGrdRowChanging(this, new tabGrdRowChangeEvent(((tabGrdRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabGrdRowDeleted != null)) {
                    this.tabGrdRowDeleted(this, new tabGrdRowChangeEvent(((tabGrdRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabGrdRowDeleting != null)) {
                    this.tabGrdRowDeleting(this, new tabGrdRowChangeEvent(((tabGrdRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabGrdRow(tabGrdRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabGrdRow : DataRow {
            
            private tabGrdDataTable tabletabGrd;
            
            internal tabGrdRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabGrd = ((tabGrdDataTable)(this.Table));
            }
            
            public string 床号 {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.床号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.床号Column] = value;
                }
            }
            
            public string 住院号 {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.住院号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.住院号Column] = value;
                }
            }
            
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.姓名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.姓名Column] = value;
                }
            }
            
            public string 性别 {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.性别Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.性别Column] = value;
                }
            }
            
            public string 年龄 {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.年龄Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.年龄Column] = value;
                }
            }
            
            public string 入院日期 {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.入院日期Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.入院日期Column] = value;
                }
            }
            
            public string 所属科室 {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.所属科室Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.所属科室Column] = value;
                }
            }
            
            public string 结算类型 {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.结算类型Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.结算类型Column] = value;
                }
            }
            
            public string 总费用 {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.总费用Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.总费用Column] = value;
                }
            }
            
            public string 预交款 {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.预交款Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.预交款Column] = value;
                }
            }
            
            public string 未到帐支票 {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.未到帐支票Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.未到帐支票Column] = value;
                }
            }
            
            public string 余额 {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.余额Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.余额Column] = value;
                }
            }
            
            public string INPATIENT_ID {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.INPATIENT_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.INPATIENT_IDColumn] = value;
                }
            }
            
            public string BABY_NO {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.BABY_NOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.BABY_NOColumn] = value;
                }
            }
            
            public string DEPT_ID {
                get {
                    try {
                        return ((string)(this[this.tabletabGrd.DEPT_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabGrd.DEPT_IDColumn] = value;
                }
            }
            
            public bool Is床号Null() {
                return this.IsNull(this.tabletabGrd.床号Column);
            }
            
            public void Set床号Null() {
                this[this.tabletabGrd.床号Column] = System.Convert.DBNull;
            }
            
            public bool Is住院号Null() {
                return this.IsNull(this.tabletabGrd.住院号Column);
            }
            
            public void Set住院号Null() {
                this[this.tabletabGrd.住院号Column] = System.Convert.DBNull;
            }
            
            public bool Is姓名Null() {
                return this.IsNull(this.tabletabGrd.姓名Column);
            }
            
            public void Set姓名Null() {
                this[this.tabletabGrd.姓名Column] = System.Convert.DBNull;
            }
            
            public bool Is性别Null() {
                return this.IsNull(this.tabletabGrd.性别Column);
            }
            
            public void Set性别Null() {
                this[this.tabletabGrd.性别Column] = System.Convert.DBNull;
            }
            
            public bool Is年龄Null() {
                return this.IsNull(this.tabletabGrd.年龄Column);
            }
            
            public void Set年龄Null() {
                this[this.tabletabGrd.年龄Column] = System.Convert.DBNull;
            }
            
            public bool Is入院日期Null() {
                return this.IsNull(this.tabletabGrd.入院日期Column);
            }
            
            public void Set入院日期Null() {
                this[this.tabletabGrd.入院日期Column] = System.Convert.DBNull;
            }
            
            public bool Is所属科室Null() {
                return this.IsNull(this.tabletabGrd.所属科室Column);
            }
            
            public void Set所属科室Null() {
                this[this.tabletabGrd.所属科室Column] = System.Convert.DBNull;
            }
            
            public bool Is结算类型Null() {
                return this.IsNull(this.tabletabGrd.结算类型Column);
            }
            
            public void Set结算类型Null() {
                this[this.tabletabGrd.结算类型Column] = System.Convert.DBNull;
            }
            
            public bool Is总费用Null() {
                return this.IsNull(this.tabletabGrd.总费用Column);
            }
            
            public void Set总费用Null() {
                this[this.tabletabGrd.总费用Column] = System.Convert.DBNull;
            }
            
            public bool Is预交款Null() {
                return this.IsNull(this.tabletabGrd.预交款Column);
            }
            
            public void Set预交款Null() {
                this[this.tabletabGrd.预交款Column] = System.Convert.DBNull;
            }
            
            public bool Is未到帐支票Null() {
                return this.IsNull(this.tabletabGrd.未到帐支票Column);
            }
            
            public void Set未到帐支票Null() {
                this[this.tabletabGrd.未到帐支票Column] = System.Convert.DBNull;
            }
            
            public bool Is余额Null() {
                return this.IsNull(this.tabletabGrd.余额Column);
            }
            
            public void Set余额Null() {
                this[this.tabletabGrd.余额Column] = System.Convert.DBNull;
            }
            
            public bool IsINPATIENT_IDNull() {
                return this.IsNull(this.tabletabGrd.INPATIENT_IDColumn);
            }
            
            public void SetINPATIENT_IDNull() {
                this[this.tabletabGrd.INPATIENT_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsBABY_NONull() {
                return this.IsNull(this.tabletabGrd.BABY_NOColumn);
            }
            
            public void SetBABY_NONull() {
                this[this.tabletabGrd.BABY_NOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDEPT_IDNull() {
                return this.IsNull(this.tabletabGrd.DEPT_IDColumn);
            }
            
            public void SetDEPT_IDNull() {
                this[this.tabletabGrd.DEPT_IDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabGrdRowChangeEvent : EventArgs {
            
            private tabGrdRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabGrdRowChangeEvent(tabGrdRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabGrdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabscjlDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column日期;
            
            private DataColumn column时间;
            
            private DataColumn column体温;
            
            private DataColumn column脉搏;
            
            private DataColumn column呼吸;
            
            private DataColumn column血压;
            
            private DataColumn columnSPO2;
            
            private DataColumn column护士;
            
            private DataColumn column备注;
            
            internal tabscjlDataTable() : 
                    base("tabscjl") {
                this.InitClass();
            }
            
            internal tabscjlDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 日期Column {
                get {
                    return this.column日期;
                }
            }
            
            internal DataColumn 时间Column {
                get {
                    return this.column时间;
                }
            }
            
            internal DataColumn 体温Column {
                get {
                    return this.column体温;
                }
            }
            
            internal DataColumn 脉搏Column {
                get {
                    return this.column脉搏;
                }
            }
            
            internal DataColumn 呼吸Column {
                get {
                    return this.column呼吸;
                }
            }
            
            internal DataColumn 血压Column {
                get {
                    return this.column血压;
                }
            }
            
            internal DataColumn SPO2Column {
                get {
                    return this.columnSPO2;
                }
            }
            
            internal DataColumn 护士Column {
                get {
                    return this.column护士;
                }
            }
            
            internal DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            public tabscjlRow this[int index] {
                get {
                    return ((tabscjlRow)(this.Rows[index]));
                }
            }
            
            public event tabscjlRowChangeEventHandler tabscjlRowChanged;
            
            public event tabscjlRowChangeEventHandler tabscjlRowChanging;
            
            public event tabscjlRowChangeEventHandler tabscjlRowDeleted;
            
            public event tabscjlRowChangeEventHandler tabscjlRowDeleting;
            
            public void AddtabscjlRow(tabscjlRow row) {
                this.Rows.Add(row);
            }
            
            public tabscjlRow AddtabscjlRow(string 日期, string 时间, string 体温, string 脉搏, string 呼吸, string 血压, string SPO2, string 护士, string 备注) {
                tabscjlRow rowtabscjlRow = ((tabscjlRow)(this.NewRow()));
                rowtabscjlRow.ItemArray = new object[] {
                        日期,
                        时间,
                        体温,
                        脉搏,
                        呼吸,
                        血压,
                        SPO2,
                        护士,
                        备注};
                this.Rows.Add(rowtabscjlRow);
                return rowtabscjlRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabscjlDataTable cln = ((tabscjlDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabscjlDataTable();
            }
            
            internal void InitVars() {
                this.column日期 = this.Columns["日期"];
                this.column时间 = this.Columns["时间"];
                this.column体温 = this.Columns["体温"];
                this.column脉搏 = this.Columns["脉搏"];
                this.column呼吸 = this.Columns["呼吸"];
                this.column血压 = this.Columns["血压"];
                this.columnSPO2 = this.Columns["SPO2"];
                this.column护士 = this.Columns["护士"];
                this.column备注 = this.Columns["备注"];
            }
            
            private void InitClass() {
                this.column日期 = new DataColumn("日期", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column日期);
                this.column时间 = new DataColumn("时间", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column时间);
                this.column体温 = new DataColumn("体温", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column体温);
                this.column脉搏 = new DataColumn("脉搏", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column脉搏);
                this.column呼吸 = new DataColumn("呼吸", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column呼吸);
                this.column血压 = new DataColumn("血压", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column血压);
                this.columnSPO2 = new DataColumn("SPO2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSPO2);
                this.column护士 = new DataColumn("护士", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column护士);
                this.column备注 = new DataColumn("备注", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column备注);
            }
            
            public tabscjlRow NewtabscjlRow() {
                return ((tabscjlRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabscjlRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabscjlRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabscjlRowChanged != null)) {
                    this.tabscjlRowChanged(this, new tabscjlRowChangeEvent(((tabscjlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabscjlRowChanging != null)) {
                    this.tabscjlRowChanging(this, new tabscjlRowChangeEvent(((tabscjlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabscjlRowDeleted != null)) {
                    this.tabscjlRowDeleted(this, new tabscjlRowChangeEvent(((tabscjlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabscjlRowDeleting != null)) {
                    this.tabscjlRowDeleting(this, new tabscjlRowChangeEvent(((tabscjlRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabscjlRow(tabscjlRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabscjlRow : DataRow {
            
            private tabscjlDataTable tabletabscjl;
            
            internal tabscjlRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabscjl = ((tabscjlDataTable)(this.Table));
            }
            
            public string 日期 {
                get {
                    try {
                        return ((string)(this[this.tabletabscjl.日期Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabscjl.日期Column] = value;
                }
            }
            
            public string 时间 {
                get {
                    try {
                        return ((string)(this[this.tabletabscjl.时间Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabscjl.时间Column] = value;
                }
            }
            
            public string 体温 {
                get {
                    try {
                        return ((string)(this[this.tabletabscjl.体温Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabscjl.体温Column] = value;
                }
            }
            
            public string 脉搏 {
                get {
                    try {
                        return ((string)(this[this.tabletabscjl.脉搏Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabscjl.脉搏Column] = value;
                }
            }
            
            public string 呼吸 {
                get {
                    try {
                        return ((string)(this[this.tabletabscjl.呼吸Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabscjl.呼吸Column] = value;
                }
            }
            
            public string 血压 {
                get {
                    try {
                        return ((string)(this[this.tabletabscjl.血压Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabscjl.血压Column] = value;
                }
            }
            
            public string SPO2 {
                get {
                    try {
                        return ((string)(this[this.tabletabscjl.SPO2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabscjl.SPO2Column] = value;
                }
            }
            
            public string 护士 {
                get {
                    try {
                        return ((string)(this[this.tabletabscjl.护士Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabscjl.护士Column] = value;
                }
            }
            
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tabletabscjl.备注Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabscjl.备注Column] = value;
                }
            }
            
            public bool Is日期Null() {
                return this.IsNull(this.tabletabscjl.日期Column);
            }
            
            public void Set日期Null() {
                this[this.tabletabscjl.日期Column] = System.Convert.DBNull;
            }
            
            public bool Is时间Null() {
                return this.IsNull(this.tabletabscjl.时间Column);
            }
            
            public void Set时间Null() {
                this[this.tabletabscjl.时间Column] = System.Convert.DBNull;
            }
            
            public bool Is体温Null() {
                return this.IsNull(this.tabletabscjl.体温Column);
            }
            
            public void Set体温Null() {
                this[this.tabletabscjl.体温Column] = System.Convert.DBNull;
            }
            
            public bool Is脉搏Null() {
                return this.IsNull(this.tabletabscjl.脉搏Column);
            }
            
            public void Set脉搏Null() {
                this[this.tabletabscjl.脉搏Column] = System.Convert.DBNull;
            }
            
            public bool Is呼吸Null() {
                return this.IsNull(this.tabletabscjl.呼吸Column);
            }
            
            public void Set呼吸Null() {
                this[this.tabletabscjl.呼吸Column] = System.Convert.DBNull;
            }
            
            public bool Is血压Null() {
                return this.IsNull(this.tabletabscjl.血压Column);
            }
            
            public void Set血压Null() {
                this[this.tabletabscjl.血压Column] = System.Convert.DBNull;
            }
            
            public bool IsSPO2Null() {
                return this.IsNull(this.tabletabscjl.SPO2Column);
            }
            
            public void SetSPO2Null() {
                this[this.tabletabscjl.SPO2Column] = System.Convert.DBNull;
            }
            
            public bool Is护士Null() {
                return this.IsNull(this.tabletabscjl.护士Column);
            }
            
            public void Set护士Null() {
                this[this.tabletabscjl.护士Column] = System.Convert.DBNull;
            }
            
            public bool Is备注Null() {
                return this.IsNull(this.tabletabscjl.备注Column);
            }
            
            public void Set备注Null() {
                this[this.tabletabscjl.备注Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabscjlRowChangeEvent : EventArgs {
            
            private tabscjlRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabscjlRowChangeEvent(tabscjlRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabscjlRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabYbhljlDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnid;
            
            private DataColumn columninpatient_id;
            
            private DataColumn columnbaby_id;
            
            private DataColumn columndept_id;
            
            private DataColumn columnbook_date;
            
            private DataColumn columnbook_text;
            
            private DataColumn columnbook_user;
            
            private DataColumn columncheck_user;
            
            private DataColumn columndeptname;
            
            private DataColumn columnwardname;
            
            internal tabYbhljlDataTable() : 
                    base("tabYbhljl") {
                this.InitClass();
            }
            
            internal tabYbhljlDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            internal DataColumn inpatient_idColumn {
                get {
                    return this.columninpatient_id;
                }
            }
            
            internal DataColumn baby_idColumn {
                get {
                    return this.columnbaby_id;
                }
            }
            
            internal DataColumn dept_idColumn {
                get {
                    return this.columndept_id;
                }
            }
            
            internal DataColumn book_dateColumn {
                get {
                    return this.columnbook_date;
                }
            }
            
            internal DataColumn book_textColumn {
                get {
                    return this.columnbook_text;
                }
            }
            
            internal DataColumn book_userColumn {
                get {
                    return this.columnbook_user;
                }
            }
            
            internal DataColumn check_userColumn {
                get {
                    return this.columncheck_user;
                }
            }
            
            internal DataColumn deptnameColumn {
                get {
                    return this.columndeptname;
                }
            }
            
            internal DataColumn wardnameColumn {
                get {
                    return this.columnwardname;
                }
            }
            
            public tabYbhljlRow this[int index] {
                get {
                    return ((tabYbhljlRow)(this.Rows[index]));
                }
            }
            
            public event tabYbhljlRowChangeEventHandler tabYbhljlRowChanged;
            
            public event tabYbhljlRowChangeEventHandler tabYbhljlRowChanging;
            
            public event tabYbhljlRowChangeEventHandler tabYbhljlRowDeleted;
            
            public event tabYbhljlRowChangeEventHandler tabYbhljlRowDeleting;
            
            public void AddtabYbhljlRow(tabYbhljlRow row) {
                this.Rows.Add(row);
            }
            
            public tabYbhljlRow AddtabYbhljlRow(int id, System.Decimal inpatient_id, System.Decimal baby_id, System.Decimal dept_id, System.DateTime book_date, string book_text, string book_user, string check_user, string deptname, string wardname) {
                tabYbhljlRow rowtabYbhljlRow = ((tabYbhljlRow)(this.NewRow()));
                rowtabYbhljlRow.ItemArray = new object[] {
                        id,
                        inpatient_id,
                        baby_id,
                        dept_id,
                        book_date,
                        book_text,
                        book_user,
                        check_user,
                        deptname,
                        wardname};
                this.Rows.Add(rowtabYbhljlRow);
                return rowtabYbhljlRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabYbhljlDataTable cln = ((tabYbhljlDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabYbhljlDataTable();
            }
            
            internal void InitVars() {
                this.columnid = this.Columns["id"];
                this.columninpatient_id = this.Columns["inpatient_id"];
                this.columnbaby_id = this.Columns["baby_id"];
                this.columndept_id = this.Columns["dept_id"];
                this.columnbook_date = this.Columns["book_date"];
                this.columnbook_text = this.Columns["book_text"];
                this.columnbook_user = this.Columns["book_user"];
                this.columncheck_user = this.Columns["check_user"];
                this.columndeptname = this.Columns["deptname"];
                this.columnwardname = this.Columns["wardname"];
            }
            
            private void InitClass() {
                this.columnid = new DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnid);
                this.columninpatient_id = new DataColumn("inpatient_id", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columninpatient_id);
                this.columnbaby_id = new DataColumn("baby_id", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbaby_id);
                this.columndept_id = new DataColumn("dept_id", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndept_id);
                this.columnbook_date = new DataColumn("book_date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbook_date);
                this.columnbook_text = new DataColumn("book_text", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbook_text);
                this.columnbook_user = new DataColumn("book_user", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbook_user);
                this.columncheck_user = new DataColumn("check_user", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncheck_user);
                this.columndeptname = new DataColumn("deptname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndeptname);
                this.columnwardname = new DataColumn("wardname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnwardname);
            }
            
            public tabYbhljlRow NewtabYbhljlRow() {
                return ((tabYbhljlRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabYbhljlRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabYbhljlRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabYbhljlRowChanged != null)) {
                    this.tabYbhljlRowChanged(this, new tabYbhljlRowChangeEvent(((tabYbhljlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabYbhljlRowChanging != null)) {
                    this.tabYbhljlRowChanging(this, new tabYbhljlRowChangeEvent(((tabYbhljlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabYbhljlRowDeleted != null)) {
                    this.tabYbhljlRowDeleted(this, new tabYbhljlRowChangeEvent(((tabYbhljlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabYbhljlRowDeleting != null)) {
                    this.tabYbhljlRowDeleting(this, new tabYbhljlRowChangeEvent(((tabYbhljlRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabYbhljlRow(tabYbhljlRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabYbhljlRow : DataRow {
            
            private tabYbhljlDataTable tabletabYbhljl;
            
            internal tabYbhljlRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabYbhljl = ((tabYbhljlDataTable)(this.Table));
            }
            
            public int id {
                get {
                    try {
                        return ((int)(this[this.tabletabYbhljl.idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabYbhljl.idColumn] = value;
                }
            }
            
            public System.Decimal inpatient_id {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabYbhljl.inpatient_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabYbhljl.inpatient_idColumn] = value;
                }
            }
            
            public System.Decimal baby_id {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabYbhljl.baby_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabYbhljl.baby_idColumn] = value;
                }
            }
            
            public System.Decimal dept_id {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabYbhljl.dept_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabYbhljl.dept_idColumn] = value;
                }
            }
            
            public System.DateTime book_date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletabYbhljl.book_dateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabYbhljl.book_dateColumn] = value;
                }
            }
            
            public string book_text {
                get {
                    try {
                        return ((string)(this[this.tabletabYbhljl.book_textColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabYbhljl.book_textColumn] = value;
                }
            }
            
            public string book_user {
                get {
                    try {
                        return ((string)(this[this.tabletabYbhljl.book_userColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabYbhljl.book_userColumn] = value;
                }
            }
            
            public string check_user {
                get {
                    try {
                        return ((string)(this[this.tabletabYbhljl.check_userColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabYbhljl.check_userColumn] = value;
                }
            }
            
            public string deptname {
                get {
                    try {
                        return ((string)(this[this.tabletabYbhljl.deptnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabYbhljl.deptnameColumn] = value;
                }
            }
            
            public string wardname {
                get {
                    try {
                        return ((string)(this[this.tabletabYbhljl.wardnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabYbhljl.wardnameColumn] = value;
                }
            }
            
            public bool IsidNull() {
                return this.IsNull(this.tabletabYbhljl.idColumn);
            }
            
            public void SetidNull() {
                this[this.tabletabYbhljl.idColumn] = System.Convert.DBNull;
            }
            
            public bool Isinpatient_idNull() {
                return this.IsNull(this.tabletabYbhljl.inpatient_idColumn);
            }
            
            public void Setinpatient_idNull() {
                this[this.tabletabYbhljl.inpatient_idColumn] = System.Convert.DBNull;
            }
            
            public bool Isbaby_idNull() {
                return this.IsNull(this.tabletabYbhljl.baby_idColumn);
            }
            
            public void Setbaby_idNull() {
                this[this.tabletabYbhljl.baby_idColumn] = System.Convert.DBNull;
            }
            
            public bool Isdept_idNull() {
                return this.IsNull(this.tabletabYbhljl.dept_idColumn);
            }
            
            public void Setdept_idNull() {
                this[this.tabletabYbhljl.dept_idColumn] = System.Convert.DBNull;
            }
            
            public bool Isbook_dateNull() {
                return this.IsNull(this.tabletabYbhljl.book_dateColumn);
            }
            
            public void Setbook_dateNull() {
                this[this.tabletabYbhljl.book_dateColumn] = System.Convert.DBNull;
            }
            
            public bool Isbook_textNull() {
                return this.IsNull(this.tabletabYbhljl.book_textColumn);
            }
            
            public void Setbook_textNull() {
                this[this.tabletabYbhljl.book_textColumn] = System.Convert.DBNull;
            }
            
            public bool Isbook_userNull() {
                return this.IsNull(this.tabletabYbhljl.book_userColumn);
            }
            
            public void Setbook_userNull() {
                this[this.tabletabYbhljl.book_userColumn] = System.Convert.DBNull;
            }
            
            public bool Ischeck_userNull() {
                return this.IsNull(this.tabletabYbhljl.check_userColumn);
            }
            
            public void Setcheck_userNull() {
                this[this.tabletabYbhljl.check_userColumn] = System.Convert.DBNull;
            }
            
            public bool IsdeptnameNull() {
                return this.IsNull(this.tabletabYbhljl.deptnameColumn);
            }
            
            public void SetdeptnameNull() {
                this[this.tabletabYbhljl.deptnameColumn] = System.Convert.DBNull;
            }
            
            public bool IswardnameNull() {
                return this.IsNull(this.tabletabYbhljl.wardnameColumn);
            }
            
            public void SetwardnameNull() {
                this[this.tabletabYbhljl.wardnameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabYbhljlRowChangeEvent : EventArgs {
            
            private tabYbhljlRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabYbhljlRowChangeEvent(tabYbhljlRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabYbhljlRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWzhljlDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnid;
            
            private DataColumn columninpatient_id;
            
            private DataColumn columnbaby_id;
            
            private DataColumn columndept_id;
            
            private DataColumn columnbook_text;
            
            private DataColumn columnbook_user;
            
            private DataColumn columncheck_user;
            
            private DataColumn columnbook_date;
            
            private DataColumn columnbook_time;
            
            private DataColumn columntw;
            
            private DataColumn columnmb;
            
            private DataColumn columnhx;
            
            private DataColumn columnxy;
            
            private DataColumn columnin_item;
            
            private DataColumn columnin_quantity;
            
            private DataColumn columnstool;
            
            private DataColumn columnpee;
            
            private DataColumn columndeptname;
            
            private DataColumn columnwardname;
            
            internal tabWzhljlDataTable() : 
                    base("tabWzhljl") {
                this.InitClass();
            }
            
            internal tabWzhljlDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            internal DataColumn inpatient_idColumn {
                get {
                    return this.columninpatient_id;
                }
            }
            
            internal DataColumn baby_idColumn {
                get {
                    return this.columnbaby_id;
                }
            }
            
            internal DataColumn dept_idColumn {
                get {
                    return this.columndept_id;
                }
            }
            
            internal DataColumn book_textColumn {
                get {
                    return this.columnbook_text;
                }
            }
            
            internal DataColumn book_userColumn {
                get {
                    return this.columnbook_user;
                }
            }
            
            internal DataColumn check_userColumn {
                get {
                    return this.columncheck_user;
                }
            }
            
            internal DataColumn book_dateColumn {
                get {
                    return this.columnbook_date;
                }
            }
            
            internal DataColumn book_timeColumn {
                get {
                    return this.columnbook_time;
                }
            }
            
            internal DataColumn twColumn {
                get {
                    return this.columntw;
                }
            }
            
            internal DataColumn mbColumn {
                get {
                    return this.columnmb;
                }
            }
            
            internal DataColumn hxColumn {
                get {
                    return this.columnhx;
                }
            }
            
            internal DataColumn xyColumn {
                get {
                    return this.columnxy;
                }
            }
            
            internal DataColumn in_itemColumn {
                get {
                    return this.columnin_item;
                }
            }
            
            internal DataColumn in_quantityColumn {
                get {
                    return this.columnin_quantity;
                }
            }
            
            internal DataColumn stoolColumn {
                get {
                    return this.columnstool;
                }
            }
            
            internal DataColumn peeColumn {
                get {
                    return this.columnpee;
                }
            }
            
            internal DataColumn deptnameColumn {
                get {
                    return this.columndeptname;
                }
            }
            
            internal DataColumn wardnameColumn {
                get {
                    return this.columnwardname;
                }
            }
            
            public tabWzhljlRow this[int index] {
                get {
                    return ((tabWzhljlRow)(this.Rows[index]));
                }
            }
            
            public event tabWzhljlRowChangeEventHandler tabWzhljlRowChanged;
            
            public event tabWzhljlRowChangeEventHandler tabWzhljlRowChanging;
            
            public event tabWzhljlRowChangeEventHandler tabWzhljlRowDeleted;
            
            public event tabWzhljlRowChangeEventHandler tabWzhljlRowDeleting;
            
            public void AddtabWzhljlRow(tabWzhljlRow row) {
                this.Rows.Add(row);
            }
            
            public tabWzhljlRow AddtabWzhljlRow(
                        int id, 
                        System.Decimal inpatient_id, 
                        System.Decimal baby_id, 
                        System.Decimal dept_id, 
                        string book_text, 
                        string book_user, 
                        string check_user, 
                        System.DateTime book_date, 
                        System.DateTime book_time, 
                        string tw, 
                        string mb, 
                        string hx, 
                        string xy, 
                        string in_item, 
                        string in_quantity, 
                        string stool, 
                        string pee, 
                        string deptname, 
                        string wardname) {
                tabWzhljlRow rowtabWzhljlRow = ((tabWzhljlRow)(this.NewRow()));
                rowtabWzhljlRow.ItemArray = new object[] {
                        id,
                        inpatient_id,
                        baby_id,
                        dept_id,
                        book_text,
                        book_user,
                        check_user,
                        book_date,
                        book_time,
                        tw,
                        mb,
                        hx,
                        xy,
                        in_item,
                        in_quantity,
                        stool,
                        pee,
                        deptname,
                        wardname};
                this.Rows.Add(rowtabWzhljlRow);
                return rowtabWzhljlRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabWzhljlDataTable cln = ((tabWzhljlDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabWzhljlDataTable();
            }
            
            internal void InitVars() {
                this.columnid = this.Columns["id"];
                this.columninpatient_id = this.Columns["inpatient_id"];
                this.columnbaby_id = this.Columns["baby_id"];
                this.columndept_id = this.Columns["dept_id"];
                this.columnbook_text = this.Columns["book_text"];
                this.columnbook_user = this.Columns["book_user"];
                this.columncheck_user = this.Columns["check_user"];
                this.columnbook_date = this.Columns["book_date"];
                this.columnbook_time = this.Columns["book_time"];
                this.columntw = this.Columns["tw"];
                this.columnmb = this.Columns["mb"];
                this.columnhx = this.Columns["hx"];
                this.columnxy = this.Columns["xy"];
                this.columnin_item = this.Columns["in_item"];
                this.columnin_quantity = this.Columns["in_quantity"];
                this.columnstool = this.Columns["stool"];
                this.columnpee = this.Columns["pee"];
                this.columndeptname = this.Columns["deptname"];
                this.columnwardname = this.Columns["wardname"];
            }
            
            private void InitClass() {
                this.columnid = new DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnid);
                this.columninpatient_id = new DataColumn("inpatient_id", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columninpatient_id);
                this.columnbaby_id = new DataColumn("baby_id", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbaby_id);
                this.columndept_id = new DataColumn("dept_id", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndept_id);
                this.columnbook_text = new DataColumn("book_text", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbook_text);
                this.columnbook_user = new DataColumn("book_user", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbook_user);
                this.columncheck_user = new DataColumn("check_user", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncheck_user);
                this.columnbook_date = new DataColumn("book_date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbook_date);
                this.columnbook_time = new DataColumn("book_time", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbook_time);
                this.columntw = new DataColumn("tw", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntw);
                this.columnmb = new DataColumn("mb", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnmb);
                this.columnhx = new DataColumn("hx", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnhx);
                this.columnxy = new DataColumn("xy", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnxy);
                this.columnin_item = new DataColumn("in_item", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnin_item);
                this.columnin_quantity = new DataColumn("in_quantity", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnin_quantity);
                this.columnstool = new DataColumn("stool", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnstool);
                this.columnpee = new DataColumn("pee", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpee);
                this.columndeptname = new DataColumn("deptname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndeptname);
                this.columnwardname = new DataColumn("wardname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnwardname);
            }
            
            public tabWzhljlRow NewtabWzhljlRow() {
                return ((tabWzhljlRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabWzhljlRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabWzhljlRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabWzhljlRowChanged != null)) {
                    this.tabWzhljlRowChanged(this, new tabWzhljlRowChangeEvent(((tabWzhljlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabWzhljlRowChanging != null)) {
                    this.tabWzhljlRowChanging(this, new tabWzhljlRowChangeEvent(((tabWzhljlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabWzhljlRowDeleted != null)) {
                    this.tabWzhljlRowDeleted(this, new tabWzhljlRowChangeEvent(((tabWzhljlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabWzhljlRowDeleting != null)) {
                    this.tabWzhljlRowDeleting(this, new tabWzhljlRowChangeEvent(((tabWzhljlRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabWzhljlRow(tabWzhljlRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWzhljlRow : DataRow {
            
            private tabWzhljlDataTable tabletabWzhljl;
            
            internal tabWzhljlRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabWzhljl = ((tabWzhljlDataTable)(this.Table));
            }
            
            public int id {
                get {
                    try {
                        return ((int)(this[this.tabletabWzhljl.idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.idColumn] = value;
                }
            }
            
            public System.Decimal inpatient_id {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabWzhljl.inpatient_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.inpatient_idColumn] = value;
                }
            }
            
            public System.Decimal baby_id {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabWzhljl.baby_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.baby_idColumn] = value;
                }
            }
            
            public System.Decimal dept_id {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabWzhljl.dept_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.dept_idColumn] = value;
                }
            }
            
            public string book_text {
                get {
                    try {
                        return ((string)(this[this.tabletabWzhljl.book_textColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.book_textColumn] = value;
                }
            }
            
            public string book_user {
                get {
                    try {
                        return ((string)(this[this.tabletabWzhljl.book_userColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.book_userColumn] = value;
                }
            }
            
            public string check_user {
                get {
                    try {
                        return ((string)(this[this.tabletabWzhljl.check_userColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.check_userColumn] = value;
                }
            }
            
            public System.DateTime book_date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletabWzhljl.book_dateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.book_dateColumn] = value;
                }
            }
            
            public System.DateTime book_time {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletabWzhljl.book_timeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.book_timeColumn] = value;
                }
            }
            
            public string tw {
                get {
                    try {
                        return ((string)(this[this.tabletabWzhljl.twColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.twColumn] = value;
                }
            }
            
            public string mb {
                get {
                    try {
                        return ((string)(this[this.tabletabWzhljl.mbColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.mbColumn] = value;
                }
            }
            
            public string hx {
                get {
                    try {
                        return ((string)(this[this.tabletabWzhljl.hxColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.hxColumn] = value;
                }
            }
            
            public string xy {
                get {
                    try {
                        return ((string)(this[this.tabletabWzhljl.xyColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.xyColumn] = value;
                }
            }
            
            public string in_item {
                get {
                    try {
                        return ((string)(this[this.tabletabWzhljl.in_itemColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.in_itemColumn] = value;
                }
            }
            
            public string in_quantity {
                get {
                    try {
                        return ((string)(this[this.tabletabWzhljl.in_quantityColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.in_quantityColumn] = value;
                }
            }
            
            public string stool {
                get {
                    try {
                        return ((string)(this[this.tabletabWzhljl.stoolColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.stoolColumn] = value;
                }
            }
            
            public string pee {
                get {
                    try {
                        return ((string)(this[this.tabletabWzhljl.peeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.peeColumn] = value;
                }
            }
            
            public string deptname {
                get {
                    try {
                        return ((string)(this[this.tabletabWzhljl.deptnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.deptnameColumn] = value;
                }
            }
            
            public string wardname {
                get {
                    try {
                        return ((string)(this[this.tabletabWzhljl.wardnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWzhljl.wardnameColumn] = value;
                }
            }
            
            public bool IsidNull() {
                return this.IsNull(this.tabletabWzhljl.idColumn);
            }
            
            public void SetidNull() {
                this[this.tabletabWzhljl.idColumn] = System.Convert.DBNull;
            }
            
            public bool Isinpatient_idNull() {
                return this.IsNull(this.tabletabWzhljl.inpatient_idColumn);
            }
            
            public void Setinpatient_idNull() {
                this[this.tabletabWzhljl.inpatient_idColumn] = System.Convert.DBNull;
            }
            
            public bool Isbaby_idNull() {
                return this.IsNull(this.tabletabWzhljl.baby_idColumn);
            }
            
            public void Setbaby_idNull() {
                this[this.tabletabWzhljl.baby_idColumn] = System.Convert.DBNull;
            }
            
            public bool Isdept_idNull() {
                return this.IsNull(this.tabletabWzhljl.dept_idColumn);
            }
            
            public void Setdept_idNull() {
                this[this.tabletabWzhljl.dept_idColumn] = System.Convert.DBNull;
            }
            
            public bool Isbook_textNull() {
                return this.IsNull(this.tabletabWzhljl.book_textColumn);
            }
            
            public void Setbook_textNull() {
                this[this.tabletabWzhljl.book_textColumn] = System.Convert.DBNull;
            }
            
            public bool Isbook_userNull() {
                return this.IsNull(this.tabletabWzhljl.book_userColumn);
            }
            
            public void Setbook_userNull() {
                this[this.tabletabWzhljl.book_userColumn] = System.Convert.DBNull;
            }
            
            public bool Ischeck_userNull() {
                return this.IsNull(this.tabletabWzhljl.check_userColumn);
            }
            
            public void Setcheck_userNull() {
                this[this.tabletabWzhljl.check_userColumn] = System.Convert.DBNull;
            }
            
            public bool Isbook_dateNull() {
                return this.IsNull(this.tabletabWzhljl.book_dateColumn);
            }
            
            public void Setbook_dateNull() {
                this[this.tabletabWzhljl.book_dateColumn] = System.Convert.DBNull;
            }
            
            public bool Isbook_timeNull() {
                return this.IsNull(this.tabletabWzhljl.book_timeColumn);
            }
            
            public void Setbook_timeNull() {
                this[this.tabletabWzhljl.book_timeColumn] = System.Convert.DBNull;
            }
            
            public bool IstwNull() {
                return this.IsNull(this.tabletabWzhljl.twColumn);
            }
            
            public void SettwNull() {
                this[this.tabletabWzhljl.twColumn] = System.Convert.DBNull;
            }
            
            public bool IsmbNull() {
                return this.IsNull(this.tabletabWzhljl.mbColumn);
            }
            
            public void SetmbNull() {
                this[this.tabletabWzhljl.mbColumn] = System.Convert.DBNull;
            }
            
            public bool IshxNull() {
                return this.IsNull(this.tabletabWzhljl.hxColumn);
            }
            
            public void SethxNull() {
                this[this.tabletabWzhljl.hxColumn] = System.Convert.DBNull;
            }
            
            public bool IsxyNull() {
                return this.IsNull(this.tabletabWzhljl.xyColumn);
            }
            
            public void SetxyNull() {
                this[this.tabletabWzhljl.xyColumn] = System.Convert.DBNull;
            }
            
            public bool Isin_itemNull() {
                return this.IsNull(this.tabletabWzhljl.in_itemColumn);
            }
            
            public void Setin_itemNull() {
                this[this.tabletabWzhljl.in_itemColumn] = System.Convert.DBNull;
            }
            
            public bool Isin_quantityNull() {
                return this.IsNull(this.tabletabWzhljl.in_quantityColumn);
            }
            
            public void Setin_quantityNull() {
                this[this.tabletabWzhljl.in_quantityColumn] = System.Convert.DBNull;
            }
            
            public bool IsstoolNull() {
                return this.IsNull(this.tabletabWzhljl.stoolColumn);
            }
            
            public void SetstoolNull() {
                this[this.tabletabWzhljl.stoolColumn] = System.Convert.DBNull;
            }
            
            public bool IspeeNull() {
                return this.IsNull(this.tabletabWzhljl.peeColumn);
            }
            
            public void SetpeeNull() {
                this[this.tabletabWzhljl.peeColumn] = System.Convert.DBNull;
            }
            
            public bool IsdeptnameNull() {
                return this.IsNull(this.tabletabWzhljl.deptnameColumn);
            }
            
            public void SetdeptnameNull() {
                this[this.tabletabWzhljl.deptnameColumn] = System.Convert.DBNull;
            }
            
            public bool IswardnameNull() {
                return this.IsNull(this.tabletabWzhljl.wardnameColumn);
            }
            
            public void SetwardnameNull() {
                this[this.tabletabWzhljl.wardnameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWzhljlRowChangeEvent : EventArgs {
            
            private tabWzhljlRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabWzhljlRowChangeEvent(tabWzhljlRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabWzhljlRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWardjbjlDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnWARD_ID;
            
            private DataColumn columnJB_DATE;
            
            private DataColumn columnBOOK_USER;
            
            private DataColumn columnJOBTIME;
            
            private DataColumn columnFORMERLY;
            
            private DataColumn columnGOOUT;
            
            private DataColumn columnTRANSOUT;
            
            private DataColumn columnDEATH;
            
            private DataColumn columnCOMEIN;
            
            private DataColumn columnTRANSIN;
            
            private DataColumn columnNOW;
            
            private DataColumn columnOPERATION;
            
            private DataColumn columnCHILDBIRTH;
            
            private DataColumn columnTERMINALLYILL;
            
            private DataColumn columnHEAVYILL;
            
            private DataColumn columnGOAWAY;
            
            private DataColumn columnSPECIALTEND;
            
            private DataColumn columnFIRSTTEND;
            
            private DataColumn columnJB_TEXT;
            
            internal tabWardjbjlDataTable() : 
                    base("tabWardjbjl") {
                this.InitClass();
            }
            
            internal tabWardjbjlDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn WARD_IDColumn {
                get {
                    return this.columnWARD_ID;
                }
            }
            
            internal DataColumn JB_DATEColumn {
                get {
                    return this.columnJB_DATE;
                }
            }
            
            internal DataColumn BOOK_USERColumn {
                get {
                    return this.columnBOOK_USER;
                }
            }
            
            internal DataColumn JOBTIMEColumn {
                get {
                    return this.columnJOBTIME;
                }
            }
            
            internal DataColumn FORMERLYColumn {
                get {
                    return this.columnFORMERLY;
                }
            }
            
            internal DataColumn GOOUTColumn {
                get {
                    return this.columnGOOUT;
                }
            }
            
            internal DataColumn TRANSOUTColumn {
                get {
                    return this.columnTRANSOUT;
                }
            }
            
            internal DataColumn DEATHColumn {
                get {
                    return this.columnDEATH;
                }
            }
            
            internal DataColumn COMEINColumn {
                get {
                    return this.columnCOMEIN;
                }
            }
            
            internal DataColumn TRANSINColumn {
                get {
                    return this.columnTRANSIN;
                }
            }
            
            internal DataColumn NOWColumn {
                get {
                    return this.columnNOW;
                }
            }
            
            internal DataColumn OPERATIONColumn {
                get {
                    return this.columnOPERATION;
                }
            }
            
            internal DataColumn CHILDBIRTHColumn {
                get {
                    return this.columnCHILDBIRTH;
                }
            }
            
            internal DataColumn TERMINALLYILLColumn {
                get {
                    return this.columnTERMINALLYILL;
                }
            }
            
            internal DataColumn HEAVYILLColumn {
                get {
                    return this.columnHEAVYILL;
                }
            }
            
            internal DataColumn GOAWAYColumn {
                get {
                    return this.columnGOAWAY;
                }
            }
            
            internal DataColumn SPECIALTENDColumn {
                get {
                    return this.columnSPECIALTEND;
                }
            }
            
            internal DataColumn FIRSTTENDColumn {
                get {
                    return this.columnFIRSTTEND;
                }
            }
            
            internal DataColumn JB_TEXTColumn {
                get {
                    return this.columnJB_TEXT;
                }
            }
            
            public tabWardjbjlRow this[int index] {
                get {
                    return ((tabWardjbjlRow)(this.Rows[index]));
                }
            }
            
            public event tabWardjbjlRowChangeEventHandler tabWardjbjlRowChanged;
            
            public event tabWardjbjlRowChangeEventHandler tabWardjbjlRowChanging;
            
            public event tabWardjbjlRowChangeEventHandler tabWardjbjlRowDeleted;
            
            public event tabWardjbjlRowChangeEventHandler tabWardjbjlRowDeleting;
            
            public void AddtabWardjbjlRow(tabWardjbjlRow row) {
                this.Rows.Add(row);
            }
            
            public tabWardjbjlRow AddtabWardjbjlRow(
                        string WARD_ID, 
                        System.DateTime JB_DATE, 
                        string BOOK_USER, 
                        string JOBTIME, 
                        int FORMERLY, 
                        int GOOUT, 
                        int TRANSOUT, 
                        int DEATH, 
                        int COMEIN, 
                        int TRANSIN, 
                        int NOW, 
                        int OPERATION, 
                        int CHILDBIRTH, 
                        int TERMINALLYILL, 
                        int HEAVYILL, 
                        int GOAWAY, 
                        int SPECIALTEND, 
                        int FIRSTTEND, 
                        string JB_TEXT) {
                tabWardjbjlRow rowtabWardjbjlRow = ((tabWardjbjlRow)(this.NewRow()));
                rowtabWardjbjlRow.ItemArray = new object[] {
                        WARD_ID,
                        JB_DATE,
                        BOOK_USER,
                        JOBTIME,
                        FORMERLY,
                        GOOUT,
                        TRANSOUT,
                        DEATH,
                        COMEIN,
                        TRANSIN,
                        NOW,
                        OPERATION,
                        CHILDBIRTH,
                        TERMINALLYILL,
                        HEAVYILL,
                        GOAWAY,
                        SPECIALTEND,
                        FIRSTTEND,
                        JB_TEXT};
                this.Rows.Add(rowtabWardjbjlRow);
                return rowtabWardjbjlRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabWardjbjlDataTable cln = ((tabWardjbjlDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabWardjbjlDataTable();
            }
            
            internal void InitVars() {
                this.columnWARD_ID = this.Columns["WARD_ID"];
                this.columnJB_DATE = this.Columns["JB_DATE"];
                this.columnBOOK_USER = this.Columns["BOOK_USER"];
                this.columnJOBTIME = this.Columns["JOBTIME"];
                this.columnFORMERLY = this.Columns["FORMERLY"];
                this.columnGOOUT = this.Columns["GOOUT"];
                this.columnTRANSOUT = this.Columns["TRANSOUT"];
                this.columnDEATH = this.Columns["DEATH"];
                this.columnCOMEIN = this.Columns["COMEIN"];
                this.columnTRANSIN = this.Columns["TRANSIN"];
                this.columnNOW = this.Columns["NOW"];
                this.columnOPERATION = this.Columns["OPERATION"];
                this.columnCHILDBIRTH = this.Columns["CHILDBIRTH"];
                this.columnTERMINALLYILL = this.Columns["TERMINALLYILL"];
                this.columnHEAVYILL = this.Columns["HEAVYILL"];
                this.columnGOAWAY = this.Columns["GOAWAY"];
                this.columnSPECIALTEND = this.Columns["SPECIALTEND"];
                this.columnFIRSTTEND = this.Columns["FIRSTTEND"];
                this.columnJB_TEXT = this.Columns["JB_TEXT"];
            }
            
            private void InitClass() {
                this.columnWARD_ID = new DataColumn("WARD_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWARD_ID);
                this.columnJB_DATE = new DataColumn("JB_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJB_DATE);
                this.columnBOOK_USER = new DataColumn("BOOK_USER", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBOOK_USER);
                this.columnJOBTIME = new DataColumn("JOBTIME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJOBTIME);
                this.columnFORMERLY = new DataColumn("FORMERLY", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFORMERLY);
                this.columnGOOUT = new DataColumn("GOOUT", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGOOUT);
                this.columnTRANSOUT = new DataColumn("TRANSOUT", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTRANSOUT);
                this.columnDEATH = new DataColumn("DEATH", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDEATH);
                this.columnCOMEIN = new DataColumn("COMEIN", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMEIN);
                this.columnTRANSIN = new DataColumn("TRANSIN", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTRANSIN);
                this.columnNOW = new DataColumn("NOW", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOW);
                this.columnOPERATION = new DataColumn("OPERATION", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOPERATION);
                this.columnCHILDBIRTH = new DataColumn("CHILDBIRTH", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCHILDBIRTH);
                this.columnTERMINALLYILL = new DataColumn("TERMINALLYILL", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTERMINALLYILL);
                this.columnHEAVYILL = new DataColumn("HEAVYILL", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHEAVYILL);
                this.columnGOAWAY = new DataColumn("GOAWAY", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGOAWAY);
                this.columnSPECIALTEND = new DataColumn("SPECIALTEND", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSPECIALTEND);
                this.columnFIRSTTEND = new DataColumn("FIRSTTEND", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFIRSTTEND);
                this.columnJB_TEXT = new DataColumn("JB_TEXT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJB_TEXT);
            }
            
            public tabWardjbjlRow NewtabWardjbjlRow() {
                return ((tabWardjbjlRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabWardjbjlRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabWardjbjlRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabWardjbjlRowChanged != null)) {
                    this.tabWardjbjlRowChanged(this, new tabWardjbjlRowChangeEvent(((tabWardjbjlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabWardjbjlRowChanging != null)) {
                    this.tabWardjbjlRowChanging(this, new tabWardjbjlRowChangeEvent(((tabWardjbjlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabWardjbjlRowDeleted != null)) {
                    this.tabWardjbjlRowDeleted(this, new tabWardjbjlRowChangeEvent(((tabWardjbjlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabWardjbjlRowDeleting != null)) {
                    this.tabWardjbjlRowDeleting(this, new tabWardjbjlRowChangeEvent(((tabWardjbjlRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabWardjbjlRow(tabWardjbjlRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWardjbjlRow : DataRow {
            
            private tabWardjbjlDataTable tabletabWardjbjl;
            
            internal tabWardjbjlRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabWardjbjl = ((tabWardjbjlDataTable)(this.Table));
            }
            
            public string WARD_ID {
                get {
                    try {
                        return ((string)(this[this.tabletabWardjbjl.WARD_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.WARD_IDColumn] = value;
                }
            }
            
            public System.DateTime JB_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletabWardjbjl.JB_DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.JB_DATEColumn] = value;
                }
            }
            
            public string BOOK_USER {
                get {
                    try {
                        return ((string)(this[this.tabletabWardjbjl.BOOK_USERColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.BOOK_USERColumn] = value;
                }
            }
            
            public string JOBTIME {
                get {
                    try {
                        return ((string)(this[this.tabletabWardjbjl.JOBTIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.JOBTIMEColumn] = value;
                }
            }
            
            public int FORMERLY {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl.FORMERLYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.FORMERLYColumn] = value;
                }
            }
            
            public int GOOUT {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl.GOOUTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.GOOUTColumn] = value;
                }
            }
            
            public int TRANSOUT {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl.TRANSOUTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.TRANSOUTColumn] = value;
                }
            }
            
            public int DEATH {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl.DEATHColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.DEATHColumn] = value;
                }
            }
            
            public int COMEIN {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl.COMEINColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.COMEINColumn] = value;
                }
            }
            
            public int TRANSIN {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl.TRANSINColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.TRANSINColumn] = value;
                }
            }
            
            public int NOW {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl.NOWColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.NOWColumn] = value;
                }
            }
            
            public int OPERATION {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl.OPERATIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.OPERATIONColumn] = value;
                }
            }
            
            public int CHILDBIRTH {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl.CHILDBIRTHColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.CHILDBIRTHColumn] = value;
                }
            }
            
            public int TERMINALLYILL {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl.TERMINALLYILLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.TERMINALLYILLColumn] = value;
                }
            }
            
            public int HEAVYILL {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl.HEAVYILLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.HEAVYILLColumn] = value;
                }
            }
            
            public int GOAWAY {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl.GOAWAYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.GOAWAYColumn] = value;
                }
            }
            
            public int SPECIALTEND {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl.SPECIALTENDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.SPECIALTENDColumn] = value;
                }
            }
            
            public int FIRSTTEND {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl.FIRSTTENDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.FIRSTTENDColumn] = value;
                }
            }
            
            public string JB_TEXT {
                get {
                    try {
                        return ((string)(this[this.tabletabWardjbjl.JB_TEXTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl.JB_TEXTColumn] = value;
                }
            }
            
            public bool IsWARD_IDNull() {
                return this.IsNull(this.tabletabWardjbjl.WARD_IDColumn);
            }
            
            public void SetWARD_IDNull() {
                this[this.tabletabWardjbjl.WARD_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsJB_DATENull() {
                return this.IsNull(this.tabletabWardjbjl.JB_DATEColumn);
            }
            
            public void SetJB_DATENull() {
                this[this.tabletabWardjbjl.JB_DATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsBOOK_USERNull() {
                return this.IsNull(this.tabletabWardjbjl.BOOK_USERColumn);
            }
            
            public void SetBOOK_USERNull() {
                this[this.tabletabWardjbjl.BOOK_USERColumn] = System.Convert.DBNull;
            }
            
            public bool IsJOBTIMENull() {
                return this.IsNull(this.tabletabWardjbjl.JOBTIMEColumn);
            }
            
            public void SetJOBTIMENull() {
                this[this.tabletabWardjbjl.JOBTIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsFORMERLYNull() {
                return this.IsNull(this.tabletabWardjbjl.FORMERLYColumn);
            }
            
            public void SetFORMERLYNull() {
                this[this.tabletabWardjbjl.FORMERLYColumn] = System.Convert.DBNull;
            }
            
            public bool IsGOOUTNull() {
                return this.IsNull(this.tabletabWardjbjl.GOOUTColumn);
            }
            
            public void SetGOOUTNull() {
                this[this.tabletabWardjbjl.GOOUTColumn] = System.Convert.DBNull;
            }
            
            public bool IsTRANSOUTNull() {
                return this.IsNull(this.tabletabWardjbjl.TRANSOUTColumn);
            }
            
            public void SetTRANSOUTNull() {
                this[this.tabletabWardjbjl.TRANSOUTColumn] = System.Convert.DBNull;
            }
            
            public bool IsDEATHNull() {
                return this.IsNull(this.tabletabWardjbjl.DEATHColumn);
            }
            
            public void SetDEATHNull() {
                this[this.tabletabWardjbjl.DEATHColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMEINNull() {
                return this.IsNull(this.tabletabWardjbjl.COMEINColumn);
            }
            
            public void SetCOMEINNull() {
                this[this.tabletabWardjbjl.COMEINColumn] = System.Convert.DBNull;
            }
            
            public bool IsTRANSINNull() {
                return this.IsNull(this.tabletabWardjbjl.TRANSINColumn);
            }
            
            public void SetTRANSINNull() {
                this[this.tabletabWardjbjl.TRANSINColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOWNull() {
                return this.IsNull(this.tabletabWardjbjl.NOWColumn);
            }
            
            public void SetNOWNull() {
                this[this.tabletabWardjbjl.NOWColumn] = System.Convert.DBNull;
            }
            
            public bool IsOPERATIONNull() {
                return this.IsNull(this.tabletabWardjbjl.OPERATIONColumn);
            }
            
            public void SetOPERATIONNull() {
                this[this.tabletabWardjbjl.OPERATIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsCHILDBIRTHNull() {
                return this.IsNull(this.tabletabWardjbjl.CHILDBIRTHColumn);
            }
            
            public void SetCHILDBIRTHNull() {
                this[this.tabletabWardjbjl.CHILDBIRTHColumn] = System.Convert.DBNull;
            }
            
            public bool IsTERMINALLYILLNull() {
                return this.IsNull(this.tabletabWardjbjl.TERMINALLYILLColumn);
            }
            
            public void SetTERMINALLYILLNull() {
                this[this.tabletabWardjbjl.TERMINALLYILLColumn] = System.Convert.DBNull;
            }
            
            public bool IsHEAVYILLNull() {
                return this.IsNull(this.tabletabWardjbjl.HEAVYILLColumn);
            }
            
            public void SetHEAVYILLNull() {
                this[this.tabletabWardjbjl.HEAVYILLColumn] = System.Convert.DBNull;
            }
            
            public bool IsGOAWAYNull() {
                return this.IsNull(this.tabletabWardjbjl.GOAWAYColumn);
            }
            
            public void SetGOAWAYNull() {
                this[this.tabletabWardjbjl.GOAWAYColumn] = System.Convert.DBNull;
            }
            
            public bool IsSPECIALTENDNull() {
                return this.IsNull(this.tabletabWardjbjl.SPECIALTENDColumn);
            }
            
            public void SetSPECIALTENDNull() {
                this[this.tabletabWardjbjl.SPECIALTENDColumn] = System.Convert.DBNull;
            }
            
            public bool IsFIRSTTENDNull() {
                return this.IsNull(this.tabletabWardjbjl.FIRSTTENDColumn);
            }
            
            public void SetFIRSTTENDNull() {
                this[this.tabletabWardjbjl.FIRSTTENDColumn] = System.Convert.DBNull;
            }
            
            public bool IsJB_TEXTNull() {
                return this.IsNull(this.tabletabWardjbjl.JB_TEXTColumn);
            }
            
            public void SetJB_TEXTNull() {
                this[this.tabletabWardjbjl.JB_TEXTColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWardjbjlRowChangeEvent : EventArgs {
            
            private tabWardjbjlRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabWardjbjlRowChangeEvent(tabWardjbjlRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabWardjbjlRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWardjbjl_brdtDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnITEM;
            
            private DataColumn columnBED_NO;
            
            private DataColumn columnNAME;
            
            private DataColumn columnDIAGNOSES;
            
            private DataColumn columnTIME;
            
            private DataColumn columnjobtime;
            
            internal tabWardjbjl_brdtDataTable() : 
                    base("tabWardjbjl_brdt") {
                this.InitClass();
            }
            
            internal tabWardjbjl_brdtDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ITEMColumn {
                get {
                    return this.columnITEM;
                }
            }
            
            internal DataColumn BED_NOColumn {
                get {
                    return this.columnBED_NO;
                }
            }
            
            internal DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            internal DataColumn DIAGNOSESColumn {
                get {
                    return this.columnDIAGNOSES;
                }
            }
            
            internal DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            internal DataColumn jobtimeColumn {
                get {
                    return this.columnjobtime;
                }
            }
            
            public tabWardjbjl_brdtRow this[int index] {
                get {
                    return ((tabWardjbjl_brdtRow)(this.Rows[index]));
                }
            }
            
            public event tabWardjbjl_brdtRowChangeEventHandler tabWardjbjl_brdtRowChanged;
            
            public event tabWardjbjl_brdtRowChangeEventHandler tabWardjbjl_brdtRowChanging;
            
            public event tabWardjbjl_brdtRowChangeEventHandler tabWardjbjl_brdtRowDeleted;
            
            public event tabWardjbjl_brdtRowChangeEventHandler tabWardjbjl_brdtRowDeleting;
            
            public void AddtabWardjbjl_brdtRow(tabWardjbjl_brdtRow row) {
                this.Rows.Add(row);
            }
            
            public tabWardjbjl_brdtRow AddtabWardjbjl_brdtRow(string ITEM, string BED_NO, string NAME, string DIAGNOSES, string TIME, int jobtime) {
                tabWardjbjl_brdtRow rowtabWardjbjl_brdtRow = ((tabWardjbjl_brdtRow)(this.NewRow()));
                rowtabWardjbjl_brdtRow.ItemArray = new object[] {
                        ITEM,
                        BED_NO,
                        NAME,
                        DIAGNOSES,
                        TIME,
                        jobtime};
                this.Rows.Add(rowtabWardjbjl_brdtRow);
                return rowtabWardjbjl_brdtRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabWardjbjl_brdtDataTable cln = ((tabWardjbjl_brdtDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabWardjbjl_brdtDataTable();
            }
            
            internal void InitVars() {
                this.columnITEM = this.Columns["ITEM"];
                this.columnBED_NO = this.Columns["BED_NO"];
                this.columnNAME = this.Columns["NAME"];
                this.columnDIAGNOSES = this.Columns["DIAGNOSES"];
                this.columnTIME = this.Columns["TIME"];
                this.columnjobtime = this.Columns["jobtime"];
            }
            
            private void InitClass() {
                this.columnITEM = new DataColumn("ITEM", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnITEM);
                this.columnBED_NO = new DataColumn("BED_NO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBED_NO);
                this.columnNAME = new DataColumn("NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNAME);
                this.columnDIAGNOSES = new DataColumn("DIAGNOSES", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDIAGNOSES);
                this.columnTIME = new DataColumn("TIME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIME);
                this.columnjobtime = new DataColumn("jobtime", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnjobtime);
            }
            
            public tabWardjbjl_brdtRow NewtabWardjbjl_brdtRow() {
                return ((tabWardjbjl_brdtRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabWardjbjl_brdtRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabWardjbjl_brdtRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabWardjbjl_brdtRowChanged != null)) {
                    this.tabWardjbjl_brdtRowChanged(this, new tabWardjbjl_brdtRowChangeEvent(((tabWardjbjl_brdtRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabWardjbjl_brdtRowChanging != null)) {
                    this.tabWardjbjl_brdtRowChanging(this, new tabWardjbjl_brdtRowChangeEvent(((tabWardjbjl_brdtRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabWardjbjl_brdtRowDeleted != null)) {
                    this.tabWardjbjl_brdtRowDeleted(this, new tabWardjbjl_brdtRowChangeEvent(((tabWardjbjl_brdtRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabWardjbjl_brdtRowDeleting != null)) {
                    this.tabWardjbjl_brdtRowDeleting(this, new tabWardjbjl_brdtRowChangeEvent(((tabWardjbjl_brdtRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabWardjbjl_brdtRow(tabWardjbjl_brdtRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWardjbjl_brdtRow : DataRow {
            
            private tabWardjbjl_brdtDataTable tabletabWardjbjl_brdt;
            
            internal tabWardjbjl_brdtRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabWardjbjl_brdt = ((tabWardjbjl_brdtDataTable)(this.Table));
            }
            
            public string ITEM {
                get {
                    try {
                        return ((string)(this[this.tabletabWardjbjl_brdt.ITEMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl_brdt.ITEMColumn] = value;
                }
            }
            
            public string BED_NO {
                get {
                    try {
                        return ((string)(this[this.tabletabWardjbjl_brdt.BED_NOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl_brdt.BED_NOColumn] = value;
                }
            }
            
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tabletabWardjbjl_brdt.NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl_brdt.NAMEColumn] = value;
                }
            }
            
            public string DIAGNOSES {
                get {
                    try {
                        return ((string)(this[this.tabletabWardjbjl_brdt.DIAGNOSESColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl_brdt.DIAGNOSESColumn] = value;
                }
            }
            
            public string TIME {
                get {
                    try {
                        return ((string)(this[this.tabletabWardjbjl_brdt.TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl_brdt.TIMEColumn] = value;
                }
            }
            
            public int jobtime {
                get {
                    try {
                        return ((int)(this[this.tabletabWardjbjl_brdt.jobtimeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardjbjl_brdt.jobtimeColumn] = value;
                }
            }
            
            public bool IsITEMNull() {
                return this.IsNull(this.tabletabWardjbjl_brdt.ITEMColumn);
            }
            
            public void SetITEMNull() {
                this[this.tabletabWardjbjl_brdt.ITEMColumn] = System.Convert.DBNull;
            }
            
            public bool IsBED_NONull() {
                return this.IsNull(this.tabletabWardjbjl_brdt.BED_NOColumn);
            }
            
            public void SetBED_NONull() {
                this[this.tabletabWardjbjl_brdt.BED_NOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNAMENull() {
                return this.IsNull(this.tabletabWardjbjl_brdt.NAMEColumn);
            }
            
            public void SetNAMENull() {
                this[this.tabletabWardjbjl_brdt.NAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsDIAGNOSESNull() {
                return this.IsNull(this.tabletabWardjbjl_brdt.DIAGNOSESColumn);
            }
            
            public void SetDIAGNOSESNull() {
                this[this.tabletabWardjbjl_brdt.DIAGNOSESColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIMENull() {
                return this.IsNull(this.tabletabWardjbjl_brdt.TIMEColumn);
            }
            
            public void SetTIMENull() {
                this[this.tabletabWardjbjl_brdt.TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsjobtimeNull() {
                return this.IsNull(this.tabletabWardjbjl_brdt.jobtimeColumn);
            }
            
            public void SetjobtimeNull() {
                this[this.tabletabWardjbjl_brdt.jobtimeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWardjbjl_brdtRowChangeEvent : EventArgs {
            
            private tabWardjbjl_brdtRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabWardjbjl_brdtRowChangeEvent(tabWardjbjl_brdtRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabWardjbjl_brdtRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabRypgDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnNAME;
            
            private DataColumn columnIN_DEPT_NAME;
            
            private DataColumn columnBED_NO;
            
            private DataColumn columnINPATIENT_NO;
            
            private DataColumn columnSEX_NAME;
            
            private DataColumn columnAGE;
            
            private DataColumn columnJSFS_NAME;
            
            private DataColumn columnIN_DATE;
            
            private DataColumn columnIN_DIAGNOSIS;
            
            private DataColumn columnHOME_STREET;
            
            private DataColumn columnRELATION_NAME;
            
            private DataColumn columnRELATION;
            
            private DataColumn columnRELATION_TEL;
            
            private DataColumn columnID;
            
            private DataColumn columnINPATIENT_ID;
            
            private DataColumn columnBABY_ID;
            
            private DataColumn columnOCCUPATI;
            
            private DataColumn columnNATIONCO;
            
            private DataColumn columnDISRICT;
            
            private DataColumn columnWHCD;
            
            private DataColumn columnHYZT;
            
            private DataColumn columnTZYSSJ;
            
            private DataColumn columnRYFS;
            
            private DataColumn columnRYFS_QT;
            
            private DataColumn columnPS;
            
            private DataColumn columnPS_QT;
            
            private DataColumn columnZYRYZD;
            
            private DataColumn columnFBJQ;
            
            private DataColumn columnJWBS;
            
            private DataColumn columnJWBS_QT;
            
            private DataColumn columnGMS;
            
            private DataColumn columnGMS_YW;
            
            private DataColumn columnGMS_SW;
            
            private DataColumn columnGMS_QT;
            
            private DataColumn columnYS;
            
            private DataColumn columnYS_QT;
            
            private DataColumn columnSM;
            
            private DataColumn columnSM_YW;
            
            private DataColumn columnDB;
            
            private DataColumn columnDB_ZK;
            
            private DataColumn columnXB;
            
            private DataColumn columnZLNL;
            
            private DataColumn columnZTHD;
            
            private DataColumn columnZTHD_ZA;
            
            private DataColumn columnZTHD_TH;
            
            private DataColumn columnDGQK;
            
            private DataColumn columnDGQK_QT;
            
            private DataColumn columnSMTZ_TW;
            
            private DataColumn columnSMTZ_MB;
            
            private DataColumn columnSMTZ_HX;
            
            private DataColumn columnSMTZ_XY;
            
            private DataColumn columnYSZT;
            
            private DataColumn columnST;
            
            private DataColumn columnST_QT;
            
            private DataColumn columnSZ;
            
            private DataColumn columnSZ_QT;
            
            private DataColumn columnMX;
            
            private DataColumn columnMX_QT;
            
            private DataColumn columnPFWZX;
            
            private DataColumn columnPFWZX_QT;
            
            private DataColumn columnZY;
            
            private DataColumn columnZY_QT;
            
            private DataColumn columnYY;
            
            private DataColumn columnYY_QT;
            
            private DataColumn columnZE;
            
            private DataColumn columnZE_QT;
            
            private DataColumn columnYE;
            
            private DataColumn columnYE_QT;
            
            private DataColumn columnQX;
            
            private DataColumn columnQX_QT;
            
            private DataColumn columnZYZT;
            
            private DataColumn columnJSZT;
            
            private DataColumn columnBZ;
            
            private DataColumn columnPGHS;
            
            private DataColumn columnPGSJ;
            
            private DataColumn columnBOOK;
            
            private DataColumn columnBOOK_DATE;
            
            private DataColumn columnUPDATE;
            
            private DataColumn columnUPDATE_DATE;
            
            internal tabRypgDataTable() : 
                    base("tabRypg") {
                this.InitClass();
            }
            
            internal tabRypgDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            internal DataColumn IN_DEPT_NAMEColumn {
                get {
                    return this.columnIN_DEPT_NAME;
                }
            }
            
            internal DataColumn BED_NOColumn {
                get {
                    return this.columnBED_NO;
                }
            }
            
            internal DataColumn INPATIENT_NOColumn {
                get {
                    return this.columnINPATIENT_NO;
                }
            }
            
            internal DataColumn SEX_NAMEColumn {
                get {
                    return this.columnSEX_NAME;
                }
            }
            
            internal DataColumn AGEColumn {
                get {
                    return this.columnAGE;
                }
            }
            
            internal DataColumn JSFS_NAMEColumn {
                get {
                    return this.columnJSFS_NAME;
                }
            }
            
            internal DataColumn IN_DATEColumn {
                get {
                    return this.columnIN_DATE;
                }
            }
            
            internal DataColumn IN_DIAGNOSISColumn {
                get {
                    return this.columnIN_DIAGNOSIS;
                }
            }
            
            internal DataColumn HOME_STREETColumn {
                get {
                    return this.columnHOME_STREET;
                }
            }
            
            internal DataColumn RELATION_NAMEColumn {
                get {
                    return this.columnRELATION_NAME;
                }
            }
            
            internal DataColumn RELATIONColumn {
                get {
                    return this.columnRELATION;
                }
            }
            
            internal DataColumn RELATION_TELColumn {
                get {
                    return this.columnRELATION_TEL;
                }
            }
            
            internal DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            internal DataColumn INPATIENT_IDColumn {
                get {
                    return this.columnINPATIENT_ID;
                }
            }
            
            internal DataColumn BABY_IDColumn {
                get {
                    return this.columnBABY_ID;
                }
            }
            
            internal DataColumn OCCUPATIColumn {
                get {
                    return this.columnOCCUPATI;
                }
            }
            
            internal DataColumn NATIONCOColumn {
                get {
                    return this.columnNATIONCO;
                }
            }
            
            internal DataColumn DISRICTColumn {
                get {
                    return this.columnDISRICT;
                }
            }
            
            internal DataColumn WHCDColumn {
                get {
                    return this.columnWHCD;
                }
            }
            
            internal DataColumn HYZTColumn {
                get {
                    return this.columnHYZT;
                }
            }
            
            internal DataColumn TZYSSJColumn {
                get {
                    return this.columnTZYSSJ;
                }
            }
            
            internal DataColumn RYFSColumn {
                get {
                    return this.columnRYFS;
                }
            }
            
            internal DataColumn RYFS_QTColumn {
                get {
                    return this.columnRYFS_QT;
                }
            }
            
            internal DataColumn PSColumn {
                get {
                    return this.columnPS;
                }
            }
            
            internal DataColumn PS_QTColumn {
                get {
                    return this.columnPS_QT;
                }
            }
            
            internal DataColumn ZYRYZDColumn {
                get {
                    return this.columnZYRYZD;
                }
            }
            
            internal DataColumn FBJQColumn {
                get {
                    return this.columnFBJQ;
                }
            }
            
            internal DataColumn JWBSColumn {
                get {
                    return this.columnJWBS;
                }
            }
            
            internal DataColumn JWBS_QTColumn {
                get {
                    return this.columnJWBS_QT;
                }
            }
            
            internal DataColumn GMSColumn {
                get {
                    return this.columnGMS;
                }
            }
            
            internal DataColumn GMS_YWColumn {
                get {
                    return this.columnGMS_YW;
                }
            }
            
            internal DataColumn GMS_SWColumn {
                get {
                    return this.columnGMS_SW;
                }
            }
            
            internal DataColumn GMS_QTColumn {
                get {
                    return this.columnGMS_QT;
                }
            }
            
            internal DataColumn YSColumn {
                get {
                    return this.columnYS;
                }
            }
            
            internal DataColumn YS_QTColumn {
                get {
                    return this.columnYS_QT;
                }
            }
            
            internal DataColumn SMColumn {
                get {
                    return this.columnSM;
                }
            }
            
            internal DataColumn SM_YWColumn {
                get {
                    return this.columnSM_YW;
                }
            }
            
            internal DataColumn DBColumn {
                get {
                    return this.columnDB;
                }
            }
            
            internal DataColumn DB_ZKColumn {
                get {
                    return this.columnDB_ZK;
                }
            }
            
            internal DataColumn XBColumn {
                get {
                    return this.columnXB;
                }
            }
            
            internal DataColumn ZLNLColumn {
                get {
                    return this.columnZLNL;
                }
            }
            
            internal DataColumn ZTHDColumn {
                get {
                    return this.columnZTHD;
                }
            }
            
            internal DataColumn ZTHD_ZAColumn {
                get {
                    return this.columnZTHD_ZA;
                }
            }
            
            internal DataColumn ZTHD_THColumn {
                get {
                    return this.columnZTHD_TH;
                }
            }
            
            internal DataColumn DGQKColumn {
                get {
                    return this.columnDGQK;
                }
            }
            
            internal DataColumn DGQK_QTColumn {
                get {
                    return this.columnDGQK_QT;
                }
            }
            
            internal DataColumn SMTZ_TWColumn {
                get {
                    return this.columnSMTZ_TW;
                }
            }
            
            internal DataColumn SMTZ_MBColumn {
                get {
                    return this.columnSMTZ_MB;
                }
            }
            
            internal DataColumn SMTZ_HXColumn {
                get {
                    return this.columnSMTZ_HX;
                }
            }
            
            internal DataColumn SMTZ_XYColumn {
                get {
                    return this.columnSMTZ_XY;
                }
            }
            
            internal DataColumn YSZTColumn {
                get {
                    return this.columnYSZT;
                }
            }
            
            internal DataColumn STColumn {
                get {
                    return this.columnST;
                }
            }
            
            internal DataColumn ST_QTColumn {
                get {
                    return this.columnST_QT;
                }
            }
            
            internal DataColumn SZColumn {
                get {
                    return this.columnSZ;
                }
            }
            
            internal DataColumn SZ_QTColumn {
                get {
                    return this.columnSZ_QT;
                }
            }
            
            internal DataColumn MXColumn {
                get {
                    return this.columnMX;
                }
            }
            
            internal DataColumn MX_QTColumn {
                get {
                    return this.columnMX_QT;
                }
            }
            
            internal DataColumn PFWZXColumn {
                get {
                    return this.columnPFWZX;
                }
            }
            
            internal DataColumn PFWZX_QTColumn {
                get {
                    return this.columnPFWZX_QT;
                }
            }
            
            internal DataColumn ZYColumn {
                get {
                    return this.columnZY;
                }
            }
            
            internal DataColumn ZY_QTColumn {
                get {
                    return this.columnZY_QT;
                }
            }
            
            internal DataColumn YYColumn {
                get {
                    return this.columnYY;
                }
            }
            
            internal DataColumn YY_QTColumn {
                get {
                    return this.columnYY_QT;
                }
            }
            
            internal DataColumn ZEColumn {
                get {
                    return this.columnZE;
                }
            }
            
            internal DataColumn ZE_QTColumn {
                get {
                    return this.columnZE_QT;
                }
            }
            
            internal DataColumn YEColumn {
                get {
                    return this.columnYE;
                }
            }
            
            internal DataColumn YE_QTColumn {
                get {
                    return this.columnYE_QT;
                }
            }
            
            internal DataColumn QXColumn {
                get {
                    return this.columnQX;
                }
            }
            
            internal DataColumn QX_QTColumn {
                get {
                    return this.columnQX_QT;
                }
            }
            
            internal DataColumn ZYZTColumn {
                get {
                    return this.columnZYZT;
                }
            }
            
            internal DataColumn JSZTColumn {
                get {
                    return this.columnJSZT;
                }
            }
            
            internal DataColumn BZColumn {
                get {
                    return this.columnBZ;
                }
            }
            
            internal DataColumn PGHSColumn {
                get {
                    return this.columnPGHS;
                }
            }
            
            internal DataColumn PGSJColumn {
                get {
                    return this.columnPGSJ;
                }
            }
            
            internal DataColumn BOOKColumn {
                get {
                    return this.columnBOOK;
                }
            }
            
            internal DataColumn BOOK_DATEColumn {
                get {
                    return this.columnBOOK_DATE;
                }
            }
            
            internal DataColumn UPDATEColumn {
                get {
                    return this.columnUPDATE;
                }
            }
            
            internal DataColumn UPDATE_DATEColumn {
                get {
                    return this.columnUPDATE_DATE;
                }
            }
            
            public tabRypgRow this[int index] {
                get {
                    return ((tabRypgRow)(this.Rows[index]));
                }
            }
            
            public event tabRypgRowChangeEventHandler tabRypgRowChanged;
            
            public event tabRypgRowChangeEventHandler tabRypgRowChanging;
            
            public event tabRypgRowChangeEventHandler tabRypgRowDeleted;
            
            public event tabRypgRowChangeEventHandler tabRypgRowDeleting;
            
            public void AddtabRypgRow(tabRypgRow row) {
                this.Rows.Add(row);
            }
            
            public tabRypgRow AddtabRypgRow(
                        string NAME, 
                        string IN_DEPT_NAME, 
                        string BED_NO, 
                        string INPATIENT_NO, 
                        string SEX_NAME, 
                        string AGE, 
                        string JSFS_NAME, 
                        string IN_DATE, 
                        string IN_DIAGNOSIS, 
                        string HOME_STREET, 
                        string RELATION_NAME, 
                        string RELATION, 
                        string RELATION_TEL, 
                        string ID, 
                        string INPATIENT_ID, 
                        string BABY_ID, 
                        string OCCUPATI, 
                        string NATIONCO, 
                        string DISRICT, 
                        int WHCD, 
                        string HYZT, 
                        string TZYSSJ, 
                        string RYFS, 
                        string RYFS_QT, 
                        string PS, 
                        string PS_QT, 
                        string ZYRYZD, 
                        string FBJQ, 
                        string JWBS, 
                        string JWBS_QT, 
                        string GMS, 
                        string GMS_YW, 
                        string GMS_SW, 
                        string GMS_QT, 
                        string YS, 
                        string YS_QT, 
                        string SM, 
                        string SM_YW, 
                        string DB, 
                        string DB_ZK, 
                        string XB, 
                        string ZLNL, 
                        string ZTHD, 
                        string ZTHD_ZA, 
                        string ZTHD_TH, 
                        string DGQK, 
                        string DGQK_QT, 
                        string SMTZ_TW, 
                        string SMTZ_MB, 
                        string SMTZ_HX, 
                        string SMTZ_XY, 
                        string YSZT, 
                        string ST, 
                        string ST_QT, 
                        string SZ, 
                        string SZ_QT, 
                        string MX, 
                        string MX_QT, 
                        string PFWZX, 
                        string PFWZX_QT, 
                        string ZY, 
                        string ZY_QT, 
                        string YY, 
                        string YY_QT, 
                        string ZE, 
                        string ZE_QT, 
                        string YE, 
                        string YE_QT, 
                        string QX, 
                        string QX_QT, 
                        string ZYZT, 
                        string JSZT, 
                        string BZ, 
                        string PGHS, 
                        string PGSJ, 
                        string BOOK, 
                        string BOOK_DATE, 
                        string UPDATE, 
                        string UPDATE_DATE) {
                tabRypgRow rowtabRypgRow = ((tabRypgRow)(this.NewRow()));
                rowtabRypgRow.ItemArray = new object[] {
                        NAME,
                        IN_DEPT_NAME,
                        BED_NO,
                        INPATIENT_NO,
                        SEX_NAME,
                        AGE,
                        JSFS_NAME,
                        IN_DATE,
                        IN_DIAGNOSIS,
                        HOME_STREET,
                        RELATION_NAME,
                        RELATION,
                        RELATION_TEL,
                        ID,
                        INPATIENT_ID,
                        BABY_ID,
                        OCCUPATI,
                        NATIONCO,
                        DISRICT,
                        WHCD,
                        HYZT,
                        TZYSSJ,
                        RYFS,
                        RYFS_QT,
                        PS,
                        PS_QT,
                        ZYRYZD,
                        FBJQ,
                        JWBS,
                        JWBS_QT,
                        GMS,
                        GMS_YW,
                        GMS_SW,
                        GMS_QT,
                        YS,
                        YS_QT,
                        SM,
                        SM_YW,
                        DB,
                        DB_ZK,
                        XB,
                        ZLNL,
                        ZTHD,
                        ZTHD_ZA,
                        ZTHD_TH,
                        DGQK,
                        DGQK_QT,
                        SMTZ_TW,
                        SMTZ_MB,
                        SMTZ_HX,
                        SMTZ_XY,
                        YSZT,
                        ST,
                        ST_QT,
                        SZ,
                        SZ_QT,
                        MX,
                        MX_QT,
                        PFWZX,
                        PFWZX_QT,
                        ZY,
                        ZY_QT,
                        YY,
                        YY_QT,
                        ZE,
                        ZE_QT,
                        YE,
                        YE_QT,
                        QX,
                        QX_QT,
                        ZYZT,
                        JSZT,
                        BZ,
                        PGHS,
                        PGSJ,
                        BOOK,
                        BOOK_DATE,
                        UPDATE,
                        UPDATE_DATE};
                this.Rows.Add(rowtabRypgRow);
                return rowtabRypgRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabRypgDataTable cln = ((tabRypgDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabRypgDataTable();
            }
            
            internal void InitVars() {
                this.columnNAME = this.Columns["NAME"];
                this.columnIN_DEPT_NAME = this.Columns["IN_DEPT_NAME"];
                this.columnBED_NO = this.Columns["BED_NO"];
                this.columnINPATIENT_NO = this.Columns["INPATIENT_NO"];
                this.columnSEX_NAME = this.Columns["SEX_NAME"];
                this.columnAGE = this.Columns["AGE"];
                this.columnJSFS_NAME = this.Columns["JSFS_NAME"];
                this.columnIN_DATE = this.Columns["IN_DATE"];
                this.columnIN_DIAGNOSIS = this.Columns["IN_DIAGNOSIS"];
                this.columnHOME_STREET = this.Columns["HOME_STREET"];
                this.columnRELATION_NAME = this.Columns["RELATION_NAME"];
                this.columnRELATION = this.Columns["RELATION"];
                this.columnRELATION_TEL = this.Columns["RELATION_TEL"];
                this.columnID = this.Columns["ID"];
                this.columnINPATIENT_ID = this.Columns["INPATIENT_ID"];
                this.columnBABY_ID = this.Columns["BABY_ID"];
                this.columnOCCUPATI = this.Columns["OCCUPATI"];
                this.columnNATIONCO = this.Columns["NATIONCO"];
                this.columnDISRICT = this.Columns["DISRICT"];
                this.columnWHCD = this.Columns["WHCD"];
                this.columnHYZT = this.Columns["HYZT"];
                this.columnTZYSSJ = this.Columns["TZYSSJ"];
                this.columnRYFS = this.Columns["RYFS"];
                this.columnRYFS_QT = this.Columns["RYFS_QT"];
                this.columnPS = this.Columns["PS"];
                this.columnPS_QT = this.Columns["PS_QT"];
                this.columnZYRYZD = this.Columns["ZYRYZD"];
                this.columnFBJQ = this.Columns["FBJQ"];
                this.columnJWBS = this.Columns["JWBS"];
                this.columnJWBS_QT = this.Columns["JWBS_QT"];
                this.columnGMS = this.Columns["GMS"];
                this.columnGMS_YW = this.Columns["GMS_YW"];
                this.columnGMS_SW = this.Columns["GMS_SW"];
                this.columnGMS_QT = this.Columns["GMS_QT"];
                this.columnYS = this.Columns["YS"];
                this.columnYS_QT = this.Columns["YS_QT"];
                this.columnSM = this.Columns["SM"];
                this.columnSM_YW = this.Columns["SM_YW"];
                this.columnDB = this.Columns["DB"];
                this.columnDB_ZK = this.Columns["DB_ZK"];
                this.columnXB = this.Columns["XB"];
                this.columnZLNL = this.Columns["ZLNL"];
                this.columnZTHD = this.Columns["ZTHD"];
                this.columnZTHD_ZA = this.Columns["ZTHD_ZA"];
                this.columnZTHD_TH = this.Columns["ZTHD_TH"];
                this.columnDGQK = this.Columns["DGQK"];
                this.columnDGQK_QT = this.Columns["DGQK_QT"];
                this.columnSMTZ_TW = this.Columns["SMTZ_TW"];
                this.columnSMTZ_MB = this.Columns["SMTZ_MB"];
                this.columnSMTZ_HX = this.Columns["SMTZ_HX"];
                this.columnSMTZ_XY = this.Columns["SMTZ_XY"];
                this.columnYSZT = this.Columns["YSZT"];
                this.columnST = this.Columns["ST"];
                this.columnST_QT = this.Columns["ST_QT"];
                this.columnSZ = this.Columns["SZ"];
                this.columnSZ_QT = this.Columns["SZ_QT"];
                this.columnMX = this.Columns["MX"];
                this.columnMX_QT = this.Columns["MX_QT"];
                this.columnPFWZX = this.Columns["PFWZX"];
                this.columnPFWZX_QT = this.Columns["PFWZX_QT"];
                this.columnZY = this.Columns["ZY"];
                this.columnZY_QT = this.Columns["ZY_QT"];
                this.columnYY = this.Columns["YY"];
                this.columnYY_QT = this.Columns["YY_QT"];
                this.columnZE = this.Columns["ZE"];
                this.columnZE_QT = this.Columns["ZE_QT"];
                this.columnYE = this.Columns["YE"];
                this.columnYE_QT = this.Columns["YE_QT"];
                this.columnQX = this.Columns["QX"];
                this.columnQX_QT = this.Columns["QX_QT"];
                this.columnZYZT = this.Columns["ZYZT"];
                this.columnJSZT = this.Columns["JSZT"];
                this.columnBZ = this.Columns["BZ"];
                this.columnPGHS = this.Columns["PGHS"];
                this.columnPGSJ = this.Columns["PGSJ"];
                this.columnBOOK = this.Columns["BOOK"];
                this.columnBOOK_DATE = this.Columns["BOOK_DATE"];
                this.columnUPDATE = this.Columns["UPDATE"];
                this.columnUPDATE_DATE = this.Columns["UPDATE_DATE"];
            }
            
            private void InitClass() {
                this.columnNAME = new DataColumn("NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNAME);
                this.columnIN_DEPT_NAME = new DataColumn("IN_DEPT_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIN_DEPT_NAME);
                this.columnBED_NO = new DataColumn("BED_NO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBED_NO);
                this.columnINPATIENT_NO = new DataColumn("INPATIENT_NO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnINPATIENT_NO);
                this.columnSEX_NAME = new DataColumn("SEX_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEX_NAME);
                this.columnAGE = new DataColumn("AGE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAGE);
                this.columnJSFS_NAME = new DataColumn("JSFS_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJSFS_NAME);
                this.columnIN_DATE = new DataColumn("IN_DATE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIN_DATE);
                this.columnIN_DIAGNOSIS = new DataColumn("IN_DIAGNOSIS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIN_DIAGNOSIS);
                this.columnHOME_STREET = new DataColumn("HOME_STREET", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHOME_STREET);
                this.columnRELATION_NAME = new DataColumn("RELATION_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRELATION_NAME);
                this.columnRELATION = new DataColumn("RELATION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRELATION);
                this.columnRELATION_TEL = new DataColumn("RELATION_TEL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRELATION_TEL);
                this.columnID = new DataColumn("ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID);
                this.columnINPATIENT_ID = new DataColumn("INPATIENT_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnINPATIENT_ID);
                this.columnBABY_ID = new DataColumn("BABY_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBABY_ID);
                this.columnOCCUPATI = new DataColumn("OCCUPATI", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOCCUPATI);
                this.columnNATIONCO = new DataColumn("NATIONCO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNATIONCO);
                this.columnDISRICT = new DataColumn("DISRICT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDISRICT);
                this.columnWHCD = new DataColumn("WHCD", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWHCD);
                this.columnHYZT = new DataColumn("HYZT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHYZT);
                this.columnTZYSSJ = new DataColumn("TZYSSJ", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTZYSSJ);
                this.columnRYFS = new DataColumn("RYFS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRYFS);
                this.columnRYFS_QT = new DataColumn("RYFS_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRYFS_QT);
                this.columnPS = new DataColumn("PS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPS);
                this.columnPS_QT = new DataColumn("PS_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPS_QT);
                this.columnZYRYZD = new DataColumn("ZYRYZD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnZYRYZD);
                this.columnFBJQ = new DataColumn("FBJQ", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFBJQ);
                this.columnJWBS = new DataColumn("JWBS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJWBS);
                this.columnJWBS_QT = new DataColumn("JWBS_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJWBS_QT);
                this.columnGMS = new DataColumn("GMS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGMS);
                this.columnGMS_YW = new DataColumn("GMS_YW", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGMS_YW);
                this.columnGMS_SW = new DataColumn("GMS_SW", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGMS_SW);
                this.columnGMS_QT = new DataColumn("GMS_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGMS_QT);
                this.columnYS = new DataColumn("YS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnYS);
                this.columnYS_QT = new DataColumn("YS_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnYS_QT);
                this.columnSM = new DataColumn("SM", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSM);
                this.columnSM_YW = new DataColumn("SM_YW", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSM_YW);
                this.columnDB = new DataColumn("DB", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDB);
                this.columnDB_ZK = new DataColumn("DB_ZK", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDB_ZK);
                this.columnXB = new DataColumn("XB", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnXB);
                this.columnZLNL = new DataColumn("ZLNL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnZLNL);
                this.columnZTHD = new DataColumn("ZTHD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnZTHD);
                this.columnZTHD_ZA = new DataColumn("ZTHD_ZA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnZTHD_ZA);
                this.columnZTHD_TH = new DataColumn("ZTHD_TH", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnZTHD_TH);
                this.columnDGQK = new DataColumn("DGQK", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDGQK);
                this.columnDGQK_QT = new DataColumn("DGQK_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDGQK_QT);
                this.columnSMTZ_TW = new DataColumn("SMTZ_TW", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSMTZ_TW);
                this.columnSMTZ_MB = new DataColumn("SMTZ_MB", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSMTZ_MB);
                this.columnSMTZ_HX = new DataColumn("SMTZ_HX", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSMTZ_HX);
                this.columnSMTZ_XY = new DataColumn("SMTZ_XY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSMTZ_XY);
                this.columnYSZT = new DataColumn("YSZT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnYSZT);
                this.columnST = new DataColumn("ST", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnST);
                this.columnST_QT = new DataColumn("ST_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnST_QT);
                this.columnSZ = new DataColumn("SZ", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSZ);
                this.columnSZ_QT = new DataColumn("SZ_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSZ_QT);
                this.columnMX = new DataColumn("MX", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMX);
                this.columnMX_QT = new DataColumn("MX_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMX_QT);
                this.columnPFWZX = new DataColumn("PFWZX", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPFWZX);
                this.columnPFWZX_QT = new DataColumn("PFWZX_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPFWZX_QT);
                this.columnZY = new DataColumn("ZY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnZY);
                this.columnZY_QT = new DataColumn("ZY_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnZY_QT);
                this.columnYY = new DataColumn("YY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnYY);
                this.columnYY_QT = new DataColumn("YY_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnYY_QT);
                this.columnZE = new DataColumn("ZE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnZE);
                this.columnZE_QT = new DataColumn("ZE_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnZE_QT);
                this.columnYE = new DataColumn("YE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnYE);
                this.columnYE_QT = new DataColumn("YE_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnYE_QT);
                this.columnQX = new DataColumn("QX", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnQX);
                this.columnQX_QT = new DataColumn("QX_QT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnQX_QT);
                this.columnZYZT = new DataColumn("ZYZT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnZYZT);
                this.columnJSZT = new DataColumn("JSZT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJSZT);
                this.columnBZ = new DataColumn("BZ", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBZ);
                this.columnPGHS = new DataColumn("PGHS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPGHS);
                this.columnPGSJ = new DataColumn("PGSJ", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPGSJ);
                this.columnBOOK = new DataColumn("BOOK", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBOOK);
                this.columnBOOK_DATE = new DataColumn("BOOK_DATE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBOOK_DATE);
                this.columnUPDATE = new DataColumn("UPDATE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUPDATE);
                this.columnUPDATE_DATE = new DataColumn("UPDATE_DATE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUPDATE_DATE);
            }
            
            public tabRypgRow NewtabRypgRow() {
                return ((tabRypgRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabRypgRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabRypgRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabRypgRowChanged != null)) {
                    this.tabRypgRowChanged(this, new tabRypgRowChangeEvent(((tabRypgRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabRypgRowChanging != null)) {
                    this.tabRypgRowChanging(this, new tabRypgRowChangeEvent(((tabRypgRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabRypgRowDeleted != null)) {
                    this.tabRypgRowDeleted(this, new tabRypgRowChangeEvent(((tabRypgRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabRypgRowDeleting != null)) {
                    this.tabRypgRowDeleting(this, new tabRypgRowChangeEvent(((tabRypgRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabRypgRow(tabRypgRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabRypgRow : DataRow {
            
            private tabRypgDataTable tabletabRypg;
            
            internal tabRypgRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabRypg = ((tabRypgDataTable)(this.Table));
            }
            
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.NAMEColumn] = value;
                }
            }
            
            public string IN_DEPT_NAME {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.IN_DEPT_NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.IN_DEPT_NAMEColumn] = value;
                }
            }
            
            public string BED_NO {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.BED_NOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.BED_NOColumn] = value;
                }
            }
            
            public string INPATIENT_NO {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.INPATIENT_NOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.INPATIENT_NOColumn] = value;
                }
            }
            
            public string SEX_NAME {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.SEX_NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.SEX_NAMEColumn] = value;
                }
            }
            
            public string AGE {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.AGEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.AGEColumn] = value;
                }
            }
            
            public string JSFS_NAME {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.JSFS_NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.JSFS_NAMEColumn] = value;
                }
            }
            
            public string IN_DATE {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.IN_DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.IN_DATEColumn] = value;
                }
            }
            
            public string IN_DIAGNOSIS {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.IN_DIAGNOSISColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.IN_DIAGNOSISColumn] = value;
                }
            }
            
            public string HOME_STREET {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.HOME_STREETColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.HOME_STREETColumn] = value;
                }
            }
            
            public string RELATION_NAME {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.RELATION_NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.RELATION_NAMEColumn] = value;
                }
            }
            
            public string RELATION {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.RELATIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.RELATIONColumn] = value;
                }
            }
            
            public string RELATION_TEL {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.RELATION_TELColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.RELATION_TELColumn] = value;
                }
            }
            
            public string ID {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.IDColumn] = value;
                }
            }
            
            public string INPATIENT_ID {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.INPATIENT_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.INPATIENT_IDColumn] = value;
                }
            }
            
            public string BABY_ID {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.BABY_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.BABY_IDColumn] = value;
                }
            }
            
            public string OCCUPATI {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.OCCUPATIColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.OCCUPATIColumn] = value;
                }
            }
            
            public string NATIONCO {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.NATIONCOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.NATIONCOColumn] = value;
                }
            }
            
            public string DISRICT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.DISRICTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.DISRICTColumn] = value;
                }
            }
            
            public int WHCD {
                get {
                    try {
                        return ((int)(this[this.tabletabRypg.WHCDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.WHCDColumn] = value;
                }
            }
            
            public string HYZT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.HYZTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.HYZTColumn] = value;
                }
            }
            
            public string TZYSSJ {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.TZYSSJColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.TZYSSJColumn] = value;
                }
            }
            
            public string RYFS {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.RYFSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.RYFSColumn] = value;
                }
            }
            
            public string RYFS_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.RYFS_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.RYFS_QTColumn] = value;
                }
            }
            
            public string PS {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.PSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.PSColumn] = value;
                }
            }
            
            public string PS_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.PS_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.PS_QTColumn] = value;
                }
            }
            
            public string ZYRYZD {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.ZYRYZDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.ZYRYZDColumn] = value;
                }
            }
            
            public string FBJQ {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.FBJQColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.FBJQColumn] = value;
                }
            }
            
            public string JWBS {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.JWBSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.JWBSColumn] = value;
                }
            }
            
            public string JWBS_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.JWBS_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.JWBS_QTColumn] = value;
                }
            }
            
            public string GMS {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.GMSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.GMSColumn] = value;
                }
            }
            
            public string GMS_YW {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.GMS_YWColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.GMS_YWColumn] = value;
                }
            }
            
            public string GMS_SW {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.GMS_SWColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.GMS_SWColumn] = value;
                }
            }
            
            public string GMS_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.GMS_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.GMS_QTColumn] = value;
                }
            }
            
            public string YS {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.YSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.YSColumn] = value;
                }
            }
            
            public string YS_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.YS_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.YS_QTColumn] = value;
                }
            }
            
            public string SM {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.SMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.SMColumn] = value;
                }
            }
            
            public string SM_YW {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.SM_YWColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.SM_YWColumn] = value;
                }
            }
            
            public string DB {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.DBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.DBColumn] = value;
                }
            }
            
            public string DB_ZK {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.DB_ZKColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.DB_ZKColumn] = value;
                }
            }
            
            public string XB {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.XBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.XBColumn] = value;
                }
            }
            
            public string ZLNL {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.ZLNLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.ZLNLColumn] = value;
                }
            }
            
            public string ZTHD {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.ZTHDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.ZTHDColumn] = value;
                }
            }
            
            public string ZTHD_ZA {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.ZTHD_ZAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.ZTHD_ZAColumn] = value;
                }
            }
            
            public string ZTHD_TH {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.ZTHD_THColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.ZTHD_THColumn] = value;
                }
            }
            
            public string DGQK {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.DGQKColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.DGQKColumn] = value;
                }
            }
            
            public string DGQK_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.DGQK_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.DGQK_QTColumn] = value;
                }
            }
            
            public string SMTZ_TW {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.SMTZ_TWColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.SMTZ_TWColumn] = value;
                }
            }
            
            public string SMTZ_MB {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.SMTZ_MBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.SMTZ_MBColumn] = value;
                }
            }
            
            public string SMTZ_HX {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.SMTZ_HXColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.SMTZ_HXColumn] = value;
                }
            }
            
            public string SMTZ_XY {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.SMTZ_XYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.SMTZ_XYColumn] = value;
                }
            }
            
            public string YSZT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.YSZTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.YSZTColumn] = value;
                }
            }
            
            public string ST {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.STColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.STColumn] = value;
                }
            }
            
            public string ST_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.ST_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.ST_QTColumn] = value;
                }
            }
            
            public string SZ {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.SZColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.SZColumn] = value;
                }
            }
            
            public string SZ_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.SZ_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.SZ_QTColumn] = value;
                }
            }
            
            public string MX {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.MXColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.MXColumn] = value;
                }
            }
            
            public string MX_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.MX_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.MX_QTColumn] = value;
                }
            }
            
            public string PFWZX {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.PFWZXColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.PFWZXColumn] = value;
                }
            }
            
            public string PFWZX_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.PFWZX_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.PFWZX_QTColumn] = value;
                }
            }
            
            public string ZY {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.ZYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.ZYColumn] = value;
                }
            }
            
            public string ZY_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.ZY_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.ZY_QTColumn] = value;
                }
            }
            
            public string YY {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.YYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.YYColumn] = value;
                }
            }
            
            public string YY_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.YY_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.YY_QTColumn] = value;
                }
            }
            
            public string ZE {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.ZEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.ZEColumn] = value;
                }
            }
            
            public string ZE_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.ZE_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.ZE_QTColumn] = value;
                }
            }
            
            public string YE {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.YEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.YEColumn] = value;
                }
            }
            
            public string YE_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.YE_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.YE_QTColumn] = value;
                }
            }
            
            public string QX {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.QXColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.QXColumn] = value;
                }
            }
            
            public string QX_QT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.QX_QTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.QX_QTColumn] = value;
                }
            }
            
            public string ZYZT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.ZYZTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.ZYZTColumn] = value;
                }
            }
            
            public string JSZT {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.JSZTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.JSZTColumn] = value;
                }
            }
            
            public string BZ {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.BZColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.BZColumn] = value;
                }
            }
            
            public string PGHS {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.PGHSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.PGHSColumn] = value;
                }
            }
            
            public string PGSJ {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.PGSJColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.PGSJColumn] = value;
                }
            }
            
            public string BOOK {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.BOOKColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.BOOKColumn] = value;
                }
            }
            
            public string BOOK_DATE {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.BOOK_DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.BOOK_DATEColumn] = value;
                }
            }
            
            public string UPDATE {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.UPDATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.UPDATEColumn] = value;
                }
            }
            
            public string UPDATE_DATE {
                get {
                    try {
                        return ((string)(this[this.tabletabRypg.UPDATE_DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabRypg.UPDATE_DATEColumn] = value;
                }
            }
            
            public bool IsNAMENull() {
                return this.IsNull(this.tabletabRypg.NAMEColumn);
            }
            
            public void SetNAMENull() {
                this[this.tabletabRypg.NAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsIN_DEPT_NAMENull() {
                return this.IsNull(this.tabletabRypg.IN_DEPT_NAMEColumn);
            }
            
            public void SetIN_DEPT_NAMENull() {
                this[this.tabletabRypg.IN_DEPT_NAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsBED_NONull() {
                return this.IsNull(this.tabletabRypg.BED_NOColumn);
            }
            
            public void SetBED_NONull() {
                this[this.tabletabRypg.BED_NOColumn] = System.Convert.DBNull;
            }
            
            public bool IsINPATIENT_NONull() {
                return this.IsNull(this.tabletabRypg.INPATIENT_NOColumn);
            }
            
            public void SetINPATIENT_NONull() {
                this[this.tabletabRypg.INPATIENT_NOColumn] = System.Convert.DBNull;
            }
            
            public bool IsSEX_NAMENull() {
                return this.IsNull(this.tabletabRypg.SEX_NAMEColumn);
            }
            
            public void SetSEX_NAMENull() {
                this[this.tabletabRypg.SEX_NAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsAGENull() {
                return this.IsNull(this.tabletabRypg.AGEColumn);
            }
            
            public void SetAGENull() {
                this[this.tabletabRypg.AGEColumn] = System.Convert.DBNull;
            }
            
            public bool IsJSFS_NAMENull() {
                return this.IsNull(this.tabletabRypg.JSFS_NAMEColumn);
            }
            
            public void SetJSFS_NAMENull() {
                this[this.tabletabRypg.JSFS_NAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsIN_DATENull() {
                return this.IsNull(this.tabletabRypg.IN_DATEColumn);
            }
            
            public void SetIN_DATENull() {
                this[this.tabletabRypg.IN_DATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsIN_DIAGNOSISNull() {
                return this.IsNull(this.tabletabRypg.IN_DIAGNOSISColumn);
            }
            
            public void SetIN_DIAGNOSISNull() {
                this[this.tabletabRypg.IN_DIAGNOSISColumn] = System.Convert.DBNull;
            }
            
            public bool IsHOME_STREETNull() {
                return this.IsNull(this.tabletabRypg.HOME_STREETColumn);
            }
            
            public void SetHOME_STREETNull() {
                this[this.tabletabRypg.HOME_STREETColumn] = System.Convert.DBNull;
            }
            
            public bool IsRELATION_NAMENull() {
                return this.IsNull(this.tabletabRypg.RELATION_NAMEColumn);
            }
            
            public void SetRELATION_NAMENull() {
                this[this.tabletabRypg.RELATION_NAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsRELATIONNull() {
                return this.IsNull(this.tabletabRypg.RELATIONColumn);
            }
            
            public void SetRELATIONNull() {
                this[this.tabletabRypg.RELATIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsRELATION_TELNull() {
                return this.IsNull(this.tabletabRypg.RELATION_TELColumn);
            }
            
            public void SetRELATION_TELNull() {
                this[this.tabletabRypg.RELATION_TELColumn] = System.Convert.DBNull;
            }
            
            public bool IsIDNull() {
                return this.IsNull(this.tabletabRypg.IDColumn);
            }
            
            public void SetIDNull() {
                this[this.tabletabRypg.IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsINPATIENT_IDNull() {
                return this.IsNull(this.tabletabRypg.INPATIENT_IDColumn);
            }
            
            public void SetINPATIENT_IDNull() {
                this[this.tabletabRypg.INPATIENT_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsBABY_IDNull() {
                return this.IsNull(this.tabletabRypg.BABY_IDColumn);
            }
            
            public void SetBABY_IDNull() {
                this[this.tabletabRypg.BABY_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsOCCUPATINull() {
                return this.IsNull(this.tabletabRypg.OCCUPATIColumn);
            }
            
            public void SetOCCUPATINull() {
                this[this.tabletabRypg.OCCUPATIColumn] = System.Convert.DBNull;
            }
            
            public bool IsNATIONCONull() {
                return this.IsNull(this.tabletabRypg.NATIONCOColumn);
            }
            
            public void SetNATIONCONull() {
                this[this.tabletabRypg.NATIONCOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDISRICTNull() {
                return this.IsNull(this.tabletabRypg.DISRICTColumn);
            }
            
            public void SetDISRICTNull() {
                this[this.tabletabRypg.DISRICTColumn] = System.Convert.DBNull;
            }
            
            public bool IsWHCDNull() {
                return this.IsNull(this.tabletabRypg.WHCDColumn);
            }
            
            public void SetWHCDNull() {
                this[this.tabletabRypg.WHCDColumn] = System.Convert.DBNull;
            }
            
            public bool IsHYZTNull() {
                return this.IsNull(this.tabletabRypg.HYZTColumn);
            }
            
            public void SetHYZTNull() {
                this[this.tabletabRypg.HYZTColumn] = System.Convert.DBNull;
            }
            
            public bool IsTZYSSJNull() {
                return this.IsNull(this.tabletabRypg.TZYSSJColumn);
            }
            
            public void SetTZYSSJNull() {
                this[this.tabletabRypg.TZYSSJColumn] = System.Convert.DBNull;
            }
            
            public bool IsRYFSNull() {
                return this.IsNull(this.tabletabRypg.RYFSColumn);
            }
            
            public void SetRYFSNull() {
                this[this.tabletabRypg.RYFSColumn] = System.Convert.DBNull;
            }
            
            public bool IsRYFS_QTNull() {
                return this.IsNull(this.tabletabRypg.RYFS_QTColumn);
            }
            
            public void SetRYFS_QTNull() {
                this[this.tabletabRypg.RYFS_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsPSNull() {
                return this.IsNull(this.tabletabRypg.PSColumn);
            }
            
            public void SetPSNull() {
                this[this.tabletabRypg.PSColumn] = System.Convert.DBNull;
            }
            
            public bool IsPS_QTNull() {
                return this.IsNull(this.tabletabRypg.PS_QTColumn);
            }
            
            public void SetPS_QTNull() {
                this[this.tabletabRypg.PS_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsZYRYZDNull() {
                return this.IsNull(this.tabletabRypg.ZYRYZDColumn);
            }
            
            public void SetZYRYZDNull() {
                this[this.tabletabRypg.ZYRYZDColumn] = System.Convert.DBNull;
            }
            
            public bool IsFBJQNull() {
                return this.IsNull(this.tabletabRypg.FBJQColumn);
            }
            
            public void SetFBJQNull() {
                this[this.tabletabRypg.FBJQColumn] = System.Convert.DBNull;
            }
            
            public bool IsJWBSNull() {
                return this.IsNull(this.tabletabRypg.JWBSColumn);
            }
            
            public void SetJWBSNull() {
                this[this.tabletabRypg.JWBSColumn] = System.Convert.DBNull;
            }
            
            public bool IsJWBS_QTNull() {
                return this.IsNull(this.tabletabRypg.JWBS_QTColumn);
            }
            
            public void SetJWBS_QTNull() {
                this[this.tabletabRypg.JWBS_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsGMSNull() {
                return this.IsNull(this.tabletabRypg.GMSColumn);
            }
            
            public void SetGMSNull() {
                this[this.tabletabRypg.GMSColumn] = System.Convert.DBNull;
            }
            
            public bool IsGMS_YWNull() {
                return this.IsNull(this.tabletabRypg.GMS_YWColumn);
            }
            
            public void SetGMS_YWNull() {
                this[this.tabletabRypg.GMS_YWColumn] = System.Convert.DBNull;
            }
            
            public bool IsGMS_SWNull() {
                return this.IsNull(this.tabletabRypg.GMS_SWColumn);
            }
            
            public void SetGMS_SWNull() {
                this[this.tabletabRypg.GMS_SWColumn] = System.Convert.DBNull;
            }
            
            public bool IsGMS_QTNull() {
                return this.IsNull(this.tabletabRypg.GMS_QTColumn);
            }
            
            public void SetGMS_QTNull() {
                this[this.tabletabRypg.GMS_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsYSNull() {
                return this.IsNull(this.tabletabRypg.YSColumn);
            }
            
            public void SetYSNull() {
                this[this.tabletabRypg.YSColumn] = System.Convert.DBNull;
            }
            
            public bool IsYS_QTNull() {
                return this.IsNull(this.tabletabRypg.YS_QTColumn);
            }
            
            public void SetYS_QTNull() {
                this[this.tabletabRypg.YS_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsSMNull() {
                return this.IsNull(this.tabletabRypg.SMColumn);
            }
            
            public void SetSMNull() {
                this[this.tabletabRypg.SMColumn] = System.Convert.DBNull;
            }
            
            public bool IsSM_YWNull() {
                return this.IsNull(this.tabletabRypg.SM_YWColumn);
            }
            
            public void SetSM_YWNull() {
                this[this.tabletabRypg.SM_YWColumn] = System.Convert.DBNull;
            }
            
            public bool IsDBNull() {
                return this.IsNull(this.tabletabRypg.DBColumn);
            }
            
            public void SetDBNull() {
                this[this.tabletabRypg.DBColumn] = System.Convert.DBNull;
            }
            
            public bool IsDB_ZKNull() {
                return this.IsNull(this.tabletabRypg.DB_ZKColumn);
            }
            
            public void SetDB_ZKNull() {
                this[this.tabletabRypg.DB_ZKColumn] = System.Convert.DBNull;
            }
            
            public bool IsXBNull() {
                return this.IsNull(this.tabletabRypg.XBColumn);
            }
            
            public void SetXBNull() {
                this[this.tabletabRypg.XBColumn] = System.Convert.DBNull;
            }
            
            public bool IsZLNLNull() {
                return this.IsNull(this.tabletabRypg.ZLNLColumn);
            }
            
            public void SetZLNLNull() {
                this[this.tabletabRypg.ZLNLColumn] = System.Convert.DBNull;
            }
            
            public bool IsZTHDNull() {
                return this.IsNull(this.tabletabRypg.ZTHDColumn);
            }
            
            public void SetZTHDNull() {
                this[this.tabletabRypg.ZTHDColumn] = System.Convert.DBNull;
            }
            
            public bool IsZTHD_ZANull() {
                return this.IsNull(this.tabletabRypg.ZTHD_ZAColumn);
            }
            
            public void SetZTHD_ZANull() {
                this[this.tabletabRypg.ZTHD_ZAColumn] = System.Convert.DBNull;
            }
            
            public bool IsZTHD_THNull() {
                return this.IsNull(this.tabletabRypg.ZTHD_THColumn);
            }
            
            public void SetZTHD_THNull() {
                this[this.tabletabRypg.ZTHD_THColumn] = System.Convert.DBNull;
            }
            
            public bool IsDGQKNull() {
                return this.IsNull(this.tabletabRypg.DGQKColumn);
            }
            
            public void SetDGQKNull() {
                this[this.tabletabRypg.DGQKColumn] = System.Convert.DBNull;
            }
            
            public bool IsDGQK_QTNull() {
                return this.IsNull(this.tabletabRypg.DGQK_QTColumn);
            }
            
            public void SetDGQK_QTNull() {
                this[this.tabletabRypg.DGQK_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsSMTZ_TWNull() {
                return this.IsNull(this.tabletabRypg.SMTZ_TWColumn);
            }
            
            public void SetSMTZ_TWNull() {
                this[this.tabletabRypg.SMTZ_TWColumn] = System.Convert.DBNull;
            }
            
            public bool IsSMTZ_MBNull() {
                return this.IsNull(this.tabletabRypg.SMTZ_MBColumn);
            }
            
            public void SetSMTZ_MBNull() {
                this[this.tabletabRypg.SMTZ_MBColumn] = System.Convert.DBNull;
            }
            
            public bool IsSMTZ_HXNull() {
                return this.IsNull(this.tabletabRypg.SMTZ_HXColumn);
            }
            
            public void SetSMTZ_HXNull() {
                this[this.tabletabRypg.SMTZ_HXColumn] = System.Convert.DBNull;
            }
            
            public bool IsSMTZ_XYNull() {
                return this.IsNull(this.tabletabRypg.SMTZ_XYColumn);
            }
            
            public void SetSMTZ_XYNull() {
                this[this.tabletabRypg.SMTZ_XYColumn] = System.Convert.DBNull;
            }
            
            public bool IsYSZTNull() {
                return this.IsNull(this.tabletabRypg.YSZTColumn);
            }
            
            public void SetYSZTNull() {
                this[this.tabletabRypg.YSZTColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTNull() {
                return this.IsNull(this.tabletabRypg.STColumn);
            }
            
            public void SetSTNull() {
                this[this.tabletabRypg.STColumn] = System.Convert.DBNull;
            }
            
            public bool IsST_QTNull() {
                return this.IsNull(this.tabletabRypg.ST_QTColumn);
            }
            
            public void SetST_QTNull() {
                this[this.tabletabRypg.ST_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsSZNull() {
                return this.IsNull(this.tabletabRypg.SZColumn);
            }
            
            public void SetSZNull() {
                this[this.tabletabRypg.SZColumn] = System.Convert.DBNull;
            }
            
            public bool IsSZ_QTNull() {
                return this.IsNull(this.tabletabRypg.SZ_QTColumn);
            }
            
            public void SetSZ_QTNull() {
                this[this.tabletabRypg.SZ_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsMXNull() {
                return this.IsNull(this.tabletabRypg.MXColumn);
            }
            
            public void SetMXNull() {
                this[this.tabletabRypg.MXColumn] = System.Convert.DBNull;
            }
            
            public bool IsMX_QTNull() {
                return this.IsNull(this.tabletabRypg.MX_QTColumn);
            }
            
            public void SetMX_QTNull() {
                this[this.tabletabRypg.MX_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsPFWZXNull() {
                return this.IsNull(this.tabletabRypg.PFWZXColumn);
            }
            
            public void SetPFWZXNull() {
                this[this.tabletabRypg.PFWZXColumn] = System.Convert.DBNull;
            }
            
            public bool IsPFWZX_QTNull() {
                return this.IsNull(this.tabletabRypg.PFWZX_QTColumn);
            }
            
            public void SetPFWZX_QTNull() {
                this[this.tabletabRypg.PFWZX_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsZYNull() {
                return this.IsNull(this.tabletabRypg.ZYColumn);
            }
            
            public void SetZYNull() {
                this[this.tabletabRypg.ZYColumn] = System.Convert.DBNull;
            }
            
            public bool IsZY_QTNull() {
                return this.IsNull(this.tabletabRypg.ZY_QTColumn);
            }
            
            public void SetZY_QTNull() {
                this[this.tabletabRypg.ZY_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsYYNull() {
                return this.IsNull(this.tabletabRypg.YYColumn);
            }
            
            public void SetYYNull() {
                this[this.tabletabRypg.YYColumn] = System.Convert.DBNull;
            }
            
            public bool IsYY_QTNull() {
                return this.IsNull(this.tabletabRypg.YY_QTColumn);
            }
            
            public void SetYY_QTNull() {
                this[this.tabletabRypg.YY_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsZENull() {
                return this.IsNull(this.tabletabRypg.ZEColumn);
            }
            
            public void SetZENull() {
                this[this.tabletabRypg.ZEColumn] = System.Convert.DBNull;
            }
            
            public bool IsZE_QTNull() {
                return this.IsNull(this.tabletabRypg.ZE_QTColumn);
            }
            
            public void SetZE_QTNull() {
                this[this.tabletabRypg.ZE_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsYENull() {
                return this.IsNull(this.tabletabRypg.YEColumn);
            }
            
            public void SetYENull() {
                this[this.tabletabRypg.YEColumn] = System.Convert.DBNull;
            }
            
            public bool IsYE_QTNull() {
                return this.IsNull(this.tabletabRypg.YE_QTColumn);
            }
            
            public void SetYE_QTNull() {
                this[this.tabletabRypg.YE_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsQXNull() {
                return this.IsNull(this.tabletabRypg.QXColumn);
            }
            
            public void SetQXNull() {
                this[this.tabletabRypg.QXColumn] = System.Convert.DBNull;
            }
            
            public bool IsQX_QTNull() {
                return this.IsNull(this.tabletabRypg.QX_QTColumn);
            }
            
            public void SetQX_QTNull() {
                this[this.tabletabRypg.QX_QTColumn] = System.Convert.DBNull;
            }
            
            public bool IsZYZTNull() {
                return this.IsNull(this.tabletabRypg.ZYZTColumn);
            }
            
            public void SetZYZTNull() {
                this[this.tabletabRypg.ZYZTColumn] = System.Convert.DBNull;
            }
            
            public bool IsJSZTNull() {
                return this.IsNull(this.tabletabRypg.JSZTColumn);
            }
            
            public void SetJSZTNull() {
                this[this.tabletabRypg.JSZTColumn] = System.Convert.DBNull;
            }
            
            public bool IsBZNull() {
                return this.IsNull(this.tabletabRypg.BZColumn);
            }
            
            public void SetBZNull() {
                this[this.tabletabRypg.BZColumn] = System.Convert.DBNull;
            }
            
            public bool IsPGHSNull() {
                return this.IsNull(this.tabletabRypg.PGHSColumn);
            }
            
            public void SetPGHSNull() {
                this[this.tabletabRypg.PGHSColumn] = System.Convert.DBNull;
            }
            
            public bool IsPGSJNull() {
                return this.IsNull(this.tabletabRypg.PGSJColumn);
            }
            
            public void SetPGSJNull() {
                this[this.tabletabRypg.PGSJColumn] = System.Convert.DBNull;
            }
            
            public bool IsBOOKNull() {
                return this.IsNull(this.tabletabRypg.BOOKColumn);
            }
            
            public void SetBOOKNull() {
                this[this.tabletabRypg.BOOKColumn] = System.Convert.DBNull;
            }
            
            public bool IsBOOK_DATENull() {
                return this.IsNull(this.tabletabRypg.BOOK_DATEColumn);
            }
            
            public void SetBOOK_DATENull() {
                this[this.tabletabRypg.BOOK_DATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsUPDATENull() {
                return this.IsNull(this.tabletabRypg.UPDATEColumn);
            }
            
            public void SetUPDATENull() {
                this[this.tabletabRypg.UPDATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsUPDATE_DATENull() {
                return this.IsNull(this.tabletabRypg.UPDATE_DATEColumn);
            }
            
            public void SetUPDATE_DATENull() {
                this[this.tabletabRypg.UPDATE_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabRypgRowChangeEvent : EventArgs {
            
            private tabRypgRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabRypgRowChangeEvent(tabRypgRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabRypgRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabpbbDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column组号;
            
            private DataColumn column姓名;
            
            private DataColumn columnNAME1;
            
            private DataColumn columnNAME2;
            
            private DataColumn columnNAME3;
            
            private DataColumn columnNAME4;
            
            private DataColumn columnNAME5;
            
            private DataColumn columnNAME6;
            
            private DataColumn columnNAME7;
            
            internal tabpbbDataTable() : 
                    base("tabpbb") {
                this.InitClass();
            }
            
            internal tabpbbDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 组号Column {
                get {
                    return this.column组号;
                }
            }
            
            internal DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            internal DataColumn NAME1Column {
                get {
                    return this.columnNAME1;
                }
            }
            
            internal DataColumn NAME2Column {
                get {
                    return this.columnNAME2;
                }
            }
            
            internal DataColumn NAME3Column {
                get {
                    return this.columnNAME3;
                }
            }
            
            internal DataColumn NAME4Column {
                get {
                    return this.columnNAME4;
                }
            }
            
            internal DataColumn NAME5Column {
                get {
                    return this.columnNAME5;
                }
            }
            
            internal DataColumn NAME6Column {
                get {
                    return this.columnNAME6;
                }
            }
            
            internal DataColumn NAME7Column {
                get {
                    return this.columnNAME7;
                }
            }
            
            public tabpbbRow this[int index] {
                get {
                    return ((tabpbbRow)(this.Rows[index]));
                }
            }
            
            public event tabpbbRowChangeEventHandler tabpbbRowChanged;
            
            public event tabpbbRowChangeEventHandler tabpbbRowChanging;
            
            public event tabpbbRowChangeEventHandler tabpbbRowDeleted;
            
            public event tabpbbRowChangeEventHandler tabpbbRowDeleting;
            
            public void AddtabpbbRow(tabpbbRow row) {
                this.Rows.Add(row);
            }
            
            public tabpbbRow AddtabpbbRow(string 组号, string 姓名, string NAME1, string NAME2, string NAME3, string NAME4, string NAME5, string NAME6, string NAME7) {
                tabpbbRow rowtabpbbRow = ((tabpbbRow)(this.NewRow()));
                rowtabpbbRow.ItemArray = new object[] {
                        组号,
                        姓名,
                        NAME1,
                        NAME2,
                        NAME3,
                        NAME4,
                        NAME5,
                        NAME6,
                        NAME7};
                this.Rows.Add(rowtabpbbRow);
                return rowtabpbbRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabpbbDataTable cln = ((tabpbbDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabpbbDataTable();
            }
            
            internal void InitVars() {
                this.column组号 = this.Columns["组号"];
                this.column姓名 = this.Columns["姓名"];
                this.columnNAME1 = this.Columns["NAME1"];
                this.columnNAME2 = this.Columns["NAME2"];
                this.columnNAME3 = this.Columns["NAME3"];
                this.columnNAME4 = this.Columns["NAME4"];
                this.columnNAME5 = this.Columns["NAME5"];
                this.columnNAME6 = this.Columns["NAME6"];
                this.columnNAME7 = this.Columns["NAME7"];
            }
            
            private void InitClass() {
                this.column组号 = new DataColumn("组号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column组号);
                this.column姓名 = new DataColumn("姓名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column姓名);
                this.columnNAME1 = new DataColumn("NAME1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNAME1);
                this.columnNAME2 = new DataColumn("NAME2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNAME2);
                this.columnNAME3 = new DataColumn("NAME3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNAME3);
                this.columnNAME4 = new DataColumn("NAME4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNAME4);
                this.columnNAME5 = new DataColumn("NAME5", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNAME5);
                this.columnNAME6 = new DataColumn("NAME6", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNAME6);
                this.columnNAME7 = new DataColumn("NAME7", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNAME7);
            }
            
            public tabpbbRow NewtabpbbRow() {
                return ((tabpbbRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabpbbRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabpbbRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabpbbRowChanged != null)) {
                    this.tabpbbRowChanged(this, new tabpbbRowChangeEvent(((tabpbbRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabpbbRowChanging != null)) {
                    this.tabpbbRowChanging(this, new tabpbbRowChangeEvent(((tabpbbRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabpbbRowDeleted != null)) {
                    this.tabpbbRowDeleted(this, new tabpbbRowChangeEvent(((tabpbbRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabpbbRowDeleting != null)) {
                    this.tabpbbRowDeleting(this, new tabpbbRowChangeEvent(((tabpbbRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabpbbRow(tabpbbRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabpbbRow : DataRow {
            
            private tabpbbDataTable tabletabpbb;
            
            internal tabpbbRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabpbb = ((tabpbbDataTable)(this.Table));
            }
            
            public string 组号 {
                get {
                    try {
                        return ((string)(this[this.tabletabpbb.组号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabpbb.组号Column] = value;
                }
            }
            
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.tabletabpbb.姓名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabpbb.姓名Column] = value;
                }
            }
            
            public string NAME1 {
                get {
                    try {
                        return ((string)(this[this.tabletabpbb.NAME1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabpbb.NAME1Column] = value;
                }
            }
            
            public string NAME2 {
                get {
                    try {
                        return ((string)(this[this.tabletabpbb.NAME2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabpbb.NAME2Column] = value;
                }
            }
            
            public string NAME3 {
                get {
                    try {
                        return ((string)(this[this.tabletabpbb.NAME3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabpbb.NAME3Column] = value;
                }
            }
            
            public string NAME4 {
                get {
                    try {
                        return ((string)(this[this.tabletabpbb.NAME4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabpbb.NAME4Column] = value;
                }
            }
            
            public string NAME5 {
                get {
                    try {
                        return ((string)(this[this.tabletabpbb.NAME5Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabpbb.NAME5Column] = value;
                }
            }
            
            public string NAME6 {
                get {
                    try {
                        return ((string)(this[this.tabletabpbb.NAME6Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabpbb.NAME6Column] = value;
                }
            }
            
            public string NAME7 {
                get {
                    try {
                        return ((string)(this[this.tabletabpbb.NAME7Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabpbb.NAME7Column] = value;
                }
            }
            
            public bool Is组号Null() {
                return this.IsNull(this.tabletabpbb.组号Column);
            }
            
            public void Set组号Null() {
                this[this.tabletabpbb.组号Column] = System.Convert.DBNull;
            }
            
            public bool Is姓名Null() {
                return this.IsNull(this.tabletabpbb.姓名Column);
            }
            
            public void Set姓名Null() {
                this[this.tabletabpbb.姓名Column] = System.Convert.DBNull;
            }
            
            public bool IsNAME1Null() {
                return this.IsNull(this.tabletabpbb.NAME1Column);
            }
            
            public void SetNAME1Null() {
                this[this.tabletabpbb.NAME1Column] = System.Convert.DBNull;
            }
            
            public bool IsNAME2Null() {
                return this.IsNull(this.tabletabpbb.NAME2Column);
            }
            
            public void SetNAME2Null() {
                this[this.tabletabpbb.NAME2Column] = System.Convert.DBNull;
            }
            
            public bool IsNAME3Null() {
                return this.IsNull(this.tabletabpbb.NAME3Column);
            }
            
            public void SetNAME3Null() {
                this[this.tabletabpbb.NAME3Column] = System.Convert.DBNull;
            }
            
            public bool IsNAME4Null() {
                return this.IsNull(this.tabletabpbb.NAME4Column);
            }
            
            public void SetNAME4Null() {
                this[this.tabletabpbb.NAME4Column] = System.Convert.DBNull;
            }
            
            public bool IsNAME5Null() {
                return this.IsNull(this.tabletabpbb.NAME5Column);
            }
            
            public void SetNAME5Null() {
                this[this.tabletabpbb.NAME5Column] = System.Convert.DBNull;
            }
            
            public bool IsNAME6Null() {
                return this.IsNull(this.tabletabpbb.NAME6Column);
            }
            
            public void SetNAME6Null() {
                this[this.tabletabpbb.NAME6Column] = System.Convert.DBNull;
            }
            
            public bool IsNAME7Null() {
                return this.IsNull(this.tabletabpbb.NAME7Column);
            }
            
            public void SetNAME7Null() {
                this[this.tabletabpbb.NAME7Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabpbbRowChangeEvent : EventArgs {
            
            private tabpbbRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabpbbRowChangeEvent(tabpbbRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabpbbRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabPbgzlDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column组次;
            
            private DataColumn column姓名;
            
            private DataColumn column白班;
            
            private DataColumn column中班;
            
            private DataColumn column助中班;
            
            private DataColumn column晚班;
            
            private DataColumn column助晚班;
            
            private DataColumn column夜班;
            
            private DataColumn column医嘱班;
            
            private DataColumn column公休假;
            
            private DataColumn column产假;
            
            private DataColumn column计生假;
            
            private DataColumn column婚假;
            
            private DataColumn column丧假;
            
            private DataColumn column休;
            
            private DataColumn column病休;
            
            private DataColumn column探亲;
            
            private DataColumn column事假;
            
            private DataColumn column上午休;
            
            private DataColumn column下午休;
            
            private DataColumn column补休;
            
            private DataColumn column导乐;
            
            private DataColumn column甲组;
            
            private DataColumn column乙组;
            
            internal tabPbgzlDataTable() : 
                    base("tabPbgzl") {
                this.InitClass();
            }
            
            internal tabPbgzlDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 组次Column {
                get {
                    return this.column组次;
                }
            }
            
            internal DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            internal DataColumn 白班Column {
                get {
                    return this.column白班;
                }
            }
            
            internal DataColumn 中班Column {
                get {
                    return this.column中班;
                }
            }
            
            internal DataColumn 助中班Column {
                get {
                    return this.column助中班;
                }
            }
            
            internal DataColumn 晚班Column {
                get {
                    return this.column晚班;
                }
            }
            
            internal DataColumn 助晚班Column {
                get {
                    return this.column助晚班;
                }
            }
            
            internal DataColumn 夜班Column {
                get {
                    return this.column夜班;
                }
            }
            
            internal DataColumn 医嘱班Column {
                get {
                    return this.column医嘱班;
                }
            }
            
            internal DataColumn 公休假Column {
                get {
                    return this.column公休假;
                }
            }
            
            internal DataColumn 产假Column {
                get {
                    return this.column产假;
                }
            }
            
            internal DataColumn 计生假Column {
                get {
                    return this.column计生假;
                }
            }
            
            internal DataColumn 婚假Column {
                get {
                    return this.column婚假;
                }
            }
            
            internal DataColumn 丧假Column {
                get {
                    return this.column丧假;
                }
            }
            
            internal DataColumn 休Column {
                get {
                    return this.column休;
                }
            }
            
            internal DataColumn 病休Column {
                get {
                    return this.column病休;
                }
            }
            
            internal DataColumn 探亲Column {
                get {
                    return this.column探亲;
                }
            }
            
            internal DataColumn 事假Column {
                get {
                    return this.column事假;
                }
            }
            
            internal DataColumn 上午休Column {
                get {
                    return this.column上午休;
                }
            }
            
            internal DataColumn 下午休Column {
                get {
                    return this.column下午休;
                }
            }
            
            internal DataColumn 补休Column {
                get {
                    return this.column补休;
                }
            }
            
            internal DataColumn 导乐Column {
                get {
                    return this.column导乐;
                }
            }
            
            internal DataColumn 甲组Column {
                get {
                    return this.column甲组;
                }
            }
            
            internal DataColumn 乙组Column {
                get {
                    return this.column乙组;
                }
            }
            
            public tabPbgzlRow this[int index] {
                get {
                    return ((tabPbgzlRow)(this.Rows[index]));
                }
            }
            
            public event tabPbgzlRowChangeEventHandler tabPbgzlRowChanged;
            
            public event tabPbgzlRowChangeEventHandler tabPbgzlRowChanging;
            
            public event tabPbgzlRowChangeEventHandler tabPbgzlRowDeleted;
            
            public event tabPbgzlRowChangeEventHandler tabPbgzlRowDeleting;
            
            public void AddtabPbgzlRow(tabPbgzlRow row) {
                this.Rows.Add(row);
            }
            
            public tabPbgzlRow AddtabPbgzlRow(
                        string 组次, 
                        string 姓名, 
                        long 白班, 
                        long 中班, 
                        long 助中班, 
                        long 晚班, 
                        long 助晚班, 
                        long 夜班, 
                        long 医嘱班, 
                        long 公休假, 
                        long 产假, 
                        long 计生假, 
                        long 婚假, 
                        long 丧假, 
                        long 休, 
                        long 病休, 
                        long 探亲, 
                        long 事假, 
                        long 上午休, 
                        long 下午休, 
                        long 补休, 
                        long 导乐, 
                        long 甲组, 
                        long 乙组) {
                tabPbgzlRow rowtabPbgzlRow = ((tabPbgzlRow)(this.NewRow()));
                rowtabPbgzlRow.ItemArray = new object[] {
                        组次,
                        姓名,
                        白班,
                        中班,
                        助中班,
                        晚班,
                        助晚班,
                        夜班,
                        医嘱班,
                        公休假,
                        产假,
                        计生假,
                        婚假,
                        丧假,
                        休,
                        病休,
                        探亲,
                        事假,
                        上午休,
                        下午休,
                        补休,
                        导乐,
                        甲组,
                        乙组};
                this.Rows.Add(rowtabPbgzlRow);
                return rowtabPbgzlRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabPbgzlDataTable cln = ((tabPbgzlDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabPbgzlDataTable();
            }
            
            internal void InitVars() {
                this.column组次 = this.Columns["组次"];
                this.column姓名 = this.Columns["姓名"];
                this.column白班 = this.Columns["白班"];
                this.column中班 = this.Columns["中班"];
                this.column助中班 = this.Columns["助中班"];
                this.column晚班 = this.Columns["晚班"];
                this.column助晚班 = this.Columns["助晚班"];
                this.column夜班 = this.Columns["夜班"];
                this.column医嘱班 = this.Columns["医嘱班"];
                this.column公休假 = this.Columns["公休假"];
                this.column产假 = this.Columns["产假"];
                this.column计生假 = this.Columns["计生假"];
                this.column婚假 = this.Columns["婚假"];
                this.column丧假 = this.Columns["丧假"];
                this.column休 = this.Columns["休"];
                this.column病休 = this.Columns["病休"];
                this.column探亲 = this.Columns["探亲"];
                this.column事假 = this.Columns["事假"];
                this.column上午休 = this.Columns["上午休"];
                this.column下午休 = this.Columns["下午休"];
                this.column补休 = this.Columns["补休"];
                this.column导乐 = this.Columns["导乐"];
                this.column甲组 = this.Columns["甲组"];
                this.column乙组 = this.Columns["乙组"];
            }
            
            private void InitClass() {
                this.column组次 = new DataColumn("组次", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column组次);
                this.column姓名 = new DataColumn("姓名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column姓名);
                this.column白班 = new DataColumn("白班", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column白班);
                this.column中班 = new DataColumn("中班", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column中班);
                this.column助中班 = new DataColumn("助中班", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column助中班);
                this.column晚班 = new DataColumn("晚班", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column晚班);
                this.column助晚班 = new DataColumn("助晚班", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column助晚班);
                this.column夜班 = new DataColumn("夜班", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column夜班);
                this.column医嘱班 = new DataColumn("医嘱班", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column医嘱班);
                this.column公休假 = new DataColumn("公休假", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column公休假);
                this.column产假 = new DataColumn("产假", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column产假);
                this.column计生假 = new DataColumn("计生假", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column计生假);
                this.column婚假 = new DataColumn("婚假", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column婚假);
                this.column丧假 = new DataColumn("丧假", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column丧假);
                this.column休 = new DataColumn("休", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column休);
                this.column病休 = new DataColumn("病休", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column病休);
                this.column探亲 = new DataColumn("探亲", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column探亲);
                this.column事假 = new DataColumn("事假", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column事假);
                this.column上午休 = new DataColumn("上午休", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column上午休);
                this.column下午休 = new DataColumn("下午休", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column下午休);
                this.column补休 = new DataColumn("补休", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column补休);
                this.column导乐 = new DataColumn("导乐", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column导乐);
                this.column甲组 = new DataColumn("甲组", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column甲组);
                this.column乙组 = new DataColumn("乙组", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column乙组);
            }
            
            public tabPbgzlRow NewtabPbgzlRow() {
                return ((tabPbgzlRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabPbgzlRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabPbgzlRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabPbgzlRowChanged != null)) {
                    this.tabPbgzlRowChanged(this, new tabPbgzlRowChangeEvent(((tabPbgzlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabPbgzlRowChanging != null)) {
                    this.tabPbgzlRowChanging(this, new tabPbgzlRowChangeEvent(((tabPbgzlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabPbgzlRowDeleted != null)) {
                    this.tabPbgzlRowDeleted(this, new tabPbgzlRowChangeEvent(((tabPbgzlRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabPbgzlRowDeleting != null)) {
                    this.tabPbgzlRowDeleting(this, new tabPbgzlRowChangeEvent(((tabPbgzlRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabPbgzlRow(tabPbgzlRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabPbgzlRow : DataRow {
            
            private tabPbgzlDataTable tabletabPbgzl;
            
            internal tabPbgzlRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabPbgzl = ((tabPbgzlDataTable)(this.Table));
            }
            
            public string 组次 {
                get {
                    try {
                        return ((string)(this[this.tabletabPbgzl.组次Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.组次Column] = value;
                }
            }
            
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.tabletabPbgzl.姓名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.姓名Column] = value;
                }
            }
            
            public long 白班 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.白班Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.白班Column] = value;
                }
            }
            
            public long 中班 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.中班Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.中班Column] = value;
                }
            }
            
            public long 助中班 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.助中班Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.助中班Column] = value;
                }
            }
            
            public long 晚班 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.晚班Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.晚班Column] = value;
                }
            }
            
            public long 助晚班 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.助晚班Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.助晚班Column] = value;
                }
            }
            
            public long 夜班 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.夜班Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.夜班Column] = value;
                }
            }
            
            public long 医嘱班 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.医嘱班Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.医嘱班Column] = value;
                }
            }
            
            public long 公休假 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.公休假Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.公休假Column] = value;
                }
            }
            
            public long 产假 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.产假Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.产假Column] = value;
                }
            }
            
            public long 计生假 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.计生假Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.计生假Column] = value;
                }
            }
            
            public long 婚假 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.婚假Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.婚假Column] = value;
                }
            }
            
            public long 丧假 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.丧假Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.丧假Column] = value;
                }
            }
            
            public long 休 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.休Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.休Column] = value;
                }
            }
            
            public long 病休 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.病休Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.病休Column] = value;
                }
            }
            
            public long 探亲 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.探亲Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.探亲Column] = value;
                }
            }
            
            public long 事假 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.事假Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.事假Column] = value;
                }
            }
            
            public long 上午休 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.上午休Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.上午休Column] = value;
                }
            }
            
            public long 下午休 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.下午休Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.下午休Column] = value;
                }
            }
            
            public long 补休 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.补休Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.补休Column] = value;
                }
            }
            
            public long 导乐 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.导乐Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.导乐Column] = value;
                }
            }
            
            public long 甲组 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.甲组Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.甲组Column] = value;
                }
            }
            
            public long 乙组 {
                get {
                    try {
                        return ((long)(this[this.tabletabPbgzl.乙组Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabPbgzl.乙组Column] = value;
                }
            }
            
            public bool Is组次Null() {
                return this.IsNull(this.tabletabPbgzl.组次Column);
            }
            
            public void Set组次Null() {
                this[this.tabletabPbgzl.组次Column] = System.Convert.DBNull;
            }
            
            public bool Is姓名Null() {
                return this.IsNull(this.tabletabPbgzl.姓名Column);
            }
            
            public void Set姓名Null() {
                this[this.tabletabPbgzl.姓名Column] = System.Convert.DBNull;
            }
            
            public bool Is白班Null() {
                return this.IsNull(this.tabletabPbgzl.白班Column);
            }
            
            public void Set白班Null() {
                this[this.tabletabPbgzl.白班Column] = System.Convert.DBNull;
            }
            
            public bool Is中班Null() {
                return this.IsNull(this.tabletabPbgzl.中班Column);
            }
            
            public void Set中班Null() {
                this[this.tabletabPbgzl.中班Column] = System.Convert.DBNull;
            }
            
            public bool Is助中班Null() {
                return this.IsNull(this.tabletabPbgzl.助中班Column);
            }
            
            public void Set助中班Null() {
                this[this.tabletabPbgzl.助中班Column] = System.Convert.DBNull;
            }
            
            public bool Is晚班Null() {
                return this.IsNull(this.tabletabPbgzl.晚班Column);
            }
            
            public void Set晚班Null() {
                this[this.tabletabPbgzl.晚班Column] = System.Convert.DBNull;
            }
            
            public bool Is助晚班Null() {
                return this.IsNull(this.tabletabPbgzl.助晚班Column);
            }
            
            public void Set助晚班Null() {
                this[this.tabletabPbgzl.助晚班Column] = System.Convert.DBNull;
            }
            
            public bool Is夜班Null() {
                return this.IsNull(this.tabletabPbgzl.夜班Column);
            }
            
            public void Set夜班Null() {
                this[this.tabletabPbgzl.夜班Column] = System.Convert.DBNull;
            }
            
            public bool Is医嘱班Null() {
                return this.IsNull(this.tabletabPbgzl.医嘱班Column);
            }
            
            public void Set医嘱班Null() {
                this[this.tabletabPbgzl.医嘱班Column] = System.Convert.DBNull;
            }
            
            public bool Is公休假Null() {
                return this.IsNull(this.tabletabPbgzl.公休假Column);
            }
            
            public void Set公休假Null() {
                this[this.tabletabPbgzl.公休假Column] = System.Convert.DBNull;
            }
            
            public bool Is产假Null() {
                return this.IsNull(this.tabletabPbgzl.产假Column);
            }
            
            public void Set产假Null() {
                this[this.tabletabPbgzl.产假Column] = System.Convert.DBNull;
            }
            
            public bool Is计生假Null() {
                return this.IsNull(this.tabletabPbgzl.计生假Column);
            }
            
            public void Set计生假Null() {
                this[this.tabletabPbgzl.计生假Column] = System.Convert.DBNull;
            }
            
            public bool Is婚假Null() {
                return this.IsNull(this.tabletabPbgzl.婚假Column);
            }
            
            public void Set婚假Null() {
                this[this.tabletabPbgzl.婚假Column] = System.Convert.DBNull;
            }
            
            public bool Is丧假Null() {
                return this.IsNull(this.tabletabPbgzl.丧假Column);
            }
            
            public void Set丧假Null() {
                this[this.tabletabPbgzl.丧假Column] = System.Convert.DBNull;
            }
            
            public bool Is休Null() {
                return this.IsNull(this.tabletabPbgzl.休Column);
            }
            
            public void Set休Null() {
                this[this.tabletabPbgzl.休Column] = System.Convert.DBNull;
            }
            
            public bool Is病休Null() {
                return this.IsNull(this.tabletabPbgzl.病休Column);
            }
            
            public void Set病休Null() {
                this[this.tabletabPbgzl.病休Column] = System.Convert.DBNull;
            }
            
            public bool Is探亲Null() {
                return this.IsNull(this.tabletabPbgzl.探亲Column);
            }
            
            public void Set探亲Null() {
                this[this.tabletabPbgzl.探亲Column] = System.Convert.DBNull;
            }
            
            public bool Is事假Null() {
                return this.IsNull(this.tabletabPbgzl.事假Column);
            }
            
            public void Set事假Null() {
                this[this.tabletabPbgzl.事假Column] = System.Convert.DBNull;
            }
            
            public bool Is上午休Null() {
                return this.IsNull(this.tabletabPbgzl.上午休Column);
            }
            
            public void Set上午休Null() {
                this[this.tabletabPbgzl.上午休Column] = System.Convert.DBNull;
            }
            
            public bool Is下午休Null() {
                return this.IsNull(this.tabletabPbgzl.下午休Column);
            }
            
            public void Set下午休Null() {
                this[this.tabletabPbgzl.下午休Column] = System.Convert.DBNull;
            }
            
            public bool Is补休Null() {
                return this.IsNull(this.tabletabPbgzl.补休Column);
            }
            
            public void Set补休Null() {
                this[this.tabletabPbgzl.补休Column] = System.Convert.DBNull;
            }
            
            public bool Is导乐Null() {
                return this.IsNull(this.tabletabPbgzl.导乐Column);
            }
            
            public void Set导乐Null() {
                this[this.tabletabPbgzl.导乐Column] = System.Convert.DBNull;
            }
            
            public bool Is甲组Null() {
                return this.IsNull(this.tabletabPbgzl.甲组Column);
            }
            
            public void Set甲组Null() {
                this[this.tabletabPbgzl.甲组Column] = System.Convert.DBNull;
            }
            
            public bool Is乙组Null() {
                return this.IsNull(this.tabletabPbgzl.乙组Column);
            }
            
            public void Set乙组Null() {
                this[this.tabletabPbgzl.乙组Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabPbgzlRowChangeEvent : EventArgs {
            
            private tabPbgzlRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabPbgzlRowChangeEvent(tabPbgzlRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabPbgzlRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabJydprtDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnname;
            
            private DataColumn columnsex_name;
            
            private DataColumn columnage;
            
            private DataColumn columndept_name;
            
            private DataColumn columnward_name;
            
            private DataColumn columnbed_no;
            
            private DataColumn columninpatient_no;
            
            private DataColumn columnin_diagnosis;
            
            private DataColumn columndate;
            
            private DataColumn columngroup_id;
            
            private DataColumn columnorder_context;
            
            private DataColumn columnexec_dept;
            
            private DataColumn columndoc_name;
            
            private DataColumn columnys_code;
            
            private DataColumn columnorder_date;
            
            private DataColumn columnorder_extension;
            
            private DataColumn columnnum;
            
            private DataColumn columnfjsm;
            
            private DataColumn columnorder_id;
            
            internal tabJydprtDataTable() : 
                    base("tabJydprt") {
                this.InitClass();
            }
            
            internal tabJydprtDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            internal DataColumn sex_nameColumn {
                get {
                    return this.columnsex_name;
                }
            }
            
            internal DataColumn ageColumn {
                get {
                    return this.columnage;
                }
            }
            
            internal DataColumn dept_nameColumn {
                get {
                    return this.columndept_name;
                }
            }
            
            internal DataColumn ward_nameColumn {
                get {
                    return this.columnward_name;
                }
            }
            
            internal DataColumn bed_noColumn {
                get {
                    return this.columnbed_no;
                }
            }
            
            internal DataColumn inpatient_noColumn {
                get {
                    return this.columninpatient_no;
                }
            }
            
            internal DataColumn in_diagnosisColumn {
                get {
                    return this.columnin_diagnosis;
                }
            }
            
            internal DataColumn dateColumn {
                get {
                    return this.columndate;
                }
            }
            
            internal DataColumn group_idColumn {
                get {
                    return this.columngroup_id;
                }
            }
            
            internal DataColumn order_contextColumn {
                get {
                    return this.columnorder_context;
                }
            }
            
            internal DataColumn exec_deptColumn {
                get {
                    return this.columnexec_dept;
                }
            }
            
            internal DataColumn doc_nameColumn {
                get {
                    return this.columndoc_name;
                }
            }
            
            internal DataColumn ys_codeColumn {
                get {
                    return this.columnys_code;
                }
            }
            
            internal DataColumn order_dateColumn {
                get {
                    return this.columnorder_date;
                }
            }
            
            internal DataColumn order_extensionColumn {
                get {
                    return this.columnorder_extension;
                }
            }
            
            internal DataColumn numColumn {
                get {
                    return this.columnnum;
                }
            }
            
            internal DataColumn fjsmColumn {
                get {
                    return this.columnfjsm;
                }
            }
            
            internal DataColumn order_idColumn {
                get {
                    return this.columnorder_id;
                }
            }
            
            public tabJydprtRow this[int index] {
                get {
                    return ((tabJydprtRow)(this.Rows[index]));
                }
            }
            
            public event tabJydprtRowChangeEventHandler tabJydprtRowChanged;
            
            public event tabJydprtRowChangeEventHandler tabJydprtRowChanging;
            
            public event tabJydprtRowChangeEventHandler tabJydprtRowDeleted;
            
            public event tabJydprtRowChangeEventHandler tabJydprtRowDeleting;
            
            public void AddtabJydprtRow(tabJydprtRow row) {
                this.Rows.Add(row);
            }
            
            public tabJydprtRow AddtabJydprtRow(
                        string name, 
                        string sex_name, 
                        string age, 
                        string dept_name, 
                        string ward_name, 
                        string bed_no, 
                        string inpatient_no, 
                        string in_diagnosis, 
                        string date, 
                        string group_id, 
                        string order_context, 
                        string exec_dept, 
                        string doc_name, 
                        string ys_code, 
                        string order_date, 
                        string order_extension, 
                        string num, 
                        string fjsm, 
                        string order_id) {
                tabJydprtRow rowtabJydprtRow = ((tabJydprtRow)(this.NewRow()));
                rowtabJydprtRow.ItemArray = new object[] {
                        name,
                        sex_name,
                        age,
                        dept_name,
                        ward_name,
                        bed_no,
                        inpatient_no,
                        in_diagnosis,
                        date,
                        group_id,
                        order_context,
                        exec_dept,
                        doc_name,
                        ys_code,
                        order_date,
                        order_extension,
                        num,
                        fjsm,
                        order_id};
                this.Rows.Add(rowtabJydprtRow);
                return rowtabJydprtRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabJydprtDataTable cln = ((tabJydprtDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabJydprtDataTable();
            }
            
            internal void InitVars() {
                this.columnname = this.Columns["name"];
                this.columnsex_name = this.Columns["sex_name"];
                this.columnage = this.Columns["age"];
                this.columndept_name = this.Columns["dept_name"];
                this.columnward_name = this.Columns["ward_name"];
                this.columnbed_no = this.Columns["bed_no"];
                this.columninpatient_no = this.Columns["inpatient_no"];
                this.columnin_diagnosis = this.Columns["in_diagnosis"];
                this.columndate = this.Columns["date"];
                this.columngroup_id = this.Columns["group_id"];
                this.columnorder_context = this.Columns["order_context"];
                this.columnexec_dept = this.Columns["exec_dept"];
                this.columndoc_name = this.Columns["doc_name"];
                this.columnys_code = this.Columns["ys_code"];
                this.columnorder_date = this.Columns["order_date"];
                this.columnorder_extension = this.Columns["order_extension"];
                this.columnnum = this.Columns["num"];
                this.columnfjsm = this.Columns["fjsm"];
                this.columnorder_id = this.Columns["order_id"];
            }
            
            private void InitClass() {
                this.columnname = new DataColumn("name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnname);
                this.columnsex_name = new DataColumn("sex_name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsex_name);
                this.columnage = new DataColumn("age", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnage);
                this.columndept_name = new DataColumn("dept_name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndept_name);
                this.columnward_name = new DataColumn("ward_name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnward_name);
                this.columnbed_no = new DataColumn("bed_no", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbed_no);
                this.columninpatient_no = new DataColumn("inpatient_no", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columninpatient_no);
                this.columnin_diagnosis = new DataColumn("in_diagnosis", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnin_diagnosis);
                this.columndate = new DataColumn("date", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndate);
                this.columngroup_id = new DataColumn("group_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columngroup_id);
                this.columnorder_context = new DataColumn("order_context", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnorder_context);
                this.columnexec_dept = new DataColumn("exec_dept", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnexec_dept);
                this.columndoc_name = new DataColumn("doc_name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndoc_name);
                this.columnys_code = new DataColumn("ys_code", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnys_code);
                this.columnorder_date = new DataColumn("order_date", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnorder_date);
                this.columnorder_extension = new DataColumn("order_extension", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnorder_extension);
                this.columnnum = new DataColumn("num", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnum);
                this.columnfjsm = new DataColumn("fjsm", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfjsm);
                this.columnorder_id = new DataColumn("order_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnorder_id);
            }
            
            public tabJydprtRow NewtabJydprtRow() {
                return ((tabJydprtRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabJydprtRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabJydprtRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabJydprtRowChanged != null)) {
                    this.tabJydprtRowChanged(this, new tabJydprtRowChangeEvent(((tabJydprtRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabJydprtRowChanging != null)) {
                    this.tabJydprtRowChanging(this, new tabJydprtRowChangeEvent(((tabJydprtRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabJydprtRowDeleted != null)) {
                    this.tabJydprtRowDeleted(this, new tabJydprtRowChangeEvent(((tabJydprtRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabJydprtRowDeleting != null)) {
                    this.tabJydprtRowDeleting(this, new tabJydprtRowChangeEvent(((tabJydprtRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabJydprtRow(tabJydprtRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabJydprtRow : DataRow {
            
            private tabJydprtDataTable tabletabJydprt;
            
            internal tabJydprtRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabJydprt = ((tabJydprtDataTable)(this.Table));
            }
            
            public string name {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.nameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.nameColumn] = value;
                }
            }
            
            public string sex_name {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.sex_nameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.sex_nameColumn] = value;
                }
            }
            
            public string age {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.ageColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.ageColumn] = value;
                }
            }
            
            public string dept_name {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.dept_nameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.dept_nameColumn] = value;
                }
            }
            
            public string ward_name {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.ward_nameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.ward_nameColumn] = value;
                }
            }
            
            public string bed_no {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.bed_noColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.bed_noColumn] = value;
                }
            }
            
            public string inpatient_no {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.inpatient_noColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.inpatient_noColumn] = value;
                }
            }
            
            public string in_diagnosis {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.in_diagnosisColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.in_diagnosisColumn] = value;
                }
            }
            
            public string date {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.dateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.dateColumn] = value;
                }
            }
            
            public string group_id {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.group_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.group_idColumn] = value;
                }
            }
            
            public string order_context {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.order_contextColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.order_contextColumn] = value;
                }
            }
            
            public string exec_dept {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.exec_deptColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.exec_deptColumn] = value;
                }
            }
            
            public string doc_name {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.doc_nameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.doc_nameColumn] = value;
                }
            }
            
            public string ys_code {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.ys_codeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.ys_codeColumn] = value;
                }
            }
            
            public string order_date {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.order_dateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.order_dateColumn] = value;
                }
            }
            
            public string order_extension {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.order_extensionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.order_extensionColumn] = value;
                }
            }
            
            public string num {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.numColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.numColumn] = value;
                }
            }
            
            public string fjsm {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.fjsmColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.fjsmColumn] = value;
                }
            }
            
            public string order_id {
                get {
                    try {
                        return ((string)(this[this.tabletabJydprt.order_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJydprt.order_idColumn] = value;
                }
            }
            
            public bool IsnameNull() {
                return this.IsNull(this.tabletabJydprt.nameColumn);
            }
            
            public void SetnameNull() {
                this[this.tabletabJydprt.nameColumn] = System.Convert.DBNull;
            }
            
            public bool Issex_nameNull() {
                return this.IsNull(this.tabletabJydprt.sex_nameColumn);
            }
            
            public void Setsex_nameNull() {
                this[this.tabletabJydprt.sex_nameColumn] = System.Convert.DBNull;
            }
            
            public bool IsageNull() {
                return this.IsNull(this.tabletabJydprt.ageColumn);
            }
            
            public void SetageNull() {
                this[this.tabletabJydprt.ageColumn] = System.Convert.DBNull;
            }
            
            public bool Isdept_nameNull() {
                return this.IsNull(this.tabletabJydprt.dept_nameColumn);
            }
            
            public void Setdept_nameNull() {
                this[this.tabletabJydprt.dept_nameColumn] = System.Convert.DBNull;
            }
            
            public bool Isward_nameNull() {
                return this.IsNull(this.tabletabJydprt.ward_nameColumn);
            }
            
            public void Setward_nameNull() {
                this[this.tabletabJydprt.ward_nameColumn] = System.Convert.DBNull;
            }
            
            public bool Isbed_noNull() {
                return this.IsNull(this.tabletabJydprt.bed_noColumn);
            }
            
            public void Setbed_noNull() {
                this[this.tabletabJydprt.bed_noColumn] = System.Convert.DBNull;
            }
            
            public bool Isinpatient_noNull() {
                return this.IsNull(this.tabletabJydprt.inpatient_noColumn);
            }
            
            public void Setinpatient_noNull() {
                this[this.tabletabJydprt.inpatient_noColumn] = System.Convert.DBNull;
            }
            
            public bool Isin_diagnosisNull() {
                return this.IsNull(this.tabletabJydprt.in_diagnosisColumn);
            }
            
            public void Setin_diagnosisNull() {
                this[this.tabletabJydprt.in_diagnosisColumn] = System.Convert.DBNull;
            }
            
            public bool IsdateNull() {
                return this.IsNull(this.tabletabJydprt.dateColumn);
            }
            
            public void SetdateNull() {
                this[this.tabletabJydprt.dateColumn] = System.Convert.DBNull;
            }
            
            public bool Isgroup_idNull() {
                return this.IsNull(this.tabletabJydprt.group_idColumn);
            }
            
            public void Setgroup_idNull() {
                this[this.tabletabJydprt.group_idColumn] = System.Convert.DBNull;
            }
            
            public bool Isorder_contextNull() {
                return this.IsNull(this.tabletabJydprt.order_contextColumn);
            }
            
            public void Setorder_contextNull() {
                this[this.tabletabJydprt.order_contextColumn] = System.Convert.DBNull;
            }
            
            public bool Isexec_deptNull() {
                return this.IsNull(this.tabletabJydprt.exec_deptColumn);
            }
            
            public void Setexec_deptNull() {
                this[this.tabletabJydprt.exec_deptColumn] = System.Convert.DBNull;
            }
            
            public bool Isdoc_nameNull() {
                return this.IsNull(this.tabletabJydprt.doc_nameColumn);
            }
            
            public void Setdoc_nameNull() {
                this[this.tabletabJydprt.doc_nameColumn] = System.Convert.DBNull;
            }
            
            public bool Isys_codeNull() {
                return this.IsNull(this.tabletabJydprt.ys_codeColumn);
            }
            
            public void Setys_codeNull() {
                this[this.tabletabJydprt.ys_codeColumn] = System.Convert.DBNull;
            }
            
            public bool Isorder_dateNull() {
                return this.IsNull(this.tabletabJydprt.order_dateColumn);
            }
            
            public void Setorder_dateNull() {
                this[this.tabletabJydprt.order_dateColumn] = System.Convert.DBNull;
            }
            
            public bool Isorder_extensionNull() {
                return this.IsNull(this.tabletabJydprt.order_extensionColumn);
            }
            
            public void Setorder_extensionNull() {
                this[this.tabletabJydprt.order_extensionColumn] = System.Convert.DBNull;
            }
            
            public bool IsnumNull() {
                return this.IsNull(this.tabletabJydprt.numColumn);
            }
            
            public void SetnumNull() {
                this[this.tabletabJydprt.numColumn] = System.Convert.DBNull;
            }
            
            public bool IsfjsmNull() {
                return this.IsNull(this.tabletabJydprt.fjsmColumn);
            }
            
            public void SetfjsmNull() {
                this[this.tabletabJydprt.fjsmColumn] = System.Convert.DBNull;
            }
            
            public bool Isorder_idNull() {
                return this.IsNull(this.tabletabJydprt.order_idColumn);
            }
            
            public void Setorder_idNull() {
                this[this.tabletabJydprt.order_idColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabJydprtRowChangeEvent : EventArgs {
            
            private tabJydprtRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabJydprtRowChangeEvent(tabJydprtRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabJydprtRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MedYPMXDDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column床号;
            
            private DataColumn column住院号;
            
            private DataColumn column姓名;
            
            private DataColumn column日期;
            
            private DataColumn column编号;
            
            private DataColumn column名称;
            
            private DataColumn column规格;
            
            private DataColumn column数量;
            
            private DataColumn column单位;
            
            private DataColumn column单价;
            
            private DataColumn column金额;
            
            private DataColumn column麻毒否;
            
            private DataColumn column贵重否;
            
            private DataColumn columnid;
            
            private DataColumn columnbaby_id;
            
            private DataColumn column选;
            
            private DataColumn columninpatient_id;
            
            private DataColumn columnpo_id;
            
            internal MedYPMXDDataTable() : 
                    base("MedYPMXD") {
                this.InitClass();
            }
            
            internal MedYPMXDDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 床号Column {
                get {
                    return this.column床号;
                }
            }
            
            internal DataColumn 住院号Column {
                get {
                    return this.column住院号;
                }
            }
            
            internal DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            internal DataColumn 日期Column {
                get {
                    return this.column日期;
                }
            }
            
            internal DataColumn 编号Column {
                get {
                    return this.column编号;
                }
            }
            
            internal DataColumn 名称Column {
                get {
                    return this.column名称;
                }
            }
            
            internal DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            internal DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            internal DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            internal DataColumn 单价Column {
                get {
                    return this.column单价;
                }
            }
            
            internal DataColumn 金额Column {
                get {
                    return this.column金额;
                }
            }
            
            internal DataColumn 麻毒否Column {
                get {
                    return this.column麻毒否;
                }
            }
            
            internal DataColumn 贵重否Column {
                get {
                    return this.column贵重否;
                }
            }
            
            internal DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            internal DataColumn baby_idColumn {
                get {
                    return this.columnbaby_id;
                }
            }
            
            internal DataColumn 选Column {
                get {
                    return this.column选;
                }
            }
            
            internal DataColumn inpatient_idColumn {
                get {
                    return this.columninpatient_id;
                }
            }
            
            internal DataColumn po_idColumn {
                get {
                    return this.columnpo_id;
                }
            }
            
            public MedYPMXDRow this[int index] {
                get {
                    return ((MedYPMXDRow)(this.Rows[index]));
                }
            }
            
            public event MedYPMXDRowChangeEventHandler MedYPMXDRowChanged;
            
            public event MedYPMXDRowChangeEventHandler MedYPMXDRowChanging;
            
            public event MedYPMXDRowChangeEventHandler MedYPMXDRowDeleted;
            
            public event MedYPMXDRowChangeEventHandler MedYPMXDRowDeleting;
            
            public void AddMedYPMXDRow(MedYPMXDRow row) {
                this.Rows.Add(row);
            }
            
            public MedYPMXDRow AddMedYPMXDRow(
                        string 床号, 
                        string 住院号, 
                        string 姓名, 
                        string 日期, 
                        string 编号, 
                        string 名称, 
                        string 规格, 
                        System.Double 数量, 
                        string 单位, 
                        System.Double 单价, 
                        System.Double 金额, 
                        string 麻毒否, 
                        string 贵重否, 
                        string id, 
                        string baby_id, 
                        bool 选, 
                        string inpatient_id, 
                        string po_id) {
                MedYPMXDRow rowMedYPMXDRow = ((MedYPMXDRow)(this.NewRow()));
                rowMedYPMXDRow.ItemArray = new object[] {
                        床号,
                        住院号,
                        姓名,
                        日期,
                        编号,
                        名称,
                        规格,
                        数量,
                        单位,
                        单价,
                        金额,
                        麻毒否,
                        贵重否,
                        id,
                        baby_id,
                        选,
                        inpatient_id,
                        po_id};
                this.Rows.Add(rowMedYPMXDRow);
                return rowMedYPMXDRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                MedYPMXDDataTable cln = ((MedYPMXDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new MedYPMXDDataTable();
            }
            
            internal void InitVars() {
                this.column床号 = this.Columns["床号"];
                this.column住院号 = this.Columns["住院号"];
                this.column姓名 = this.Columns["姓名"];
                this.column日期 = this.Columns["日期"];
                this.column编号 = this.Columns["编号"];
                this.column名称 = this.Columns["名称"];
                this.column规格 = this.Columns["规格"];
                this.column数量 = this.Columns["数量"];
                this.column单位 = this.Columns["单位"];
                this.column单价 = this.Columns["单价"];
                this.column金额 = this.Columns["金额"];
                this.column麻毒否 = this.Columns["麻毒否"];
                this.column贵重否 = this.Columns["贵重否"];
                this.columnid = this.Columns["id"];
                this.columnbaby_id = this.Columns["baby_id"];
                this.column选 = this.Columns["选"];
                this.columninpatient_id = this.Columns["inpatient_id"];
                this.columnpo_id = this.Columns["po_id"];
            }
            
            private void InitClass() {
                this.column床号 = new DataColumn("床号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column床号);
                this.column住院号 = new DataColumn("住院号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column住院号);
                this.column姓名 = new DataColumn("姓名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column姓名);
                this.column日期 = new DataColumn("日期", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column日期);
                this.column编号 = new DataColumn("编号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column编号);
                this.column名称 = new DataColumn("名称", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column名称);
                this.column规格 = new DataColumn("规格", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column规格);
                this.column数量 = new DataColumn("数量", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column数量);
                this.column单位 = new DataColumn("单位", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column单位);
                this.column单价 = new DataColumn("单价", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column单价);
                this.column金额 = new DataColumn("金额", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column金额);
                this.column麻毒否 = new DataColumn("麻毒否", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column麻毒否);
                this.column贵重否 = new DataColumn("贵重否", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column贵重否);
                this.columnid = new DataColumn("id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnid);
                this.columnbaby_id = new DataColumn("baby_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbaby_id);
                this.column选 = new DataColumn("选", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column选);
                this.columninpatient_id = new DataColumn("inpatient_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columninpatient_id);
                this.columnpo_id = new DataColumn("po_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpo_id);
            }
            
            public MedYPMXDRow NewMedYPMXDRow() {
                return ((MedYPMXDRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new MedYPMXDRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(MedYPMXDRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MedYPMXDRowChanged != null)) {
                    this.MedYPMXDRowChanged(this, new MedYPMXDRowChangeEvent(((MedYPMXDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MedYPMXDRowChanging != null)) {
                    this.MedYPMXDRowChanging(this, new MedYPMXDRowChangeEvent(((MedYPMXDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MedYPMXDRowDeleted != null)) {
                    this.MedYPMXDRowDeleted(this, new MedYPMXDRowChangeEvent(((MedYPMXDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MedYPMXDRowDeleting != null)) {
                    this.MedYPMXDRowDeleting(this, new MedYPMXDRowChangeEvent(((MedYPMXDRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveMedYPMXDRow(MedYPMXDRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MedYPMXDRow : DataRow {
            
            private MedYPMXDDataTable tableMedYPMXD;
            
            internal MedYPMXDRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableMedYPMXD = ((MedYPMXDDataTable)(this.Table));
            }
            
            public string 床号 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPMXD.床号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.床号Column] = value;
                }
            }
            
            public string 住院号 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPMXD.住院号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.住院号Column] = value;
                }
            }
            
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPMXD.姓名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.姓名Column] = value;
                }
            }
            
            public string 日期 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPMXD.日期Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.日期Column] = value;
                }
            }
            
            public string 编号 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPMXD.编号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.编号Column] = value;
                }
            }
            
            public string 名称 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPMXD.名称Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.名称Column] = value;
                }
            }
            
            public string 规格 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPMXD.规格Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.规格Column] = value;
                }
            }
            
            public System.Double 数量 {
                get {
                    try {
                        return ((System.Double)(this[this.tableMedYPMXD.数量Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.数量Column] = value;
                }
            }
            
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPMXD.单位Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.单位Column] = value;
                }
            }
            
            public System.Double 单价 {
                get {
                    try {
                        return ((System.Double)(this[this.tableMedYPMXD.单价Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.单价Column] = value;
                }
            }
            
            public System.Double 金额 {
                get {
                    try {
                        return ((System.Double)(this[this.tableMedYPMXD.金额Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.金额Column] = value;
                }
            }
            
            public string 麻毒否 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPMXD.麻毒否Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.麻毒否Column] = value;
                }
            }
            
            public string 贵重否 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPMXD.贵重否Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.贵重否Column] = value;
                }
            }
            
            public string id {
                get {
                    try {
                        return ((string)(this[this.tableMedYPMXD.idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.idColumn] = value;
                }
            }
            
            public string baby_id {
                get {
                    try {
                        return ((string)(this[this.tableMedYPMXD.baby_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.baby_idColumn] = value;
                }
            }
            
            public bool 选 {
                get {
                    try {
                        return ((bool)(this[this.tableMedYPMXD.选Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.选Column] = value;
                }
            }
            
            public string inpatient_id {
                get {
                    try {
                        return ((string)(this[this.tableMedYPMXD.inpatient_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.inpatient_idColumn] = value;
                }
            }
            
            public string po_id {
                get {
                    try {
                        return ((string)(this[this.tableMedYPMXD.po_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPMXD.po_idColumn] = value;
                }
            }
            
            public bool Is床号Null() {
                return this.IsNull(this.tableMedYPMXD.床号Column);
            }
            
            public void Set床号Null() {
                this[this.tableMedYPMXD.床号Column] = System.Convert.DBNull;
            }
            
            public bool Is住院号Null() {
                return this.IsNull(this.tableMedYPMXD.住院号Column);
            }
            
            public void Set住院号Null() {
                this[this.tableMedYPMXD.住院号Column] = System.Convert.DBNull;
            }
            
            public bool Is姓名Null() {
                return this.IsNull(this.tableMedYPMXD.姓名Column);
            }
            
            public void Set姓名Null() {
                this[this.tableMedYPMXD.姓名Column] = System.Convert.DBNull;
            }
            
            public bool Is日期Null() {
                return this.IsNull(this.tableMedYPMXD.日期Column);
            }
            
            public void Set日期Null() {
                this[this.tableMedYPMXD.日期Column] = System.Convert.DBNull;
            }
            
            public bool Is编号Null() {
                return this.IsNull(this.tableMedYPMXD.编号Column);
            }
            
            public void Set编号Null() {
                this[this.tableMedYPMXD.编号Column] = System.Convert.DBNull;
            }
            
            public bool Is名称Null() {
                return this.IsNull(this.tableMedYPMXD.名称Column);
            }
            
            public void Set名称Null() {
                this[this.tableMedYPMXD.名称Column] = System.Convert.DBNull;
            }
            
            public bool Is规格Null() {
                return this.IsNull(this.tableMedYPMXD.规格Column);
            }
            
            public void Set规格Null() {
                this[this.tableMedYPMXD.规格Column] = System.Convert.DBNull;
            }
            
            public bool Is数量Null() {
                return this.IsNull(this.tableMedYPMXD.数量Column);
            }
            
            public void Set数量Null() {
                this[this.tableMedYPMXD.数量Column] = System.Convert.DBNull;
            }
            
            public bool Is单位Null() {
                return this.IsNull(this.tableMedYPMXD.单位Column);
            }
            
            public void Set单位Null() {
                this[this.tableMedYPMXD.单位Column] = System.Convert.DBNull;
            }
            
            public bool Is单价Null() {
                return this.IsNull(this.tableMedYPMXD.单价Column);
            }
            
            public void Set单价Null() {
                this[this.tableMedYPMXD.单价Column] = System.Convert.DBNull;
            }
            
            public bool Is金额Null() {
                return this.IsNull(this.tableMedYPMXD.金额Column);
            }
            
            public void Set金额Null() {
                this[this.tableMedYPMXD.金额Column] = System.Convert.DBNull;
            }
            
            public bool Is麻毒否Null() {
                return this.IsNull(this.tableMedYPMXD.麻毒否Column);
            }
            
            public void Set麻毒否Null() {
                this[this.tableMedYPMXD.麻毒否Column] = System.Convert.DBNull;
            }
            
            public bool Is贵重否Null() {
                return this.IsNull(this.tableMedYPMXD.贵重否Column);
            }
            
            public void Set贵重否Null() {
                this[this.tableMedYPMXD.贵重否Column] = System.Convert.DBNull;
            }
            
            public bool IsidNull() {
                return this.IsNull(this.tableMedYPMXD.idColumn);
            }
            
            public void SetidNull() {
                this[this.tableMedYPMXD.idColumn] = System.Convert.DBNull;
            }
            
            public bool Isbaby_idNull() {
                return this.IsNull(this.tableMedYPMXD.baby_idColumn);
            }
            
            public void Setbaby_idNull() {
                this[this.tableMedYPMXD.baby_idColumn] = System.Convert.DBNull;
            }
            
            public bool Is选Null() {
                return this.IsNull(this.tableMedYPMXD.选Column);
            }
            
            public void Set选Null() {
                this[this.tableMedYPMXD.选Column] = System.Convert.DBNull;
            }
            
            public bool Isinpatient_idNull() {
                return this.IsNull(this.tableMedYPMXD.inpatient_idColumn);
            }
            
            public void Setinpatient_idNull() {
                this[this.tableMedYPMXD.inpatient_idColumn] = System.Convert.DBNull;
            }
            
            public bool Ispo_idNull() {
                return this.IsNull(this.tableMedYPMXD.po_idColumn);
            }
            
            public void Setpo_idNull() {
                this[this.tableMedYPMXD.po_idColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MedYPMXDRowChangeEvent : EventArgs {
            
            private MedYPMXDRow eventRow;
            
            private DataRowAction eventAction;
            
            public MedYPMXDRowChangeEvent(MedYPMXDRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public MedYPMXDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MedYPTLDDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column编号;
            
            private DataColumn column名称;
            
            private DataColumn column规格;
            
            private DataColumn column数量;
            
            private DataColumn column单位;
            
            private DataColumn column单价;
            
            private DataColumn column金额;
            
            private DataColumn column麻毒否;
            
            private DataColumn column贵重否;
            
            private DataColumn column发药科室;
            
            private DataColumn column领药科室;
            
            internal MedYPTLDDataTable() : 
                    base("MedYPTLD") {
                this.InitClass();
            }
            
            internal MedYPTLDDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 编号Column {
                get {
                    return this.column编号;
                }
            }
            
            internal DataColumn 名称Column {
                get {
                    return this.column名称;
                }
            }
            
            internal DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            internal DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            internal DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            internal DataColumn 单价Column {
                get {
                    return this.column单价;
                }
            }
            
            internal DataColumn 金额Column {
                get {
                    return this.column金额;
                }
            }
            
            internal DataColumn 麻毒否Column {
                get {
                    return this.column麻毒否;
                }
            }
            
            internal DataColumn 贵重否Column {
                get {
                    return this.column贵重否;
                }
            }
            
            internal DataColumn 发药科室Column {
                get {
                    return this.column发药科室;
                }
            }
            
            internal DataColumn 领药科室Column {
                get {
                    return this.column领药科室;
                }
            }
            
            public MedYPTLDRow this[int index] {
                get {
                    return ((MedYPTLDRow)(this.Rows[index]));
                }
            }
            
            public event MedYPTLDRowChangeEventHandler MedYPTLDRowChanged;
            
            public event MedYPTLDRowChangeEventHandler MedYPTLDRowChanging;
            
            public event MedYPTLDRowChangeEventHandler MedYPTLDRowDeleted;
            
            public event MedYPTLDRowChangeEventHandler MedYPTLDRowDeleting;
            
            public void AddMedYPTLDRow(MedYPTLDRow row) {
                this.Rows.Add(row);
            }
            
            public MedYPTLDRow AddMedYPTLDRow(string 编号, string 名称, string 规格, System.Double 数量, string 单位, System.Double 单价, System.Double 金额, string 麻毒否, string 贵重否, string 发药科室, string 领药科室) {
                MedYPTLDRow rowMedYPTLDRow = ((MedYPTLDRow)(this.NewRow()));
                rowMedYPTLDRow.ItemArray = new object[] {
                        编号,
                        名称,
                        规格,
                        数量,
                        单位,
                        单价,
                        金额,
                        麻毒否,
                        贵重否,
                        发药科室,
                        领药科室};
                this.Rows.Add(rowMedYPTLDRow);
                return rowMedYPTLDRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                MedYPTLDDataTable cln = ((MedYPTLDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new MedYPTLDDataTable();
            }
            
            internal void InitVars() {
                this.column编号 = this.Columns["编号"];
                this.column名称 = this.Columns["名称"];
                this.column规格 = this.Columns["规格"];
                this.column数量 = this.Columns["数量"];
                this.column单位 = this.Columns["单位"];
                this.column单价 = this.Columns["单价"];
                this.column金额 = this.Columns["金额"];
                this.column麻毒否 = this.Columns["麻毒否"];
                this.column贵重否 = this.Columns["贵重否"];
                this.column发药科室 = this.Columns["发药科室"];
                this.column领药科室 = this.Columns["领药科室"];
            }
            
            private void InitClass() {
                this.column编号 = new DataColumn("编号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column编号);
                this.column名称 = new DataColumn("名称", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column名称);
                this.column规格 = new DataColumn("规格", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column规格);
                this.column数量 = new DataColumn("数量", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column数量);
                this.column单位 = new DataColumn("单位", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column单位);
                this.column单价 = new DataColumn("单价", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column单价);
                this.column金额 = new DataColumn("金额", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column金额);
                this.column麻毒否 = new DataColumn("麻毒否", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column麻毒否);
                this.column贵重否 = new DataColumn("贵重否", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column贵重否);
                this.column发药科室 = new DataColumn("发药科室", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column发药科室);
                this.column领药科室 = new DataColumn("领药科室", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column领药科室);
            }
            
            public MedYPTLDRow NewMedYPTLDRow() {
                return ((MedYPTLDRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new MedYPTLDRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(MedYPTLDRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MedYPTLDRowChanged != null)) {
                    this.MedYPTLDRowChanged(this, new MedYPTLDRowChangeEvent(((MedYPTLDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MedYPTLDRowChanging != null)) {
                    this.MedYPTLDRowChanging(this, new MedYPTLDRowChangeEvent(((MedYPTLDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MedYPTLDRowDeleted != null)) {
                    this.MedYPTLDRowDeleted(this, new MedYPTLDRowChangeEvent(((MedYPTLDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MedYPTLDRowDeleting != null)) {
                    this.MedYPTLDRowDeleting(this, new MedYPTLDRowChangeEvent(((MedYPTLDRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveMedYPTLDRow(MedYPTLDRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MedYPTLDRow : DataRow {
            
            private MedYPTLDDataTable tableMedYPTLD;
            
            internal MedYPTLDRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableMedYPTLD = ((MedYPTLDDataTable)(this.Table));
            }
            
            public string 编号 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPTLD.编号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPTLD.编号Column] = value;
                }
            }
            
            public string 名称 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPTLD.名称Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPTLD.名称Column] = value;
                }
            }
            
            public string 规格 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPTLD.规格Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPTLD.规格Column] = value;
                }
            }
            
            public System.Double 数量 {
                get {
                    try {
                        return ((System.Double)(this[this.tableMedYPTLD.数量Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPTLD.数量Column] = value;
                }
            }
            
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPTLD.单位Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPTLD.单位Column] = value;
                }
            }
            
            public System.Double 单价 {
                get {
                    try {
                        return ((System.Double)(this[this.tableMedYPTLD.单价Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPTLD.单价Column] = value;
                }
            }
            
            public System.Double 金额 {
                get {
                    try {
                        return ((System.Double)(this[this.tableMedYPTLD.金额Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPTLD.金额Column] = value;
                }
            }
            
            public string 麻毒否 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPTLD.麻毒否Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPTLD.麻毒否Column] = value;
                }
            }
            
            public string 贵重否 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPTLD.贵重否Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPTLD.贵重否Column] = value;
                }
            }
            
            public string 发药科室 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPTLD.发药科室Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPTLD.发药科室Column] = value;
                }
            }
            
            public string 领药科室 {
                get {
                    try {
                        return ((string)(this[this.tableMedYPTLD.领药科室Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMedYPTLD.领药科室Column] = value;
                }
            }
            
            public bool Is编号Null() {
                return this.IsNull(this.tableMedYPTLD.编号Column);
            }
            
            public void Set编号Null() {
                this[this.tableMedYPTLD.编号Column] = System.Convert.DBNull;
            }
            
            public bool Is名称Null() {
                return this.IsNull(this.tableMedYPTLD.名称Column);
            }
            
            public void Set名称Null() {
                this[this.tableMedYPTLD.名称Column] = System.Convert.DBNull;
            }
            
            public bool Is规格Null() {
                return this.IsNull(this.tableMedYPTLD.规格Column);
            }
            
            public void Set规格Null() {
                this[this.tableMedYPTLD.规格Column] = System.Convert.DBNull;
            }
            
            public bool Is数量Null() {
                return this.IsNull(this.tableMedYPTLD.数量Column);
            }
            
            public void Set数量Null() {
                this[this.tableMedYPTLD.数量Column] = System.Convert.DBNull;
            }
            
            public bool Is单位Null() {
                return this.IsNull(this.tableMedYPTLD.单位Column);
            }
            
            public void Set单位Null() {
                this[this.tableMedYPTLD.单位Column] = System.Convert.DBNull;
            }
            
            public bool Is单价Null() {
                return this.IsNull(this.tableMedYPTLD.单价Column);
            }
            
            public void Set单价Null() {
                this[this.tableMedYPTLD.单价Column] = System.Convert.DBNull;
            }
            
            public bool Is金额Null() {
                return this.IsNull(this.tableMedYPTLD.金额Column);
            }
            
            public void Set金额Null() {
                this[this.tableMedYPTLD.金额Column] = System.Convert.DBNull;
            }
            
            public bool Is麻毒否Null() {
                return this.IsNull(this.tableMedYPTLD.麻毒否Column);
            }
            
            public void Set麻毒否Null() {
                this[this.tableMedYPTLD.麻毒否Column] = System.Convert.DBNull;
            }
            
            public bool Is贵重否Null() {
                return this.IsNull(this.tableMedYPTLD.贵重否Column);
            }
            
            public void Set贵重否Null() {
                this[this.tableMedYPTLD.贵重否Column] = System.Convert.DBNull;
            }
            
            public bool Is发药科室Null() {
                return this.IsNull(this.tableMedYPTLD.发药科室Column);
            }
            
            public void Set发药科室Null() {
                this[this.tableMedYPTLD.发药科室Column] = System.Convert.DBNull;
            }
            
            public bool Is领药科室Null() {
                return this.IsNull(this.tableMedYPTLD.领药科室Column);
            }
            
            public void Set领药科室Null() {
                this[this.tableMedYPTLD.领药科室Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MedYPTLDRowChangeEvent : EventArgs {
            
            private MedYPTLDRow eventRow;
            
            private DataRowAction eventAction;
            
            public MedYPTLDRowChangeEvent(MedYPTLDRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public MedYPTLDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ZXD_SYKDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnid;
            
            private DataColumn columngroup_id;
            
            private DataColumn column姓名;
            
            private DataColumn column日期;
            
            private DataColumn column药名;
            
            private DataColumn column剂量;
            
            private DataColumn column组线;
            
            private DataColumn column用法;
            
            private DataColumn column频率;
            
            private DataColumn column备注;
            
            private DataColumn columnbdate;
            
            private DataColumn columnedate;
            
            private DataColumn columnbaby_id;
            
            private DataColumn column床号;
            
            private DataColumn column首次;
            
            internal ZXD_SYKDataTable() : 
                    base("ZXD_SYK") {
                this.InitClass();
            }
            
            internal ZXD_SYKDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            internal DataColumn group_idColumn {
                get {
                    return this.columngroup_id;
                }
            }
            
            internal DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            internal DataColumn 日期Column {
                get {
                    return this.column日期;
                }
            }
            
            internal DataColumn 药名Column {
                get {
                    return this.column药名;
                }
            }
            
            internal DataColumn 剂量Column {
                get {
                    return this.column剂量;
                }
            }
            
            internal DataColumn 组线Column {
                get {
                    return this.column组线;
                }
            }
            
            internal DataColumn 用法Column {
                get {
                    return this.column用法;
                }
            }
            
            internal DataColumn 频率Column {
                get {
                    return this.column频率;
                }
            }
            
            internal DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            internal DataColumn bdateColumn {
                get {
                    return this.columnbdate;
                }
            }
            
            internal DataColumn edateColumn {
                get {
                    return this.columnedate;
                }
            }
            
            internal DataColumn baby_idColumn {
                get {
                    return this.columnbaby_id;
                }
            }
            
            internal DataColumn 床号Column {
                get {
                    return this.column床号;
                }
            }
            
            internal DataColumn 首次Column {
                get {
                    return this.column首次;
                }
            }
            
            public ZXD_SYKRow this[int index] {
                get {
                    return ((ZXD_SYKRow)(this.Rows[index]));
                }
            }
            
            public event ZXD_SYKRowChangeEventHandler ZXD_SYKRowChanged;
            
            public event ZXD_SYKRowChangeEventHandler ZXD_SYKRowChanging;
            
            public event ZXD_SYKRowChangeEventHandler ZXD_SYKRowDeleted;
            
            public event ZXD_SYKRowChangeEventHandler ZXD_SYKRowDeleting;
            
            public void AddZXD_SYKRow(ZXD_SYKRow row) {
                this.Rows.Add(row);
            }
            
            public ZXD_SYKRow AddZXD_SYKRow(string id, string group_id, string 姓名, string 日期, string 药名, string 剂量, string 组线, string 用法, string 频率, string 备注, string bdate, string edate, string baby_id, string 床号, string 首次) {
                ZXD_SYKRow rowZXD_SYKRow = ((ZXD_SYKRow)(this.NewRow()));
                rowZXD_SYKRow.ItemArray = new object[] {
                        id,
                        group_id,
                        姓名,
                        日期,
                        药名,
                        剂量,
                        组线,
                        用法,
                        频率,
                        备注,
                        bdate,
                        edate,
                        baby_id,
                        床号,
                        首次};
                this.Rows.Add(rowZXD_SYKRow);
                return rowZXD_SYKRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ZXD_SYKDataTable cln = ((ZXD_SYKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ZXD_SYKDataTable();
            }
            
            internal void InitVars() {
                this.columnid = this.Columns["id"];
                this.columngroup_id = this.Columns["group_id"];
                this.column姓名 = this.Columns["姓名"];
                this.column日期 = this.Columns["日期"];
                this.column药名 = this.Columns["药名"];
                this.column剂量 = this.Columns["剂量"];
                this.column组线 = this.Columns["组线"];
                this.column用法 = this.Columns["用法"];
                this.column频率 = this.Columns["频率"];
                this.column备注 = this.Columns["备注"];
                this.columnbdate = this.Columns["bdate"];
                this.columnedate = this.Columns["edate"];
                this.columnbaby_id = this.Columns["baby_id"];
                this.column床号 = this.Columns["床号"];
                this.column首次 = this.Columns["首次"];
            }
            
            private void InitClass() {
                this.columnid = new DataColumn("id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnid);
                this.columngroup_id = new DataColumn("group_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columngroup_id);
                this.column姓名 = new DataColumn("姓名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column姓名);
                this.column日期 = new DataColumn("日期", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column日期);
                this.column药名 = new DataColumn("药名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column药名);
                this.column剂量 = new DataColumn("剂量", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column剂量);
                this.column组线 = new DataColumn("组线", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column组线);
                this.column用法 = new DataColumn("用法", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column用法);
                this.column频率 = new DataColumn("频率", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column频率);
                this.column备注 = new DataColumn("备注", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column备注);
                this.columnbdate = new DataColumn("bdate", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbdate);
                this.columnedate = new DataColumn("edate", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnedate);
                this.columnbaby_id = new DataColumn("baby_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbaby_id);
                this.column床号 = new DataColumn("床号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column床号);
                this.column首次 = new DataColumn("首次", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column首次);
            }
            
            public ZXD_SYKRow NewZXD_SYKRow() {
                return ((ZXD_SYKRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ZXD_SYKRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ZXD_SYKRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ZXD_SYKRowChanged != null)) {
                    this.ZXD_SYKRowChanged(this, new ZXD_SYKRowChangeEvent(((ZXD_SYKRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ZXD_SYKRowChanging != null)) {
                    this.ZXD_SYKRowChanging(this, new ZXD_SYKRowChangeEvent(((ZXD_SYKRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ZXD_SYKRowDeleted != null)) {
                    this.ZXD_SYKRowDeleted(this, new ZXD_SYKRowChangeEvent(((ZXD_SYKRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ZXD_SYKRowDeleting != null)) {
                    this.ZXD_SYKRowDeleting(this, new ZXD_SYKRowChangeEvent(((ZXD_SYKRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveZXD_SYKRow(ZXD_SYKRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ZXD_SYKRow : DataRow {
            
            private ZXD_SYKDataTable tableZXD_SYK;
            
            internal ZXD_SYKRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableZXD_SYK = ((ZXD_SYKDataTable)(this.Table));
            }
            
            public string id {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.idColumn] = value;
                }
            }
            
            public string group_id {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.group_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.group_idColumn] = value;
                }
            }
            
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.姓名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.姓名Column] = value;
                }
            }
            
            public string 日期 {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.日期Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.日期Column] = value;
                }
            }
            
            public string 药名 {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.药名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.药名Column] = value;
                }
            }
            
            public string 剂量 {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.剂量Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.剂量Column] = value;
                }
            }
            
            public string 组线 {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.组线Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.组线Column] = value;
                }
            }
            
            public string 用法 {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.用法Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.用法Column] = value;
                }
            }
            
            public string 频率 {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.频率Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.频率Column] = value;
                }
            }
            
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.备注Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.备注Column] = value;
                }
            }
            
            public string bdate {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.bdateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.bdateColumn] = value;
                }
            }
            
            public string edate {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.edateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.edateColumn] = value;
                }
            }
            
            public string baby_id {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.baby_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.baby_idColumn] = value;
                }
            }
            
            public string 床号 {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.床号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.床号Column] = value;
                }
            }
            
            public string 首次 {
                get {
                    try {
                        return ((string)(this[this.tableZXD_SYK.首次Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableZXD_SYK.首次Column] = value;
                }
            }
            
            public bool IsidNull() {
                return this.IsNull(this.tableZXD_SYK.idColumn);
            }
            
            public void SetidNull() {
                this[this.tableZXD_SYK.idColumn] = System.Convert.DBNull;
            }
            
            public bool Isgroup_idNull() {
                return this.IsNull(this.tableZXD_SYK.group_idColumn);
            }
            
            public void Setgroup_idNull() {
                this[this.tableZXD_SYK.group_idColumn] = System.Convert.DBNull;
            }
            
            public bool Is姓名Null() {
                return this.IsNull(this.tableZXD_SYK.姓名Column);
            }
            
            public void Set姓名Null() {
                this[this.tableZXD_SYK.姓名Column] = System.Convert.DBNull;
            }
            
            public bool Is日期Null() {
                return this.IsNull(this.tableZXD_SYK.日期Column);
            }
            
            public void Set日期Null() {
                this[this.tableZXD_SYK.日期Column] = System.Convert.DBNull;
            }
            
            public bool Is药名Null() {
                return this.IsNull(this.tableZXD_SYK.药名Column);
            }
            
            public void Set药名Null() {
                this[this.tableZXD_SYK.药名Column] = System.Convert.DBNull;
            }
            
            public bool Is剂量Null() {
                return this.IsNull(this.tableZXD_SYK.剂量Column);
            }
            
            public void Set剂量Null() {
                this[this.tableZXD_SYK.剂量Column] = System.Convert.DBNull;
            }
            
            public bool Is组线Null() {
                return this.IsNull(this.tableZXD_SYK.组线Column);
            }
            
            public void Set组线Null() {
                this[this.tableZXD_SYK.组线Column] = System.Convert.DBNull;
            }
            
            public bool Is用法Null() {
                return this.IsNull(this.tableZXD_SYK.用法Column);
            }
            
            public void Set用法Null() {
                this[this.tableZXD_SYK.用法Column] = System.Convert.DBNull;
            }
            
            public bool Is频率Null() {
                return this.IsNull(this.tableZXD_SYK.频率Column);
            }
            
            public void Set频率Null() {
                this[this.tableZXD_SYK.频率Column] = System.Convert.DBNull;
            }
            
            public bool Is备注Null() {
                return this.IsNull(this.tableZXD_SYK.备注Column);
            }
            
            public void Set备注Null() {
                this[this.tableZXD_SYK.备注Column] = System.Convert.DBNull;
            }
            
            public bool IsbdateNull() {
                return this.IsNull(this.tableZXD_SYK.bdateColumn);
            }
            
            public void SetbdateNull() {
                this[this.tableZXD_SYK.bdateColumn] = System.Convert.DBNull;
            }
            
            public bool IsedateNull() {
                return this.IsNull(this.tableZXD_SYK.edateColumn);
            }
            
            public void SetedateNull() {
                this[this.tableZXD_SYK.edateColumn] = System.Convert.DBNull;
            }
            
            public bool Isbaby_idNull() {
                return this.IsNull(this.tableZXD_SYK.baby_idColumn);
            }
            
            public void Setbaby_idNull() {
                this[this.tableZXD_SYK.baby_idColumn] = System.Convert.DBNull;
            }
            
            public bool Is床号Null() {
                return this.IsNull(this.tableZXD_SYK.床号Column);
            }
            
            public void Set床号Null() {
                this[this.tableZXD_SYK.床号Column] = System.Convert.DBNull;
            }
            
            public bool Is首次Null() {
                return this.IsNull(this.tableZXD_SYK.首次Column);
            }
            
            public void Set首次Null() {
                this[this.tableZXD_SYK.首次Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ZXD_SYKRowChangeEvent : EventArgs {
            
            private ZXD_SYKRow eventRow;
            
            private DataRowAction eventAction;
            
            public ZXD_SYKRowChangeEvent(ZXD_SYKRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ZXD_SYKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BRFeeMXDDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column床号;
            
            private DataColumn column住院号;
            
            private DataColumn column姓名;
            
            private DataColumn column病人科室;
            
            private DataColumn column类别代码;
            
            private DataColumn column类别名称;
            
            private DataColumn column项目编号;
            
            private DataColumn column项目名称;
            
            private DataColumn column规格;
            
            private DataColumn column单位;
            
            private DataColumn column单价;
            
            private DataColumn column数量;
            
            private DataColumn column金额;
            
            private DataColumn column执行科室;
            
            private DataColumn column记账日期;
            
            private DataColumn column记账人;
            
            private DataColumn column记账类型;
            
            private DataColumn columnbaby_id;
            
            private DataColumn columnid;
            
            private DataColumn column未结算预交款;
            
            private DataColumn column未结算总费用;
            
            private DataColumn column余额;
            
            internal BRFeeMXDDataTable() : 
                    base("BRFeeMXD") {
                this.InitClass();
            }
            
            internal BRFeeMXDDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 床号Column {
                get {
                    return this.column床号;
                }
            }
            
            internal DataColumn 住院号Column {
                get {
                    return this.column住院号;
                }
            }
            
            internal DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            internal DataColumn 病人科室Column {
                get {
                    return this.column病人科室;
                }
            }
            
            internal DataColumn 类别代码Column {
                get {
                    return this.column类别代码;
                }
            }
            
            internal DataColumn 类别名称Column {
                get {
                    return this.column类别名称;
                }
            }
            
            internal DataColumn 项目编号Column {
                get {
                    return this.column项目编号;
                }
            }
            
            internal DataColumn 项目名称Column {
                get {
                    return this.column项目名称;
                }
            }
            
            internal DataColumn 规格Column {
                get {
                    return this.column规格;
                }
            }
            
            internal DataColumn 单位Column {
                get {
                    return this.column单位;
                }
            }
            
            internal DataColumn 单价Column {
                get {
                    return this.column单价;
                }
            }
            
            internal DataColumn 数量Column {
                get {
                    return this.column数量;
                }
            }
            
            internal DataColumn 金额Column {
                get {
                    return this.column金额;
                }
            }
            
            internal DataColumn 执行科室Column {
                get {
                    return this.column执行科室;
                }
            }
            
            internal DataColumn 记账日期Column {
                get {
                    return this.column记账日期;
                }
            }
            
            internal DataColumn 记账人Column {
                get {
                    return this.column记账人;
                }
            }
            
            internal DataColumn 记账类型Column {
                get {
                    return this.column记账类型;
                }
            }
            
            internal DataColumn baby_idColumn {
                get {
                    return this.columnbaby_id;
                }
            }
            
            internal DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            internal DataColumn 未结算预交款Column {
                get {
                    return this.column未结算预交款;
                }
            }
            
            internal DataColumn 未结算总费用Column {
                get {
                    return this.column未结算总费用;
                }
            }
            
            internal DataColumn 余额Column {
                get {
                    return this.column余额;
                }
            }
            
            public BRFeeMXDRow this[int index] {
                get {
                    return ((BRFeeMXDRow)(this.Rows[index]));
                }
            }
            
            public event BRFeeMXDRowChangeEventHandler BRFeeMXDRowChanged;
            
            public event BRFeeMXDRowChangeEventHandler BRFeeMXDRowChanging;
            
            public event BRFeeMXDRowChangeEventHandler BRFeeMXDRowDeleted;
            
            public event BRFeeMXDRowChangeEventHandler BRFeeMXDRowDeleting;
            
            public void AddBRFeeMXDRow(BRFeeMXDRow row) {
                this.Rows.Add(row);
            }
            
            public BRFeeMXDRow AddBRFeeMXDRow(
                        string 床号, 
                        string 住院号, 
                        string 姓名, 
                        string 病人科室, 
                        string 类别代码, 
                        string 类别名称, 
                        string 项目编号, 
                        string 项目名称, 
                        string 规格, 
                        string 单位, 
                        System.Double 单价, 
                        System.Double 数量, 
                        System.Double 金额, 
                        string 执行科室, 
                        string 记账日期, 
                        string 记账人, 
                        string 记账类型, 
                        string baby_id, 
                        string id, 
                        string 未结算预交款, 
                        string 未结算总费用, 
                        string 余额) {
                BRFeeMXDRow rowBRFeeMXDRow = ((BRFeeMXDRow)(this.NewRow()));
                rowBRFeeMXDRow.ItemArray = new object[] {
                        床号,
                        住院号,
                        姓名,
                        病人科室,
                        类别代码,
                        类别名称,
                        项目编号,
                        项目名称,
                        规格,
                        单位,
                        单价,
                        数量,
                        金额,
                        执行科室,
                        记账日期,
                        记账人,
                        记账类型,
                        baby_id,
                        id,
                        未结算预交款,
                        未结算总费用,
                        余额};
                this.Rows.Add(rowBRFeeMXDRow);
                return rowBRFeeMXDRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                BRFeeMXDDataTable cln = ((BRFeeMXDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new BRFeeMXDDataTable();
            }
            
            internal void InitVars() {
                this.column床号 = this.Columns["床号"];
                this.column住院号 = this.Columns["住院号"];
                this.column姓名 = this.Columns["姓名"];
                this.column病人科室 = this.Columns["病人科室"];
                this.column类别代码 = this.Columns["类别代码"];
                this.column类别名称 = this.Columns["类别名称"];
                this.column项目编号 = this.Columns["项目编号"];
                this.column项目名称 = this.Columns["项目名称"];
                this.column规格 = this.Columns["规格"];
                this.column单位 = this.Columns["单位"];
                this.column单价 = this.Columns["单价"];
                this.column数量 = this.Columns["数量"];
                this.column金额 = this.Columns["金额"];
                this.column执行科室 = this.Columns["执行科室"];
                this.column记账日期 = this.Columns["记账日期"];
                this.column记账人 = this.Columns["记账人"];
                this.column记账类型 = this.Columns["记账类型"];
                this.columnbaby_id = this.Columns["baby_id"];
                this.columnid = this.Columns["id"];
                this.column未结算预交款 = this.Columns["未结算预交款"];
                this.column未结算总费用 = this.Columns["未结算总费用"];
                this.column余额 = this.Columns["余额"];
            }
            
            private void InitClass() {
                this.column床号 = new DataColumn("床号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column床号);
                this.column住院号 = new DataColumn("住院号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column住院号);
                this.column姓名 = new DataColumn("姓名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column姓名);
                this.column病人科室 = new DataColumn("病人科室", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column病人科室);
                this.column类别代码 = new DataColumn("类别代码", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column类别代码);
                this.column类别名称 = new DataColumn("类别名称", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column类别名称);
                this.column项目编号 = new DataColumn("项目编号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column项目编号);
                this.column项目名称 = new DataColumn("项目名称", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column项目名称);
                this.column规格 = new DataColumn("规格", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column规格);
                this.column单位 = new DataColumn("单位", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column单位);
                this.column单价 = new DataColumn("单价", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column单价);
                this.column数量 = new DataColumn("数量", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column数量);
                this.column金额 = new DataColumn("金额", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column金额);
                this.column执行科室 = new DataColumn("执行科室", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column执行科室);
                this.column记账日期 = new DataColumn("记账日期", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column记账日期);
                this.column记账人 = new DataColumn("记账人", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column记账人);
                this.column记账类型 = new DataColumn("记账类型", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column记账类型);
                this.columnbaby_id = new DataColumn("baby_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbaby_id);
                this.columnid = new DataColumn("id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnid);
                this.column未结算预交款 = new DataColumn("未结算预交款", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column未结算预交款);
                this.column未结算总费用 = new DataColumn("未结算总费用", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column未结算总费用);
                this.column余额 = new DataColumn("余额", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column余额);
            }
            
            public BRFeeMXDRow NewBRFeeMXDRow() {
                return ((BRFeeMXDRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new BRFeeMXDRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(BRFeeMXDRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BRFeeMXDRowChanged != null)) {
                    this.BRFeeMXDRowChanged(this, new BRFeeMXDRowChangeEvent(((BRFeeMXDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BRFeeMXDRowChanging != null)) {
                    this.BRFeeMXDRowChanging(this, new BRFeeMXDRowChangeEvent(((BRFeeMXDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BRFeeMXDRowDeleted != null)) {
                    this.BRFeeMXDRowDeleted(this, new BRFeeMXDRowChangeEvent(((BRFeeMXDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BRFeeMXDRowDeleting != null)) {
                    this.BRFeeMXDRowDeleting(this, new BRFeeMXDRowChangeEvent(((BRFeeMXDRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveBRFeeMXDRow(BRFeeMXDRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BRFeeMXDRow : DataRow {
            
            private BRFeeMXDDataTable tableBRFeeMXD;
            
            internal BRFeeMXDRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableBRFeeMXD = ((BRFeeMXDDataTable)(this.Table));
            }
            
            public string 床号 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.床号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.床号Column] = value;
                }
            }
            
            public string 住院号 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.住院号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.住院号Column] = value;
                }
            }
            
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.姓名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.姓名Column] = value;
                }
            }
            
            public string 病人科室 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.病人科室Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.病人科室Column] = value;
                }
            }
            
            public string 类别代码 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.类别代码Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.类别代码Column] = value;
                }
            }
            
            public string 类别名称 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.类别名称Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.类别名称Column] = value;
                }
            }
            
            public string 项目编号 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.项目编号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.项目编号Column] = value;
                }
            }
            
            public string 项目名称 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.项目名称Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.项目名称Column] = value;
                }
            }
            
            public string 规格 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.规格Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.规格Column] = value;
                }
            }
            
            public string 单位 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.单位Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.单位Column] = value;
                }
            }
            
            public System.Double 单价 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeMXD.单价Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.单价Column] = value;
                }
            }
            
            public System.Double 数量 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeMXD.数量Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.数量Column] = value;
                }
            }
            
            public System.Double 金额 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeMXD.金额Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.金额Column] = value;
                }
            }
            
            public string 执行科室 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.执行科室Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.执行科室Column] = value;
                }
            }
            
            public string 记账日期 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.记账日期Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.记账日期Column] = value;
                }
            }
            
            public string 记账人 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.记账人Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.记账人Column] = value;
                }
            }
            
            public string 记账类型 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.记账类型Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.记账类型Column] = value;
                }
            }
            
            public string baby_id {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.baby_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.baby_idColumn] = value;
                }
            }
            
            public string id {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.idColumn] = value;
                }
            }
            
            public string 未结算预交款 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.未结算预交款Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.未结算预交款Column] = value;
                }
            }
            
            public string 未结算总费用 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.未结算总费用Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.未结算总费用Column] = value;
                }
            }
            
            public string 余额 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeMXD.余额Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeMXD.余额Column] = value;
                }
            }
            
            public bool Is床号Null() {
                return this.IsNull(this.tableBRFeeMXD.床号Column);
            }
            
            public void Set床号Null() {
                this[this.tableBRFeeMXD.床号Column] = System.Convert.DBNull;
            }
            
            public bool Is住院号Null() {
                return this.IsNull(this.tableBRFeeMXD.住院号Column);
            }
            
            public void Set住院号Null() {
                this[this.tableBRFeeMXD.住院号Column] = System.Convert.DBNull;
            }
            
            public bool Is姓名Null() {
                return this.IsNull(this.tableBRFeeMXD.姓名Column);
            }
            
            public void Set姓名Null() {
                this[this.tableBRFeeMXD.姓名Column] = System.Convert.DBNull;
            }
            
            public bool Is病人科室Null() {
                return this.IsNull(this.tableBRFeeMXD.病人科室Column);
            }
            
            public void Set病人科室Null() {
                this[this.tableBRFeeMXD.病人科室Column] = System.Convert.DBNull;
            }
            
            public bool Is类别代码Null() {
                return this.IsNull(this.tableBRFeeMXD.类别代码Column);
            }
            
            public void Set类别代码Null() {
                this[this.tableBRFeeMXD.类别代码Column] = System.Convert.DBNull;
            }
            
            public bool Is类别名称Null() {
                return this.IsNull(this.tableBRFeeMXD.类别名称Column);
            }
            
            public void Set类别名称Null() {
                this[this.tableBRFeeMXD.类别名称Column] = System.Convert.DBNull;
            }
            
            public bool Is项目编号Null() {
                return this.IsNull(this.tableBRFeeMXD.项目编号Column);
            }
            
            public void Set项目编号Null() {
                this[this.tableBRFeeMXD.项目编号Column] = System.Convert.DBNull;
            }
            
            public bool Is项目名称Null() {
                return this.IsNull(this.tableBRFeeMXD.项目名称Column);
            }
            
            public void Set项目名称Null() {
                this[this.tableBRFeeMXD.项目名称Column] = System.Convert.DBNull;
            }
            
            public bool Is规格Null() {
                return this.IsNull(this.tableBRFeeMXD.规格Column);
            }
            
            public void Set规格Null() {
                this[this.tableBRFeeMXD.规格Column] = System.Convert.DBNull;
            }
            
            public bool Is单位Null() {
                return this.IsNull(this.tableBRFeeMXD.单位Column);
            }
            
            public void Set单位Null() {
                this[this.tableBRFeeMXD.单位Column] = System.Convert.DBNull;
            }
            
            public bool Is单价Null() {
                return this.IsNull(this.tableBRFeeMXD.单价Column);
            }
            
            public void Set单价Null() {
                this[this.tableBRFeeMXD.单价Column] = System.Convert.DBNull;
            }
            
            public bool Is数量Null() {
                return this.IsNull(this.tableBRFeeMXD.数量Column);
            }
            
            public void Set数量Null() {
                this[this.tableBRFeeMXD.数量Column] = System.Convert.DBNull;
            }
            
            public bool Is金额Null() {
                return this.IsNull(this.tableBRFeeMXD.金额Column);
            }
            
            public void Set金额Null() {
                this[this.tableBRFeeMXD.金额Column] = System.Convert.DBNull;
            }
            
            public bool Is执行科室Null() {
                return this.IsNull(this.tableBRFeeMXD.执行科室Column);
            }
            
            public void Set执行科室Null() {
                this[this.tableBRFeeMXD.执行科室Column] = System.Convert.DBNull;
            }
            
            public bool Is记账日期Null() {
                return this.IsNull(this.tableBRFeeMXD.记账日期Column);
            }
            
            public void Set记账日期Null() {
                this[this.tableBRFeeMXD.记账日期Column] = System.Convert.DBNull;
            }
            
            public bool Is记账人Null() {
                return this.IsNull(this.tableBRFeeMXD.记账人Column);
            }
            
            public void Set记账人Null() {
                this[this.tableBRFeeMXD.记账人Column] = System.Convert.DBNull;
            }
            
            public bool Is记账类型Null() {
                return this.IsNull(this.tableBRFeeMXD.记账类型Column);
            }
            
            public void Set记账类型Null() {
                this[this.tableBRFeeMXD.记账类型Column] = System.Convert.DBNull;
            }
            
            public bool Isbaby_idNull() {
                return this.IsNull(this.tableBRFeeMXD.baby_idColumn);
            }
            
            public void Setbaby_idNull() {
                this[this.tableBRFeeMXD.baby_idColumn] = System.Convert.DBNull;
            }
            
            public bool IsidNull() {
                return this.IsNull(this.tableBRFeeMXD.idColumn);
            }
            
            public void SetidNull() {
                this[this.tableBRFeeMXD.idColumn] = System.Convert.DBNull;
            }
            
            public bool Is未结算预交款Null() {
                return this.IsNull(this.tableBRFeeMXD.未结算预交款Column);
            }
            
            public void Set未结算预交款Null() {
                this[this.tableBRFeeMXD.未结算预交款Column] = System.Convert.DBNull;
            }
            
            public bool Is未结算总费用Null() {
                return this.IsNull(this.tableBRFeeMXD.未结算总费用Column);
            }
            
            public void Set未结算总费用Null() {
                this[this.tableBRFeeMXD.未结算总费用Column] = System.Convert.DBNull;
            }
            
            public bool Is余额Null() {
                return this.IsNull(this.tableBRFeeMXD.余额Column);
            }
            
            public void Set余额Null() {
                this[this.tableBRFeeMXD.余额Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BRFeeMXDRowChangeEvent : EventArgs {
            
            private BRFeeMXDRow eventRow;
            
            private DataRowAction eventAction;
            
            public BRFeeMXDRowChangeEvent(BRFeeMXDRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public BRFeeMXDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BRFeeCKDDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column床号;
            
            private DataColumn column住院号;
            
            private DataColumn column姓名;
            
            private DataColumn column病室;
            
            private DataColumn column入院日期;
            
            private DataColumn column补交费用;
            
            private DataColumn column已预交;
            
            private DataColumn column总费用;
            
            private DataColumn column余额;
            
            private DataColumn column单位名称;
            
            private DataColumn column开户银行;
            
            private DataColumn column账号;
            
            private DataColumn column操作人;
            
            internal BRFeeCKDDataTable() : 
                    base("BRFeeCKD") {
                this.InitClass();
            }
            
            internal BRFeeCKDDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 床号Column {
                get {
                    return this.column床号;
                }
            }
            
            internal DataColumn 住院号Column {
                get {
                    return this.column住院号;
                }
            }
            
            internal DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            internal DataColumn 病室Column {
                get {
                    return this.column病室;
                }
            }
            
            internal DataColumn 入院日期Column {
                get {
                    return this.column入院日期;
                }
            }
            
            internal DataColumn 补交费用Column {
                get {
                    return this.column补交费用;
                }
            }
            
            internal DataColumn 已预交Column {
                get {
                    return this.column已预交;
                }
            }
            
            internal DataColumn 总费用Column {
                get {
                    return this.column总费用;
                }
            }
            
            internal DataColumn 余额Column {
                get {
                    return this.column余额;
                }
            }
            
            internal DataColumn 单位名称Column {
                get {
                    return this.column单位名称;
                }
            }
            
            internal DataColumn 开户银行Column {
                get {
                    return this.column开户银行;
                }
            }
            
            internal DataColumn 账号Column {
                get {
                    return this.column账号;
                }
            }
            
            internal DataColumn 操作人Column {
                get {
                    return this.column操作人;
                }
            }
            
            public BRFeeCKDRow this[int index] {
                get {
                    return ((BRFeeCKDRow)(this.Rows[index]));
                }
            }
            
            public event BRFeeCKDRowChangeEventHandler BRFeeCKDRowChanged;
            
            public event BRFeeCKDRowChangeEventHandler BRFeeCKDRowChanging;
            
            public event BRFeeCKDRowChangeEventHandler BRFeeCKDRowDeleted;
            
            public event BRFeeCKDRowChangeEventHandler BRFeeCKDRowDeleting;
            
            public void AddBRFeeCKDRow(BRFeeCKDRow row) {
                this.Rows.Add(row);
            }
            
            public BRFeeCKDRow AddBRFeeCKDRow(string 床号, string 住院号, string 姓名, string 病室, string 入院日期, string 补交费用, string 已预交, string 总费用, string 余额, string 单位名称, string 开户银行, string 账号, string 操作人) {
                BRFeeCKDRow rowBRFeeCKDRow = ((BRFeeCKDRow)(this.NewRow()));
                rowBRFeeCKDRow.ItemArray = new object[] {
                        床号,
                        住院号,
                        姓名,
                        病室,
                        入院日期,
                        补交费用,
                        已预交,
                        总费用,
                        余额,
                        单位名称,
                        开户银行,
                        账号,
                        操作人};
                this.Rows.Add(rowBRFeeCKDRow);
                return rowBRFeeCKDRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                BRFeeCKDDataTable cln = ((BRFeeCKDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new BRFeeCKDDataTable();
            }
            
            internal void InitVars() {
                this.column床号 = this.Columns["床号"];
                this.column住院号 = this.Columns["住院号"];
                this.column姓名 = this.Columns["姓名"];
                this.column病室 = this.Columns["病室"];
                this.column入院日期 = this.Columns["入院日期"];
                this.column补交费用 = this.Columns["补交费用"];
                this.column已预交 = this.Columns["已预交"];
                this.column总费用 = this.Columns["总费用"];
                this.column余额 = this.Columns["余额"];
                this.column单位名称 = this.Columns["单位名称"];
                this.column开户银行 = this.Columns["开户银行"];
                this.column账号 = this.Columns["账号"];
                this.column操作人 = this.Columns["操作人"];
            }
            
            private void InitClass() {
                this.column床号 = new DataColumn("床号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column床号);
                this.column住院号 = new DataColumn("住院号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column住院号);
                this.column姓名 = new DataColumn("姓名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column姓名);
                this.column病室 = new DataColumn("病室", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column病室);
                this.column入院日期 = new DataColumn("入院日期", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column入院日期);
                this.column补交费用 = new DataColumn("补交费用", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column补交费用);
                this.column已预交 = new DataColumn("已预交", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column已预交);
                this.column总费用 = new DataColumn("总费用", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column总费用);
                this.column余额 = new DataColumn("余额", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column余额);
                this.column单位名称 = new DataColumn("单位名称", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column单位名称);
                this.column开户银行 = new DataColumn("开户银行", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column开户银行);
                this.column账号 = new DataColumn("账号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column账号);
                this.column操作人 = new DataColumn("操作人", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column操作人);
            }
            
            public BRFeeCKDRow NewBRFeeCKDRow() {
                return ((BRFeeCKDRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new BRFeeCKDRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(BRFeeCKDRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BRFeeCKDRowChanged != null)) {
                    this.BRFeeCKDRowChanged(this, new BRFeeCKDRowChangeEvent(((BRFeeCKDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BRFeeCKDRowChanging != null)) {
                    this.BRFeeCKDRowChanging(this, new BRFeeCKDRowChangeEvent(((BRFeeCKDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BRFeeCKDRowDeleted != null)) {
                    this.BRFeeCKDRowDeleted(this, new BRFeeCKDRowChangeEvent(((BRFeeCKDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BRFeeCKDRowDeleting != null)) {
                    this.BRFeeCKDRowDeleting(this, new BRFeeCKDRowChangeEvent(((BRFeeCKDRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveBRFeeCKDRow(BRFeeCKDRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BRFeeCKDRow : DataRow {
            
            private BRFeeCKDDataTable tableBRFeeCKD;
            
            internal BRFeeCKDRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableBRFeeCKD = ((BRFeeCKDDataTable)(this.Table));
            }
            
            public string 床号 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeCKD.床号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeCKD.床号Column] = value;
                }
            }
            
            public string 住院号 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeCKD.住院号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeCKD.住院号Column] = value;
                }
            }
            
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeCKD.姓名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeCKD.姓名Column] = value;
                }
            }
            
            public string 病室 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeCKD.病室Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeCKD.病室Column] = value;
                }
            }
            
            public string 入院日期 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeCKD.入院日期Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeCKD.入院日期Column] = value;
                }
            }
            
            public string 补交费用 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeCKD.补交费用Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeCKD.补交费用Column] = value;
                }
            }
            
            public string 已预交 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeCKD.已预交Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeCKD.已预交Column] = value;
                }
            }
            
            public string 总费用 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeCKD.总费用Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeCKD.总费用Column] = value;
                }
            }
            
            public string 余额 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeCKD.余额Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeCKD.余额Column] = value;
                }
            }
            
            public string 单位名称 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeCKD.单位名称Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeCKD.单位名称Column] = value;
                }
            }
            
            public string 开户银行 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeCKD.开户银行Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeCKD.开户银行Column] = value;
                }
            }
            
            public string 账号 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeCKD.账号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeCKD.账号Column] = value;
                }
            }
            
            public string 操作人 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeCKD.操作人Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeCKD.操作人Column] = value;
                }
            }
            
            public bool Is床号Null() {
                return this.IsNull(this.tableBRFeeCKD.床号Column);
            }
            
            public void Set床号Null() {
                this[this.tableBRFeeCKD.床号Column] = System.Convert.DBNull;
            }
            
            public bool Is住院号Null() {
                return this.IsNull(this.tableBRFeeCKD.住院号Column);
            }
            
            public void Set住院号Null() {
                this[this.tableBRFeeCKD.住院号Column] = System.Convert.DBNull;
            }
            
            public bool Is姓名Null() {
                return this.IsNull(this.tableBRFeeCKD.姓名Column);
            }
            
            public void Set姓名Null() {
                this[this.tableBRFeeCKD.姓名Column] = System.Convert.DBNull;
            }
            
            public bool Is病室Null() {
                return this.IsNull(this.tableBRFeeCKD.病室Column);
            }
            
            public void Set病室Null() {
                this[this.tableBRFeeCKD.病室Column] = System.Convert.DBNull;
            }
            
            public bool Is入院日期Null() {
                return this.IsNull(this.tableBRFeeCKD.入院日期Column);
            }
            
            public void Set入院日期Null() {
                this[this.tableBRFeeCKD.入院日期Column] = System.Convert.DBNull;
            }
            
            public bool Is补交费用Null() {
                return this.IsNull(this.tableBRFeeCKD.补交费用Column);
            }
            
            public void Set补交费用Null() {
                this[this.tableBRFeeCKD.补交费用Column] = System.Convert.DBNull;
            }
            
            public bool Is已预交Null() {
                return this.IsNull(this.tableBRFeeCKD.已预交Column);
            }
            
            public void Set已预交Null() {
                this[this.tableBRFeeCKD.已预交Column] = System.Convert.DBNull;
            }
            
            public bool Is总费用Null() {
                return this.IsNull(this.tableBRFeeCKD.总费用Column);
            }
            
            public void Set总费用Null() {
                this[this.tableBRFeeCKD.总费用Column] = System.Convert.DBNull;
            }
            
            public bool Is余额Null() {
                return this.IsNull(this.tableBRFeeCKD.余额Column);
            }
            
            public void Set余额Null() {
                this[this.tableBRFeeCKD.余额Column] = System.Convert.DBNull;
            }
            
            public bool Is单位名称Null() {
                return this.IsNull(this.tableBRFeeCKD.单位名称Column);
            }
            
            public void Set单位名称Null() {
                this[this.tableBRFeeCKD.单位名称Column] = System.Convert.DBNull;
            }
            
            public bool Is开户银行Null() {
                return this.IsNull(this.tableBRFeeCKD.开户银行Column);
            }
            
            public void Set开户银行Null() {
                this[this.tableBRFeeCKD.开户银行Column] = System.Convert.DBNull;
            }
            
            public bool Is账号Null() {
                return this.IsNull(this.tableBRFeeCKD.账号Column);
            }
            
            public void Set账号Null() {
                this[this.tableBRFeeCKD.账号Column] = System.Convert.DBNull;
            }
            
            public bool Is操作人Null() {
                return this.IsNull(this.tableBRFeeCKD.操作人Column);
            }
            
            public void Set操作人Null() {
                this[this.tableBRFeeCKD.操作人Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BRFeeCKDRowChangeEvent : EventArgs {
            
            private BRFeeCKDRow eventRow;
            
            private DataRowAction eventAction;
            
            public BRFeeCKDRowChangeEvent(BRFeeCKDRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public BRFeeCKDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BRFeeHZDDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column科室名称;
            
            private DataColumn column床位费;
            
            private DataColumn column药品费;
            
            private DataColumn column检验费;
            
            private DataColumn column治疗费;
            
            private DataColumn column放射费;
            
            private DataColumn column输血费;
            
            private DataColumn column检查费;
            
            private DataColumn column放疗费;
            
            private DataColumn column手术费;
            
            private DataColumn column其他费;
            
            private DataColumn column挂号费;
            
            private DataColumn column诊查费;
            
            private DataColumn column护理费;
            
            private DataColumn column特殊材料费;
            
            private DataColumn column合计;
            
            private DataColumn columnID;
            
            internal BRFeeHZDDataTable() : 
                    base("BRFeeHZD") {
                this.InitClass();
            }
            
            internal BRFeeHZDDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 科室名称Column {
                get {
                    return this.column科室名称;
                }
            }
            
            internal DataColumn 床位费Column {
                get {
                    return this.column床位费;
                }
            }
            
            internal DataColumn 药品费Column {
                get {
                    return this.column药品费;
                }
            }
            
            internal DataColumn 检验费Column {
                get {
                    return this.column检验费;
                }
            }
            
            internal DataColumn 治疗费Column {
                get {
                    return this.column治疗费;
                }
            }
            
            internal DataColumn 放射费Column {
                get {
                    return this.column放射费;
                }
            }
            
            internal DataColumn 输血费Column {
                get {
                    return this.column输血费;
                }
            }
            
            internal DataColumn 检查费Column {
                get {
                    return this.column检查费;
                }
            }
            
            internal DataColumn 放疗费Column {
                get {
                    return this.column放疗费;
                }
            }
            
            internal DataColumn 手术费Column {
                get {
                    return this.column手术费;
                }
            }
            
            internal DataColumn 其他费Column {
                get {
                    return this.column其他费;
                }
            }
            
            internal DataColumn 挂号费Column {
                get {
                    return this.column挂号费;
                }
            }
            
            internal DataColumn 诊查费Column {
                get {
                    return this.column诊查费;
                }
            }
            
            internal DataColumn 护理费Column {
                get {
                    return this.column护理费;
                }
            }
            
            internal DataColumn 特殊材料费Column {
                get {
                    return this.column特殊材料费;
                }
            }
            
            internal DataColumn 合计Column {
                get {
                    return this.column合计;
                }
            }
            
            internal DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            public BRFeeHZDRow this[int index] {
                get {
                    return ((BRFeeHZDRow)(this.Rows[index]));
                }
            }
            
            public event BRFeeHZDRowChangeEventHandler BRFeeHZDRowChanged;
            
            public event BRFeeHZDRowChangeEventHandler BRFeeHZDRowChanging;
            
            public event BRFeeHZDRowChangeEventHandler BRFeeHZDRowDeleted;
            
            public event BRFeeHZDRowChangeEventHandler BRFeeHZDRowDeleting;
            
            public void AddBRFeeHZDRow(BRFeeHZDRow row) {
                this.Rows.Add(row);
            }
            
            public BRFeeHZDRow AddBRFeeHZDRow(
                        string 科室名称, 
                        System.Double 床位费, 
                        System.Double 药品费, 
                        System.Double 检验费, 
                        System.Double 治疗费, 
                        System.Double 放射费, 
                        System.Double 输血费, 
                        System.Double 检查费, 
                        System.Double 放疗费, 
                        System.Double 手术费, 
                        System.Double 其他费, 
                        System.Double 挂号费, 
                        System.Double 诊查费, 
                        System.Double 护理费, 
                        System.Double 特殊材料费, 
                        System.Double 合计, 
                        string ID) {
                BRFeeHZDRow rowBRFeeHZDRow = ((BRFeeHZDRow)(this.NewRow()));
                rowBRFeeHZDRow.ItemArray = new object[] {
                        科室名称,
                        床位费,
                        药品费,
                        检验费,
                        治疗费,
                        放射费,
                        输血费,
                        检查费,
                        放疗费,
                        手术费,
                        其他费,
                        挂号费,
                        诊查费,
                        护理费,
                        特殊材料费,
                        合计,
                        ID};
                this.Rows.Add(rowBRFeeHZDRow);
                return rowBRFeeHZDRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                BRFeeHZDDataTable cln = ((BRFeeHZDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new BRFeeHZDDataTable();
            }
            
            internal void InitVars() {
                this.column科室名称 = this.Columns["科室名称"];
                this.column床位费 = this.Columns["床位费"];
                this.column药品费 = this.Columns["药品费"];
                this.column检验费 = this.Columns["检验费"];
                this.column治疗费 = this.Columns["治疗费"];
                this.column放射费 = this.Columns["放射费"];
                this.column输血费 = this.Columns["输血费"];
                this.column检查费 = this.Columns["检查费"];
                this.column放疗费 = this.Columns["放疗费"];
                this.column手术费 = this.Columns["手术费"];
                this.column其他费 = this.Columns["其他费"];
                this.column挂号费 = this.Columns["挂号费"];
                this.column诊查费 = this.Columns["诊查费"];
                this.column护理费 = this.Columns["护理费"];
                this.column特殊材料费 = this.Columns["特殊材料费"];
                this.column合计 = this.Columns["合计"];
                this.columnID = this.Columns["ID"];
            }
            
            private void InitClass() {
                this.column科室名称 = new DataColumn("科室名称", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column科室名称);
                this.column床位费 = new DataColumn("床位费", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column床位费);
                this.column药品费 = new DataColumn("药品费", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column药品费);
                this.column检验费 = new DataColumn("检验费", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column检验费);
                this.column治疗费 = new DataColumn("治疗费", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column治疗费);
                this.column放射费 = new DataColumn("放射费", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column放射费);
                this.column输血费 = new DataColumn("输血费", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column输血费);
                this.column检查费 = new DataColumn("检查费", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column检查费);
                this.column放疗费 = new DataColumn("放疗费", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column放疗费);
                this.column手术费 = new DataColumn("手术费", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column手术费);
                this.column其他费 = new DataColumn("其他费", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column其他费);
                this.column挂号费 = new DataColumn("挂号费", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column挂号费);
                this.column诊查费 = new DataColumn("诊查费", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column诊查费);
                this.column护理费 = new DataColumn("护理费", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column护理费);
                this.column特殊材料费 = new DataColumn("特殊材料费", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column特殊材料费);
                this.column合计 = new DataColumn("合计", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column合计);
                this.columnID = new DataColumn("ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID);
            }
            
            public BRFeeHZDRow NewBRFeeHZDRow() {
                return ((BRFeeHZDRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new BRFeeHZDRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(BRFeeHZDRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BRFeeHZDRowChanged != null)) {
                    this.BRFeeHZDRowChanged(this, new BRFeeHZDRowChangeEvent(((BRFeeHZDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BRFeeHZDRowChanging != null)) {
                    this.BRFeeHZDRowChanging(this, new BRFeeHZDRowChangeEvent(((BRFeeHZDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BRFeeHZDRowDeleted != null)) {
                    this.BRFeeHZDRowDeleted(this, new BRFeeHZDRowChangeEvent(((BRFeeHZDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BRFeeHZDRowDeleting != null)) {
                    this.BRFeeHZDRowDeleting(this, new BRFeeHZDRowChangeEvent(((BRFeeHZDRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveBRFeeHZDRow(BRFeeHZDRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BRFeeHZDRow : DataRow {
            
            private BRFeeHZDDataTable tableBRFeeHZD;
            
            internal BRFeeHZDRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableBRFeeHZD = ((BRFeeHZDDataTable)(this.Table));
            }
            
            public string 科室名称 {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeHZD.科室名称Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.科室名称Column] = value;
                }
            }
            
            public System.Double 床位费 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.床位费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.床位费Column] = value;
                }
            }
            
            public System.Double 药品费 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.药品费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.药品费Column] = value;
                }
            }
            
            public System.Double 检验费 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.检验费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.检验费Column] = value;
                }
            }
            
            public System.Double 治疗费 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.治疗费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.治疗费Column] = value;
                }
            }
            
            public System.Double 放射费 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.放射费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.放射费Column] = value;
                }
            }
            
            public System.Double 输血费 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.输血费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.输血费Column] = value;
                }
            }
            
            public System.Double 检查费 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.检查费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.检查费Column] = value;
                }
            }
            
            public System.Double 放疗费 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.放疗费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.放疗费Column] = value;
                }
            }
            
            public System.Double 手术费 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.手术费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.手术费Column] = value;
                }
            }
            
            public System.Double 其他费 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.其他费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.其他费Column] = value;
                }
            }
            
            public System.Double 挂号费 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.挂号费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.挂号费Column] = value;
                }
            }
            
            public System.Double 诊查费 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.诊查费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.诊查费Column] = value;
                }
            }
            
            public System.Double 护理费 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.护理费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.护理费Column] = value;
                }
            }
            
            public System.Double 特殊材料费 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.特殊材料费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.特殊材料费Column] = value;
                }
            }
            
            public System.Double 合计 {
                get {
                    try {
                        return ((System.Double)(this[this.tableBRFeeHZD.合计Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.合计Column] = value;
                }
            }
            
            public string ID {
                get {
                    try {
                        return ((string)(this[this.tableBRFeeHZD.IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBRFeeHZD.IDColumn] = value;
                }
            }
            
            public bool Is科室名称Null() {
                return this.IsNull(this.tableBRFeeHZD.科室名称Column);
            }
            
            public void Set科室名称Null() {
                this[this.tableBRFeeHZD.科室名称Column] = System.Convert.DBNull;
            }
            
            public bool Is床位费Null() {
                return this.IsNull(this.tableBRFeeHZD.床位费Column);
            }
            
            public void Set床位费Null() {
                this[this.tableBRFeeHZD.床位费Column] = System.Convert.DBNull;
            }
            
            public bool Is药品费Null() {
                return this.IsNull(this.tableBRFeeHZD.药品费Column);
            }
            
            public void Set药品费Null() {
                this[this.tableBRFeeHZD.药品费Column] = System.Convert.DBNull;
            }
            
            public bool Is检验费Null() {
                return this.IsNull(this.tableBRFeeHZD.检验费Column);
            }
            
            public void Set检验费Null() {
                this[this.tableBRFeeHZD.检验费Column] = System.Convert.DBNull;
            }
            
            public bool Is治疗费Null() {
                return this.IsNull(this.tableBRFeeHZD.治疗费Column);
            }
            
            public void Set治疗费Null() {
                this[this.tableBRFeeHZD.治疗费Column] = System.Convert.DBNull;
            }
            
            public bool Is放射费Null() {
                return this.IsNull(this.tableBRFeeHZD.放射费Column);
            }
            
            public void Set放射费Null() {
                this[this.tableBRFeeHZD.放射费Column] = System.Convert.DBNull;
            }
            
            public bool Is输血费Null() {
                return this.IsNull(this.tableBRFeeHZD.输血费Column);
            }
            
            public void Set输血费Null() {
                this[this.tableBRFeeHZD.输血费Column] = System.Convert.DBNull;
            }
            
            public bool Is检查费Null() {
                return this.IsNull(this.tableBRFeeHZD.检查费Column);
            }
            
            public void Set检查费Null() {
                this[this.tableBRFeeHZD.检查费Column] = System.Convert.DBNull;
            }
            
            public bool Is放疗费Null() {
                return this.IsNull(this.tableBRFeeHZD.放疗费Column);
            }
            
            public void Set放疗费Null() {
                this[this.tableBRFeeHZD.放疗费Column] = System.Convert.DBNull;
            }
            
            public bool Is手术费Null() {
                return this.IsNull(this.tableBRFeeHZD.手术费Column);
            }
            
            public void Set手术费Null() {
                this[this.tableBRFeeHZD.手术费Column] = System.Convert.DBNull;
            }
            
            public bool Is其他费Null() {
                return this.IsNull(this.tableBRFeeHZD.其他费Column);
            }
            
            public void Set其他费Null() {
                this[this.tableBRFeeHZD.其他费Column] = System.Convert.DBNull;
            }
            
            public bool Is挂号费Null() {
                return this.IsNull(this.tableBRFeeHZD.挂号费Column);
            }
            
            public void Set挂号费Null() {
                this[this.tableBRFeeHZD.挂号费Column] = System.Convert.DBNull;
            }
            
            public bool Is诊查费Null() {
                return this.IsNull(this.tableBRFeeHZD.诊查费Column);
            }
            
            public void Set诊查费Null() {
                this[this.tableBRFeeHZD.诊查费Column] = System.Convert.DBNull;
            }
            
            public bool Is护理费Null() {
                return this.IsNull(this.tableBRFeeHZD.护理费Column);
            }
            
            public void Set护理费Null() {
                this[this.tableBRFeeHZD.护理费Column] = System.Convert.DBNull;
            }
            
            public bool Is特殊材料费Null() {
                return this.IsNull(this.tableBRFeeHZD.特殊材料费Column);
            }
            
            public void Set特殊材料费Null() {
                this[this.tableBRFeeHZD.特殊材料费Column] = System.Convert.DBNull;
            }
            
            public bool Is合计Null() {
                return this.IsNull(this.tableBRFeeHZD.合计Column);
            }
            
            public void Set合计Null() {
                this[this.tableBRFeeHZD.合计Column] = System.Convert.DBNull;
            }
            
            public bool IsIDNull() {
                return this.IsNull(this.tableBRFeeHZD.IDColumn);
            }
            
            public void SetIDNull() {
                this[this.tableBRFeeHZD.IDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class BRFeeHZDRowChangeEvent : EventArgs {
            
            private BRFeeHZDRow eventRow;
            
            private DataRowAction eventAction;
            
            public BRFeeHZDRowChangeEvent(BRFeeHZDRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public BRFeeHZDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EQUAPPLSDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnEQUID;
            
            private DataColumn columnEQUNAME;
            
            private DataColumn columnEQUDESC;
            
            private DataColumn columnEQUUNIT;
            
            private DataColumn columnEQUNUM;
            
            private DataColumn columnEQUREMARK;
            
            private DataColumn columnEQUPRICE;
            
            private DataColumn columnEQUVALUES;
            
            internal EQUAPPLSDataTable() : 
                    base("EQUAPPLS") {
                this.InitClass();
            }
            
            internal EQUAPPLSDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn EQUIDColumn {
                get {
                    return this.columnEQUID;
                }
            }
            
            internal DataColumn EQUNAMEColumn {
                get {
                    return this.columnEQUNAME;
                }
            }
            
            internal DataColumn EQUDESCColumn {
                get {
                    return this.columnEQUDESC;
                }
            }
            
            internal DataColumn EQUUNITColumn {
                get {
                    return this.columnEQUUNIT;
                }
            }
            
            internal DataColumn EQUNUMColumn {
                get {
                    return this.columnEQUNUM;
                }
            }
            
            internal DataColumn EQUREMARKColumn {
                get {
                    return this.columnEQUREMARK;
                }
            }
            
            internal DataColumn EQUPRICEColumn {
                get {
                    return this.columnEQUPRICE;
                }
            }
            
            internal DataColumn EQUVALUESColumn {
                get {
                    return this.columnEQUVALUES;
                }
            }
            
            public EQUAPPLSRow this[int index] {
                get {
                    return ((EQUAPPLSRow)(this.Rows[index]));
                }
            }
            
            public event EQUAPPLSRowChangeEventHandler EQUAPPLSRowChanged;
            
            public event EQUAPPLSRowChangeEventHandler EQUAPPLSRowChanging;
            
            public event EQUAPPLSRowChangeEventHandler EQUAPPLSRowDeleted;
            
            public event EQUAPPLSRowChangeEventHandler EQUAPPLSRowDeleting;
            
            public void AddEQUAPPLSRow(EQUAPPLSRow row) {
                this.Rows.Add(row);
            }
            
            public EQUAPPLSRow AddEQUAPPLSRow(string EQUID, string EQUNAME, string EQUDESC, string EQUUNIT, System.Decimal EQUNUM, string EQUREMARK, System.Decimal EQUPRICE, System.Decimal EQUVALUES) {
                EQUAPPLSRow rowEQUAPPLSRow = ((EQUAPPLSRow)(this.NewRow()));
                rowEQUAPPLSRow.ItemArray = new object[] {
                        EQUID,
                        EQUNAME,
                        EQUDESC,
                        EQUUNIT,
                        EQUNUM,
                        EQUREMARK,
                        EQUPRICE,
                        EQUVALUES};
                this.Rows.Add(rowEQUAPPLSRow);
                return rowEQUAPPLSRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                EQUAPPLSDataTable cln = ((EQUAPPLSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new EQUAPPLSDataTable();
            }
            
            internal void InitVars() {
                this.columnEQUID = this.Columns["EQUID"];
                this.columnEQUNAME = this.Columns["EQUNAME"];
                this.columnEQUDESC = this.Columns["EQUDESC"];
                this.columnEQUUNIT = this.Columns["EQUUNIT"];
                this.columnEQUNUM = this.Columns["EQUNUM"];
                this.columnEQUREMARK = this.Columns["EQUREMARK"];
                this.columnEQUPRICE = this.Columns["EQUPRICE"];
                this.columnEQUVALUES = this.Columns["EQUVALUES"];
            }
            
            private void InitClass() {
                this.columnEQUID = new DataColumn("EQUID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUID);
                this.columnEQUNAME = new DataColumn("EQUNAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUNAME);
                this.columnEQUDESC = new DataColumn("EQUDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUDESC);
                this.columnEQUUNIT = new DataColumn("EQUUNIT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUUNIT);
                this.columnEQUNUM = new DataColumn("EQUNUM", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUNUM);
                this.columnEQUREMARK = new DataColumn("EQUREMARK", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUREMARK);
                this.columnEQUPRICE = new DataColumn("EQUPRICE", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUPRICE);
                this.columnEQUVALUES = new DataColumn("EQUVALUES", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUVALUES);
            }
            
            public EQUAPPLSRow NewEQUAPPLSRow() {
                return ((EQUAPPLSRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new EQUAPPLSRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(EQUAPPLSRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EQUAPPLSRowChanged != null)) {
                    this.EQUAPPLSRowChanged(this, new EQUAPPLSRowChangeEvent(((EQUAPPLSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EQUAPPLSRowChanging != null)) {
                    this.EQUAPPLSRowChanging(this, new EQUAPPLSRowChangeEvent(((EQUAPPLSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EQUAPPLSRowDeleted != null)) {
                    this.EQUAPPLSRowDeleted(this, new EQUAPPLSRowChangeEvent(((EQUAPPLSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EQUAPPLSRowDeleting != null)) {
                    this.EQUAPPLSRowDeleting(this, new EQUAPPLSRowChangeEvent(((EQUAPPLSRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveEQUAPPLSRow(EQUAPPLSRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EQUAPPLSRow : DataRow {
            
            private EQUAPPLSDataTable tableEQUAPPLS;
            
            internal EQUAPPLSRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableEQUAPPLS = ((EQUAPPLSDataTable)(this.Table));
            }
            
            public string EQUID {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLS.EQUIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS.EQUIDColumn] = value;
                }
            }
            
            public string EQUNAME {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLS.EQUNAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS.EQUNAMEColumn] = value;
                }
            }
            
            public string EQUDESC {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLS.EQUDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS.EQUDESCColumn] = value;
                }
            }
            
            public string EQUUNIT {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLS.EQUUNITColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS.EQUUNITColumn] = value;
                }
            }
            
            public System.Decimal EQUNUM {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableEQUAPPLS.EQUNUMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS.EQUNUMColumn] = value;
                }
            }
            
            public string EQUREMARK {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLS.EQUREMARKColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS.EQUREMARKColumn] = value;
                }
            }
            
            public System.Decimal EQUPRICE {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableEQUAPPLS.EQUPRICEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS.EQUPRICEColumn] = value;
                }
            }
            
            public System.Decimal EQUVALUES {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableEQUAPPLS.EQUVALUESColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS.EQUVALUESColumn] = value;
                }
            }
            
            public bool IsEQUIDNull() {
                return this.IsNull(this.tableEQUAPPLS.EQUIDColumn);
            }
            
            public void SetEQUIDNull() {
                this[this.tableEQUAPPLS.EQUIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQUNAMENull() {
                return this.IsNull(this.tableEQUAPPLS.EQUNAMEColumn);
            }
            
            public void SetEQUNAMENull() {
                this[this.tableEQUAPPLS.EQUNAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQUDESCNull() {
                return this.IsNull(this.tableEQUAPPLS.EQUDESCColumn);
            }
            
            public void SetEQUDESCNull() {
                this[this.tableEQUAPPLS.EQUDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQUUNITNull() {
                return this.IsNull(this.tableEQUAPPLS.EQUUNITColumn);
            }
            
            public void SetEQUUNITNull() {
                this[this.tableEQUAPPLS.EQUUNITColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQUNUMNull() {
                return this.IsNull(this.tableEQUAPPLS.EQUNUMColumn);
            }
            
            public void SetEQUNUMNull() {
                this[this.tableEQUAPPLS.EQUNUMColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQUREMARKNull() {
                return this.IsNull(this.tableEQUAPPLS.EQUREMARKColumn);
            }
            
            public void SetEQUREMARKNull() {
                this[this.tableEQUAPPLS.EQUREMARKColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQUPRICENull() {
                return this.IsNull(this.tableEQUAPPLS.EQUPRICEColumn);
            }
            
            public void SetEQUPRICENull() {
                this[this.tableEQUAPPLS.EQUPRICEColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQUVALUESNull() {
                return this.IsNull(this.tableEQUAPPLS.EQUVALUESColumn);
            }
            
            public void SetEQUVALUESNull() {
                this[this.tableEQUAPPLS.EQUVALUESColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EQUAPPLSRowChangeEvent : EventArgs {
            
            private EQUAPPLSRow eventRow;
            
            private DataRowAction eventAction;
            
            public EQUAPPLSRowChangeEvent(EQUAPPLSRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public EQUAPPLSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EQUAPPLYDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSNO;
            
            private DataColumn columnWARDID;
            
            private DataColumn columnSROOM_ID;
            
            private DataColumn columnAPP_OP;
            
            private DataColumn columnAPPLDATE;
            
            private DataColumn columnCANCEL_DATE;
            
            private DataColumn columnCANCEL_MAN;
            
            private DataColumn columnEXE_DATE;
            
            private DataColumn columnEXE_MAN;
            
            private DataColumn columnAPP_OPNAME;
            
            private DataColumn columnSROOM_NAME;
            
            private DataColumn columnCHECK_DATE;
            
            private DataColumn columnCHECK_MAN;
            
            private DataColumn columnSTATUS;
            
            internal EQUAPPLYDataTable() : 
                    base("EQUAPPLY") {
                this.InitClass();
            }
            
            internal EQUAPPLYDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn SNOColumn {
                get {
                    return this.columnSNO;
                }
            }
            
            internal DataColumn WARDIDColumn {
                get {
                    return this.columnWARDID;
                }
            }
            
            internal DataColumn SROOM_IDColumn {
                get {
                    return this.columnSROOM_ID;
                }
            }
            
            internal DataColumn APP_OPColumn {
                get {
                    return this.columnAPP_OP;
                }
            }
            
            internal DataColumn APPLDATEColumn {
                get {
                    return this.columnAPPLDATE;
                }
            }
            
            internal DataColumn CANCEL_DATEColumn {
                get {
                    return this.columnCANCEL_DATE;
                }
            }
            
            internal DataColumn CANCEL_MANColumn {
                get {
                    return this.columnCANCEL_MAN;
                }
            }
            
            internal DataColumn EXE_DATEColumn {
                get {
                    return this.columnEXE_DATE;
                }
            }
            
            internal DataColumn EXE_MANColumn {
                get {
                    return this.columnEXE_MAN;
                }
            }
            
            internal DataColumn APP_OPNAMEColumn {
                get {
                    return this.columnAPP_OPNAME;
                }
            }
            
            internal DataColumn SROOM_NAMEColumn {
                get {
                    return this.columnSROOM_NAME;
                }
            }
            
            internal DataColumn CHECK_DATEColumn {
                get {
                    return this.columnCHECK_DATE;
                }
            }
            
            internal DataColumn CHECK_MANColumn {
                get {
                    return this.columnCHECK_MAN;
                }
            }
            
            internal DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            public EQUAPPLYRow this[int index] {
                get {
                    return ((EQUAPPLYRow)(this.Rows[index]));
                }
            }
            
            public event EQUAPPLYRowChangeEventHandler EQUAPPLYRowChanged;
            
            public event EQUAPPLYRowChangeEventHandler EQUAPPLYRowChanging;
            
            public event EQUAPPLYRowChangeEventHandler EQUAPPLYRowDeleted;
            
            public event EQUAPPLYRowChangeEventHandler EQUAPPLYRowDeleting;
            
            public void AddEQUAPPLYRow(EQUAPPLYRow row) {
                this.Rows.Add(row);
            }
            
            public EQUAPPLYRow AddEQUAPPLYRow(string SNO, string WARDID, long SROOM_ID, string APP_OP, System.DateTime APPLDATE, System.DateTime CANCEL_DATE, string CANCEL_MAN, System.DateTime EXE_DATE, string EXE_MAN, string APP_OPNAME, string SROOM_NAME, System.DateTime CHECK_DATE, string CHECK_MAN, string STATUS) {
                EQUAPPLYRow rowEQUAPPLYRow = ((EQUAPPLYRow)(this.NewRow()));
                rowEQUAPPLYRow.ItemArray = new object[] {
                        SNO,
                        WARDID,
                        SROOM_ID,
                        APP_OP,
                        APPLDATE,
                        CANCEL_DATE,
                        CANCEL_MAN,
                        EXE_DATE,
                        EXE_MAN,
                        APP_OPNAME,
                        SROOM_NAME,
                        CHECK_DATE,
                        CHECK_MAN,
                        STATUS};
                this.Rows.Add(rowEQUAPPLYRow);
                return rowEQUAPPLYRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                EQUAPPLYDataTable cln = ((EQUAPPLYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new EQUAPPLYDataTable();
            }
            
            internal void InitVars() {
                this.columnSNO = this.Columns["SNO"];
                this.columnWARDID = this.Columns["WARDID"];
                this.columnSROOM_ID = this.Columns["SROOM_ID"];
                this.columnAPP_OP = this.Columns["APP_OP"];
                this.columnAPPLDATE = this.Columns["APPLDATE"];
                this.columnCANCEL_DATE = this.Columns["CANCEL_DATE"];
                this.columnCANCEL_MAN = this.Columns["CANCEL_MAN"];
                this.columnEXE_DATE = this.Columns["EXE_DATE"];
                this.columnEXE_MAN = this.Columns["EXE_MAN"];
                this.columnAPP_OPNAME = this.Columns["APP_OPNAME"];
                this.columnSROOM_NAME = this.Columns["SROOM_NAME"];
                this.columnCHECK_DATE = this.Columns["CHECK_DATE"];
                this.columnCHECK_MAN = this.Columns["CHECK_MAN"];
                this.columnSTATUS = this.Columns["STATUS"];
            }
            
            private void InitClass() {
                this.columnSNO = new DataColumn("SNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSNO);
                this.columnWARDID = new DataColumn("WARDID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWARDID);
                this.columnSROOM_ID = new DataColumn("SROOM_ID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSROOM_ID);
                this.columnAPP_OP = new DataColumn("APP_OP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAPP_OP);
                this.columnAPPLDATE = new DataColumn("APPLDATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAPPLDATE);
                this.columnCANCEL_DATE = new DataColumn("CANCEL_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCANCEL_DATE);
                this.columnCANCEL_MAN = new DataColumn("CANCEL_MAN", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCANCEL_MAN);
                this.columnEXE_DATE = new DataColumn("EXE_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEXE_DATE);
                this.columnEXE_MAN = new DataColumn("EXE_MAN", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEXE_MAN);
                this.columnAPP_OPNAME = new DataColumn("APP_OPNAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAPP_OPNAME);
                this.columnSROOM_NAME = new DataColumn("SROOM_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSROOM_NAME);
                this.columnCHECK_DATE = new DataColumn("CHECK_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCHECK_DATE);
                this.columnCHECK_MAN = new DataColumn("CHECK_MAN", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCHECK_MAN);
                this.columnSTATUS = new DataColumn("STATUS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTATUS);
            }
            
            public EQUAPPLYRow NewEQUAPPLYRow() {
                return ((EQUAPPLYRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new EQUAPPLYRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(EQUAPPLYRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EQUAPPLYRowChanged != null)) {
                    this.EQUAPPLYRowChanged(this, new EQUAPPLYRowChangeEvent(((EQUAPPLYRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EQUAPPLYRowChanging != null)) {
                    this.EQUAPPLYRowChanging(this, new EQUAPPLYRowChangeEvent(((EQUAPPLYRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EQUAPPLYRowDeleted != null)) {
                    this.EQUAPPLYRowDeleted(this, new EQUAPPLYRowChangeEvent(((EQUAPPLYRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EQUAPPLYRowDeleting != null)) {
                    this.EQUAPPLYRowDeleting(this, new EQUAPPLYRowChangeEvent(((EQUAPPLYRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveEQUAPPLYRow(EQUAPPLYRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EQUAPPLYRow : DataRow {
            
            private EQUAPPLYDataTable tableEQUAPPLY;
            
            internal EQUAPPLYRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableEQUAPPLY = ((EQUAPPLYDataTable)(this.Table));
            }
            
            public string SNO {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLY.SNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLY.SNOColumn] = value;
                }
            }
            
            public string WARDID {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLY.WARDIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLY.WARDIDColumn] = value;
                }
            }
            
            public long SROOM_ID {
                get {
                    try {
                        return ((long)(this[this.tableEQUAPPLY.SROOM_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLY.SROOM_IDColumn] = value;
                }
            }
            
            public string APP_OP {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLY.APP_OPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLY.APP_OPColumn] = value;
                }
            }
            
            public System.DateTime APPLDATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableEQUAPPLY.APPLDATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLY.APPLDATEColumn] = value;
                }
            }
            
            public System.DateTime CANCEL_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableEQUAPPLY.CANCEL_DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLY.CANCEL_DATEColumn] = value;
                }
            }
            
            public string CANCEL_MAN {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLY.CANCEL_MANColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLY.CANCEL_MANColumn] = value;
                }
            }
            
            public System.DateTime EXE_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableEQUAPPLY.EXE_DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLY.EXE_DATEColumn] = value;
                }
            }
            
            public string EXE_MAN {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLY.EXE_MANColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLY.EXE_MANColumn] = value;
                }
            }
            
            public string APP_OPNAME {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLY.APP_OPNAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLY.APP_OPNAMEColumn] = value;
                }
            }
            
            public string SROOM_NAME {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLY.SROOM_NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLY.SROOM_NAMEColumn] = value;
                }
            }
            
            public System.DateTime CHECK_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableEQUAPPLY.CHECK_DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLY.CHECK_DATEColumn] = value;
                }
            }
            
            public string CHECK_MAN {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLY.CHECK_MANColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLY.CHECK_MANColumn] = value;
                }
            }
            
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLY.STATUSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLY.STATUSColumn] = value;
                }
            }
            
            public bool IsSNONull() {
                return this.IsNull(this.tableEQUAPPLY.SNOColumn);
            }
            
            public void SetSNONull() {
                this[this.tableEQUAPPLY.SNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsWARDIDNull() {
                return this.IsNull(this.tableEQUAPPLY.WARDIDColumn);
            }
            
            public void SetWARDIDNull() {
                this[this.tableEQUAPPLY.WARDIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSROOM_IDNull() {
                return this.IsNull(this.tableEQUAPPLY.SROOM_IDColumn);
            }
            
            public void SetSROOM_IDNull() {
                this[this.tableEQUAPPLY.SROOM_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsAPP_OPNull() {
                return this.IsNull(this.tableEQUAPPLY.APP_OPColumn);
            }
            
            public void SetAPP_OPNull() {
                this[this.tableEQUAPPLY.APP_OPColumn] = System.Convert.DBNull;
            }
            
            public bool IsAPPLDATENull() {
                return this.IsNull(this.tableEQUAPPLY.APPLDATEColumn);
            }
            
            public void SetAPPLDATENull() {
                this[this.tableEQUAPPLY.APPLDATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsCANCEL_DATENull() {
                return this.IsNull(this.tableEQUAPPLY.CANCEL_DATEColumn);
            }
            
            public void SetCANCEL_DATENull() {
                this[this.tableEQUAPPLY.CANCEL_DATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsCANCEL_MANNull() {
                return this.IsNull(this.tableEQUAPPLY.CANCEL_MANColumn);
            }
            
            public void SetCANCEL_MANNull() {
                this[this.tableEQUAPPLY.CANCEL_MANColumn] = System.Convert.DBNull;
            }
            
            public bool IsEXE_DATENull() {
                return this.IsNull(this.tableEQUAPPLY.EXE_DATEColumn);
            }
            
            public void SetEXE_DATENull() {
                this[this.tableEQUAPPLY.EXE_DATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsEXE_MANNull() {
                return this.IsNull(this.tableEQUAPPLY.EXE_MANColumn);
            }
            
            public void SetEXE_MANNull() {
                this[this.tableEQUAPPLY.EXE_MANColumn] = System.Convert.DBNull;
            }
            
            public bool IsAPP_OPNAMENull() {
                return this.IsNull(this.tableEQUAPPLY.APP_OPNAMEColumn);
            }
            
            public void SetAPP_OPNAMENull() {
                this[this.tableEQUAPPLY.APP_OPNAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsSROOM_NAMENull() {
                return this.IsNull(this.tableEQUAPPLY.SROOM_NAMEColumn);
            }
            
            public void SetSROOM_NAMENull() {
                this[this.tableEQUAPPLY.SROOM_NAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsCHECK_DATENull() {
                return this.IsNull(this.tableEQUAPPLY.CHECK_DATEColumn);
            }
            
            public void SetCHECK_DATENull() {
                this[this.tableEQUAPPLY.CHECK_DATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsCHECK_MANNull() {
                return this.IsNull(this.tableEQUAPPLY.CHECK_MANColumn);
            }
            
            public void SetCHECK_MANNull() {
                this[this.tableEQUAPPLY.CHECK_MANColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableEQUAPPLY.STATUSColumn);
            }
            
            public void SetSTATUSNull() {
                this[this.tableEQUAPPLY.STATUSColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EQUAPPLYRowChangeEvent : EventArgs {
            
            private EQUAPPLYRow eventRow;
            
            private DataRowAction eventAction;
            
            public EQUAPPLYRowChangeEvent(EQUAPPLYRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public EQUAPPLYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabJbrMedprtDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columncur_dept_name;
            
            private DataColumn columnbed_no;
            
            private DataColumn columnname;
            
            private DataColumn columnorder_context;
            
            private DataColumn columns_gg;
            
            private DataColumn columnnum;
            
            private DataColumn columnunit;
            
            private DataColumn columngroup_id;
            
            private DataColumn columnorder_id;
            
            internal tabJbrMedprtDataTable() : 
                    base("tabJbrMedprt") {
                this.InitClass();
            }
            
            internal tabJbrMedprtDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn cur_dept_nameColumn {
                get {
                    return this.columncur_dept_name;
                }
            }
            
            internal DataColumn bed_noColumn {
                get {
                    return this.columnbed_no;
                }
            }
            
            internal DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            internal DataColumn order_contextColumn {
                get {
                    return this.columnorder_context;
                }
            }
            
            internal DataColumn s_ggColumn {
                get {
                    return this.columns_gg;
                }
            }
            
            internal DataColumn numColumn {
                get {
                    return this.columnnum;
                }
            }
            
            internal DataColumn unitColumn {
                get {
                    return this.columnunit;
                }
            }
            
            internal DataColumn group_idColumn {
                get {
                    return this.columngroup_id;
                }
            }
            
            internal DataColumn order_idColumn {
                get {
                    return this.columnorder_id;
                }
            }
            
            public tabJbrMedprtRow this[int index] {
                get {
                    return ((tabJbrMedprtRow)(this.Rows[index]));
                }
            }
            
            public event tabJbrMedprtRowChangeEventHandler tabJbrMedprtRowChanged;
            
            public event tabJbrMedprtRowChangeEventHandler tabJbrMedprtRowChanging;
            
            public event tabJbrMedprtRowChangeEventHandler tabJbrMedprtRowDeleted;
            
            public event tabJbrMedprtRowChangeEventHandler tabJbrMedprtRowDeleting;
            
            public void AddtabJbrMedprtRow(tabJbrMedprtRow row) {
                this.Rows.Add(row);
            }
            
            public tabJbrMedprtRow AddtabJbrMedprtRow(string cur_dept_name, string bed_no, string name, string order_context, string s_gg, string num, string unit, string group_id, string order_id) {
                tabJbrMedprtRow rowtabJbrMedprtRow = ((tabJbrMedprtRow)(this.NewRow()));
                rowtabJbrMedprtRow.ItemArray = new object[] {
                        cur_dept_name,
                        bed_no,
                        name,
                        order_context,
                        s_gg,
                        num,
                        unit,
                        group_id,
                        order_id};
                this.Rows.Add(rowtabJbrMedprtRow);
                return rowtabJbrMedprtRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabJbrMedprtDataTable cln = ((tabJbrMedprtDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabJbrMedprtDataTable();
            }
            
            internal void InitVars() {
                this.columncur_dept_name = this.Columns["cur_dept_name"];
                this.columnbed_no = this.Columns["bed_no"];
                this.columnname = this.Columns["name"];
                this.columnorder_context = this.Columns["order_context"];
                this.columns_gg = this.Columns["s_gg"];
                this.columnnum = this.Columns["num"];
                this.columnunit = this.Columns["unit"];
                this.columngroup_id = this.Columns["group_id"];
                this.columnorder_id = this.Columns["order_id"];
            }
            
            private void InitClass() {
                this.columncur_dept_name = new DataColumn("cur_dept_name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncur_dept_name);
                this.columnbed_no = new DataColumn("bed_no", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbed_no);
                this.columnname = new DataColumn("name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnname);
                this.columnorder_context = new DataColumn("order_context", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnorder_context);
                this.columns_gg = new DataColumn("s_gg", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columns_gg);
                this.columnnum = new DataColumn("num", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnum);
                this.columnunit = new DataColumn("unit", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnunit);
                this.columngroup_id = new DataColumn("group_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columngroup_id);
                this.columnorder_id = new DataColumn("order_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnorder_id);
            }
            
            public tabJbrMedprtRow NewtabJbrMedprtRow() {
                return ((tabJbrMedprtRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabJbrMedprtRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabJbrMedprtRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabJbrMedprtRowChanged != null)) {
                    this.tabJbrMedprtRowChanged(this, new tabJbrMedprtRowChangeEvent(((tabJbrMedprtRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabJbrMedprtRowChanging != null)) {
                    this.tabJbrMedprtRowChanging(this, new tabJbrMedprtRowChangeEvent(((tabJbrMedprtRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabJbrMedprtRowDeleted != null)) {
                    this.tabJbrMedprtRowDeleted(this, new tabJbrMedprtRowChangeEvent(((tabJbrMedprtRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabJbrMedprtRowDeleting != null)) {
                    this.tabJbrMedprtRowDeleting(this, new tabJbrMedprtRowChangeEvent(((tabJbrMedprtRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabJbrMedprtRow(tabJbrMedprtRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabJbrMedprtRow : DataRow {
            
            private tabJbrMedprtDataTable tabletabJbrMedprt;
            
            internal tabJbrMedprtRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabJbrMedprt = ((tabJbrMedprtDataTable)(this.Table));
            }
            
            public string cur_dept_name {
                get {
                    try {
                        return ((string)(this[this.tabletabJbrMedprt.cur_dept_nameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJbrMedprt.cur_dept_nameColumn] = value;
                }
            }
            
            public string bed_no {
                get {
                    try {
                        return ((string)(this[this.tabletabJbrMedprt.bed_noColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJbrMedprt.bed_noColumn] = value;
                }
            }
            
            public string name {
                get {
                    try {
                        return ((string)(this[this.tabletabJbrMedprt.nameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJbrMedprt.nameColumn] = value;
                }
            }
            
            public string order_context {
                get {
                    try {
                        return ((string)(this[this.tabletabJbrMedprt.order_contextColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJbrMedprt.order_contextColumn] = value;
                }
            }
            
            public string s_gg {
                get {
                    try {
                        return ((string)(this[this.tabletabJbrMedprt.s_ggColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJbrMedprt.s_ggColumn] = value;
                }
            }
            
            public string num {
                get {
                    try {
                        return ((string)(this[this.tabletabJbrMedprt.numColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJbrMedprt.numColumn] = value;
                }
            }
            
            public string unit {
                get {
                    try {
                        return ((string)(this[this.tabletabJbrMedprt.unitColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJbrMedprt.unitColumn] = value;
                }
            }
            
            public string group_id {
                get {
                    try {
                        return ((string)(this[this.tabletabJbrMedprt.group_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJbrMedprt.group_idColumn] = value;
                }
            }
            
            public string order_id {
                get {
                    try {
                        return ((string)(this[this.tabletabJbrMedprt.order_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabJbrMedprt.order_idColumn] = value;
                }
            }
            
            public bool Iscur_dept_nameNull() {
                return this.IsNull(this.tabletabJbrMedprt.cur_dept_nameColumn);
            }
            
            public void Setcur_dept_nameNull() {
                this[this.tabletabJbrMedprt.cur_dept_nameColumn] = System.Convert.DBNull;
            }
            
            public bool Isbed_noNull() {
                return this.IsNull(this.tabletabJbrMedprt.bed_noColumn);
            }
            
            public void Setbed_noNull() {
                this[this.tabletabJbrMedprt.bed_noColumn] = System.Convert.DBNull;
            }
            
            public bool IsnameNull() {
                return this.IsNull(this.tabletabJbrMedprt.nameColumn);
            }
            
            public void SetnameNull() {
                this[this.tabletabJbrMedprt.nameColumn] = System.Convert.DBNull;
            }
            
            public bool Isorder_contextNull() {
                return this.IsNull(this.tabletabJbrMedprt.order_contextColumn);
            }
            
            public void Setorder_contextNull() {
                this[this.tabletabJbrMedprt.order_contextColumn] = System.Convert.DBNull;
            }
            
            public bool Iss_ggNull() {
                return this.IsNull(this.tabletabJbrMedprt.s_ggColumn);
            }
            
            public void Sets_ggNull() {
                this[this.tabletabJbrMedprt.s_ggColumn] = System.Convert.DBNull;
            }
            
            public bool IsnumNull() {
                return this.IsNull(this.tabletabJbrMedprt.numColumn);
            }
            
            public void SetnumNull() {
                this[this.tabletabJbrMedprt.numColumn] = System.Convert.DBNull;
            }
            
            public bool IsunitNull() {
                return this.IsNull(this.tabletabJbrMedprt.unitColumn);
            }
            
            public void SetunitNull() {
                this[this.tabletabJbrMedprt.unitColumn] = System.Convert.DBNull;
            }
            
            public bool Isgroup_idNull() {
                return this.IsNull(this.tabletabJbrMedprt.group_idColumn);
            }
            
            public void Setgroup_idNull() {
                this[this.tabletabJbrMedprt.group_idColumn] = System.Convert.DBNull;
            }
            
            public bool Isorder_idNull() {
                return this.IsNull(this.tabletabJbrMedprt.order_idColumn);
            }
            
            public void Setorder_idNull() {
                this[this.tabletabJbrMedprt.order_idColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabJbrMedprtRowChangeEvent : EventArgs {
            
            private tabJbrMedprtRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabJbrMedprtRowChangeEvent(tabJbrMedprtRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabJbrMedprtRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWardGzrzDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column科别;
            
            private DataColumn column原有;
            
            private DataColumn column出院合计;
            
            private DataColumn column治愈;
            
            private DataColumn column好转;
            
            private DataColumn column未愈;
            
            private DataColumn column死亡;
            
            private DataColumn column转出;
            
            private DataColumn column入院;
            
            private DataColumn column转入;
            
            private DataColumn column现有;
            
            private DataColumn column手术;
            
            private DataColumn column分娩;
            
            private DataColumn column病危;
            
            private DataColumn column病重;
            
            private DataColumn column特护;
            
            private DataColumn column一级护理;
            
            private DataColumn column陪护;
            
            internal tabWardGzrzDataTable() : 
                    base("tabWardGzrz") {
                this.InitClass();
            }
            
            internal tabWardGzrzDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 科别Column {
                get {
                    return this.column科别;
                }
            }
            
            internal DataColumn 原有Column {
                get {
                    return this.column原有;
                }
            }
            
            internal DataColumn 出院合计Column {
                get {
                    return this.column出院合计;
                }
            }
            
            internal DataColumn 治愈Column {
                get {
                    return this.column治愈;
                }
            }
            
            internal DataColumn 好转Column {
                get {
                    return this.column好转;
                }
            }
            
            internal DataColumn 未愈Column {
                get {
                    return this.column未愈;
                }
            }
            
            internal DataColumn 死亡Column {
                get {
                    return this.column死亡;
                }
            }
            
            internal DataColumn 转出Column {
                get {
                    return this.column转出;
                }
            }
            
            internal DataColumn 入院Column {
                get {
                    return this.column入院;
                }
            }
            
            internal DataColumn 转入Column {
                get {
                    return this.column转入;
                }
            }
            
            internal DataColumn 现有Column {
                get {
                    return this.column现有;
                }
            }
            
            internal DataColumn 手术Column {
                get {
                    return this.column手术;
                }
            }
            
            internal DataColumn 分娩Column {
                get {
                    return this.column分娩;
                }
            }
            
            internal DataColumn 病危Column {
                get {
                    return this.column病危;
                }
            }
            
            internal DataColumn 病重Column {
                get {
                    return this.column病重;
                }
            }
            
            internal DataColumn 特护Column {
                get {
                    return this.column特护;
                }
            }
            
            internal DataColumn 一级护理Column {
                get {
                    return this.column一级护理;
                }
            }
            
            internal DataColumn 陪护Column {
                get {
                    return this.column陪护;
                }
            }
            
            public tabWardGzrzRow this[int index] {
                get {
                    return ((tabWardGzrzRow)(this.Rows[index]));
                }
            }
            
            public event tabWardGzrzRowChangeEventHandler tabWardGzrzRowChanged;
            
            public event tabWardGzrzRowChangeEventHandler tabWardGzrzRowChanging;
            
            public event tabWardGzrzRowChangeEventHandler tabWardGzrzRowDeleted;
            
            public event tabWardGzrzRowChangeEventHandler tabWardGzrzRowDeleting;
            
            public void AddtabWardGzrzRow(tabWardGzrzRow row) {
                this.Rows.Add(row);
            }
            
            public tabWardGzrzRow AddtabWardGzrzRow(
                        string 科别, 
                        string 原有, 
                        string 出院合计, 
                        string 治愈, 
                        string 好转, 
                        string 未愈, 
                        string 死亡, 
                        string 转出, 
                        string 入院, 
                        string 转入, 
                        string 现有, 
                        string 手术, 
                        string 分娩, 
                        string 病危, 
                        string 病重, 
                        string 特护, 
                        string 一级护理, 
                        string 陪护) {
                tabWardGzrzRow rowtabWardGzrzRow = ((tabWardGzrzRow)(this.NewRow()));
                rowtabWardGzrzRow.ItemArray = new object[] {
                        科别,
                        原有,
                        出院合计,
                        治愈,
                        好转,
                        未愈,
                        死亡,
                        转出,
                        入院,
                        转入,
                        现有,
                        手术,
                        分娩,
                        病危,
                        病重,
                        特护,
                        一级护理,
                        陪护};
                this.Rows.Add(rowtabWardGzrzRow);
                return rowtabWardGzrzRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabWardGzrzDataTable cln = ((tabWardGzrzDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabWardGzrzDataTable();
            }
            
            internal void InitVars() {
                this.column科别 = this.Columns["科别"];
                this.column原有 = this.Columns["原有"];
                this.column出院合计 = this.Columns["出院合计"];
                this.column治愈 = this.Columns["治愈"];
                this.column好转 = this.Columns["好转"];
                this.column未愈 = this.Columns["未愈"];
                this.column死亡 = this.Columns["死亡"];
                this.column转出 = this.Columns["转出"];
                this.column入院 = this.Columns["入院"];
                this.column转入 = this.Columns["转入"];
                this.column现有 = this.Columns["现有"];
                this.column手术 = this.Columns["手术"];
                this.column分娩 = this.Columns["分娩"];
                this.column病危 = this.Columns["病危"];
                this.column病重 = this.Columns["病重"];
                this.column特护 = this.Columns["特护"];
                this.column一级护理 = this.Columns["一级护理"];
                this.column陪护 = this.Columns["陪护"];
            }
            
            private void InitClass() {
                this.column科别 = new DataColumn("科别", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column科别);
                this.column原有 = new DataColumn("原有", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column原有);
                this.column出院合计 = new DataColumn("出院合计", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column出院合计);
                this.column治愈 = new DataColumn("治愈", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column治愈);
                this.column好转 = new DataColumn("好转", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column好转);
                this.column未愈 = new DataColumn("未愈", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column未愈);
                this.column死亡 = new DataColumn("死亡", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column死亡);
                this.column转出 = new DataColumn("转出", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column转出);
                this.column入院 = new DataColumn("入院", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column入院);
                this.column转入 = new DataColumn("转入", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column转入);
                this.column现有 = new DataColumn("现有", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column现有);
                this.column手术 = new DataColumn("手术", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column手术);
                this.column分娩 = new DataColumn("分娩", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column分娩);
                this.column病危 = new DataColumn("病危", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column病危);
                this.column病重 = new DataColumn("病重", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column病重);
                this.column特护 = new DataColumn("特护", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column特护);
                this.column一级护理 = new DataColumn("一级护理", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column一级护理);
                this.column陪护 = new DataColumn("陪护", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column陪护);
            }
            
            public tabWardGzrzRow NewtabWardGzrzRow() {
                return ((tabWardGzrzRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabWardGzrzRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabWardGzrzRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabWardGzrzRowChanged != null)) {
                    this.tabWardGzrzRowChanged(this, new tabWardGzrzRowChangeEvent(((tabWardGzrzRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabWardGzrzRowChanging != null)) {
                    this.tabWardGzrzRowChanging(this, new tabWardGzrzRowChangeEvent(((tabWardGzrzRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabWardGzrzRowDeleted != null)) {
                    this.tabWardGzrzRowDeleted(this, new tabWardGzrzRowChangeEvent(((tabWardGzrzRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabWardGzrzRowDeleting != null)) {
                    this.tabWardGzrzRowDeleting(this, new tabWardGzrzRowChangeEvent(((tabWardGzrzRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabWardGzrzRow(tabWardGzrzRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWardGzrzRow : DataRow {
            
            private tabWardGzrzDataTable tabletabWardGzrz;
            
            internal tabWardGzrzRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabWardGzrz = ((tabWardGzrzDataTable)(this.Table));
            }
            
            public string 科别 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.科别Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.科别Column] = value;
                }
            }
            
            public string 原有 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.原有Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.原有Column] = value;
                }
            }
            
            public string 出院合计 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.出院合计Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.出院合计Column] = value;
                }
            }
            
            public string 治愈 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.治愈Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.治愈Column] = value;
                }
            }
            
            public string 好转 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.好转Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.好转Column] = value;
                }
            }
            
            public string 未愈 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.未愈Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.未愈Column] = value;
                }
            }
            
            public string 死亡 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.死亡Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.死亡Column] = value;
                }
            }
            
            public string 转出 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.转出Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.转出Column] = value;
                }
            }
            
            public string 入院 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.入院Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.入院Column] = value;
                }
            }
            
            public string 转入 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.转入Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.转入Column] = value;
                }
            }
            
            public string 现有 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.现有Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.现有Column] = value;
                }
            }
            
            public string 手术 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.手术Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.手术Column] = value;
                }
            }
            
            public string 分娩 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.分娩Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.分娩Column] = value;
                }
            }
            
            public string 病危 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.病危Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.病危Column] = value;
                }
            }
            
            public string 病重 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.病重Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.病重Column] = value;
                }
            }
            
            public string 特护 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.特护Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.特护Column] = value;
                }
            }
            
            public string 一级护理 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.一级护理Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.一级护理Column] = value;
                }
            }
            
            public string 陪护 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrz.陪护Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrz.陪护Column] = value;
                }
            }
            
            public bool Is科别Null() {
                return this.IsNull(this.tabletabWardGzrz.科别Column);
            }
            
            public void Set科别Null() {
                this[this.tabletabWardGzrz.科别Column] = System.Convert.DBNull;
            }
            
            public bool Is原有Null() {
                return this.IsNull(this.tabletabWardGzrz.原有Column);
            }
            
            public void Set原有Null() {
                this[this.tabletabWardGzrz.原有Column] = System.Convert.DBNull;
            }
            
            public bool Is出院合计Null() {
                return this.IsNull(this.tabletabWardGzrz.出院合计Column);
            }
            
            public void Set出院合计Null() {
                this[this.tabletabWardGzrz.出院合计Column] = System.Convert.DBNull;
            }
            
            public bool Is治愈Null() {
                return this.IsNull(this.tabletabWardGzrz.治愈Column);
            }
            
            public void Set治愈Null() {
                this[this.tabletabWardGzrz.治愈Column] = System.Convert.DBNull;
            }
            
            public bool Is好转Null() {
                return this.IsNull(this.tabletabWardGzrz.好转Column);
            }
            
            public void Set好转Null() {
                this[this.tabletabWardGzrz.好转Column] = System.Convert.DBNull;
            }
            
            public bool Is未愈Null() {
                return this.IsNull(this.tabletabWardGzrz.未愈Column);
            }
            
            public void Set未愈Null() {
                this[this.tabletabWardGzrz.未愈Column] = System.Convert.DBNull;
            }
            
            public bool Is死亡Null() {
                return this.IsNull(this.tabletabWardGzrz.死亡Column);
            }
            
            public void Set死亡Null() {
                this[this.tabletabWardGzrz.死亡Column] = System.Convert.DBNull;
            }
            
            public bool Is转出Null() {
                return this.IsNull(this.tabletabWardGzrz.转出Column);
            }
            
            public void Set转出Null() {
                this[this.tabletabWardGzrz.转出Column] = System.Convert.DBNull;
            }
            
            public bool Is入院Null() {
                return this.IsNull(this.tabletabWardGzrz.入院Column);
            }
            
            public void Set入院Null() {
                this[this.tabletabWardGzrz.入院Column] = System.Convert.DBNull;
            }
            
            public bool Is转入Null() {
                return this.IsNull(this.tabletabWardGzrz.转入Column);
            }
            
            public void Set转入Null() {
                this[this.tabletabWardGzrz.转入Column] = System.Convert.DBNull;
            }
            
            public bool Is现有Null() {
                return this.IsNull(this.tabletabWardGzrz.现有Column);
            }
            
            public void Set现有Null() {
                this[this.tabletabWardGzrz.现有Column] = System.Convert.DBNull;
            }
            
            public bool Is手术Null() {
                return this.IsNull(this.tabletabWardGzrz.手术Column);
            }
            
            public void Set手术Null() {
                this[this.tabletabWardGzrz.手术Column] = System.Convert.DBNull;
            }
            
            public bool Is分娩Null() {
                return this.IsNull(this.tabletabWardGzrz.分娩Column);
            }
            
            public void Set分娩Null() {
                this[this.tabletabWardGzrz.分娩Column] = System.Convert.DBNull;
            }
            
            public bool Is病危Null() {
                return this.IsNull(this.tabletabWardGzrz.病危Column);
            }
            
            public void Set病危Null() {
                this[this.tabletabWardGzrz.病危Column] = System.Convert.DBNull;
            }
            
            public bool Is病重Null() {
                return this.IsNull(this.tabletabWardGzrz.病重Column);
            }
            
            public void Set病重Null() {
                this[this.tabletabWardGzrz.病重Column] = System.Convert.DBNull;
            }
            
            public bool Is特护Null() {
                return this.IsNull(this.tabletabWardGzrz.特护Column);
            }
            
            public void Set特护Null() {
                this[this.tabletabWardGzrz.特护Column] = System.Convert.DBNull;
            }
            
            public bool Is一级护理Null() {
                return this.IsNull(this.tabletabWardGzrz.一级护理Column);
            }
            
            public void Set一级护理Null() {
                this[this.tabletabWardGzrz.一级护理Column] = System.Convert.DBNull;
            }
            
            public bool Is陪护Null() {
                return this.IsNull(this.tabletabWardGzrz.陪护Column);
            }
            
            public void Set陪护Null() {
                this[this.tabletabWardGzrz.陪护Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWardGzrzRowChangeEvent : EventArgs {
            
            private tabWardGzrzRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabWardGzrzRowChangeEvent(tabWardGzrzRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabWardGzrzRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWardGzrzMxDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column项目;
            
            private DataColumn column住院号;
            
            private DataColumn column床号;
            
            private DataColumn column姓名;
            
            private DataColumn column诊断;
            
            internal tabWardGzrzMxDataTable() : 
                    base("tabWardGzrzMx") {
                this.InitClass();
            }
            
            internal tabWardGzrzMxDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 项目Column {
                get {
                    return this.column项目;
                }
            }
            
            internal DataColumn 住院号Column {
                get {
                    return this.column住院号;
                }
            }
            
            internal DataColumn 床号Column {
                get {
                    return this.column床号;
                }
            }
            
            internal DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            internal DataColumn 诊断Column {
                get {
                    return this.column诊断;
                }
            }
            
            public tabWardGzrzMxRow this[int index] {
                get {
                    return ((tabWardGzrzMxRow)(this.Rows[index]));
                }
            }
            
            public event tabWardGzrzMxRowChangeEventHandler tabWardGzrzMxRowChanged;
            
            public event tabWardGzrzMxRowChangeEventHandler tabWardGzrzMxRowChanging;
            
            public event tabWardGzrzMxRowChangeEventHandler tabWardGzrzMxRowDeleted;
            
            public event tabWardGzrzMxRowChangeEventHandler tabWardGzrzMxRowDeleting;
            
            public void AddtabWardGzrzMxRow(tabWardGzrzMxRow row) {
                this.Rows.Add(row);
            }
            
            public tabWardGzrzMxRow AddtabWardGzrzMxRow(string 项目, string 住院号, string 床号, string 姓名, string 诊断) {
                tabWardGzrzMxRow rowtabWardGzrzMxRow = ((tabWardGzrzMxRow)(this.NewRow()));
                rowtabWardGzrzMxRow.ItemArray = new object[] {
                        项目,
                        住院号,
                        床号,
                        姓名,
                        诊断};
                this.Rows.Add(rowtabWardGzrzMxRow);
                return rowtabWardGzrzMxRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabWardGzrzMxDataTable cln = ((tabWardGzrzMxDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabWardGzrzMxDataTable();
            }
            
            internal void InitVars() {
                this.column项目 = this.Columns["项目"];
                this.column住院号 = this.Columns["住院号"];
                this.column床号 = this.Columns["床号"];
                this.column姓名 = this.Columns["姓名"];
                this.column诊断 = this.Columns["诊断"];
            }
            
            private void InitClass() {
                this.column项目 = new DataColumn("项目", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column项目);
                this.column住院号 = new DataColumn("住院号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column住院号);
                this.column床号 = new DataColumn("床号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column床号);
                this.column姓名 = new DataColumn("姓名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column姓名);
                this.column诊断 = new DataColumn("诊断", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column诊断);
            }
            
            public tabWardGzrzMxRow NewtabWardGzrzMxRow() {
                return ((tabWardGzrzMxRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabWardGzrzMxRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabWardGzrzMxRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabWardGzrzMxRowChanged != null)) {
                    this.tabWardGzrzMxRowChanged(this, new tabWardGzrzMxRowChangeEvent(((tabWardGzrzMxRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabWardGzrzMxRowChanging != null)) {
                    this.tabWardGzrzMxRowChanging(this, new tabWardGzrzMxRowChangeEvent(((tabWardGzrzMxRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabWardGzrzMxRowDeleted != null)) {
                    this.tabWardGzrzMxRowDeleted(this, new tabWardGzrzMxRowChangeEvent(((tabWardGzrzMxRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabWardGzrzMxRowDeleting != null)) {
                    this.tabWardGzrzMxRowDeleting(this, new tabWardGzrzMxRowChangeEvent(((tabWardGzrzMxRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabWardGzrzMxRow(tabWardGzrzMxRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWardGzrzMxRow : DataRow {
            
            private tabWardGzrzMxDataTable tabletabWardGzrzMx;
            
            internal tabWardGzrzMxRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabWardGzrzMx = ((tabWardGzrzMxDataTable)(this.Table));
            }
            
            public string 项目 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrzMx.项目Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrzMx.项目Column] = value;
                }
            }
            
            public string 住院号 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrzMx.住院号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrzMx.住院号Column] = value;
                }
            }
            
            public string 床号 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrzMx.床号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrzMx.床号Column] = value;
                }
            }
            
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrzMx.姓名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrzMx.姓名Column] = value;
                }
            }
            
            public string 诊断 {
                get {
                    try {
                        return ((string)(this[this.tabletabWardGzrzMx.诊断Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabWardGzrzMx.诊断Column] = value;
                }
            }
            
            public bool Is项目Null() {
                return this.IsNull(this.tabletabWardGzrzMx.项目Column);
            }
            
            public void Set项目Null() {
                this[this.tabletabWardGzrzMx.项目Column] = System.Convert.DBNull;
            }
            
            public bool Is住院号Null() {
                return this.IsNull(this.tabletabWardGzrzMx.住院号Column);
            }
            
            public void Set住院号Null() {
                this[this.tabletabWardGzrzMx.住院号Column] = System.Convert.DBNull;
            }
            
            public bool Is床号Null() {
                return this.IsNull(this.tabletabWardGzrzMx.床号Column);
            }
            
            public void Set床号Null() {
                this[this.tabletabWardGzrzMx.床号Column] = System.Convert.DBNull;
            }
            
            public bool Is姓名Null() {
                return this.IsNull(this.tabletabWardGzrzMx.姓名Column);
            }
            
            public void Set姓名Null() {
                this[this.tabletabWardGzrzMx.姓名Column] = System.Convert.DBNull;
            }
            
            public bool Is诊断Null() {
                return this.IsNull(this.tabletabWardGzrzMx.诊断Column);
            }
            
            public void Set诊断Null() {
                this[this.tabletabWardGzrzMx.诊断Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabWardGzrzMxRowChangeEvent : EventArgs {
            
            private tabWardGzrzMxRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabWardGzrzMxRowChangeEvent(tabWardGzrzMxRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabWardGzrzMxRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EQUAPPLS1DataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnEQUID;
            
            private DataColumn columnEQUNAME;
            
            private DataColumn columnEQUDESC;
            
            private DataColumn columnEQUUNIT;
            
            private DataColumn columnEQUNUM;
            
            private DataColumn columnEQUREMARK;
            
            private DataColumn columnEQUPRICE;
            
            private DataColumn columnEQUVALUES;
            
            private DataColumn columnROWNO;
            
            internal EQUAPPLS1DataTable() : 
                    base("EQUAPPLS1") {
                this.InitClass();
            }
            
            internal EQUAPPLS1DataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn EQUIDColumn {
                get {
                    return this.columnEQUID;
                }
            }
            
            internal DataColumn EQUNAMEColumn {
                get {
                    return this.columnEQUNAME;
                }
            }
            
            internal DataColumn EQUDESCColumn {
                get {
                    return this.columnEQUDESC;
                }
            }
            
            internal DataColumn EQUUNITColumn {
                get {
                    return this.columnEQUUNIT;
                }
            }
            
            internal DataColumn EQUNUMColumn {
                get {
                    return this.columnEQUNUM;
                }
            }
            
            internal DataColumn EQUREMARKColumn {
                get {
                    return this.columnEQUREMARK;
                }
            }
            
            internal DataColumn EQUPRICEColumn {
                get {
                    return this.columnEQUPRICE;
                }
            }
            
            internal DataColumn EQUVALUESColumn {
                get {
                    return this.columnEQUVALUES;
                }
            }
            
            internal DataColumn ROWNOColumn {
                get {
                    return this.columnROWNO;
                }
            }
            
            public EQUAPPLS1Row this[int index] {
                get {
                    return ((EQUAPPLS1Row)(this.Rows[index]));
                }
            }
            
            public event EQUAPPLS1RowChangeEventHandler EQUAPPLS1RowChanged;
            
            public event EQUAPPLS1RowChangeEventHandler EQUAPPLS1RowChanging;
            
            public event EQUAPPLS1RowChangeEventHandler EQUAPPLS1RowDeleted;
            
            public event EQUAPPLS1RowChangeEventHandler EQUAPPLS1RowDeleting;
            
            public void AddEQUAPPLS1Row(EQUAPPLS1Row row) {
                this.Rows.Add(row);
            }
            
            public EQUAPPLS1Row AddEQUAPPLS1Row(string EQUID, string EQUNAME, string EQUDESC, string EQUUNIT, System.Decimal EQUNUM, string EQUREMARK, System.Decimal EQUPRICE, System.Decimal EQUVALUES, string ROWNO) {
                EQUAPPLS1Row rowEQUAPPLS1Row = ((EQUAPPLS1Row)(this.NewRow()));
                rowEQUAPPLS1Row.ItemArray = new object[] {
                        EQUID,
                        EQUNAME,
                        EQUDESC,
                        EQUUNIT,
                        EQUNUM,
                        EQUREMARK,
                        EQUPRICE,
                        EQUVALUES,
                        ROWNO};
                this.Rows.Add(rowEQUAPPLS1Row);
                return rowEQUAPPLS1Row;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                EQUAPPLS1DataTable cln = ((EQUAPPLS1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new EQUAPPLS1DataTable();
            }
            
            internal void InitVars() {
                this.columnEQUID = this.Columns["EQUID"];
                this.columnEQUNAME = this.Columns["EQUNAME"];
                this.columnEQUDESC = this.Columns["EQUDESC"];
                this.columnEQUUNIT = this.Columns["EQUUNIT"];
                this.columnEQUNUM = this.Columns["EQUNUM"];
                this.columnEQUREMARK = this.Columns["EQUREMARK"];
                this.columnEQUPRICE = this.Columns["EQUPRICE"];
                this.columnEQUVALUES = this.Columns["EQUVALUES"];
                this.columnROWNO = this.Columns["ROWNO"];
            }
            
            private void InitClass() {
                this.columnEQUID = new DataColumn("EQUID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUID);
                this.columnEQUNAME = new DataColumn("EQUNAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUNAME);
                this.columnEQUDESC = new DataColumn("EQUDESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUDESC);
                this.columnEQUUNIT = new DataColumn("EQUUNIT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUUNIT);
                this.columnEQUNUM = new DataColumn("EQUNUM", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUNUM);
                this.columnEQUREMARK = new DataColumn("EQUREMARK", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUREMARK);
                this.columnEQUPRICE = new DataColumn("EQUPRICE", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUPRICE);
                this.columnEQUVALUES = new DataColumn("EQUVALUES", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQUVALUES);
                this.columnROWNO = new DataColumn("ROWNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnROWNO);
            }
            
            public EQUAPPLS1Row NewEQUAPPLS1Row() {
                return ((EQUAPPLS1Row)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new EQUAPPLS1Row(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(EQUAPPLS1Row);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EQUAPPLS1RowChanged != null)) {
                    this.EQUAPPLS1RowChanged(this, new EQUAPPLS1RowChangeEvent(((EQUAPPLS1Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EQUAPPLS1RowChanging != null)) {
                    this.EQUAPPLS1RowChanging(this, new EQUAPPLS1RowChangeEvent(((EQUAPPLS1Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EQUAPPLS1RowDeleted != null)) {
                    this.EQUAPPLS1RowDeleted(this, new EQUAPPLS1RowChangeEvent(((EQUAPPLS1Row)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EQUAPPLS1RowDeleting != null)) {
                    this.EQUAPPLS1RowDeleting(this, new EQUAPPLS1RowChangeEvent(((EQUAPPLS1Row)(e.Row)), e.Action));
                }
            }
            
            public void RemoveEQUAPPLS1Row(EQUAPPLS1Row row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EQUAPPLS1Row : DataRow {
            
            private EQUAPPLS1DataTable tableEQUAPPLS1;
            
            internal EQUAPPLS1Row(DataRowBuilder rb) : 
                    base(rb) {
                this.tableEQUAPPLS1 = ((EQUAPPLS1DataTable)(this.Table));
            }
            
            public string EQUID {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLS1.EQUIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS1.EQUIDColumn] = value;
                }
            }
            
            public string EQUNAME {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLS1.EQUNAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS1.EQUNAMEColumn] = value;
                }
            }
            
            public string EQUDESC {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLS1.EQUDESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS1.EQUDESCColumn] = value;
                }
            }
            
            public string EQUUNIT {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLS1.EQUUNITColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS1.EQUUNITColumn] = value;
                }
            }
            
            public System.Decimal EQUNUM {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableEQUAPPLS1.EQUNUMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS1.EQUNUMColumn] = value;
                }
            }
            
            public string EQUREMARK {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLS1.EQUREMARKColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS1.EQUREMARKColumn] = value;
                }
            }
            
            public System.Decimal EQUPRICE {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableEQUAPPLS1.EQUPRICEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS1.EQUPRICEColumn] = value;
                }
            }
            
            public System.Decimal EQUVALUES {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableEQUAPPLS1.EQUVALUESColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS1.EQUVALUESColumn] = value;
                }
            }
            
            public string ROWNO {
                get {
                    try {
                        return ((string)(this[this.tableEQUAPPLS1.ROWNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEQUAPPLS1.ROWNOColumn] = value;
                }
            }
            
            public bool IsEQUIDNull() {
                return this.IsNull(this.tableEQUAPPLS1.EQUIDColumn);
            }
            
            public void SetEQUIDNull() {
                this[this.tableEQUAPPLS1.EQUIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQUNAMENull() {
                return this.IsNull(this.tableEQUAPPLS1.EQUNAMEColumn);
            }
            
            public void SetEQUNAMENull() {
                this[this.tableEQUAPPLS1.EQUNAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQUDESCNull() {
                return this.IsNull(this.tableEQUAPPLS1.EQUDESCColumn);
            }
            
            public void SetEQUDESCNull() {
                this[this.tableEQUAPPLS1.EQUDESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQUUNITNull() {
                return this.IsNull(this.tableEQUAPPLS1.EQUUNITColumn);
            }
            
            public void SetEQUUNITNull() {
                this[this.tableEQUAPPLS1.EQUUNITColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQUNUMNull() {
                return this.IsNull(this.tableEQUAPPLS1.EQUNUMColumn);
            }
            
            public void SetEQUNUMNull() {
                this[this.tableEQUAPPLS1.EQUNUMColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQUREMARKNull() {
                return this.IsNull(this.tableEQUAPPLS1.EQUREMARKColumn);
            }
            
            public void SetEQUREMARKNull() {
                this[this.tableEQUAPPLS1.EQUREMARKColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQUPRICENull() {
                return this.IsNull(this.tableEQUAPPLS1.EQUPRICEColumn);
            }
            
            public void SetEQUPRICENull() {
                this[this.tableEQUAPPLS1.EQUPRICEColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQUVALUESNull() {
                return this.IsNull(this.tableEQUAPPLS1.EQUVALUESColumn);
            }
            
            public void SetEQUVALUESNull() {
                this[this.tableEQUAPPLS1.EQUVALUESColumn] = System.Convert.DBNull;
            }
            
            public bool IsROWNONull() {
                return this.IsNull(this.tableEQUAPPLS1.ROWNOColumn);
            }
            
            public void SetROWNONull() {
                this[this.tableEQUAPPLS1.ROWNOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class EQUAPPLS1RowChangeEvent : EventArgs {
            
            private EQUAPPLS1Row eventRow;
            
            private DataRowAction eventAction;
            
            public EQUAPPLS1RowChangeEvent(EQUAPPLS1Row row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public EQUAPPLS1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabBqkssrDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnward_id;
            
            private DataColumn column病区;
            
            private DataColumn columndept_id;
            
            private DataColumn column科室;
            
            private DataColumn column住院号;
            
            private DataColumn column姓名;
            
            private DataColumn columninpatient_id;
            
            private DataColumn column合计;
            
            private DataColumn column床位费;
            
            private DataColumn column药品费;
            
            private DataColumn column检验费;
            
            private DataColumn column治疗费;
            
            private DataColumn column放射费;
            
            private DataColumn column输血费;
            
            private DataColumn column检查费;
            
            private DataColumn column放疗费;
            
            private DataColumn column手术费;
            
            private DataColumn column其它费;
            
            private DataColumn column挂号费;
            
            private DataColumn column诊查费;
            
            private DataColumn column护理费;
            
            private DataColumn column特殊材料费;
            
            internal tabBqkssrDataTable() : 
                    base("tabBqkssr") {
                this.InitClass();
            }
            
            internal tabBqkssrDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ward_idColumn {
                get {
                    return this.columnward_id;
                }
            }
            
            internal DataColumn 病区Column {
                get {
                    return this.column病区;
                }
            }
            
            internal DataColumn dept_idColumn {
                get {
                    return this.columndept_id;
                }
            }
            
            internal DataColumn 科室Column {
                get {
                    return this.column科室;
                }
            }
            
            internal DataColumn 住院号Column {
                get {
                    return this.column住院号;
                }
            }
            
            internal DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            internal DataColumn inpatient_idColumn {
                get {
                    return this.columninpatient_id;
                }
            }
            
            internal DataColumn 合计Column {
                get {
                    return this.column合计;
                }
            }
            
            internal DataColumn 床位费Column {
                get {
                    return this.column床位费;
                }
            }
            
            internal DataColumn 药品费Column {
                get {
                    return this.column药品费;
                }
            }
            
            internal DataColumn 检验费Column {
                get {
                    return this.column检验费;
                }
            }
            
            internal DataColumn 治疗费Column {
                get {
                    return this.column治疗费;
                }
            }
            
            internal DataColumn 放射费Column {
                get {
                    return this.column放射费;
                }
            }
            
            internal DataColumn 输血费Column {
                get {
                    return this.column输血费;
                }
            }
            
            internal DataColumn 检查费Column {
                get {
                    return this.column检查费;
                }
            }
            
            internal DataColumn 放疗费Column {
                get {
                    return this.column放疗费;
                }
            }
            
            internal DataColumn 手术费Column {
                get {
                    return this.column手术费;
                }
            }
            
            internal DataColumn 其它费Column {
                get {
                    return this.column其它费;
                }
            }
            
            internal DataColumn 挂号费Column {
                get {
                    return this.column挂号费;
                }
            }
            
            internal DataColumn 诊查费Column {
                get {
                    return this.column诊查费;
                }
            }
            
            internal DataColumn 护理费Column {
                get {
                    return this.column护理费;
                }
            }
            
            internal DataColumn 特殊材料费Column {
                get {
                    return this.column特殊材料费;
                }
            }
            
            public tabBqkssrRow this[int index] {
                get {
                    return ((tabBqkssrRow)(this.Rows[index]));
                }
            }
            
            public event tabBqkssrRowChangeEventHandler tabBqkssrRowChanged;
            
            public event tabBqkssrRowChangeEventHandler tabBqkssrRowChanging;
            
            public event tabBqkssrRowChangeEventHandler tabBqkssrRowDeleted;
            
            public event tabBqkssrRowChangeEventHandler tabBqkssrRowDeleting;
            
            public void AddtabBqkssrRow(tabBqkssrRow row) {
                this.Rows.Add(row);
            }
            
            public tabBqkssrRow AddtabBqkssrRow(
                        string ward_id, 
                        string 病区, 
                        string dept_id, 
                        string 科室, 
                        string 住院号, 
                        string 姓名, 
                        string inpatient_id, 
                        System.Decimal 合计, 
                        System.Decimal 床位费, 
                        System.Decimal 药品费, 
                        System.Decimal 检验费, 
                        System.Decimal 治疗费, 
                        System.Decimal 放射费, 
                        System.Decimal 输血费, 
                        System.Decimal 检查费, 
                        System.Decimal 放疗费, 
                        System.Decimal 手术费, 
                        System.Decimal 其它费, 
                        System.Decimal 挂号费, 
                        System.Decimal 诊查费, 
                        System.Decimal 护理费, 
                        System.Decimal 特殊材料费) {
                tabBqkssrRow rowtabBqkssrRow = ((tabBqkssrRow)(this.NewRow()));
                rowtabBqkssrRow.ItemArray = new object[] {
                        ward_id,
                        病区,
                        dept_id,
                        科室,
                        住院号,
                        姓名,
                        inpatient_id,
                        合计,
                        床位费,
                        药品费,
                        检验费,
                        治疗费,
                        放射费,
                        输血费,
                        检查费,
                        放疗费,
                        手术费,
                        其它费,
                        挂号费,
                        诊查费,
                        护理费,
                        特殊材料费};
                this.Rows.Add(rowtabBqkssrRow);
                return rowtabBqkssrRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tabBqkssrDataTable cln = ((tabBqkssrDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tabBqkssrDataTable();
            }
            
            internal void InitVars() {
                this.columnward_id = this.Columns["ward_id"];
                this.column病区 = this.Columns["病区"];
                this.columndept_id = this.Columns["dept_id"];
                this.column科室 = this.Columns["科室"];
                this.column住院号 = this.Columns["住院号"];
                this.column姓名 = this.Columns["姓名"];
                this.columninpatient_id = this.Columns["inpatient_id"];
                this.column合计 = this.Columns["合计"];
                this.column床位费 = this.Columns["床位费"];
                this.column药品费 = this.Columns["药品费"];
                this.column检验费 = this.Columns["检验费"];
                this.column治疗费 = this.Columns["治疗费"];
                this.column放射费 = this.Columns["放射费"];
                this.column输血费 = this.Columns["输血费"];
                this.column检查费 = this.Columns["检查费"];
                this.column放疗费 = this.Columns["放疗费"];
                this.column手术费 = this.Columns["手术费"];
                this.column其它费 = this.Columns["其它费"];
                this.column挂号费 = this.Columns["挂号费"];
                this.column诊查费 = this.Columns["诊查费"];
                this.column护理费 = this.Columns["护理费"];
                this.column特殊材料费 = this.Columns["特殊材料费"];
            }
            
            private void InitClass() {
                this.columnward_id = new DataColumn("ward_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnward_id);
                this.column病区 = new DataColumn("病区", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column病区);
                this.columndept_id = new DataColumn("dept_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndept_id);
                this.column科室 = new DataColumn("科室", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column科室);
                this.column住院号 = new DataColumn("住院号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column住院号);
                this.column姓名 = new DataColumn("姓名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column姓名);
                this.columninpatient_id = new DataColumn("inpatient_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columninpatient_id);
                this.column合计 = new DataColumn("合计", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column合计);
                this.column床位费 = new DataColumn("床位费", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column床位费);
                this.column药品费 = new DataColumn("药品费", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column药品费);
                this.column检验费 = new DataColumn("检验费", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column检验费);
                this.column治疗费 = new DataColumn("治疗费", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column治疗费);
                this.column放射费 = new DataColumn("放射费", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column放射费);
                this.column输血费 = new DataColumn("输血费", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column输血费);
                this.column检查费 = new DataColumn("检查费", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column检查费);
                this.column放疗费 = new DataColumn("放疗费", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column放疗费);
                this.column手术费 = new DataColumn("手术费", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column手术费);
                this.column其它费 = new DataColumn("其它费", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column其它费);
                this.column挂号费 = new DataColumn("挂号费", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column挂号费);
                this.column诊查费 = new DataColumn("诊查费", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column诊查费);
                this.column护理费 = new DataColumn("护理费", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column护理费);
                this.column特殊材料费 = new DataColumn("特殊材料费", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column特殊材料费);
            }
            
            public tabBqkssrRow NewtabBqkssrRow() {
                return ((tabBqkssrRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tabBqkssrRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tabBqkssrRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabBqkssrRowChanged != null)) {
                    this.tabBqkssrRowChanged(this, new tabBqkssrRowChangeEvent(((tabBqkssrRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabBqkssrRowChanging != null)) {
                    this.tabBqkssrRowChanging(this, new tabBqkssrRowChangeEvent(((tabBqkssrRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabBqkssrRowDeleted != null)) {
                    this.tabBqkssrRowDeleted(this, new tabBqkssrRowChangeEvent(((tabBqkssrRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabBqkssrRowDeleting != null)) {
                    this.tabBqkssrRowDeleting(this, new tabBqkssrRowChangeEvent(((tabBqkssrRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetabBqkssrRow(tabBqkssrRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabBqkssrRow : DataRow {
            
            private tabBqkssrDataTable tabletabBqkssr;
            
            internal tabBqkssrRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabBqkssr = ((tabBqkssrDataTable)(this.Table));
            }
            
            public string ward_id {
                get {
                    try {
                        return ((string)(this[this.tabletabBqkssr.ward_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.ward_idColumn] = value;
                }
            }
            
            public string 病区 {
                get {
                    try {
                        return ((string)(this[this.tabletabBqkssr.病区Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.病区Column] = value;
                }
            }
            
            public string dept_id {
                get {
                    try {
                        return ((string)(this[this.tabletabBqkssr.dept_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.dept_idColumn] = value;
                }
            }
            
            public string 科室 {
                get {
                    try {
                        return ((string)(this[this.tabletabBqkssr.科室Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.科室Column] = value;
                }
            }
            
            public string 住院号 {
                get {
                    try {
                        return ((string)(this[this.tabletabBqkssr.住院号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.住院号Column] = value;
                }
            }
            
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.tabletabBqkssr.姓名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.姓名Column] = value;
                }
            }
            
            public string inpatient_id {
                get {
                    try {
                        return ((string)(this[this.tabletabBqkssr.inpatient_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.inpatient_idColumn] = value;
                }
            }
            
            public System.Decimal 合计 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.合计Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.合计Column] = value;
                }
            }
            
            public System.Decimal 床位费 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.床位费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.床位费Column] = value;
                }
            }
            
            public System.Decimal 药品费 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.药品费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.药品费Column] = value;
                }
            }
            
            public System.Decimal 检验费 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.检验费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.检验费Column] = value;
                }
            }
            
            public System.Decimal 治疗费 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.治疗费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.治疗费Column] = value;
                }
            }
            
            public System.Decimal 放射费 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.放射费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.放射费Column] = value;
                }
            }
            
            public System.Decimal 输血费 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.输血费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.输血费Column] = value;
                }
            }
            
            public System.Decimal 检查费 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.检查费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.检查费Column] = value;
                }
            }
            
            public System.Decimal 放疗费 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.放疗费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.放疗费Column] = value;
                }
            }
            
            public System.Decimal 手术费 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.手术费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.手术费Column] = value;
                }
            }
            
            public System.Decimal 其它费 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.其它费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.其它费Column] = value;
                }
            }
            
            public System.Decimal 挂号费 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.挂号费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.挂号费Column] = value;
                }
            }
            
            public System.Decimal 诊查费 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.诊查费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.诊查费Column] = value;
                }
            }
            
            public System.Decimal 护理费 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.护理费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.护理费Column] = value;
                }
            }
            
            public System.Decimal 特殊材料费 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletabBqkssr.特殊材料费Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletabBqkssr.特殊材料费Column] = value;
                }
            }
            
            public bool Isward_idNull() {
                return this.IsNull(this.tabletabBqkssr.ward_idColumn);
            }
            
            public void Setward_idNull() {
                this[this.tabletabBqkssr.ward_idColumn] = System.Convert.DBNull;
            }
            
            public bool Is病区Null() {
                return this.IsNull(this.tabletabBqkssr.病区Column);
            }
            
            public void Set病区Null() {
                this[this.tabletabBqkssr.病区Column] = System.Convert.DBNull;
            }
            
            public bool Isdept_idNull() {
                return this.IsNull(this.tabletabBqkssr.dept_idColumn);
            }
            
            public void Setdept_idNull() {
                this[this.tabletabBqkssr.dept_idColumn] = System.Convert.DBNull;
            }
            
            public bool Is科室Null() {
                return this.IsNull(this.tabletabBqkssr.科室Column);
            }
            
            public void Set科室Null() {
                this[this.tabletabBqkssr.科室Column] = System.Convert.DBNull;
            }
            
            public bool Is住院号Null() {
                return this.IsNull(this.tabletabBqkssr.住院号Column);
            }
            
            public void Set住院号Null() {
                this[this.tabletabBqkssr.住院号Column] = System.Convert.DBNull;
            }
            
            public bool Is姓名Null() {
                return this.IsNull(this.tabletabBqkssr.姓名Column);
            }
            
            public void Set姓名Null() {
                this[this.tabletabBqkssr.姓名Column] = System.Convert.DBNull;
            }
            
            public bool Isinpatient_idNull() {
                return this.IsNull(this.tabletabBqkssr.inpatient_idColumn);
            }
            
            public void Setinpatient_idNull() {
                this[this.tabletabBqkssr.inpatient_idColumn] = System.Convert.DBNull;
            }
            
            public bool Is合计Null() {
                return this.IsNull(this.tabletabBqkssr.合计Column);
            }
            
            public void Set合计Null() {
                this[this.tabletabBqkssr.合计Column] = System.Convert.DBNull;
            }
            
            public bool Is床位费Null() {
                return this.IsNull(this.tabletabBqkssr.床位费Column);
            }
            
            public void Set床位费Null() {
                this[this.tabletabBqkssr.床位费Column] = System.Convert.DBNull;
            }
            
            public bool Is药品费Null() {
                return this.IsNull(this.tabletabBqkssr.药品费Column);
            }
            
            public void Set药品费Null() {
                this[this.tabletabBqkssr.药品费Column] = System.Convert.DBNull;
            }
            
            public bool Is检验费Null() {
                return this.IsNull(this.tabletabBqkssr.检验费Column);
            }
            
            public void Set检验费Null() {
                this[this.tabletabBqkssr.检验费Column] = System.Convert.DBNull;
            }
            
            public bool Is治疗费Null() {
                return this.IsNull(this.tabletabBqkssr.治疗费Column);
            }
            
            public void Set治疗费Null() {
                this[this.tabletabBqkssr.治疗费Column] = System.Convert.DBNull;
            }
            
            public bool Is放射费Null() {
                return this.IsNull(this.tabletabBqkssr.放射费Column);
            }
            
            public void Set放射费Null() {
                this[this.tabletabBqkssr.放射费Column] = System.Convert.DBNull;
            }
            
            public bool Is输血费Null() {
                return this.IsNull(this.tabletabBqkssr.输血费Column);
            }
            
            public void Set输血费Null() {
                this[this.tabletabBqkssr.输血费Column] = System.Convert.DBNull;
            }
            
            public bool Is检查费Null() {
                return this.IsNull(this.tabletabBqkssr.检查费Column);
            }
            
            public void Set检查费Null() {
                this[this.tabletabBqkssr.检查费Column] = System.Convert.DBNull;
            }
            
            public bool Is放疗费Null() {
                return this.IsNull(this.tabletabBqkssr.放疗费Column);
            }
            
            public void Set放疗费Null() {
                this[this.tabletabBqkssr.放疗费Column] = System.Convert.DBNull;
            }
            
            public bool Is手术费Null() {
                return this.IsNull(this.tabletabBqkssr.手术费Column);
            }
            
            public void Set手术费Null() {
                this[this.tabletabBqkssr.手术费Column] = System.Convert.DBNull;
            }
            
            public bool Is其它费Null() {
                return this.IsNull(this.tabletabBqkssr.其它费Column);
            }
            
            public void Set其它费Null() {
                this[this.tabletabBqkssr.其它费Column] = System.Convert.DBNull;
            }
            
            public bool Is挂号费Null() {
                return this.IsNull(this.tabletabBqkssr.挂号费Column);
            }
            
            public void Set挂号费Null() {
                this[this.tabletabBqkssr.挂号费Column] = System.Convert.DBNull;
            }
            
            public bool Is诊查费Null() {
                return this.IsNull(this.tabletabBqkssr.诊查费Column);
            }
            
            public void Set诊查费Null() {
                this[this.tabletabBqkssr.诊查费Column] = System.Convert.DBNull;
            }
            
            public bool Is护理费Null() {
                return this.IsNull(this.tabletabBqkssr.护理费Column);
            }
            
            public void Set护理费Null() {
                this[this.tabletabBqkssr.护理费Column] = System.Convert.DBNull;
            }
            
            public bool Is特殊材料费Null() {
                return this.IsNull(this.tabletabBqkssr.特殊材料费Column);
            }
            
            public void Set特殊材料费Null() {
                this[this.tabletabBqkssr.特殊材料费Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tabBqkssrRowChangeEvent : EventArgs {
            
            private tabBqkssrRow eventRow;
            
            private DataRowAction eventAction;
            
            public tabBqkssrRowChangeEvent(tabBqkssrRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tabBqkssrRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
