//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.5485 版自动生成。
// 
#pragma warning disable 1591

namespace ClsZcyJy.WsZcyJy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback His_UserRecipeOperationCompleted;
        
        private System.Threading.SendOrPostCallback His_DrugInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::ClsZcyJy.Properties.Settings.Default.ClsZcyJy_WsZcyJy_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event His_UserRecipeCompletedEventHandler His_UserRecipeCompleted;
        
        /// <remarks/>
        public event His_DrugInfoCompletedEventHandler His_DrugInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/His_UserRecipe", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string His_UserRecipe(
                    string hospitalID, 
                    string hospitalName, 
                    string name, 
                    string sex, 
                    string age, 
                    string Useradd, 
                    string phone, 
                    string ep_no, 
                    string areanum, 
                    string roomnum, 
                    string bednum, 
                    string tieshu, 
                    string fushu, 
                    string takingmethod, 
                    string bm_method, 
                    string packvolume, 
                    string weight, 
                    System.DateTime workdate, 
                    string Doctorname, 
                    string checktime, 
                    string buyunit, 
                    string sellmethod, 
                    string money, 
                    string getmoneytime, 
                    string helpmoney, 
                    string RemarksStatus) {
            object[] results = this.Invoke("His_UserRecipe", new object[] {
                        hospitalID,
                        hospitalName,
                        name,
                        sex,
                        age,
                        Useradd,
                        phone,
                        ep_no,
                        areanum,
                        roomnum,
                        bednum,
                        tieshu,
                        fushu,
                        takingmethod,
                        bm_method,
                        packvolume,
                        weight,
                        workdate,
                        Doctorname,
                        checktime,
                        buyunit,
                        sellmethod,
                        money,
                        getmoneytime,
                        helpmoney,
                        RemarksStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void His_UserRecipeAsync(
                    string hospitalID, 
                    string hospitalName, 
                    string name, 
                    string sex, 
                    string age, 
                    string Useradd, 
                    string phone, 
                    string ep_no, 
                    string areanum, 
                    string roomnum, 
                    string bednum, 
                    string tieshu, 
                    string fushu, 
                    string takingmethod, 
                    string bm_method, 
                    string packvolume, 
                    string weight, 
                    System.DateTime workdate, 
                    string Doctorname, 
                    string checktime, 
                    string buyunit, 
                    string sellmethod, 
                    string money, 
                    string getmoneytime, 
                    string helpmoney, 
                    string RemarksStatus) {
            this.His_UserRecipeAsync(hospitalID, hospitalName, name, sex, age, Useradd, phone, ep_no, areanum, roomnum, bednum, tieshu, fushu, takingmethod, bm_method, packvolume, weight, workdate, Doctorname, checktime, buyunit, sellmethod, money, getmoneytime, helpmoney, RemarksStatus, null);
        }
        
        /// <remarks/>
        public void His_UserRecipeAsync(
                    string hospitalID, 
                    string hospitalName, 
                    string name, 
                    string sex, 
                    string age, 
                    string Useradd, 
                    string phone, 
                    string ep_no, 
                    string areanum, 
                    string roomnum, 
                    string bednum, 
                    string tieshu, 
                    string fushu, 
                    string takingmethod, 
                    string bm_method, 
                    string packvolume, 
                    string weight, 
                    System.DateTime workdate, 
                    string Doctorname, 
                    string checktime, 
                    string buyunit, 
                    string sellmethod, 
                    string money, 
                    string getmoneytime, 
                    string helpmoney, 
                    string RemarksStatus, 
                    object userState) {
            if ((this.His_UserRecipeOperationCompleted == null)) {
                this.His_UserRecipeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHis_UserRecipeOperationCompleted);
            }
            this.InvokeAsync("His_UserRecipe", new object[] {
                        hospitalID,
                        hospitalName,
                        name,
                        sex,
                        age,
                        Useradd,
                        phone,
                        ep_no,
                        areanum,
                        roomnum,
                        bednum,
                        tieshu,
                        fushu,
                        takingmethod,
                        bm_method,
                        packvolume,
                        weight,
                        workdate,
                        Doctorname,
                        checktime,
                        buyunit,
                        sellmethod,
                        money,
                        getmoneytime,
                        helpmoney,
                        RemarksStatus}, this.His_UserRecipeOperationCompleted, userState);
        }
        
        private void OnHis_UserRecipeOperationCompleted(object arg) {
            if ((this.His_UserRecipeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.His_UserRecipeCompleted(this, new His_UserRecipeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/His_DrugInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string His_DrugInfo(string ep_no, string hospitalID, string hospitalName, string drugID, string drugName, string drugguige, string drugAdd, string drugSum, string onecalculate, string wholesum, string getvalue, string getmoney, string unit, string RemarksStatus) {
            object[] results = this.Invoke("His_DrugInfo", new object[] {
                        ep_no,
                        hospitalID,
                        hospitalName,
                        drugID,
                        drugName,
                        drugguige,
                        drugAdd,
                        drugSum,
                        onecalculate,
                        wholesum,
                        getvalue,
                        getmoney,
                        unit,
                        RemarksStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void His_DrugInfoAsync(string ep_no, string hospitalID, string hospitalName, string drugID, string drugName, string drugguige, string drugAdd, string drugSum, string onecalculate, string wholesum, string getvalue, string getmoney, string unit, string RemarksStatus) {
            this.His_DrugInfoAsync(ep_no, hospitalID, hospitalName, drugID, drugName, drugguige, drugAdd, drugSum, onecalculate, wholesum, getvalue, getmoney, unit, RemarksStatus, null);
        }
        
        /// <remarks/>
        public void His_DrugInfoAsync(string ep_no, string hospitalID, string hospitalName, string drugID, string drugName, string drugguige, string drugAdd, string drugSum, string onecalculate, string wholesum, string getvalue, string getmoney, string unit, string RemarksStatus, object userState) {
            if ((this.His_DrugInfoOperationCompleted == null)) {
                this.His_DrugInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHis_DrugInfoOperationCompleted);
            }
            this.InvokeAsync("His_DrugInfo", new object[] {
                        ep_no,
                        hospitalID,
                        hospitalName,
                        drugID,
                        drugName,
                        drugguige,
                        drugAdd,
                        drugSum,
                        onecalculate,
                        wholesum,
                        getvalue,
                        getmoney,
                        unit,
                        RemarksStatus}, this.His_DrugInfoOperationCompleted, userState);
        }
        
        private void OnHis_DrugInfoOperationCompleted(object arg) {
            if ((this.His_DrugInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.His_DrugInfoCompleted(this, new His_DrugInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void His_UserRecipeCompletedEventHandler(object sender, His_UserRecipeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class His_UserRecipeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal His_UserRecipeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void His_DrugInfoCompletedEventHandler(object sender, His_DrugInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class His_DrugInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal His_DrugInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591