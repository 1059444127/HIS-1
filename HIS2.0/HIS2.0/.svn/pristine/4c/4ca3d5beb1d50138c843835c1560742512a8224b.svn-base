//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ts_Yk_ReportView {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Dataset1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Dataset1 : global::System.Data.DataSet {
        
        private 采购入库单DataTable table采购入库单;
        
        private 普通入库单DataTable table普通入库单;
        
        private 药品申请单DataTable table药品申请单;
        
        private 药品出库单DataTable table药品出库单;
        
        private 药品调价单DataTable table药品调价单;
        
        private 报损报溢单DataTable table报损报溢单;
        
        private 药品盘点单DataTable table药品盘点单;
        
        private 药品采购计划DataTable table药品采购计划;
        
        private 进销存情况表DataTable table进销存情况表;
        
        private 付款情况表DataTable table付款情况表;
        
        private 保管明细帐DataTable table保管明细帐;
        
        private 库存情况表DataTable table库存情况表;
        
        private 药品失效报警DataTable table药品失效报警;
        
        private 药品高低储报警DataTable table药品高低储报警;
        
        private 进出货排名统计DataTable table进出货排名统计;
        
        private 药库调库单DataTable table药库调库单;
        
        private 药理分类统计汇总DataTable table药理分类统计汇总;
        
        private 药理分类统计明细DataTable table药理分类统计明细;
        
        private 医生用药情况统计DataTable table医生用药情况统计;
        
        private 药品单据明细DataTable table药品单据明细;
        
        private 付款情况表明细DataTable table付款情况表明细;
        
        private 煎药标签DataTable table煎药标签;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Dataset1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Dataset1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["采购入库单"] != null)) {
                    base.Tables.Add(new 采购入库单DataTable(ds.Tables["采购入库单"]));
                }
                if ((ds.Tables["普通入库单"] != null)) {
                    base.Tables.Add(new 普通入库单DataTable(ds.Tables["普通入库单"]));
                }
                if ((ds.Tables["药品申请单"] != null)) {
                    base.Tables.Add(new 药品申请单DataTable(ds.Tables["药品申请单"]));
                }
                if ((ds.Tables["药品出库单"] != null)) {
                    base.Tables.Add(new 药品出库单DataTable(ds.Tables["药品出库单"]));
                }
                if ((ds.Tables["药品调价单"] != null)) {
                    base.Tables.Add(new 药品调价单DataTable(ds.Tables["药品调价单"]));
                }
                if ((ds.Tables["报损报溢单"] != null)) {
                    base.Tables.Add(new 报损报溢单DataTable(ds.Tables["报损报溢单"]));
                }
                if ((ds.Tables["药品盘点单"] != null)) {
                    base.Tables.Add(new 药品盘点单DataTable(ds.Tables["药品盘点单"]));
                }
                if ((ds.Tables["药品采购计划"] != null)) {
                    base.Tables.Add(new 药品采购计划DataTable(ds.Tables["药品采购计划"]));
                }
                if ((ds.Tables["进销存情况表"] != null)) {
                    base.Tables.Add(new 进销存情况表DataTable(ds.Tables["进销存情况表"]));
                }
                if ((ds.Tables["付款情况表"] != null)) {
                    base.Tables.Add(new 付款情况表DataTable(ds.Tables["付款情况表"]));
                }
                if ((ds.Tables["保管明细帐"] != null)) {
                    base.Tables.Add(new 保管明细帐DataTable(ds.Tables["保管明细帐"]));
                }
                if ((ds.Tables["库存情况表"] != null)) {
                    base.Tables.Add(new 库存情况表DataTable(ds.Tables["库存情况表"]));
                }
                if ((ds.Tables["药品失效报警"] != null)) {
                    base.Tables.Add(new 药品失效报警DataTable(ds.Tables["药品失效报警"]));
                }
                if ((ds.Tables["药品高低储报警"] != null)) {
                    base.Tables.Add(new 药品高低储报警DataTable(ds.Tables["药品高低储报警"]));
                }
                if ((ds.Tables["进出货排名统计"] != null)) {
                    base.Tables.Add(new 进出货排名统计DataTable(ds.Tables["进出货排名统计"]));
                }
                if ((ds.Tables["药库调库单"] != null)) {
                    base.Tables.Add(new 药库调库单DataTable(ds.Tables["药库调库单"]));
                }
                if ((ds.Tables["药理分类统计汇总"] != null)) {
                    base.Tables.Add(new 药理分类统计汇总DataTable(ds.Tables["药理分类统计汇总"]));
                }
                if ((ds.Tables["药理分类统计明细"] != null)) {
                    base.Tables.Add(new 药理分类统计明细DataTable(ds.Tables["药理分类统计明细"]));
                }
                if ((ds.Tables["医生用药情况统计"] != null)) {
                    base.Tables.Add(new 医生用药情况统计DataTable(ds.Tables["医生用药情况统计"]));
                }
                if ((ds.Tables["药品单据明细"] != null)) {
                    base.Tables.Add(new 药品单据明细DataTable(ds.Tables["药品单据明细"]));
                }
                if ((ds.Tables["付款情况表明细"] != null)) {
                    base.Tables.Add(new 付款情况表明细DataTable(ds.Tables["付款情况表明细"]));
                }
                if ((ds.Tables["煎药标签"] != null)) {
                    base.Tables.Add(new 煎药标签DataTable(ds.Tables["煎药标签"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 采购入库单DataTable 采购入库单 {
            get {
                return this.table采购入库单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 普通入库单DataTable 普通入库单 {
            get {
                return this.table普通入库单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品申请单DataTable 药品申请单 {
            get {
                return this.table药品申请单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品出库单DataTable 药品出库单 {
            get {
                return this.table药品出库单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品调价单DataTable 药品调价单 {
            get {
                return this.table药品调价单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 报损报溢单DataTable 报损报溢单 {
            get {
                return this.table报损报溢单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品盘点单DataTable 药品盘点单 {
            get {
                return this.table药品盘点单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品采购计划DataTable 药品采购计划 {
            get {
                return this.table药品采购计划;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 进销存情况表DataTable 进销存情况表 {
            get {
                return this.table进销存情况表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 付款情况表DataTable 付款情况表 {
            get {
                return this.table付款情况表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 保管明细帐DataTable 保管明细帐 {
            get {
                return this.table保管明细帐;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 库存情况表DataTable 库存情况表 {
            get {
                return this.table库存情况表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品失效报警DataTable 药品失效报警 {
            get {
                return this.table药品失效报警;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品高低储报警DataTable 药品高低储报警 {
            get {
                return this.table药品高低储报警;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 进出货排名统计DataTable 进出货排名统计 {
            get {
                return this.table进出货排名统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药库调库单DataTable 药库调库单 {
            get {
                return this.table药库调库单;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药理分类统计汇总DataTable 药理分类统计汇总 {
            get {
                return this.table药理分类统计汇总;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药理分类统计明细DataTable 药理分类统计明细 {
            get {
                return this.table药理分类统计明细;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 医生用药情况统计DataTable 医生用药情况统计 {
            get {
                return this.table医生用药情况统计;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 药品单据明细DataTable 药品单据明细 {
            get {
                return this.table药品单据明细;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 付款情况表明细DataTable 付款情况表明细 {
            get {
                return this.table付款情况表明细;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 煎药标签DataTable 煎药标签 {
            get {
                return this.table煎药标签;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Dataset1 cln = ((Dataset1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["采购入库单"] != null)) {
                    base.Tables.Add(new 采购入库单DataTable(ds.Tables["采购入库单"]));
                }
                if ((ds.Tables["普通入库单"] != null)) {
                    base.Tables.Add(new 普通入库单DataTable(ds.Tables["普通入库单"]));
                }
                if ((ds.Tables["药品申请单"] != null)) {
                    base.Tables.Add(new 药品申请单DataTable(ds.Tables["药品申请单"]));
                }
                if ((ds.Tables["药品出库单"] != null)) {
                    base.Tables.Add(new 药品出库单DataTable(ds.Tables["药品出库单"]));
                }
                if ((ds.Tables["药品调价单"] != null)) {
                    base.Tables.Add(new 药品调价单DataTable(ds.Tables["药品调价单"]));
                }
                if ((ds.Tables["报损报溢单"] != null)) {
                    base.Tables.Add(new 报损报溢单DataTable(ds.Tables["报损报溢单"]));
                }
                if ((ds.Tables["药品盘点单"] != null)) {
                    base.Tables.Add(new 药品盘点单DataTable(ds.Tables["药品盘点单"]));
                }
                if ((ds.Tables["药品采购计划"] != null)) {
                    base.Tables.Add(new 药品采购计划DataTable(ds.Tables["药品采购计划"]));
                }
                if ((ds.Tables["进销存情况表"] != null)) {
                    base.Tables.Add(new 进销存情况表DataTable(ds.Tables["进销存情况表"]));
                }
                if ((ds.Tables["付款情况表"] != null)) {
                    base.Tables.Add(new 付款情况表DataTable(ds.Tables["付款情况表"]));
                }
                if ((ds.Tables["保管明细帐"] != null)) {
                    base.Tables.Add(new 保管明细帐DataTable(ds.Tables["保管明细帐"]));
                }
                if ((ds.Tables["库存情况表"] != null)) {
                    base.Tables.Add(new 库存情况表DataTable(ds.Tables["库存情况表"]));
                }
                if ((ds.Tables["药品失效报警"] != null)) {
                    base.Tables.Add(new 药品失效报警DataTable(ds.Tables["药品失效报警"]));
                }
                if ((ds.Tables["药品高低储报警"] != null)) {
                    base.Tables.Add(new 药品高低储报警DataTable(ds.Tables["药品高低储报警"]));
                }
                if ((ds.Tables["进出货排名统计"] != null)) {
                    base.Tables.Add(new 进出货排名统计DataTable(ds.Tables["进出货排名统计"]));
                }
                if ((ds.Tables["药库调库单"] != null)) {
                    base.Tables.Add(new 药库调库单DataTable(ds.Tables["药库调库单"]));
                }
                if ((ds.Tables["药理分类统计汇总"] != null)) {
                    base.Tables.Add(new 药理分类统计汇总DataTable(ds.Tables["药理分类统计汇总"]));
                }
                if ((ds.Tables["药理分类统计明细"] != null)) {
                    base.Tables.Add(new 药理分类统计明细DataTable(ds.Tables["药理分类统计明细"]));
                }
                if ((ds.Tables["医生用药情况统计"] != null)) {
                    base.Tables.Add(new 医生用药情况统计DataTable(ds.Tables["医生用药情况统计"]));
                }
                if ((ds.Tables["药品单据明细"] != null)) {
                    base.Tables.Add(new 药品单据明细DataTable(ds.Tables["药品单据明细"]));
                }
                if ((ds.Tables["付款情况表明细"] != null)) {
                    base.Tables.Add(new 付款情况表明细DataTable(ds.Tables["付款情况表明细"]));
                }
                if ((ds.Tables["煎药标签"] != null)) {
                    base.Tables.Add(new 煎药标签DataTable(ds.Tables["煎药标签"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table采购入库单 = ((采购入库单DataTable)(base.Tables["采购入库单"]));
            if ((initTable == true)) {
                if ((this.table采购入库单 != null)) {
                    this.table采购入库单.InitVars();
                }
            }
            this.table普通入库单 = ((普通入库单DataTable)(base.Tables["普通入库单"]));
            if ((initTable == true)) {
                if ((this.table普通入库单 != null)) {
                    this.table普通入库单.InitVars();
                }
            }
            this.table药品申请单 = ((药品申请单DataTable)(base.Tables["药品申请单"]));
            if ((initTable == true)) {
                if ((this.table药品申请单 != null)) {
                    this.table药品申请单.InitVars();
                }
            }
            this.table药品出库单 = ((药品出库单DataTable)(base.Tables["药品出库单"]));
            if ((initTable == true)) {
                if ((this.table药品出库单 != null)) {
                    this.table药品出库单.InitVars();
                }
            }
            this.table药品调价单 = ((药品调价单DataTable)(base.Tables["药品调价单"]));
            if ((initTable == true)) {
                if ((this.table药品调价单 != null)) {
                    this.table药品调价单.InitVars();
                }
            }
            this.table报损报溢单 = ((报损报溢单DataTable)(base.Tables["报损报溢单"]));
            if ((initTable == true)) {
                if ((this.table报损报溢单 != null)) {
                    this.table报损报溢单.InitVars();
                }
            }
            this.table药品盘点单 = ((药品盘点单DataTable)(base.Tables["药品盘点单"]));
            if ((initTable == true)) {
                if ((this.table药品盘点单 != null)) {
                    this.table药品盘点单.InitVars();
                }
            }
            this.table药品采购计划 = ((药品采购计划DataTable)(base.Tables["药品采购计划"]));
            if ((initTable == true)) {
                if ((this.table药品采购计划 != null)) {
                    this.table药品采购计划.InitVars();
                }
            }
            this.table进销存情况表 = ((进销存情况表DataTable)(base.Tables["进销存情况表"]));
            if ((initTable == true)) {
                if ((this.table进销存情况表 != null)) {
                    this.table进销存情况表.InitVars();
                }
            }
            this.table付款情况表 = ((付款情况表DataTable)(base.Tables["付款情况表"]));
            if ((initTable == true)) {
                if ((this.table付款情况表 != null)) {
                    this.table付款情况表.InitVars();
                }
            }
            this.table保管明细帐 = ((保管明细帐DataTable)(base.Tables["保管明细帐"]));
            if ((initTable == true)) {
                if ((this.table保管明细帐 != null)) {
                    this.table保管明细帐.InitVars();
                }
            }
            this.table库存情况表 = ((库存情况表DataTable)(base.Tables["库存情况表"]));
            if ((initTable == true)) {
                if ((this.table库存情况表 != null)) {
                    this.table库存情况表.InitVars();
                }
            }
            this.table药品失效报警 = ((药品失效报警DataTable)(base.Tables["药品失效报警"]));
            if ((initTable == true)) {
                if ((this.table药品失效报警 != null)) {
                    this.table药品失效报警.InitVars();
                }
            }
            this.table药品高低储报警 = ((药品高低储报警DataTable)(base.Tables["药品高低储报警"]));
            if ((initTable == true)) {
                if ((this.table药品高低储报警 != null)) {
                    this.table药品高低储报警.InitVars();
                }
            }
            this.table进出货排名统计 = ((进出货排名统计DataTable)(base.Tables["进出货排名统计"]));
            if ((initTable == true)) {
                if ((this.table进出货排名统计 != null)) {
                    this.table进出货排名统计.InitVars();
                }
            }
            this.table药库调库单 = ((药库调库单DataTable)(base.Tables["药库调库单"]));
            if ((initTable == true)) {
                if ((this.table药库调库单 != null)) {
                    this.table药库调库单.InitVars();
                }
            }
            this.table药理分类统计汇总 = ((药理分类统计汇总DataTable)(base.Tables["药理分类统计汇总"]));
            if ((initTable == true)) {
                if ((this.table药理分类统计汇总 != null)) {
                    this.table药理分类统计汇总.InitVars();
                }
            }
            this.table药理分类统计明细 = ((药理分类统计明细DataTable)(base.Tables["药理分类统计明细"]));
            if ((initTable == true)) {
                if ((this.table药理分类统计明细 != null)) {
                    this.table药理分类统计明细.InitVars();
                }
            }
            this.table医生用药情况统计 = ((医生用药情况统计DataTable)(base.Tables["医生用药情况统计"]));
            if ((initTable == true)) {
                if ((this.table医生用药情况统计 != null)) {
                    this.table医生用药情况统计.InitVars();
                }
            }
            this.table药品单据明细 = ((药品单据明细DataTable)(base.Tables["药品单据明细"]));
            if ((initTable == true)) {
                if ((this.table药品单据明细 != null)) {
                    this.table药品单据明细.InitVars();
                }
            }
            this.table付款情况表明细 = ((付款情况表明细DataTable)(base.Tables["付款情况表明细"]));
            if ((initTable == true)) {
                if ((this.table付款情况表明细 != null)) {
                    this.table付款情况表明细.InitVars();
                }
            }
            this.table煎药标签 = ((煎药标签DataTable)(base.Tables["煎药标签"]));
            if ((initTable == true)) {
                if ((this.table煎药标签 != null)) {
                    this.table煎药标签.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Dataset1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Dataset1.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("en-US");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table采购入库单 = new 采购入库单DataTable();
            base.Tables.Add(this.table采购入库单);
            this.table普通入库单 = new 普通入库单DataTable();
            base.Tables.Add(this.table普通入库单);
            this.table药品申请单 = new 药品申请单DataTable();
            base.Tables.Add(this.table药品申请单);
            this.table药品出库单 = new 药品出库单DataTable();
            base.Tables.Add(this.table药品出库单);
            this.table药品调价单 = new 药品调价单DataTable();
            base.Tables.Add(this.table药品调价单);
            this.table报损报溢单 = new 报损报溢单DataTable();
            base.Tables.Add(this.table报损报溢单);
            this.table药品盘点单 = new 药品盘点单DataTable();
            base.Tables.Add(this.table药品盘点单);
            this.table药品采购计划 = new 药品采购计划DataTable();
            base.Tables.Add(this.table药品采购计划);
            this.table进销存情况表 = new 进销存情况表DataTable();
            base.Tables.Add(this.table进销存情况表);
            this.table付款情况表 = new 付款情况表DataTable();
            base.Tables.Add(this.table付款情况表);
            this.table保管明细帐 = new 保管明细帐DataTable();
            base.Tables.Add(this.table保管明细帐);
            this.table库存情况表 = new 库存情况表DataTable();
            base.Tables.Add(this.table库存情况表);
            this.table药品失效报警 = new 药品失效报警DataTable();
            base.Tables.Add(this.table药品失效报警);
            this.table药品高低储报警 = new 药品高低储报警DataTable();
            base.Tables.Add(this.table药品高低储报警);
            this.table进出货排名统计 = new 进出货排名统计DataTable();
            base.Tables.Add(this.table进出货排名统计);
            this.table药库调库单 = new 药库调库单DataTable();
            base.Tables.Add(this.table药库调库单);
            this.table药理分类统计汇总 = new 药理分类统计汇总DataTable();
            base.Tables.Add(this.table药理分类统计汇总);
            this.table药理分类统计明细 = new 药理分类统计明细DataTable();
            base.Tables.Add(this.table药理分类统计明细);
            this.table医生用药情况统计 = new 医生用药情况统计DataTable();
            base.Tables.Add(this.table医生用药情况统计);
            this.table药品单据明细 = new 药品单据明细DataTable();
            base.Tables.Add(this.table药品单据明细);
            this.table付款情况表明细 = new 付款情况表明细DataTable();
            base.Tables.Add(this.table付款情况表明细);
            this.table煎药标签 = new 煎药标签DataTable();
            base.Tables.Add(this.table煎药标签);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize采购入库单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize普通入库单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品申请单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品出库单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品调价单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize报损报溢单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品盘点单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品采购计划() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize进销存情况表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize付款情况表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize保管明细帐() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize库存情况表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品失效报警() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品高低储报警() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize进出货排名统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药库调库单() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药理分类统计汇总() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药理分类统计明细() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize医生用药情况统计() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize药品单据明细() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize付款情况表明细() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize煎药标签() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Dataset1 ds = new Dataset1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void 采购入库单RowChangeEventHandler(object sender, 采购入库单RowChangeEvent e);
        
        public delegate void 普通入库单RowChangeEventHandler(object sender, 普通入库单RowChangeEvent e);
        
        public delegate void 药品申请单RowChangeEventHandler(object sender, 药品申请单RowChangeEvent e);
        
        public delegate void 药品出库单RowChangeEventHandler(object sender, 药品出库单RowChangeEvent e);
        
        public delegate void 药品调价单RowChangeEventHandler(object sender, 药品调价单RowChangeEvent e);
        
        public delegate void 报损报溢单RowChangeEventHandler(object sender, 报损报溢单RowChangeEvent e);
        
        public delegate void 药品盘点单RowChangeEventHandler(object sender, 药品盘点单RowChangeEvent e);
        
        public delegate void 药品采购计划RowChangeEventHandler(object sender, 药品采购计划RowChangeEvent e);
        
        public delegate void 进销存情况表RowChangeEventHandler(object sender, 进销存情况表RowChangeEvent e);
        
        public delegate void 付款情况表RowChangeEventHandler(object sender, 付款情况表RowChangeEvent e);
        
        public delegate void 保管明细帐RowChangeEventHandler(object sender, 保管明细帐RowChangeEvent e);
        
        public delegate void 库存情况表RowChangeEventHandler(object sender, 库存情况表RowChangeEvent e);
        
        public delegate void 药品失效报警RowChangeEventHandler(object sender, 药品失效报警RowChangeEvent e);
        
        public delegate void 药品高低储报警RowChangeEventHandler(object sender, 药品高低储报警RowChangeEvent e);
        
        public delegate void 进出货排名统计RowChangeEventHandler(object sender, 进出货排名统计RowChangeEvent e);
        
        public delegate void 药库调库单RowChangeEventHandler(object sender, 药库调库单RowChangeEvent e);
        
        public delegate void 药理分类统计汇总RowChangeEventHandler(object sender, 药理分类统计汇总RowChangeEvent e);
        
        public delegate void 药理分类统计明细RowChangeEventHandler(object sender, 药理分类统计明细RowChangeEvent e);
        
        public delegate void 医生用药情况统计RowChangeEventHandler(object sender, 医生用药情况统计RowChangeEvent e);
        
        public delegate void 药品单据明细RowChangeEventHandler(object sender, 药品单据明细RowChangeEvent e);
        
        public delegate void 付款情况表明细RowChangeEventHandler(object sender, 付款情况表明细RowChangeEvent e);
        
        public delegate void 煎药标签RowChangeEventHandler(object sender, 煎药标签RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 采购入库单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnypkl;
            
            private global::System.Data.DataColumn columnjhj;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnjlce;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnkwmc;
            
            private global::System.Data.DataColumn columnshdh;
            
            private global::System.Data.DataColumn columnpzwh;
            
            private global::System.Data.DataColumn columngjjbyw;
            
            private global::System.Data.DataColumn columnfkbl;
            
            private global::System.Data.DataColumn columnfkje;
            
            private global::System.Data.DataColumn columnzbzt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 采购入库单DataTable() {
                this.TableName = "采购入库单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 采购入库单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 采购入库单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypklColumn {
                get {
                    return this.columnypkl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjColumn {
                get {
                    return this.columnjhj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shdhColumn {
                get {
                    return this.columnshdh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pzwhColumn {
                get {
                    return this.columnpzwh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gjjbywColumn {
                get {
                    return this.columngjjbyw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fkblColumn {
                get {
                    return this.columnfkbl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fkjeColumn {
                get {
                    return this.columnfkje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zbztColumn {
                get {
                    return this.columnzbzt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 采购入库单Row this[int index] {
                get {
                    return ((采购入库单Row)(this.Rows[index]));
                }
            }
            
            public event 采购入库单RowChangeEventHandler 采购入库单RowChanging;
            
            public event 采购入库单RowChangeEventHandler 采购入库单RowChanged;
            
            public event 采购入库单RowChangeEventHandler 采购入库单RowDeleting;
            
            public event 采购入库单RowChangeEventHandler 采购入库单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add采购入库单Row(采购入库单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 采购入库单Row Add采购入库单Row(
                        int xh, 
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        string ypsl, 
                        string ypdw, 
                        decimal ypkl, 
                        decimal jhj, 
                        decimal jhje, 
                        decimal pfj, 
                        decimal pfje, 
                        decimal lsj, 
                        decimal lsje, 
                        decimal jlce, 
                        string ypph, 
                        string ypxq, 
                        string shh, 
                        string kwmc, 
                        string shdh, 
                        string pzwh, 
                        string gjjbyw, 
                        decimal fkbl, 
                        decimal fkje, 
                        string zbzt) {
                采购入库单Row row采购入库单Row = ((采购入库单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypsl,
                        ypdw,
                        ypkl,
                        jhj,
                        jhje,
                        pfj,
                        pfje,
                        lsj,
                        lsje,
                        jlce,
                        ypph,
                        ypxq,
                        shh,
                        kwmc,
                        shdh,
                        pzwh,
                        gjjbyw,
                        fkbl,
                        fkje,
                        zbzt};
                row采购入库单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row采购入库单Row);
                return row采购入库单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                采购入库单DataTable cln = ((采购入库单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 采购入库单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnypkl = base.Columns["ypkl"];
                this.columnjhj = base.Columns["jhj"];
                this.columnjhje = base.Columns["jhje"];
                this.columnpfj = base.Columns["pfj"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsj = base.Columns["lsj"];
                this.columnlsje = base.Columns["lsje"];
                this.columnjlce = base.Columns["jlce"];
                this.columnypph = base.Columns["ypph"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnshh = base.Columns["shh"];
                this.columnkwmc = base.Columns["kwmc"];
                this.columnshdh = base.Columns["shdh"];
                this.columnpzwh = base.Columns["pzwh"];
                this.columngjjbyw = base.Columns["gjjbyw"];
                this.columnfkbl = base.Columns["fkbl"];
                this.columnfkje = base.Columns["fkje"];
                this.columnzbzt = base.Columns["zbzt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnypkl = new global::System.Data.DataColumn("ypkl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypkl);
                this.columnjhj = new global::System.Data.DataColumn("jhj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhj);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
                this.columnshdh = new global::System.Data.DataColumn("shdh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshdh);
                this.columnpzwh = new global::System.Data.DataColumn("pzwh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpzwh);
                this.columngjjbyw = new global::System.Data.DataColumn("gjjbyw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngjjbyw);
                this.columnfkbl = new global::System.Data.DataColumn("fkbl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkbl);
                this.columnfkje = new global::System.Data.DataColumn("fkje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkje);
                this.columnzbzt = new global::System.Data.DataColumn("zbzt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzbzt);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 采购入库单Row New采购入库单Row() {
                return ((采购入库单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 采购入库单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(采购入库单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.采购入库单RowChanged != null)) {
                    this.采购入库单RowChanged(this, new 采购入库单RowChangeEvent(((采购入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.采购入库单RowChanging != null)) {
                    this.采购入库单RowChanging(this, new 采购入库单RowChangeEvent(((采购入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.采购入库单RowDeleted != null)) {
                    this.采购入库单RowDeleted(this, new 采购入库单RowChangeEvent(((采购入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.采购入库单RowDeleting != null)) {
                    this.采购入库单RowDeleting(this, new 采购入库单RowChangeEvent(((采购入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove采购入库单Row(采购入库单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "采购入库单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 普通入库单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnplce;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnkwmc;
            
            private global::System.Data.DataColumn columnjhj;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnjlce;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 普通入库单DataTable() {
                this.TableName = "普通入库单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 普通入库单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 普通入库单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plceColumn {
                get {
                    return this.columnplce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjColumn {
                get {
                    return this.columnjhj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 普通入库单Row this[int index] {
                get {
                    return ((普通入库单Row)(this.Rows[index]));
                }
            }
            
            public event 普通入库单RowChangeEventHandler 普通入库单RowChanging;
            
            public event 普通入库单RowChangeEventHandler 普通入库单RowChanged;
            
            public event 普通入库单RowChangeEventHandler 普通入库单RowDeleting;
            
            public event 普通入库单RowChangeEventHandler 普通入库单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add普通入库单Row(普通入库单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 普通入库单Row Add普通入库单Row(
                        int xh, 
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        decimal ypsl, 
                        string ypdw, 
                        decimal pfj, 
                        decimal pfje, 
                        decimal lsj, 
                        decimal lsje, 
                        decimal plce, 
                        string ypph, 
                        string ypxq, 
                        string shh, 
                        string kwmc, 
                        decimal jhj, 
                        decimal jhje, 
                        decimal jlce) {
                普通入库单Row row普通入库单Row = ((普通入库单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypsl,
                        ypdw,
                        pfj,
                        pfje,
                        lsj,
                        lsje,
                        plce,
                        ypph,
                        ypxq,
                        shh,
                        kwmc,
                        jhj,
                        jhje,
                        jlce};
                row普通入库单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row普通入库单Row);
                return row普通入库单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                普通入库单DataTable cln = ((普通入库单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 普通入库单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfj = base.Columns["pfj"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsj = base.Columns["lsj"];
                this.columnlsje = base.Columns["lsje"];
                this.columnplce = base.Columns["plce"];
                this.columnypph = base.Columns["ypph"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnshh = base.Columns["shh"];
                this.columnkwmc = base.Columns["kwmc"];
                this.columnjhj = base.Columns["jhj"];
                this.columnjhje = base.Columns["jhje"];
                this.columnjlce = base.Columns["jlce"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnplce = new global::System.Data.DataColumn("plce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplce);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
                this.columnjhj = new global::System.Data.DataColumn("jhj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhj);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 普通入库单Row New普通入库单Row() {
                return ((普通入库单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 普通入库单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(普通入库单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.普通入库单RowChanged != null)) {
                    this.普通入库单RowChanged(this, new 普通入库单RowChangeEvent(((普通入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.普通入库单RowChanging != null)) {
                    this.普通入库单RowChanging(this, new 普通入库单RowChangeEvent(((普通入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.普通入库单RowDeleted != null)) {
                    this.普通入库单RowDeleted(this, new 普通入库单RowChangeEvent(((普通入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.普通入库单RowDeleting != null)) {
                    this.普通入库单RowDeleting(this, new 普通入库单RowChangeEvent(((普通入库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove普通入库单Row(普通入库单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "普通入库单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品申请单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnplce;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnkwmc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品申请单DataTable() {
                this.TableName = "药品申请单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品申请单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品申请单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plceColumn {
                get {
                    return this.columnplce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品申请单Row this[int index] {
                get {
                    return ((药品申请单Row)(this.Rows[index]));
                }
            }
            
            public event 药品申请单RowChangeEventHandler 药品申请单RowChanging;
            
            public event 药品申请单RowChangeEventHandler 药品申请单RowChanged;
            
            public event 药品申请单RowChangeEventHandler 药品申请单RowDeleting;
            
            public event 药品申请单RowChangeEventHandler 药品申请单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品申请单Row(药品申请单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品申请单Row Add药品申请单Row(int xh, string ypmc, string ypgg, string sccj, decimal ypsl, string ypdw, decimal pfj, decimal pfje, decimal lsj, decimal lsje, decimal plce, string ypph, string ypxq, string shh, string kwmc) {
                药品申请单Row row药品申请单Row = ((药品申请单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypsl,
                        ypdw,
                        pfj,
                        pfje,
                        lsj,
                        lsje,
                        plce,
                        ypph,
                        ypxq,
                        shh,
                        kwmc};
                row药品申请单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品申请单Row);
                return row药品申请单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品申请单DataTable cln = ((药品申请单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品申请单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfj = base.Columns["pfj"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsj = base.Columns["lsj"];
                this.columnlsje = base.Columns["lsje"];
                this.columnplce = base.Columns["plce"];
                this.columnypph = base.Columns["ypph"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnshh = base.Columns["shh"];
                this.columnkwmc = base.Columns["kwmc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnplce = new global::System.Data.DataColumn("plce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplce);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品申请单Row New药品申请单Row() {
                return ((药品申请单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品申请单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品申请单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品申请单RowChanged != null)) {
                    this.药品申请单RowChanged(this, new 药品申请单RowChangeEvent(((药品申请单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品申请单RowChanging != null)) {
                    this.药品申请单RowChanging(this, new 药品申请单RowChangeEvent(((药品申请单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品申请单RowDeleted != null)) {
                    this.药品申请单RowDeleted(this, new 药品申请单RowChangeEvent(((药品申请单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品申请单RowDeleting != null)) {
                    this.药品申请单RowDeleting(this, new 药品申请单RowChangeEvent(((药品申请单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品申请单Row(药品申请单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品申请单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品出库单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnplce;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnkwmc;
            
            private global::System.Data.DataColumn columnjhj;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnjlce;
            
            private global::System.Data.DataColumn columnkcl;
            
            private global::System.Data.DataColumn columnyppch;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品出库单DataTable() {
                this.TableName = "药品出库单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品出库单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品出库单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plceColumn {
                get {
                    return this.columnplce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjColumn {
                get {
                    return this.columnjhj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kclColumn {
                get {
                    return this.columnkcl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yppchColumn {
                get {
                    return this.columnyppch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品出库单Row this[int index] {
                get {
                    return ((药品出库单Row)(this.Rows[index]));
                }
            }
            
            public event 药品出库单RowChangeEventHandler 药品出库单RowChanging;
            
            public event 药品出库单RowChangeEventHandler 药品出库单RowChanged;
            
            public event 药品出库单RowChangeEventHandler 药品出库单RowDeleting;
            
            public event 药品出库单RowChangeEventHandler 药品出库单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品出库单Row(药品出库单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品出库单Row Add药品出库单Row(
                        int xh, 
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        decimal ypsl, 
                        string ypdw, 
                        decimal pfj, 
                        decimal pfje, 
                        decimal lsj, 
                        decimal lsje, 
                        decimal plce, 
                        string ypph, 
                        string ypxq, 
                        string shh, 
                        string kwmc, 
                        decimal jhj, 
                        decimal jhje, 
                        decimal jlce, 
                        decimal kcl, 
                        string yppch) {
                药品出库单Row row药品出库单Row = ((药品出库单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypsl,
                        ypdw,
                        pfj,
                        pfje,
                        lsj,
                        lsje,
                        plce,
                        ypph,
                        ypxq,
                        shh,
                        kwmc,
                        jhj,
                        jhje,
                        jlce,
                        kcl,
                        yppch};
                row药品出库单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品出库单Row);
                return row药品出库单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品出库单DataTable cln = ((药品出库单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品出库单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfj = base.Columns["pfj"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsj = base.Columns["lsj"];
                this.columnlsje = base.Columns["lsje"];
                this.columnplce = base.Columns["plce"];
                this.columnypph = base.Columns["ypph"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnshh = base.Columns["shh"];
                this.columnkwmc = base.Columns["kwmc"];
                this.columnjhj = base.Columns["jhj"];
                this.columnjhje = base.Columns["jhje"];
                this.columnjlce = base.Columns["jlce"];
                this.columnkcl = base.Columns["kcl"];
                this.columnyppch = base.Columns["yppch"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnplce = new global::System.Data.DataColumn("plce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplce);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
                this.columnjhj = new global::System.Data.DataColumn("jhj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhj);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
                this.columnkcl = new global::System.Data.DataColumn("kcl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkcl);
                this.columnyppch = new global::System.Data.DataColumn("yppch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyppch);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品出库单Row New药品出库单Row() {
                return ((药品出库单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品出库单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品出库单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品出库单RowChanged != null)) {
                    this.药品出库单RowChanged(this, new 药品出库单RowChangeEvent(((药品出库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品出库单RowChanging != null)) {
                    this.药品出库单RowChanging(this, new 药品出库单RowChangeEvent(((药品出库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品出库单RowDeleted != null)) {
                    this.药品出库单RowDeleted(this, new 药品出库单RowChangeEvent(((药品出库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品出库单RowDeleting != null)) {
                    this.药品出库单RowDeleting(this, new 药品出库单RowChangeEvent(((药品出库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品出库单Row(药品出库单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品出库单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品调价单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnypfj;
            
            private global::System.Data.DataColumn columnylsj;
            
            private global::System.Data.DataColumn columnxpfj;
            
            private global::System.Data.DataColumn columnxlsj;
            
            private global::System.Data.DataColumn columnpfjdwcj;
            
            private global::System.Data.DataColumn columnlsjdwcj;
            
            private global::System.Data.DataColumn columntpfje;
            
            private global::System.Data.DataColumn columntlsje;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columntjwh;
            
            private global::System.Data.DataColumn columnzxrq;
            
            private global::System.Data.DataColumn columnscjj;
            
            private global::System.Data.DataColumn columnscghdw;
            
            private global::System.Data.DataColumn columnmrjj;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品调价单DataTable() {
                this.TableName = "药品调价单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品调价单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品调价单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypfjColumn {
                get {
                    return this.columnypfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ylsjColumn {
                get {
                    return this.columnylsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xpfjColumn {
                get {
                    return this.columnxpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xlsjColumn {
                get {
                    return this.columnxlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjdwcjColumn {
                get {
                    return this.columnpfjdwcj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjdwcjColumn {
                get {
                    return this.columnlsjdwcj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tpfjeColumn {
                get {
                    return this.columntpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tlsjeColumn {
                get {
                    return this.columntlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tjwhColumn {
                get {
                    return this.columntjwh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zxrqColumn {
                get {
                    return this.columnzxrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn scjjColumn {
                get {
                    return this.columnscjj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn scghdwColumn {
                get {
                    return this.columnscghdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mrjjColumn {
                get {
                    return this.columnmrjj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品调价单Row this[int index] {
                get {
                    return ((药品调价单Row)(this.Rows[index]));
                }
            }
            
            public event 药品调价单RowChangeEventHandler 药品调价单RowChanging;
            
            public event 药品调价单RowChangeEventHandler 药品调价单RowChanged;
            
            public event 药品调价单RowChangeEventHandler 药品调价单RowDeleting;
            
            public event 药品调价单RowChangeEventHandler 药品调价单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品调价单Row(药品调价单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品调价单Row Add药品调价单Row(
                        int xh, 
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        decimal ypsl, 
                        string ypdw, 
                        decimal ypfj, 
                        decimal ylsj, 
                        decimal xpfj, 
                        decimal xlsj, 
                        decimal pfjdwcj, 
                        decimal lsjdwcj, 
                        decimal tpfje, 
                        decimal tlsje, 
                        string shh, 
                        string tjwh, 
                        string zxrq, 
                        decimal scjj, 
                        string scghdw, 
                        decimal mrjj) {
                药品调价单Row row药品调价单Row = ((药品调价单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypsl,
                        ypdw,
                        ypfj,
                        ylsj,
                        xpfj,
                        xlsj,
                        pfjdwcj,
                        lsjdwcj,
                        tpfje,
                        tlsje,
                        shh,
                        tjwh,
                        zxrq,
                        scjj,
                        scghdw,
                        mrjj};
                row药品调价单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品调价单Row);
                return row药品调价单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品调价单DataTable cln = ((药品调价单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品调价单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnypfj = base.Columns["ypfj"];
                this.columnylsj = base.Columns["ylsj"];
                this.columnxpfj = base.Columns["xpfj"];
                this.columnxlsj = base.Columns["xlsj"];
                this.columnpfjdwcj = base.Columns["pfjdwcj"];
                this.columnlsjdwcj = base.Columns["lsjdwcj"];
                this.columntpfje = base.Columns["tpfje"];
                this.columntlsje = base.Columns["tlsje"];
                this.columnshh = base.Columns["shh"];
                this.columntjwh = base.Columns["tjwh"];
                this.columnzxrq = base.Columns["zxrq"];
                this.columnscjj = base.Columns["scjj"];
                this.columnscghdw = base.Columns["scghdw"];
                this.columnmrjj = base.Columns["mrjj"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnypfj = new global::System.Data.DataColumn("ypfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypfj);
                this.columnylsj = new global::System.Data.DataColumn("ylsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnylsj);
                this.columnxpfj = new global::System.Data.DataColumn("xpfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxpfj);
                this.columnxlsj = new global::System.Data.DataColumn("xlsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxlsj);
                this.columnpfjdwcj = new global::System.Data.DataColumn("pfjdwcj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfjdwcj);
                this.columnlsjdwcj = new global::System.Data.DataColumn("lsjdwcj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsjdwcj);
                this.columntpfje = new global::System.Data.DataColumn("tpfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntpfje);
                this.columntlsje = new global::System.Data.DataColumn("tlsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntlsje);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columntjwh = new global::System.Data.DataColumn("tjwh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntjwh);
                this.columnzxrq = new global::System.Data.DataColumn("zxrq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzxrq);
                this.columnscjj = new global::System.Data.DataColumn("scjj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscjj);
                this.columnscghdw = new global::System.Data.DataColumn("scghdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscghdw);
                this.columnmrjj = new global::System.Data.DataColumn("mrjj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmrjj);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品调价单Row New药品调价单Row() {
                return ((药品调价单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品调价单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品调价单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品调价单RowChanged != null)) {
                    this.药品调价单RowChanged(this, new 药品调价单RowChangeEvent(((药品调价单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品调价单RowChanging != null)) {
                    this.药品调价单RowChanging(this, new 药品调价单RowChangeEvent(((药品调价单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品调价单RowDeleted != null)) {
                    this.药品调价单RowDeleted(this, new 药品调价单RowChangeEvent(((药品调价单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品调价单RowDeleting != null)) {
                    this.药品调价单RowDeleting(this, new 药品调价单RowChangeEvent(((药品调价单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品调价单Row(药品调价单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品调价单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 报损报溢单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnplce;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnkwmc;
            
            private global::System.Data.DataColumn columnjhj;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnjlce;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 报损报溢单DataTable() {
                this.TableName = "报损报溢单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 报损报溢单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 报损报溢单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plceColumn {
                get {
                    return this.columnplce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjColumn {
                get {
                    return this.columnjhj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 报损报溢单Row this[int index] {
                get {
                    return ((报损报溢单Row)(this.Rows[index]));
                }
            }
            
            public event 报损报溢单RowChangeEventHandler 报损报溢单RowChanging;
            
            public event 报损报溢单RowChangeEventHandler 报损报溢单RowChanged;
            
            public event 报损报溢单RowChangeEventHandler 报损报溢单RowDeleting;
            
            public event 报损报溢单RowChangeEventHandler 报损报溢单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add报损报溢单Row(报损报溢单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 报损报溢单Row Add报损报溢单Row(
                        int xh, 
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        decimal ypsl, 
                        string ypdw, 
                        decimal pfj, 
                        decimal pfje, 
                        decimal lsj, 
                        decimal lsje, 
                        decimal plce, 
                        string ypph, 
                        string ypxq, 
                        string shh, 
                        string kwmc, 
                        decimal jhj, 
                        decimal jhje, 
                        decimal jlce) {
                报损报溢单Row row报损报溢单Row = ((报损报溢单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypsl,
                        ypdw,
                        pfj,
                        pfje,
                        lsj,
                        lsje,
                        plce,
                        ypph,
                        ypxq,
                        shh,
                        kwmc,
                        jhj,
                        jhje,
                        jlce};
                row报损报溢单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row报损报溢单Row);
                return row报损报溢单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                报损报溢单DataTable cln = ((报损报溢单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 报损报溢单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfj = base.Columns["pfj"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsj = base.Columns["lsj"];
                this.columnlsje = base.Columns["lsje"];
                this.columnplce = base.Columns["plce"];
                this.columnypph = base.Columns["ypph"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnshh = base.Columns["shh"];
                this.columnkwmc = base.Columns["kwmc"];
                this.columnjhj = base.Columns["jhj"];
                this.columnjhje = base.Columns["jhje"];
                this.columnjlce = base.Columns["jlce"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnplce = new global::System.Data.DataColumn("plce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplce);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
                this.columnjhj = new global::System.Data.DataColumn("jhj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhj);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 报损报溢单Row New报损报溢单Row() {
                return ((报损报溢单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 报损报溢单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(报损报溢单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.报损报溢单RowChanged != null)) {
                    this.报损报溢单RowChanged(this, new 报损报溢单RowChangeEvent(((报损报溢单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.报损报溢单RowChanging != null)) {
                    this.报损报溢单RowChanging(this, new 报损报溢单RowChangeEvent(((报损报溢单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.报损报溢单RowDeleted != null)) {
                    this.报损报溢单RowDeleted(this, new 报损报溢单RowChangeEvent(((报损报溢单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.报损报溢单RowDeleting != null)) {
                    this.报损报溢单RowDeleting(this, new 报损报溢单RowChangeEvent(((报损报溢单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove报损报溢单Row(报损报溢单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "报损报溢单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品盘点单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnzcsl;
            
            private global::System.Data.DataColumn columnzcje;
            
            private global::System.Data.DataColumn columnpcsl;
            
            private global::System.Data.DataColumn columnpcje;
            
            private global::System.Data.DataColumn columnyksl;
            
            private global::System.Data.DataColumn columnykje;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnkwmc;
            
            private global::System.Data.DataColumn columnjhj;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnjlce;
            
            private global::System.Data.DataColumn columnzcjhje;
            
            private global::System.Data.DataColumn columnypjx;
            
            private global::System.Data.DataColumn columnyplx;
            
            private global::System.Data.DataColumn columnykjhje;
            
            private global::System.Data.DataColumn columnpcjhje;
            
            private global::System.Data.DataColumn columnyppch;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnzcsl2;
            
            private global::System.Data.DataColumn columnpcsl2;
            
            private global::System.Data.DataColumn columnkfjkc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品盘点单DataTable() {
                this.TableName = "药品盘点单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品盘点单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品盘点单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zcslColumn {
                get {
                    return this.columnzcsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zcjeColumn {
                get {
                    return this.columnzcje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pcslColumn {
                get {
                    return this.columnpcsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pcjeColumn {
                get {
                    return this.columnpcje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ykslColumn {
                get {
                    return this.columnyksl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ykjeColumn {
                get {
                    return this.columnykje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjColumn {
                get {
                    return this.columnjhj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zcjhjeColumn {
                get {
                    return this.columnzcjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypjxColumn {
                get {
                    return this.columnypjx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yplxColumn {
                get {
                    return this.columnyplx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ykjhjeColumn {
                get {
                    return this.columnykjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pcjhjeColumn {
                get {
                    return this.columnpcjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yppchColumn {
                get {
                    return this.columnyppch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zcsl2Column {
                get {
                    return this.columnzcsl2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pcsl2Column {
                get {
                    return this.columnpcsl2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kfjkcColumn {
                get {
                    return this.columnkfjkc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品盘点单Row this[int index] {
                get {
                    return ((药品盘点单Row)(this.Rows[index]));
                }
            }
            
            public event 药品盘点单RowChangeEventHandler 药品盘点单RowChanging;
            
            public event 药品盘点单RowChangeEventHandler 药品盘点单RowChanged;
            
            public event 药品盘点单RowChangeEventHandler 药品盘点单RowDeleting;
            
            public event 药品盘点单RowChangeEventHandler 药品盘点单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品盘点单Row(药品盘点单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品盘点单Row Add药品盘点单Row(
                        int xh, 
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        string ypdw, 
                        decimal pfj, 
                        decimal lsj, 
                        decimal zcsl, 
                        decimal zcje, 
                        decimal pcsl, 
                        decimal pcje, 
                        decimal yksl, 
                        decimal ykje, 
                        string shh, 
                        string ypph, 
                        string kwmc, 
                        decimal jhj, 
                        decimal jhje, 
                        decimal jlce, 
                        decimal zcjhje, 
                        string ypjx, 
                        string yplx, 
                        decimal ykjhje, 
                        decimal pcjhje, 
                        string yppch, 
                        string ypxq, 
                        string zcsl2, 
                        string pcsl2, 
                        string kfjkc) {
                药品盘点单Row row药品盘点单Row = ((药品盘点单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypdw,
                        pfj,
                        lsj,
                        zcsl,
                        zcje,
                        pcsl,
                        pcje,
                        yksl,
                        ykje,
                        shh,
                        ypph,
                        kwmc,
                        jhj,
                        jhje,
                        jlce,
                        zcjhje,
                        ypjx,
                        yplx,
                        ykjhje,
                        pcjhje,
                        yppch,
                        ypxq,
                        zcsl2,
                        pcsl2,
                        kfjkc};
                row药品盘点单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品盘点单Row);
                return row药品盘点单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品盘点单DataTable cln = ((药品盘点单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品盘点单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfj = base.Columns["pfj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnzcsl = base.Columns["zcsl"];
                this.columnzcje = base.Columns["zcje"];
                this.columnpcsl = base.Columns["pcsl"];
                this.columnpcje = base.Columns["pcje"];
                this.columnyksl = base.Columns["yksl"];
                this.columnykje = base.Columns["ykje"];
                this.columnshh = base.Columns["shh"];
                this.columnypph = base.Columns["ypph"];
                this.columnkwmc = base.Columns["kwmc"];
                this.columnjhj = base.Columns["jhj"];
                this.columnjhje = base.Columns["jhje"];
                this.columnjlce = base.Columns["jlce"];
                this.columnzcjhje = base.Columns["zcjhje"];
                this.columnypjx = base.Columns["ypjx"];
                this.columnyplx = base.Columns["yplx"];
                this.columnykjhje = base.Columns["ykjhje"];
                this.columnpcjhje = base.Columns["pcjhje"];
                this.columnyppch = base.Columns["yppch"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnzcsl2 = base.Columns["zcsl2"];
                this.columnpcsl2 = base.Columns["pcsl2"];
                this.columnkfjkc = base.Columns["kfjkc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnzcsl = new global::System.Data.DataColumn("zcsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzcsl);
                this.columnzcje = new global::System.Data.DataColumn("zcje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzcje);
                this.columnpcsl = new global::System.Data.DataColumn("pcsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpcsl);
                this.columnpcje = new global::System.Data.DataColumn("pcje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpcje);
                this.columnyksl = new global::System.Data.DataColumn("yksl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyksl);
                this.columnykje = new global::System.Data.DataColumn("ykje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnykje);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
                this.columnjhj = new global::System.Data.DataColumn("jhj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhj);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
                this.columnzcjhje = new global::System.Data.DataColumn("zcjhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzcjhje);
                this.columnypjx = new global::System.Data.DataColumn("ypjx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypjx);
                this.columnyplx = new global::System.Data.DataColumn("yplx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyplx);
                this.columnykjhje = new global::System.Data.DataColumn("ykjhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnykjhje);
                this.columnpcjhje = new global::System.Data.DataColumn("pcjhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpcjhje);
                this.columnyppch = new global::System.Data.DataColumn("yppch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyppch);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnzcsl2 = new global::System.Data.DataColumn("zcsl2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzcsl2);
                this.columnpcsl2 = new global::System.Data.DataColumn("pcsl2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpcsl2);
                this.columnkfjkc = new global::System.Data.DataColumn("kfjkc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkfjkc);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品盘点单Row New药品盘点单Row() {
                return ((药品盘点单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品盘点单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品盘点单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品盘点单RowChanged != null)) {
                    this.药品盘点单RowChanged(this, new 药品盘点单RowChangeEvent(((药品盘点单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品盘点单RowChanging != null)) {
                    this.药品盘点单RowChanging(this, new 药品盘点单RowChangeEvent(((药品盘点单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品盘点单RowDeleted != null)) {
                    this.药品盘点单RowDeleted(this, new 药品盘点单RowChangeEvent(((药品盘点单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品盘点单RowDeleting != null)) {
                    this.药品盘点单RowDeleting(this, new 药品盘点单RowChangeEvent(((药品盘点单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品盘点单Row(药品盘点单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品盘点单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品采购计划DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnxqs;
            
            private global::System.Data.DataColumn columnjhs;
            
            private global::System.Data.DataColumn columnckjj;
            
            private global::System.Data.DataColumn columnckkl;
            
            private global::System.Data.DataColumn columnghdw;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnsyyl;
            
            private global::System.Data.DataColumn columnjbyw;
            
            private global::System.Data.DataColumn columnhwh;
            
            private global::System.Data.DataColumn columnbz;
            
            private global::System.Data.DataColumn columnbz1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品采购计划DataTable() {
                this.TableName = "药品采购计划";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品采购计划DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品采购计划DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xqsColumn {
                get {
                    return this.columnxqs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhsColumn {
                get {
                    return this.columnjhs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ckjjColumn {
                get {
                    return this.columnckjj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ckklColumn {
                get {
                    return this.columnckkl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ghdwColumn {
                get {
                    return this.columnghdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn syylColumn {
                get {
                    return this.columnsyyl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jbywColumn {
                get {
                    return this.columnjbyw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hwhColumn {
                get {
                    return this.columnhwh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bzColumn {
                get {
                    return this.columnbz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bz1Column {
                get {
                    return this.columnbz1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品采购计划Row this[int index] {
                get {
                    return ((药品采购计划Row)(this.Rows[index]));
                }
            }
            
            public event 药品采购计划RowChangeEventHandler 药品采购计划RowChanging;
            
            public event 药品采购计划RowChangeEventHandler 药品采购计划RowChanged;
            
            public event 药品采购计划RowChangeEventHandler 药品采购计划RowDeleting;
            
            public event 药品采购计划RowChangeEventHandler 药品采购计划RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品采购计划Row(药品采购计划Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品采购计划Row Add药品采购计划Row(
                        int xh, 
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        string ypdw, 
                        decimal pfj, 
                        decimal lsj, 
                        decimal xqs, 
                        decimal jhs, 
                        decimal ckjj, 
                        decimal ckkl, 
                        string ghdw, 
                        string shh, 
                        decimal syyl, 
                        string jbyw, 
                        string hwh, 
                        string bz, 
                        string bz1) {
                药品采购计划Row row药品采购计划Row = ((药品采购计划Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypdw,
                        pfj,
                        lsj,
                        xqs,
                        jhs,
                        ckjj,
                        ckkl,
                        ghdw,
                        shh,
                        syyl,
                        jbyw,
                        hwh,
                        bz,
                        bz1};
                row药品采购计划Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品采购计划Row);
                return row药品采购计划Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品采购计划DataTable cln = ((药品采购计划DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品采购计划DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfj = base.Columns["pfj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnxqs = base.Columns["xqs"];
                this.columnjhs = base.Columns["jhs"];
                this.columnckjj = base.Columns["ckjj"];
                this.columnckkl = base.Columns["ckkl"];
                this.columnghdw = base.Columns["ghdw"];
                this.columnshh = base.Columns["shh"];
                this.columnsyyl = base.Columns["syyl"];
                this.columnjbyw = base.Columns["jbyw"];
                this.columnhwh = base.Columns["hwh"];
                this.columnbz = base.Columns["bz"];
                this.columnbz1 = base.Columns["bz1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnxqs = new global::System.Data.DataColumn("xqs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxqs);
                this.columnjhs = new global::System.Data.DataColumn("jhs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhs);
                this.columnckjj = new global::System.Data.DataColumn("ckjj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnckjj);
                this.columnckkl = new global::System.Data.DataColumn("ckkl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnckkl);
                this.columnghdw = new global::System.Data.DataColumn("ghdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnghdw);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnsyyl = new global::System.Data.DataColumn("syyl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsyyl);
                this.columnjbyw = new global::System.Data.DataColumn("jbyw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjbyw);
                this.columnhwh = new global::System.Data.DataColumn("hwh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhwh);
                this.columnbz = new global::System.Data.DataColumn("bz", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbz);
                this.columnbz1 = new global::System.Data.DataColumn("bz1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbz1);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品采购计划Row New药品采购计划Row() {
                return ((药品采购计划Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品采购计划Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品采购计划Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品采购计划RowChanged != null)) {
                    this.药品采购计划RowChanged(this, new 药品采购计划RowChangeEvent(((药品采购计划Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品采购计划RowChanging != null)) {
                    this.药品采购计划RowChanging(this, new 药品采购计划RowChangeEvent(((药品采购计划Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品采购计划RowDeleted != null)) {
                    this.药品采购计划RowDeleted(this, new 药品采购计划RowChangeEvent(((药品采购计划Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品采购计划RowDeleting != null)) {
                    this.药品采购计划RowDeleting(this, new 药品采购计划RowChangeEvent(((药品采购计划Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品采购计划Row(药品采购计划Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品采购计划DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 进销存情况表DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxmmc;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnje;
            
            private global::System.Data.DataColumn columnjlce;
            
            private global::System.Data.DataColumn columnjhje1;
            
            private global::System.Data.DataColumn columnje1;
            
            private global::System.Data.DataColumn columnjlce1;
            
            private global::System.Data.DataColumn columnxmmc1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进销存情况表DataTable() {
                this.TableName = "进销存情况表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 进销存情况表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 进销存情况表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xmmcColumn {
                get {
                    return this.columnxmmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jeColumn {
                get {
                    return this.columnje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhje1Column {
                get {
                    return this.columnjhje1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn je1Column {
                get {
                    return this.columnje1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlce1Column {
                get {
                    return this.columnjlce1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xmmc1Column {
                get {
                    return this.columnxmmc1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进销存情况表Row this[int index] {
                get {
                    return ((进销存情况表Row)(this.Rows[index]));
                }
            }
            
            public event 进销存情况表RowChangeEventHandler 进销存情况表RowChanging;
            
            public event 进销存情况表RowChangeEventHandler 进销存情况表RowChanged;
            
            public event 进销存情况表RowChangeEventHandler 进销存情况表RowDeleting;
            
            public event 进销存情况表RowChangeEventHandler 进销存情况表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add进销存情况表Row(进销存情况表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进销存情况表Row Add进销存情况表Row(string xmmc, string jhje, string je, string jlce, string jhje1, string je1, string jlce1, string xmmc1) {
                进销存情况表Row row进销存情况表Row = ((进销存情况表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xmmc,
                        jhje,
                        je,
                        jlce,
                        jhje1,
                        je1,
                        jlce1,
                        xmmc1};
                row进销存情况表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row进销存情况表Row);
                return row进销存情况表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                进销存情况表DataTable cln = ((进销存情况表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 进销存情况表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxmmc = base.Columns["xmmc"];
                this.columnjhje = base.Columns["jhje"];
                this.columnje = base.Columns["je"];
                this.columnjlce = base.Columns["jlce"];
                this.columnjhje1 = base.Columns["jhje1"];
                this.columnje1 = base.Columns["je1"];
                this.columnjlce1 = base.Columns["jlce1"];
                this.columnxmmc1 = base.Columns["xmmc1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxmmc = new global::System.Data.DataColumn("xmmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxmmc);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnje = new global::System.Data.DataColumn("je", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
                this.columnjhje1 = new global::System.Data.DataColumn("jhje1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje1);
                this.columnje1 = new global::System.Data.DataColumn("je1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnje1);
                this.columnjlce1 = new global::System.Data.DataColumn("jlce1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce1);
                this.columnxmmc1 = new global::System.Data.DataColumn("xmmc1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxmmc1);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进销存情况表Row New进销存情况表Row() {
                return ((进销存情况表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 进销存情况表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(进销存情况表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.进销存情况表RowChanged != null)) {
                    this.进销存情况表RowChanged(this, new 进销存情况表RowChangeEvent(((进销存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.进销存情况表RowChanging != null)) {
                    this.进销存情况表RowChanging(this, new 进销存情况表RowChangeEvent(((进销存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.进销存情况表RowDeleted != null)) {
                    this.进销存情况表RowDeleted(this, new 进销存情况表RowChangeEvent(((进销存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.进销存情况表RowDeleting != null)) {
                    this.进销存情况表RowDeleting(this, new 进销存情况表RowChangeEvent(((进销存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove进销存情况表Row(进销存情况表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "进销存情况表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 付款情况表DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columndjh;
            
            private global::System.Data.DataColumn columndjrq;
            
            private global::System.Data.DataColumn columndjlb;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnfph;
            
            private global::System.Data.DataColumn columnfprq;
            
            private global::System.Data.DataColumn columnghdw;
            
            private global::System.Data.DataColumn columnshdh;
            
            private global::System.Data.DataColumn columndjsj;
            
            private global::System.Data.DataColumn columndjy;
            
            private global::System.Data.DataColumn columnywy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表DataTable() {
                this.TableName = "付款情况表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 付款情况表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 付款情况表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djhColumn {
                get {
                    return this.columndjh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djrqColumn {
                get {
                    return this.columndjrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djlbColumn {
                get {
                    return this.columndjlb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fphColumn {
                get {
                    return this.columnfph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fprqColumn {
                get {
                    return this.columnfprq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ghdwColumn {
                get {
                    return this.columnghdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shdhColumn {
                get {
                    return this.columnshdh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djsjColumn {
                get {
                    return this.columndjsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djyColumn {
                get {
                    return this.columndjy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ywyColumn {
                get {
                    return this.columnywy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表Row this[int index] {
                get {
                    return ((付款情况表Row)(this.Rows[index]));
                }
            }
            
            public event 付款情况表RowChangeEventHandler 付款情况表RowChanging;
            
            public event 付款情况表RowChangeEventHandler 付款情况表RowChanged;
            
            public event 付款情况表RowChangeEventHandler 付款情况表RowDeleting;
            
            public event 付款情况表RowChangeEventHandler 付款情况表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add付款情况表Row(付款情况表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表Row Add付款情况表Row(int xh, string djh, string djrq, string djlb, decimal jhje, string fph, string fprq, string ghdw, string shdh, string djsj, string djy, string ywy) {
                付款情况表Row row付款情况表Row = ((付款情况表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        djh,
                        djrq,
                        djlb,
                        jhje,
                        fph,
                        fprq,
                        ghdw,
                        shdh,
                        djsj,
                        djy,
                        ywy};
                row付款情况表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row付款情况表Row);
                return row付款情况表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                付款情况表DataTable cln = ((付款情况表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 付款情况表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columndjh = base.Columns["djh"];
                this.columndjrq = base.Columns["djrq"];
                this.columndjlb = base.Columns["djlb"];
                this.columnjhje = base.Columns["jhje"];
                this.columnfph = base.Columns["fph"];
                this.columnfprq = base.Columns["fprq"];
                this.columnghdw = base.Columns["ghdw"];
                this.columnshdh = base.Columns["shdh"];
                this.columndjsj = base.Columns["djsj"];
                this.columndjy = base.Columns["djy"];
                this.columnywy = base.Columns["ywy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columndjh = new global::System.Data.DataColumn("djh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjh);
                this.columndjrq = new global::System.Data.DataColumn("djrq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjrq);
                this.columndjlb = new global::System.Data.DataColumn("djlb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjlb);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnfph = new global::System.Data.DataColumn("fph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfph);
                this.columnfprq = new global::System.Data.DataColumn("fprq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfprq);
                this.columnghdw = new global::System.Data.DataColumn("ghdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnghdw);
                this.columnshdh = new global::System.Data.DataColumn("shdh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshdh);
                this.columndjsj = new global::System.Data.DataColumn("djsj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjsj);
                this.columndjy = new global::System.Data.DataColumn("djy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjy);
                this.columnywy = new global::System.Data.DataColumn("ywy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnywy);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表Row New付款情况表Row() {
                return ((付款情况表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 付款情况表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(付款情况表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.付款情况表RowChanged != null)) {
                    this.付款情况表RowChanged(this, new 付款情况表RowChangeEvent(((付款情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.付款情况表RowChanging != null)) {
                    this.付款情况表RowChanging(this, new 付款情况表RowChangeEvent(((付款情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.付款情况表RowDeleted != null)) {
                    this.付款情况表RowDeleted(this, new 付款情况表RowChangeEvent(((付款情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.付款情况表RowDeleting != null)) {
                    this.付款情况表RowDeleting(this, new 付款情况表RowChangeEvent(((付款情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove付款情况表Row(付款情况表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "付款情况表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 保管明细帐DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnrq;
            
            private global::System.Data.DataColumn columnzy;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnjfsl;
            
            private global::System.Data.DataColumn columnjfje;
            
            private global::System.Data.DataColumn columndfsl;
            
            private global::System.Data.DataColumn columndfje;
            
            private global::System.Data.DataColumn columnjysl;
            
            private global::System.Data.DataColumn columnjyje;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnjhj;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnwldw;
            
            private global::System.Data.DataColumn columnshdh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 保管明细帐DataTable() {
                this.TableName = "保管明细帐";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 保管明细帐DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 保管明细帐DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rqColumn {
                get {
                    return this.columnrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zyColumn {
                get {
                    return this.columnzy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jfslColumn {
                get {
                    return this.columnjfsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jfjeColumn {
                get {
                    return this.columnjfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dfslColumn {
                get {
                    return this.columndfsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dfjeColumn {
                get {
                    return this.columndfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyslColumn {
                get {
                    return this.columnjysl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jyjeColumn {
                get {
                    return this.columnjyje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjColumn {
                get {
                    return this.columnjhj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wldwColumn {
                get {
                    return this.columnwldw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shdhColumn {
                get {
                    return this.columnshdh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 保管明细帐Row this[int index] {
                get {
                    return ((保管明细帐Row)(this.Rows[index]));
                }
            }
            
            public event 保管明细帐RowChangeEventHandler 保管明细帐RowChanging;
            
            public event 保管明细帐RowChangeEventHandler 保管明细帐RowChanged;
            
            public event 保管明细帐RowChangeEventHandler 保管明细帐RowDeleting;
            
            public event 保管明细帐RowChangeEventHandler 保管明细帐RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add保管明细帐Row(保管明细帐Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 保管明细帐Row Add保管明细帐Row(
                        int xh, 
                        string rq, 
                        string zy, 
                        string lsj, 
                        string jfsl, 
                        string jfje, 
                        string dfsl, 
                        string dfje, 
                        string jysl, 
                        string jyje, 
                        string ypdw, 
                        string ypph, 
                        string ypxq, 
                        decimal jhj, 
                        decimal jhje, 
                        string wldw, 
                        string shdh) {
                保管明细帐Row row保管明细帐Row = ((保管明细帐Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        rq,
                        zy,
                        lsj,
                        jfsl,
                        jfje,
                        dfsl,
                        dfje,
                        jysl,
                        jyje,
                        ypdw,
                        ypph,
                        ypxq,
                        jhj,
                        jhje,
                        wldw,
                        shdh};
                row保管明细帐Row.ItemArray = columnValuesArray;
                this.Rows.Add(row保管明细帐Row);
                return row保管明细帐Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                保管明细帐DataTable cln = ((保管明细帐DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 保管明细帐DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnrq = base.Columns["rq"];
                this.columnzy = base.Columns["zy"];
                this.columnlsj = base.Columns["lsj"];
                this.columnjfsl = base.Columns["jfsl"];
                this.columnjfje = base.Columns["jfje"];
                this.columndfsl = base.Columns["dfsl"];
                this.columndfje = base.Columns["dfje"];
                this.columnjysl = base.Columns["jysl"];
                this.columnjyje = base.Columns["jyje"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnypph = base.Columns["ypph"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnjhj = base.Columns["jhj"];
                this.columnjhje = base.Columns["jhje"];
                this.columnwldw = base.Columns["wldw"];
                this.columnshdh = base.Columns["shdh"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnrq = new global::System.Data.DataColumn("rq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrq);
                this.columnzy = new global::System.Data.DataColumn("zy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzy);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnjfsl = new global::System.Data.DataColumn("jfsl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjfsl);
                this.columnjfje = new global::System.Data.DataColumn("jfje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjfje);
                this.columndfsl = new global::System.Data.DataColumn("dfsl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndfsl);
                this.columndfje = new global::System.Data.DataColumn("dfje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndfje);
                this.columnjysl = new global::System.Data.DataColumn("jysl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjysl);
                this.columnjyje = new global::System.Data.DataColumn("jyje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjyje);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnjhj = new global::System.Data.DataColumn("jhj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhj);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnwldw = new global::System.Data.DataColumn("wldw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwldw);
                this.columnshdh = new global::System.Data.DataColumn("shdh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshdh);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 保管明细帐Row New保管明细帐Row() {
                return ((保管明细帐Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 保管明细帐Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(保管明细帐Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.保管明细帐RowChanged != null)) {
                    this.保管明细帐RowChanged(this, new 保管明细帐RowChangeEvent(((保管明细帐Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.保管明细帐RowChanging != null)) {
                    this.保管明细帐RowChanging(this, new 保管明细帐RowChangeEvent(((保管明细帐Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.保管明细帐RowDeleted != null)) {
                    this.保管明细帐RowDeleted(this, new 保管明细帐RowChangeEvent(((保管明细帐Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.保管明细帐RowDeleting != null)) {
                    this.保管明细帐RowDeleting(this, new 保管明细帐RowChangeEvent(((保管明细帐Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove保管明细帐Row(保管明细帐Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "保管明细帐DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 库存情况表DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypspm;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnkcl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnhwh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 库存情况表DataTable() {
                this.TableName = "库存情况表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 库存情况表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 库存情况表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kclColumn {
                get {
                    return this.columnkcl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hwhColumn {
                get {
                    return this.columnhwh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 库存情况表Row this[int index] {
                get {
                    return ((库存情况表Row)(this.Rows[index]));
                }
            }
            
            public event 库存情况表RowChangeEventHandler 库存情况表RowChanging;
            
            public event 库存情况表RowChangeEventHandler 库存情况表RowChanged;
            
            public event 库存情况表RowChangeEventHandler 库存情况表RowDeleting;
            
            public event 库存情况表RowChangeEventHandler 库存情况表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add库存情况表Row(库存情况表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 库存情况表Row Add库存情况表Row(int xh, string ypspm, string ypgg, string sccj, decimal pfj, decimal lsj, decimal kcl, string ypdw, decimal pfje, decimal lsje, string shh, string hwh) {
                库存情况表Row row库存情况表Row = ((库存情况表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypspm,
                        ypgg,
                        sccj,
                        pfj,
                        lsj,
                        kcl,
                        ypdw,
                        pfje,
                        lsje,
                        shh,
                        hwh};
                row库存情况表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row库存情况表Row);
                return row库存情况表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                库存情况表DataTable cln = ((库存情况表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 库存情况表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypspm = base.Columns["ypspm"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnpfj = base.Columns["pfj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnkcl = base.Columns["kcl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsje = base.Columns["lsje"];
                this.columnshh = base.Columns["shh"];
                this.columnhwh = base.Columns["hwh"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnkcl = new global::System.Data.DataColumn("kcl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkcl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnhwh = new global::System.Data.DataColumn("hwh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhwh);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 库存情况表Row New库存情况表Row() {
                return ((库存情况表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 库存情况表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(库存情况表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.库存情况表RowChanged != null)) {
                    this.库存情况表RowChanged(this, new 库存情况表RowChangeEvent(((库存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.库存情况表RowChanging != null)) {
                    this.库存情况表RowChanging(this, new 库存情况表RowChangeEvent(((库存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.库存情况表RowDeleted != null)) {
                    this.库存情况表RowDeleted(this, new 库存情况表RowChangeEvent(((库存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.库存情况表RowDeleting != null)) {
                    this.库存情况表RowDeleting(this, new 库存情况表RowChangeEvent(((库存情况表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove库存情况表Row(库存情况表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "库存情况表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品失效报警DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypspm;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnkwmc;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnkcl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnshh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品失效报警DataTable() {
                this.TableName = "药品失效报警";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品失效报警DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品失效报警DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kclColumn {
                get {
                    return this.columnkcl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品失效报警Row this[int index] {
                get {
                    return ((药品失效报警Row)(this.Rows[index]));
                }
            }
            
            public event 药品失效报警RowChangeEventHandler 药品失效报警RowChanging;
            
            public event 药品失效报警RowChangeEventHandler 药品失效报警RowChanged;
            
            public event 药品失效报警RowChangeEventHandler 药品失效报警RowDeleting;
            
            public event 药品失效报警RowChangeEventHandler 药品失效报警RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品失效报警Row(药品失效报警Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品失效报警Row Add药品失效报警Row(int xh, string ypspm, string ypgg, string sccj, decimal pfj, decimal lsj, string kwmc, string ypph, string ypxq, decimal kcl, string ypdw, decimal pfje, decimal lsje, string shh) {
                药品失效报警Row row药品失效报警Row = ((药品失效报警Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypspm,
                        ypgg,
                        sccj,
                        pfj,
                        lsj,
                        kwmc,
                        ypph,
                        ypxq,
                        kcl,
                        ypdw,
                        pfje,
                        lsje,
                        shh};
                row药品失效报警Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品失效报警Row);
                return row药品失效报警Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品失效报警DataTable cln = ((药品失效报警DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品失效报警DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypspm = base.Columns["ypspm"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnpfj = base.Columns["pfj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnkwmc = base.Columns["kwmc"];
                this.columnypph = base.Columns["ypph"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnkcl = base.Columns["kcl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsje = base.Columns["lsje"];
                this.columnshh = base.Columns["shh"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnkcl = new global::System.Data.DataColumn("kcl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkcl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品失效报警Row New药品失效报警Row() {
                return ((药品失效报警Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品失效报警Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品失效报警Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品失效报警RowChanged != null)) {
                    this.药品失效报警RowChanged(this, new 药品失效报警RowChangeEvent(((药品失效报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品失效报警RowChanging != null)) {
                    this.药品失效报警RowChanging(this, new 药品失效报警RowChangeEvent(((药品失效报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品失效报警RowDeleted != null)) {
                    this.药品失效报警RowDeleted(this, new 药品失效报警RowChangeEvent(((药品失效报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品失效报警RowDeleting != null)) {
                    this.药品失效报警RowDeleting(this, new 药品失效报警RowChangeEvent(((药品失效报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品失效报警Row(药品失效报警Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品失效报警DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品高低储报警DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypspm;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnkcsxx;
            
            private global::System.Data.DataColumn columnkcl;
            
            private global::System.Data.DataColumn columngdc;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnshh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品高低储报警DataTable() {
                this.TableName = "药品高低储报警";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品高低储报警DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品高低储报警DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kcsxxColumn {
                get {
                    return this.columnkcsxx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kclColumn {
                get {
                    return this.columnkcl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gdcColumn {
                get {
                    return this.columngdc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品高低储报警Row this[int index] {
                get {
                    return ((药品高低储报警Row)(this.Rows[index]));
                }
            }
            
            public event 药品高低储报警RowChangeEventHandler 药品高低储报警RowChanging;
            
            public event 药品高低储报警RowChangeEventHandler 药品高低储报警RowChanged;
            
            public event 药品高低储报警RowChangeEventHandler 药品高低储报警RowDeleting;
            
            public event 药品高低储报警RowChangeEventHandler 药品高低储报警RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品高低储报警Row(药品高低储报警Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品高低储报警Row Add药品高低储报警Row(int xh, string ypspm, string ypgg, string sccj, decimal pfj, decimal lsj, decimal kcsxx, decimal kcl, decimal gdc, string ypdw, string shh) {
                药品高低储报警Row row药品高低储报警Row = ((药品高低储报警Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypspm,
                        ypgg,
                        sccj,
                        pfj,
                        lsj,
                        kcsxx,
                        kcl,
                        gdc,
                        ypdw,
                        shh};
                row药品高低储报警Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品高低储报警Row);
                return row药品高低储报警Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品高低储报警DataTable cln = ((药品高低储报警DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品高低储报警DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypspm = base.Columns["ypspm"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnpfj = base.Columns["pfj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnkcsxx = base.Columns["kcsxx"];
                this.columnkcl = base.Columns["kcl"];
                this.columngdc = base.Columns["gdc"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnshh = base.Columns["shh"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnkcsxx = new global::System.Data.DataColumn("kcsxx", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkcsxx);
                this.columnkcl = new global::System.Data.DataColumn("kcl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkcl);
                this.columngdc = new global::System.Data.DataColumn("gdc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngdc);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品高低储报警Row New药品高低储报警Row() {
                return ((药品高低储报警Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品高低储报警Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品高低储报警Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品高低储报警RowChanged != null)) {
                    this.药品高低储报警RowChanged(this, new 药品高低储报警RowChangeEvent(((药品高低储报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品高低储报警RowChanging != null)) {
                    this.药品高低储报警RowChanging(this, new 药品高低储报警RowChangeEvent(((药品高低储报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品高低储报警RowDeleted != null)) {
                    this.药品高低储报警RowDeleted(this, new 药品高低储报警RowChangeEvent(((药品高低储报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品高低储报警RowDeleting != null)) {
                    this.药品高低储报警RowDeleting(this, new 药品高低储报警RowChangeEvent(((药品高低储报警Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品高低储报警Row(药品高低储报警Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品高低储报警DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 进出货排名统计DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypspm;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnplce;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnjlce;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进出货排名统计DataTable() {
                this.TableName = "进出货排名统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 进出货排名统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 进出货排名统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn plceColumn {
                get {
                    return this.columnplce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进出货排名统计Row this[int index] {
                get {
                    return ((进出货排名统计Row)(this.Rows[index]));
                }
            }
            
            public event 进出货排名统计RowChangeEventHandler 进出货排名统计RowChanging;
            
            public event 进出货排名统计RowChangeEventHandler 进出货排名统计RowChanged;
            
            public event 进出货排名统计RowChangeEventHandler 进出货排名统计RowDeleting;
            
            public event 进出货排名统计RowChangeEventHandler 进出货排名统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add进出货排名统计Row(进出货排名统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进出货排名统计Row Add进出货排名统计Row(int xh, string ypspm, string ypgg, string sccj, decimal pfj, decimal lsj, decimal ypsl, string ypdw, decimal pfje, decimal lsje, decimal plce, string shh, decimal jhje, decimal jlce) {
                进出货排名统计Row row进出货排名统计Row = ((进出货排名统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypspm,
                        ypgg,
                        sccj,
                        pfj,
                        lsj,
                        ypsl,
                        ypdw,
                        pfje,
                        lsje,
                        plce,
                        shh,
                        jhje,
                        jlce};
                row进出货排名统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row进出货排名统计Row);
                return row进出货排名统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                进出货排名统计DataTable cln = ((进出货排名统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 进出货排名统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypspm = base.Columns["ypspm"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnpfj = base.Columns["pfj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsje = base.Columns["lsje"];
                this.columnplce = base.Columns["plce"];
                this.columnshh = base.Columns["shh"];
                this.columnjhje = base.Columns["jhje"];
                this.columnjlce = base.Columns["jlce"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnplce = new global::System.Data.DataColumn("plce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplce);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进出货排名统计Row New进出货排名统计Row() {
                return ((进出货排名统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 进出货排名统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(进出货排名统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.进出货排名统计RowChanged != null)) {
                    this.进出货排名统计RowChanged(this, new 进出货排名统计RowChangeEvent(((进出货排名统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.进出货排名统计RowChanging != null)) {
                    this.进出货排名统计RowChanging(this, new 进出货排名统计RowChangeEvent(((进出货排名统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.进出货排名统计RowDeleted != null)) {
                    this.进出货排名统计RowDeleted(this, new 进出货排名统计RowChangeEvent(((进出货排名统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.进出货排名统计RowDeleting != null)) {
                    this.进出货排名统计RowDeleting(this, new 进出货排名统计RowChangeEvent(((进出货排名统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove进出货排名统计Row(进出货排名统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "进出货排名统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药库调库单DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnlyyf;
            
            private global::System.Data.DataColumn columndjh;
            
            private global::System.Data.DataColumn columnyppm;
            
            private global::System.Data.DataColumn columnypspm;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnjj;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnjlce;
            
            private global::System.Data.DataColumn columnshh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药库调库单DataTable() {
                this.TableName = "药库调库单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药库调库单DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药库调库单DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lyyfColumn {
                get {
                    return this.columnlyyf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djhColumn {
                get {
                    return this.columndjh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yppmColumn {
                get {
                    return this.columnyppm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jjColumn {
                get {
                    return this.columnjj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药库调库单Row this[int index] {
                get {
                    return ((药库调库单Row)(this.Rows[index]));
                }
            }
            
            public event 药库调库单RowChangeEventHandler 药库调库单RowChanging;
            
            public event 药库调库单RowChangeEventHandler 药库调库单RowChanged;
            
            public event 药库调库单RowChangeEventHandler 药库调库单RowDeleting;
            
            public event 药库调库单RowChangeEventHandler 药库调库单RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药库调库单Row(药库调库单Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药库调库单Row Add药库调库单Row(string lyyf, long djh, string yppm, string ypspm, string ypgg, decimal ypsl, string ypdw, decimal jj, decimal jhje, decimal lsj, decimal lsje, decimal jlce, string shh) {
                药库调库单Row row药库调库单Row = ((药库调库单Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        lyyf,
                        djh,
                        yppm,
                        ypspm,
                        ypgg,
                        ypsl,
                        ypdw,
                        jj,
                        jhje,
                        lsj,
                        lsje,
                        jlce,
                        shh};
                row药库调库单Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药库调库单Row);
                return row药库调库单Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药库调库单DataTable cln = ((药库调库单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药库调库单DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnlyyf = base.Columns["lyyf"];
                this.columndjh = base.Columns["djh"];
                this.columnyppm = base.Columns["yppm"];
                this.columnypspm = base.Columns["ypspm"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnjj = base.Columns["jj"];
                this.columnjhje = base.Columns["jhje"];
                this.columnlsj = base.Columns["lsj"];
                this.columnlsje = base.Columns["lsje"];
                this.columnjlce = base.Columns["jlce"];
                this.columnshh = base.Columns["shh"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnlyyf = new global::System.Data.DataColumn("lyyf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlyyf);
                this.columndjh = new global::System.Data.DataColumn("djh", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjh);
                this.columnyppm = new global::System.Data.DataColumn("yppm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyppm);
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnjj = new global::System.Data.DataColumn("jj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjj);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药库调库单Row New药库调库单Row() {
                return ((药库调库单Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药库调库单Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药库调库单Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药库调库单RowChanged != null)) {
                    this.药库调库单RowChanged(this, new 药库调库单RowChangeEvent(((药库调库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药库调库单RowChanging != null)) {
                    this.药库调库单RowChanging(this, new 药库调库单RowChangeEvent(((药库调库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药库调库单RowDeleted != null)) {
                    this.药库调库单RowDeleted(this, new 药库调库单RowChangeEvent(((药库调库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药库调库单RowDeleting != null)) {
                    this.药库调库单RowDeleting(this, new 药库调库单RowChangeEvent(((药库调库单Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药库调库单Row(药库调库单Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药库调库单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药理分类统计汇总DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmc;
            
            private global::System.Data.DataColumn columnje;
            
            private global::System.Data.DataColumn columnbfbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药理分类统计汇总DataTable() {
                this.TableName = "药理分类统计汇总";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药理分类统计汇总DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药理分类统计汇总DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mcColumn {
                get {
                    return this.columnmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jeColumn {
                get {
                    return this.columnje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bfblColumn {
                get {
                    return this.columnbfbl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药理分类统计汇总Row this[int index] {
                get {
                    return ((药理分类统计汇总Row)(this.Rows[index]));
                }
            }
            
            public event 药理分类统计汇总RowChangeEventHandler 药理分类统计汇总RowChanging;
            
            public event 药理分类统计汇总RowChangeEventHandler 药理分类统计汇总RowChanged;
            
            public event 药理分类统计汇总RowChangeEventHandler 药理分类统计汇总RowDeleting;
            
            public event 药理分类统计汇总RowChangeEventHandler 药理分类统计汇总RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药理分类统计汇总Row(药理分类统计汇总Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药理分类统计汇总Row Add药理分类统计汇总Row(string mc, string je, string bfbl) {
                药理分类统计汇总Row row药理分类统计汇总Row = ((药理分类统计汇总Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        mc,
                        je,
                        bfbl};
                row药理分类统计汇总Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药理分类统计汇总Row);
                return row药理分类统计汇总Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药理分类统计汇总DataTable cln = ((药理分类统计汇总DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药理分类统计汇总DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmc = base.Columns["mc"];
                this.columnje = base.Columns["je"];
                this.columnbfbl = base.Columns["bfbl"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmc = new global::System.Data.DataColumn("mc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmc);
                this.columnje = new global::System.Data.DataColumn("je", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnje);
                this.columnbfbl = new global::System.Data.DataColumn("bfbl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbfbl);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药理分类统计汇总Row New药理分类统计汇总Row() {
                return ((药理分类统计汇总Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药理分类统计汇总Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药理分类统计汇总Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药理分类统计汇总RowChanged != null)) {
                    this.药理分类统计汇总RowChanged(this, new 药理分类统计汇总RowChangeEvent(((药理分类统计汇总Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药理分类统计汇总RowChanging != null)) {
                    this.药理分类统计汇总RowChanging(this, new 药理分类统计汇总RowChangeEvent(((药理分类统计汇总Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药理分类统计汇总RowDeleted != null)) {
                    this.药理分类统计汇总RowDeleted(this, new 药理分类统计汇总RowChangeEvent(((药理分类统计汇总Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药理分类统计汇总RowDeleting != null)) {
                    this.药理分类统计汇总RowDeleting(this, new 药理分类统计汇总RowChangeEvent(((药理分类统计汇总Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药理分类统计汇总Row(药理分类统计汇总Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药理分类统计汇总DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药理分类统计明细DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnpm;
            
            private global::System.Data.DataColumn columngg;
            
            private global::System.Data.DataColumn columncj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnsl;
            
            private global::System.Data.DataColumn columndw;
            
            private global::System.Data.DataColumn columnje;
            
            private global::System.Data.DataColumn columnbfbl;
            
            private global::System.Data.DataColumn columnjhj;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnypjx;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药理分类统计明细DataTable() {
                this.TableName = "药理分类统计明细";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药理分类统计明细DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药理分类统计明细DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pmColumn {
                get {
                    return this.columnpm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ggColumn {
                get {
                    return this.columngg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cjColumn {
                get {
                    return this.columncj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn slColumn {
                get {
                    return this.columnsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dwColumn {
                get {
                    return this.columndw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jeColumn {
                get {
                    return this.columnje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bfblColumn {
                get {
                    return this.columnbfbl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjColumn {
                get {
                    return this.columnjhj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypjxColumn {
                get {
                    return this.columnypjx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药理分类统计明细Row this[int index] {
                get {
                    return ((药理分类统计明细Row)(this.Rows[index]));
                }
            }
            
            public event 药理分类统计明细RowChangeEventHandler 药理分类统计明细RowChanging;
            
            public event 药理分类统计明细RowChangeEventHandler 药理分类统计明细RowChanged;
            
            public event 药理分类统计明细RowChangeEventHandler 药理分类统计明细RowDeleting;
            
            public event 药理分类统计明细RowChangeEventHandler 药理分类统计明细RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药理分类统计明细Row(药理分类统计明细Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药理分类统计明细Row Add药理分类统计明细Row(string pm, string gg, string cj, string lsj, decimal sl, string dw, decimal je, string bfbl, string jhj, decimal jhje, string ypjx) {
                药理分类统计明细Row row药理分类统计明细Row = ((药理分类统计明细Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        pm,
                        gg,
                        cj,
                        lsj,
                        sl,
                        dw,
                        je,
                        bfbl,
                        jhj,
                        jhje,
                        ypjx};
                row药理分类统计明细Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药理分类统计明细Row);
                return row药理分类统计明细Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药理分类统计明细DataTable cln = ((药理分类统计明细DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药理分类统计明细DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnpm = base.Columns["pm"];
                this.columngg = base.Columns["gg"];
                this.columncj = base.Columns["cj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnsl = base.Columns["sl"];
                this.columndw = base.Columns["dw"];
                this.columnje = base.Columns["je"];
                this.columnbfbl = base.Columns["bfbl"];
                this.columnjhj = base.Columns["jhj"];
                this.columnjhje = base.Columns["jhje"];
                this.columnypjx = base.Columns["ypjx"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnpm = new global::System.Data.DataColumn("pm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpm);
                this.columngg = new global::System.Data.DataColumn("gg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngg);
                this.columncj = new global::System.Data.DataColumn("cj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnsl = new global::System.Data.DataColumn("sl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsl);
                this.columndw = new global::System.Data.DataColumn("dw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndw);
                this.columnje = new global::System.Data.DataColumn("je", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnje);
                this.columnbfbl = new global::System.Data.DataColumn("bfbl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbfbl);
                this.columnjhj = new global::System.Data.DataColumn("jhj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhj);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnypjx = new global::System.Data.DataColumn("ypjx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypjx);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药理分类统计明细Row New药理分类统计明细Row() {
                return ((药理分类统计明细Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药理分类统计明细Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药理分类统计明细Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药理分类统计明细RowChanged != null)) {
                    this.药理分类统计明细RowChanged(this, new 药理分类统计明细RowChangeEvent(((药理分类统计明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药理分类统计明细RowChanging != null)) {
                    this.药理分类统计明细RowChanging(this, new 药理分类统计明细RowChangeEvent(((药理分类统计明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药理分类统计明细RowDeleted != null)) {
                    this.药理分类统计明细RowDeleted(this, new 药理分类统计明细RowChangeEvent(((药理分类统计明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药理分类统计明细RowDeleting != null)) {
                    this.药理分类统计明细RowDeleting(this, new 药理分类统计明细RowChangeEvent(((药理分类统计明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药理分类统计明细Row(药理分类统计明细Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药理分类统计明细DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 医生用药情况统计DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypspm;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnksmc;
            
            private global::System.Data.DataColumn columnysmc;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnxh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医生用药情况统计DataTable() {
                this.TableName = "医生用药情况统计";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 医生用药情况统计DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 医生用药情况统计DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypspmColumn {
                get {
                    return this.columnypspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ksmcColumn {
                get {
                    return this.columnksmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ysmcColumn {
                get {
                    return this.columnysmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医生用药情况统计Row this[int index] {
                get {
                    return ((医生用药情况统计Row)(this.Rows[index]));
                }
            }
            
            public event 医生用药情况统计RowChangeEventHandler 医生用药情况统计RowChanging;
            
            public event 医生用药情况统计RowChangeEventHandler 医生用药情况统计RowChanged;
            
            public event 医生用药情况统计RowChangeEventHandler 医生用药情况统计RowDeleting;
            
            public event 医生用药情况统计RowChangeEventHandler 医生用药情况统计RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add医生用药情况统计Row(医生用药情况统计Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医生用药情况统计Row Add医生用药情况统计Row(string ypmc, string ypspm, string ypgg, string sccj, decimal lsj, string ksmc, string ysmc, decimal ypsl, string ypdw, decimal lsje, int xh) {
                医生用药情况统计Row row医生用药情况统计Row = ((医生用药情况统计Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ypmc,
                        ypspm,
                        ypgg,
                        sccj,
                        lsj,
                        ksmc,
                        ysmc,
                        ypsl,
                        ypdw,
                        lsje,
                        xh};
                row医生用药情况统计Row.ItemArray = columnValuesArray;
                this.Rows.Add(row医生用药情况统计Row);
                return row医生用药情况统计Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                医生用药情况统计DataTable cln = ((医生用药情况统计DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 医生用药情况统计DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnypmc = base.Columns["ypmc"];
                this.columnypspm = base.Columns["ypspm"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnksmc = base.Columns["ksmc"];
                this.columnysmc = base.Columns["ysmc"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnlsje = base.Columns["lsje"];
                this.columnxh = base.Columns["xh"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypspm = new global::System.Data.DataColumn("ypspm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypspm);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnksmc = new global::System.Data.DataColumn("ksmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnksmc);
                this.columnysmc = new global::System.Data.DataColumn("ysmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysmc);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医生用药情况统计Row New医生用药情况统计Row() {
                return ((医生用药情况统计Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 医生用药情况统计Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(医生用药情况统计Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.医生用药情况统计RowChanged != null)) {
                    this.医生用药情况统计RowChanged(this, new 医生用药情况统计RowChangeEvent(((医生用药情况统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.医生用药情况统计RowChanging != null)) {
                    this.医生用药情况统计RowChanging(this, new 医生用药情况统计RowChangeEvent(((医生用药情况统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.医生用药情况统计RowDeleted != null)) {
                    this.医生用药情况统计RowDeleted(this, new 医生用药情况统计RowChangeEvent(((医生用药情况统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.医生用药情况统计RowDeleting != null)) {
                    this.医生用药情况统计RowDeleting(this, new 医生用药情况统计RowChangeEvent(((医生用药情况统计Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove医生用药情况统计Row(医生用药情况统计Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "医生用药情况统计DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 药品单据明细DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columnypmc;
            
            private global::System.Data.DataColumn columnypgg;
            
            private global::System.Data.DataColumn columnsccj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnypkl;
            
            private global::System.Data.DataColumn columnjhj;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnpfj;
            
            private global::System.Data.DataColumn columnpfje;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columnjlce;
            
            private global::System.Data.DataColumn columnypph;
            
            private global::System.Data.DataColumn columnypxq;
            
            private global::System.Data.DataColumn columnshh;
            
            private global::System.Data.DataColumn columnkwmc;
            
            private global::System.Data.DataColumn columnshdh;
            
            private global::System.Data.DataColumn columnpzwh;
            
            private global::System.Data.DataColumn columndjrq;
            
            private global::System.Data.DataColumn columnghdw;
            
            private global::System.Data.DataColumn columnywy;
            
            private global::System.Data.DataColumn columnfph;
            
            private global::System.Data.DataColumn columnfprq;
            
            private global::System.Data.DataColumn columndjy;
            
            private global::System.Data.DataColumn columndjh;
            
            private global::System.Data.DataColumn columntxm;
            
            private global::System.Data.DataColumn columnzbzt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品单据明细DataTable() {
                this.TableName = "药品单据明细";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品单据明细DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 药品单据明细DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypmcColumn {
                get {
                    return this.columnypmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypggColumn {
                get {
                    return this.columnypgg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sccjColumn {
                get {
                    return this.columnsccj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypklColumn {
                get {
                    return this.columnypkl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjColumn {
                get {
                    return this.columnjhj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjColumn {
                get {
                    return this.columnpfj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pfjeColumn {
                get {
                    return this.columnpfje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jlceColumn {
                get {
                    return this.columnjlce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypphColumn {
                get {
                    return this.columnypph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypxqColumn {
                get {
                    return this.columnypxq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shhColumn {
                get {
                    return this.columnshh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kwmcColumn {
                get {
                    return this.columnkwmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shdhColumn {
                get {
                    return this.columnshdh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pzwhColumn {
                get {
                    return this.columnpzwh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djrqColumn {
                get {
                    return this.columndjrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ghdwColumn {
                get {
                    return this.columnghdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ywyColumn {
                get {
                    return this.columnywy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fphColumn {
                get {
                    return this.columnfph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fprqColumn {
                get {
                    return this.columnfprq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djyColumn {
                get {
                    return this.columndjy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djhColumn {
                get {
                    return this.columndjh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn txmColumn {
                get {
                    return this.columntxm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zbztColumn {
                get {
                    return this.columnzbzt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品单据明细Row this[int index] {
                get {
                    return ((药品单据明细Row)(this.Rows[index]));
                }
            }
            
            public event 药品单据明细RowChangeEventHandler 药品单据明细RowChanging;
            
            public event 药品单据明细RowChangeEventHandler 药品单据明细RowChanged;
            
            public event 药品单据明细RowChangeEventHandler 药品单据明细RowDeleting;
            
            public event 药品单据明细RowChangeEventHandler 药品单据明细RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add药品单据明细Row(药品单据明细Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品单据明细Row Add药品单据明细Row(
                        int xh, 
                        string ypmc, 
                        string ypgg, 
                        string sccj, 
                        string ypsl, 
                        string ypdw, 
                        decimal ypkl, 
                        decimal jhj, 
                        decimal jhje, 
                        decimal pfj, 
                        decimal pfje, 
                        decimal lsj, 
                        decimal lsje, 
                        decimal jlce, 
                        string ypph, 
                        string ypxq, 
                        string shh, 
                        string kwmc, 
                        string shdh, 
                        string pzwh, 
                        string djrq, 
                        string ghdw, 
                        string ywy, 
                        string fph, 
                        string fprq, 
                        string djy, 
                        string djh, 
                        string txm, 
                        string zbzt) {
                药品单据明细Row row药品单据明细Row = ((药品单据明细Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        ypmc,
                        ypgg,
                        sccj,
                        ypsl,
                        ypdw,
                        ypkl,
                        jhj,
                        jhje,
                        pfj,
                        pfje,
                        lsj,
                        lsje,
                        jlce,
                        ypph,
                        ypxq,
                        shh,
                        kwmc,
                        shdh,
                        pzwh,
                        djrq,
                        ghdw,
                        ywy,
                        fph,
                        fprq,
                        djy,
                        djh,
                        txm,
                        zbzt};
                row药品单据明细Row.ItemArray = columnValuesArray;
                this.Rows.Add(row药品单据明细Row);
                return row药品单据明细Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                药品单据明细DataTable cln = ((药品单据明细DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 药品单据明细DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columnypmc = base.Columns["ypmc"];
                this.columnypgg = base.Columns["ypgg"];
                this.columnsccj = base.Columns["sccj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnypkl = base.Columns["ypkl"];
                this.columnjhj = base.Columns["jhj"];
                this.columnjhje = base.Columns["jhje"];
                this.columnpfj = base.Columns["pfj"];
                this.columnpfje = base.Columns["pfje"];
                this.columnlsj = base.Columns["lsj"];
                this.columnlsje = base.Columns["lsje"];
                this.columnjlce = base.Columns["jlce"];
                this.columnypph = base.Columns["ypph"];
                this.columnypxq = base.Columns["ypxq"];
                this.columnshh = base.Columns["shh"];
                this.columnkwmc = base.Columns["kwmc"];
                this.columnshdh = base.Columns["shdh"];
                this.columnpzwh = base.Columns["pzwh"];
                this.columndjrq = base.Columns["djrq"];
                this.columnghdw = base.Columns["ghdw"];
                this.columnywy = base.Columns["ywy"];
                this.columnfph = base.Columns["fph"];
                this.columnfprq = base.Columns["fprq"];
                this.columndjy = base.Columns["djy"];
                this.columndjh = base.Columns["djh"];
                this.columntxm = base.Columns["txm"];
                this.columnzbzt = base.Columns["zbzt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columnypmc = new global::System.Data.DataColumn("ypmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypmc);
                this.columnypgg = new global::System.Data.DataColumn("ypgg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypgg);
                this.columnsccj = new global::System.Data.DataColumn("sccj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsccj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnypkl = new global::System.Data.DataColumn("ypkl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypkl);
                this.columnjhj = new global::System.Data.DataColumn("jhj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhj);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnpfj = new global::System.Data.DataColumn("pfj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfj);
                this.columnpfje = new global::System.Data.DataColumn("pfje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpfje);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columnjlce = new global::System.Data.DataColumn("jlce", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjlce);
                this.columnypph = new global::System.Data.DataColumn("ypph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypph);
                this.columnypxq = new global::System.Data.DataColumn("ypxq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypxq);
                this.columnshh = new global::System.Data.DataColumn("shh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshh);
                this.columnkwmc = new global::System.Data.DataColumn("kwmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkwmc);
                this.columnshdh = new global::System.Data.DataColumn("shdh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshdh);
                this.columnpzwh = new global::System.Data.DataColumn("pzwh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpzwh);
                this.columndjrq = new global::System.Data.DataColumn("djrq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjrq);
                this.columnghdw = new global::System.Data.DataColumn("ghdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnghdw);
                this.columnywy = new global::System.Data.DataColumn("ywy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnywy);
                this.columnfph = new global::System.Data.DataColumn("fph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfph);
                this.columnfprq = new global::System.Data.DataColumn("fprq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfprq);
                this.columndjy = new global::System.Data.DataColumn("djy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjy);
                this.columndjh = new global::System.Data.DataColumn("djh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjh);
                this.columntxm = new global::System.Data.DataColumn("txm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntxm);
                this.columnzbzt = new global::System.Data.DataColumn("zbzt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzbzt);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品单据明细Row New药品单据明细Row() {
                return ((药品单据明细Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 药品单据明细Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(药品单据明细Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.药品单据明细RowChanged != null)) {
                    this.药品单据明细RowChanged(this, new 药品单据明细RowChangeEvent(((药品单据明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.药品单据明细RowChanging != null)) {
                    this.药品单据明细RowChanging(this, new 药品单据明细RowChangeEvent(((药品单据明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.药品单据明细RowDeleted != null)) {
                    this.药品单据明细RowDeleted(this, new 药品单据明细RowChangeEvent(((药品单据明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.药品单据明细RowDeleting != null)) {
                    this.药品单据明细RowDeleting(this, new 药品单据明细RowChangeEvent(((药品单据明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove药品单据明细Row(药品单据明细Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "药品单据明细DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 付款情况表明细DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnxh;
            
            private global::System.Data.DataColumn columndjh;
            
            private global::System.Data.DataColumn columndjrq;
            
            private global::System.Data.DataColumn columndjlb;
            
            private global::System.Data.DataColumn columnjhje;
            
            private global::System.Data.DataColumn columnfph;
            
            private global::System.Data.DataColumn columnfprq;
            
            private global::System.Data.DataColumn columnghdw;
            
            private global::System.Data.DataColumn columnshdh;
            
            private global::System.Data.DataColumn columndjsj;
            
            private global::System.Data.DataColumn columndjy;
            
            private global::System.Data.DataColumn columnywy;
            
            private global::System.Data.DataColumn columnpm;
            
            private global::System.Data.DataColumn columngg;
            
            private global::System.Data.DataColumn columnjhj;
            
            private global::System.Data.DataColumn columnlsj;
            
            private global::System.Data.DataColumn columnypsl;
            
            private global::System.Data.DataColumn columnypdw;
            
            private global::System.Data.DataColumn columnlsje;
            
            private global::System.Data.DataColumn columncj;
            
            private global::System.Data.DataColumn columnspm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表明细DataTable() {
                this.TableName = "付款情况表明细";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 付款情况表明细DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 付款情况表明细DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xhColumn {
                get {
                    return this.columnxh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djhColumn {
                get {
                    return this.columndjh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djrqColumn {
                get {
                    return this.columndjrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djlbColumn {
                get {
                    return this.columndjlb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjeColumn {
                get {
                    return this.columnjhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fphColumn {
                get {
                    return this.columnfph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fprqColumn {
                get {
                    return this.columnfprq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ghdwColumn {
                get {
                    return this.columnghdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shdhColumn {
                get {
                    return this.columnshdh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djsjColumn {
                get {
                    return this.columndjsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn djyColumn {
                get {
                    return this.columndjy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ywyColumn {
                get {
                    return this.columnywy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pmColumn {
                get {
                    return this.columnpm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ggColumn {
                get {
                    return this.columngg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jhjColumn {
                get {
                    return this.columnjhj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjColumn {
                get {
                    return this.columnlsj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypslColumn {
                get {
                    return this.columnypsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ypdwColumn {
                get {
                    return this.columnypdw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lsjeColumn {
                get {
                    return this.columnlsje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cjColumn {
                get {
                    return this.columncj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn spmColumn {
                get {
                    return this.columnspm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表明细Row this[int index] {
                get {
                    return ((付款情况表明细Row)(this.Rows[index]));
                }
            }
            
            public event 付款情况表明细RowChangeEventHandler 付款情况表明细RowChanging;
            
            public event 付款情况表明细RowChangeEventHandler 付款情况表明细RowChanged;
            
            public event 付款情况表明细RowChangeEventHandler 付款情况表明细RowDeleting;
            
            public event 付款情况表明细RowChangeEventHandler 付款情况表明细RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add付款情况表明细Row(付款情况表明细Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表明细Row Add付款情况表明细Row(
                        int xh, 
                        string djh, 
                        string djrq, 
                        string djlb, 
                        decimal jhje, 
                        string fph, 
                        string fprq, 
                        string ghdw, 
                        string shdh, 
                        string djsj, 
                        string djy, 
                        string ywy, 
                        string pm, 
                        string gg, 
                        string jhj, 
                        string lsj, 
                        string ypsl, 
                        string ypdw, 
                        decimal lsje, 
                        string cj, 
                        string spm) {
                付款情况表明细Row row付款情况表明细Row = ((付款情况表明细Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xh,
                        djh,
                        djrq,
                        djlb,
                        jhje,
                        fph,
                        fprq,
                        ghdw,
                        shdh,
                        djsj,
                        djy,
                        ywy,
                        pm,
                        gg,
                        jhj,
                        lsj,
                        ypsl,
                        ypdw,
                        lsje,
                        cj,
                        spm};
                row付款情况表明细Row.ItemArray = columnValuesArray;
                this.Rows.Add(row付款情况表明细Row);
                return row付款情况表明细Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                付款情况表明细DataTable cln = ((付款情况表明细DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 付款情况表明细DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnxh = base.Columns["xh"];
                this.columndjh = base.Columns["djh"];
                this.columndjrq = base.Columns["djrq"];
                this.columndjlb = base.Columns["djlb"];
                this.columnjhje = base.Columns["jhje"];
                this.columnfph = base.Columns["fph"];
                this.columnfprq = base.Columns["fprq"];
                this.columnghdw = base.Columns["ghdw"];
                this.columnshdh = base.Columns["shdh"];
                this.columndjsj = base.Columns["djsj"];
                this.columndjy = base.Columns["djy"];
                this.columnywy = base.Columns["ywy"];
                this.columnpm = base.Columns["pm"];
                this.columngg = base.Columns["gg"];
                this.columnjhj = base.Columns["jhj"];
                this.columnlsj = base.Columns["lsj"];
                this.columnypsl = base.Columns["ypsl"];
                this.columnypdw = base.Columns["ypdw"];
                this.columnlsje = base.Columns["lsje"];
                this.columncj = base.Columns["cj"];
                this.columnspm = base.Columns["spm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnxh = new global::System.Data.DataColumn("xh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxh);
                this.columndjh = new global::System.Data.DataColumn("djh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjh);
                this.columndjrq = new global::System.Data.DataColumn("djrq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjrq);
                this.columndjlb = new global::System.Data.DataColumn("djlb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjlb);
                this.columnjhje = new global::System.Data.DataColumn("jhje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhje);
                this.columnfph = new global::System.Data.DataColumn("fph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfph);
                this.columnfprq = new global::System.Data.DataColumn("fprq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfprq);
                this.columnghdw = new global::System.Data.DataColumn("ghdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnghdw);
                this.columnshdh = new global::System.Data.DataColumn("shdh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshdh);
                this.columndjsj = new global::System.Data.DataColumn("djsj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjsj);
                this.columndjy = new global::System.Data.DataColumn("djy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndjy);
                this.columnywy = new global::System.Data.DataColumn("ywy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnywy);
                this.columnpm = new global::System.Data.DataColumn("pm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpm);
                this.columngg = new global::System.Data.DataColumn("gg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngg);
                this.columnjhj = new global::System.Data.DataColumn("jhj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjhj);
                this.columnlsj = new global::System.Data.DataColumn("lsj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsj);
                this.columnypsl = new global::System.Data.DataColumn("ypsl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypsl);
                this.columnypdw = new global::System.Data.DataColumn("ypdw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnypdw);
                this.columnlsje = new global::System.Data.DataColumn("lsje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlsje);
                this.columncj = new global::System.Data.DataColumn("cj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncj);
                this.columnspm = new global::System.Data.DataColumn("spm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspm);
                this.columnypsl.Caption = "Column1";
                this.columnypdw.Caption = "Column2";
                this.columnlsje.Caption = "Column3";
                this.columncj.Caption = "Column4";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表明细Row New付款情况表明细Row() {
                return ((付款情况表明细Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 付款情况表明细Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(付款情况表明细Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.付款情况表明细RowChanged != null)) {
                    this.付款情况表明细RowChanged(this, new 付款情况表明细RowChangeEvent(((付款情况表明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.付款情况表明细RowChanging != null)) {
                    this.付款情况表明细RowChanging(this, new 付款情况表明细RowChangeEvent(((付款情况表明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.付款情况表明细RowDeleted != null)) {
                    this.付款情况表明细RowDeleted(this, new 付款情况表明细RowChangeEvent(((付款情况表明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.付款情况表明细RowDeleting != null)) {
                    this.付款情况表明细RowDeleting(this, new 付款情况表明细RowChangeEvent(((付款情况表明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove付款情况表明细Row(付款情况表明细Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "付款情况表明细DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 煎药标签DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnksmc;
            
            private global::System.Data.DataColumn columnzyh;
            
            private global::System.Data.DataColumn columnbed_no;
            
            private global::System.Data.DataColumn columnsex;
            
            private global::System.Data.DataColumn columnnl;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnsl;
            
            private global::System.Data.DataColumn columndw;
            
            private global::System.Data.DataColumn columnje;
            
            private global::System.Data.DataColumn columnfyksrq;
            
            private global::System.Data.DataColumn columnfyjsrq;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 煎药标签DataTable() {
                this.TableName = "煎药标签";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 煎药标签DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 煎药标签DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ksmcColumn {
                get {
                    return this.columnksmc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zyhColumn {
                get {
                    return this.columnzyh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bed_noColumn {
                get {
                    return this.columnbed_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sexColumn {
                get {
                    return this.columnsex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nlColumn {
                get {
                    return this.columnnl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn slColumn {
                get {
                    return this.columnsl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dwColumn {
                get {
                    return this.columndw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jeColumn {
                get {
                    return this.columnje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fyksrqColumn {
                get {
                    return this.columnfyksrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fyjsrqColumn {
                get {
                    return this.columnfyjsrq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 煎药标签Row this[int index] {
                get {
                    return ((煎药标签Row)(this.Rows[index]));
                }
            }
            
            public event 煎药标签RowChangeEventHandler 煎药标签RowChanging;
            
            public event 煎药标签RowChangeEventHandler 煎药标签RowChanged;
            
            public event 煎药标签RowChangeEventHandler 煎药标签RowDeleting;
            
            public event 煎药标签RowChangeEventHandler 煎药标签RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add煎药标签Row(煎药标签Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 煎药标签Row Add煎药标签Row(string ksmc, string zyh, string bed_no, string sex, string nl, string name, string sl, string dw, string je, string fyksrq, string fyjsrq) {
                煎药标签Row row煎药标签Row = ((煎药标签Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ksmc,
                        zyh,
                        bed_no,
                        sex,
                        nl,
                        name,
                        sl,
                        dw,
                        je,
                        fyksrq,
                        fyjsrq};
                row煎药标签Row.ItemArray = columnValuesArray;
                this.Rows.Add(row煎药标签Row);
                return row煎药标签Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                煎药标签DataTable cln = ((煎药标签DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 煎药标签DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnksmc = base.Columns["ksmc"];
                this.columnzyh = base.Columns["zyh"];
                this.columnbed_no = base.Columns["bed_no"];
                this.columnsex = base.Columns["sex"];
                this.columnnl = base.Columns["nl"];
                this.columnname = base.Columns["name"];
                this.columnsl = base.Columns["sl"];
                this.columndw = base.Columns["dw"];
                this.columnje = base.Columns["je"];
                this.columnfyksrq = base.Columns["fyksrq"];
                this.columnfyjsrq = base.Columns["fyjsrq"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnksmc = new global::System.Data.DataColumn("ksmc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnksmc);
                this.columnzyh = new global::System.Data.DataColumn("zyh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzyh);
                this.columnbed_no = new global::System.Data.DataColumn("bed_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbed_no);
                this.columnsex = new global::System.Data.DataColumn("sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsex);
                this.columnnl = new global::System.Data.DataColumn("nl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnl);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnsl = new global::System.Data.DataColumn("sl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsl);
                this.columndw = new global::System.Data.DataColumn("dw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndw);
                this.columnje = new global::System.Data.DataColumn("je", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnje);
                this.columnfyksrq = new global::System.Data.DataColumn("fyksrq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfyksrq);
                this.columnfyjsrq = new global::System.Data.DataColumn("fyjsrq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfyjsrq);
                this.columnksmc.Caption = "mc";
                this.columnzyh.Caption = "je";
                this.columnbed_no.Caption = "bfbl";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 煎药标签Row New煎药标签Row() {
                return ((煎药标签Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 煎药标签Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(煎药标签Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.煎药标签RowChanged != null)) {
                    this.煎药标签RowChanged(this, new 煎药标签RowChangeEvent(((煎药标签Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.煎药标签RowChanging != null)) {
                    this.煎药标签RowChanging(this, new 煎药标签RowChangeEvent(((煎药标签Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.煎药标签RowDeleted != null)) {
                    this.煎药标签RowDeleted(this, new 煎药标签RowChangeEvent(((煎药标签Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.煎药标签RowDeleting != null)) {
                    this.煎药标签RowDeleting(this, new 煎药标签RowChangeEvent(((煎药标签Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove煎药标签Row(煎药标签Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Dataset1 ds = new Dataset1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "煎药标签DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 采购入库单Row : global::System.Data.DataRow {
            
            private 采购入库单DataTable table采购入库单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 采购入库单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table采购入库单 = ((采购入库单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table采购入库单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypsl {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypkl {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.ypklColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“ypkl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.ypklColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhj {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.jhjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“jhj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.jhjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jlce {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shdh {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.shdhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“shdh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.shdhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pzwh {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.pzwhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“pzwh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.pzwhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gjjbyw {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.gjjbywColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“gjjbyw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.gjjbywColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal fkbl {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.fkblColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“fkbl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.fkblColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal fkje {
                get {
                    try {
                        return ((decimal)(this[this.table采购入库单.fkjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“fkje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.fkjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zbzt {
                get {
                    try {
                        return ((string)(this[this.table采购入库单.zbztColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“采购入库单”中列“zbzt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table采购入库单.zbztColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table采购入库单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table采购入库单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table采购入库单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table采购入库单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table采购入库单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table采购入库单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table采购入库单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table采购入库单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table采购入库单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table采购入库单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table采购入库单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table采购入库单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypklNull() {
                return this.IsNull(this.table采购入库单.ypklColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypklNull() {
                this[this.table采购入库单.ypklColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjNull() {
                return this.IsNull(this.table采购入库单.jhjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjNull() {
                this[this.table采购入库单.jhjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table采购入库单.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table采购入库单.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table采购入库单.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table采购入库单.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table采购入库单.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table采购入库单.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table采购入库单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table采购入库单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table采购入库单.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table采购入库单.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table采购入库单.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table采购入库单.jlceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table采购入库单.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table采购入库单.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table采购入库单.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table采购入库单.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table采购入库单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table采购入库单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table采购入库单.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table采购入库单.kwmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshdhNull() {
                return this.IsNull(this.table采购入库单.shdhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshdhNull() {
                this[this.table采购入库单.shdhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspzwhNull() {
                return this.IsNull(this.table采购入库单.pzwhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpzwhNull() {
                this[this.table采购入库单.pzwhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgjjbywNull() {
                return this.IsNull(this.table采购入库单.gjjbywColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgjjbywNull() {
                this[this.table采购入库单.gjjbywColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfkblNull() {
                return this.IsNull(this.table采购入库单.fkblColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfkblNull() {
                this[this.table采购入库单.fkblColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfkjeNull() {
                return this.IsNull(this.table采购入库单.fkjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfkjeNull() {
                this[this.table采购入库单.fkjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszbztNull() {
                return this.IsNull(this.table采购入库单.zbztColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzbztNull() {
                this[this.table采购入库单.zbztColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 普通入库单Row : global::System.Data.DataRow {
            
            private 普通入库单DataTable table普通入库单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 普通入库单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table普通入库单 = ((普通入库单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table普通入库单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal plce {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.plceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“plce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.plceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table普通入库单.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhj {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.jhjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“jhj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.jhjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jlce {
                get {
                    try {
                        return ((decimal)(this[this.table普通入库单.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“普通入库单”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table普通入库单.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table普通入库单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table普通入库单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table普通入库单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table普通入库单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table普通入库单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table普通入库单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table普通入库单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table普通入库单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table普通入库单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table普通入库单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table普通入库单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table普通入库单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table普通入库单.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table普通入库单.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table普通入库单.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table普通入库单.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table普通入库单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table普通入库单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table普通入库单.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table普通入库单.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplceNull() {
                return this.IsNull(this.table普通入库单.plceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplceNull() {
                this[this.table普通入库单.plceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table普通入库单.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table普通入库单.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table普通入库单.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table普通入库单.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table普通入库单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table普通入库单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table普通入库单.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table普通入库单.kwmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjNull() {
                return this.IsNull(this.table普通入库单.jhjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjNull() {
                this[this.table普通入库单.jhjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table普通入库单.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table普通入库单.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table普通入库单.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table普通入库单.jlceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品申请单Row : global::System.Data.DataRow {
            
            private 药品申请单DataTable table药品申请单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品申请单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品申请单 = ((药品申请单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品申请单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table药品申请单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品申请单.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table药品申请单.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品申请单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table药品申请单.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal plce {
                get {
                    try {
                        return ((decimal)(this[this.table药品申请单.plceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“plce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.plceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table药品申请单.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品申请单”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品申请单.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品申请单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品申请单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table药品申请单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table药品申请单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品申请单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品申请单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品申请单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品申请单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table药品申请单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table药品申请单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品申请单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品申请单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table药品申请单.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table药品申请单.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table药品申请单.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table药品申请单.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药品申请单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药品申请单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table药品申请单.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table药品申请单.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplceNull() {
                return this.IsNull(this.table药品申请单.plceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplceNull() {
                this[this.table药品申请单.plceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table药品申请单.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table药品申请单.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table药品申请单.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table药品申请单.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品申请单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品申请单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table药品申请单.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table药品申请单.kwmcColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品出库单Row : global::System.Data.DataRow {
            
            private 药品出库单DataTable table药品出库单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品出库单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品出库单 = ((药品出库单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品出库单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal plce {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.plceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“plce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.plceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhj {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.jhjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“jhj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.jhjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jlce {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kcl {
                get {
                    try {
                        return ((decimal)(this[this.table药品出库单.kclColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“kcl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.kclColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yppch {
                get {
                    try {
                        return ((string)(this[this.table药品出库单.yppchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品出库单”中列“yppch”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品出库单.yppchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品出库单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品出库单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table药品出库单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table药品出库单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品出库单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品出库单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品出库单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品出库单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table药品出库单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table药品出库单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品出库单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品出库单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table药品出库单.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table药品出库单.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table药品出库单.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table药品出库单.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药品出库单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药品出库单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table药品出库单.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table药品出库单.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplceNull() {
                return this.IsNull(this.table药品出库单.plceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplceNull() {
                this[this.table药品出库单.plceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table药品出库单.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table药品出库单.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table药品出库单.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table药品出库单.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品出库单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品出库单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table药品出库单.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table药品出库单.kwmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjNull() {
                return this.IsNull(this.table药品出库单.jhjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjNull() {
                this[this.table药品出库单.jhjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table药品出库单.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table药品出库单.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table药品出库单.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table药品出库单.jlceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskclNull() {
                return this.IsNull(this.table药品出库单.kclColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkclNull() {
                this[this.table药品出库单.kclColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyppchNull() {
                return this.IsNull(this.table药品出库单.yppchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyppchNull() {
                this[this.table药品出库单.yppchColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品调价单Row : global::System.Data.DataRow {
            
            private 药品调价单DataTable table药品调价单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品调价单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品调价单 = ((药品调价单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品调价单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.ypfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“ypfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.ypfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ylsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.ylsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“ylsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.ylsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal xpfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.xpfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“xpfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.xpfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal xlsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.xlsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“xlsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.xlsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfjdwcj {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.pfjdwcjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“pfjdwcj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.pfjdwcjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsjdwcj {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.lsjdwcjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“lsjdwcj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.lsjdwcjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tpfje {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.tpfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“tpfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.tpfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tlsje {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.tlsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“tlsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.tlsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tjwh {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.tjwhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“tjwh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.tjwhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zxrq {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.zxrqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“zxrq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.zxrqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal scjj {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.scjjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“scjj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.scjjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string scghdw {
                get {
                    try {
                        return ((string)(this[this.table药品调价单.scghdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“scghdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.scghdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal mrjj {
                get {
                    try {
                        return ((decimal)(this[this.table药品调价单.mrjjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品调价单”中列“mrjj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品调价单.mrjjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品调价单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品调价单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table药品调价单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table药品调价单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品调价单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品调价单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品调价单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品调价单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table药品调价单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table药品调价单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品调价单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品调价单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypfjNull() {
                return this.IsNull(this.table药品调价单.ypfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypfjNull() {
                this[this.table药品调价单.ypfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsylsjNull() {
                return this.IsNull(this.table药品调价单.ylsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetylsjNull() {
                this[this.table药品调价单.ylsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxpfjNull() {
                return this.IsNull(this.table药品调价单.xpfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxpfjNull() {
                this[this.table药品调价单.xpfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxlsjNull() {
                return this.IsNull(this.table药品调价单.xlsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxlsjNull() {
                this[this.table药品调价单.xlsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjdwcjNull() {
                return this.IsNull(this.table药品调价单.pfjdwcjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjdwcjNull() {
                this[this.table药品调价单.pfjdwcjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjdwcjNull() {
                return this.IsNull(this.table药品调价单.lsjdwcjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjdwcjNull() {
                this[this.table药品调价单.lsjdwcjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstpfjeNull() {
                return this.IsNull(this.table药品调价单.tpfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettpfjeNull() {
                this[this.table药品调价单.tpfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstlsjeNull() {
                return this.IsNull(this.table药品调价单.tlsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettlsjeNull() {
                this[this.table药品调价单.tlsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品调价单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品调价单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstjwhNull() {
                return this.IsNull(this.table药品调价单.tjwhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettjwhNull() {
                this[this.table药品调价单.tjwhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszxrqNull() {
                return this.IsNull(this.table药品调价单.zxrqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzxrqNull() {
                this[this.table药品调价单.zxrqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsscjjNull() {
                return this.IsNull(this.table药品调价单.scjjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetscjjNull() {
                this[this.table药品调价单.scjjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsscghdwNull() {
                return this.IsNull(this.table药品调价单.scghdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetscghdwNull() {
                this[this.table药品调价单.scghdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmrjjNull() {
                return this.IsNull(this.table药品调价单.mrjjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmrjjNull() {
                this[this.table药品调价单.mrjjColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 报损报溢单Row : global::System.Data.DataRow {
            
            private 报损报溢单DataTable table报损报溢单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 报损报溢单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table报损报溢单 = ((报损报溢单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table报损报溢单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal plce {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.plceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“plce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.plceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table报损报溢单.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhj {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.jhjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“jhj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.jhjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jlce {
                get {
                    try {
                        return ((decimal)(this[this.table报损报溢单.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“报损报溢单”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table报损报溢单.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table报损报溢单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table报损报溢单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table报损报溢单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table报损报溢单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table报损报溢单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table报损报溢单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table报损报溢单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table报损报溢单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table报损报溢单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table报损报溢单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table报损报溢单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table报损报溢单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table报损报溢单.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table报损报溢单.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table报损报溢单.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table报损报溢单.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table报损报溢单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table报损报溢单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table报损报溢单.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table报损报溢单.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplceNull() {
                return this.IsNull(this.table报损报溢单.plceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplceNull() {
                this[this.table报损报溢单.plceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table报损报溢单.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table报损报溢单.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table报损报溢单.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table报损报溢单.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table报损报溢单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table报损报溢单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table报损报溢单.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table报损报溢单.kwmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjNull() {
                return this.IsNull(this.table报损报溢单.jhjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjNull() {
                this[this.table报损报溢单.jhjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table报损报溢单.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table报损报溢单.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table报损报溢单.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table报损报溢单.jlceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品盘点单Row : global::System.Data.DataRow {
            
            private 药品盘点单DataTable table药品盘点单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品盘点单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品盘点单 = ((药品盘点单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品盘点单.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal zcsl {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.zcslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“zcsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.zcslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal zcje {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.zcjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“zcje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.zcjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pcsl {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.pcslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“pcsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.pcslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pcje {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.pcjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“pcje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.pcjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal yksl {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.ykslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“yksl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ykslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ykje {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.ykjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ykje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ykjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhj {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.jhjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“jhj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.jhjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jlce {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal zcjhje {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.zcjhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“zcjhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.zcjhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypjx {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.ypjxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ypjx”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ypjxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yplx {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.yplxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“yplx”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.yplxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ykjhje {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.ykjhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ykjhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ykjhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pcjhje {
                get {
                    try {
                        return ((decimal)(this[this.table药品盘点单.pcjhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“pcjhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.pcjhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yppch {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.yppchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“yppch”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.yppchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zcsl2 {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.zcsl2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“zcsl2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.zcsl2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pcsl2 {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.pcsl2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“pcsl2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.pcsl2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kfjkc {
                get {
                    try {
                        return ((string)(this[this.table药品盘点单.kfjkcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品盘点单”中列“kfjkc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品盘点单.kfjkcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品盘点单.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品盘点单.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table药品盘点单.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table药品盘点单.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品盘点单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品盘点单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品盘点单.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品盘点单.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品盘点单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品盘点单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table药品盘点单.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table药品盘点单.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药品盘点单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药品盘点单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszcslNull() {
                return this.IsNull(this.table药品盘点单.zcslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzcslNull() {
                this[this.table药品盘点单.zcslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszcjeNull() {
                return this.IsNull(this.table药品盘点单.zcjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzcjeNull() {
                this[this.table药品盘点单.zcjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspcslNull() {
                return this.IsNull(this.table药品盘点单.pcslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpcslNull() {
                this[this.table药品盘点单.pcslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspcjeNull() {
                return this.IsNull(this.table药品盘点单.pcjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpcjeNull() {
                this[this.table药品盘点单.pcjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsykslNull() {
                return this.IsNull(this.table药品盘点单.ykslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetykslNull() {
                this[this.table药品盘点单.ykslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsykjeNull() {
                return this.IsNull(this.table药品盘点单.ykjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetykjeNull() {
                this[this.table药品盘点单.ykjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品盘点单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品盘点单.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table药品盘点单.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table药品盘点单.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table药品盘点单.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table药品盘点单.kwmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjNull() {
                return this.IsNull(this.table药品盘点单.jhjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjNull() {
                this[this.table药品盘点单.jhjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table药品盘点单.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table药品盘点单.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table药品盘点单.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table药品盘点单.jlceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszcjhjeNull() {
                return this.IsNull(this.table药品盘点单.zcjhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzcjhjeNull() {
                this[this.table药品盘点单.zcjhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypjxNull() {
                return this.IsNull(this.table药品盘点单.ypjxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypjxNull() {
                this[this.table药品盘点单.ypjxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyplxNull() {
                return this.IsNull(this.table药品盘点单.yplxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyplxNull() {
                this[this.table药品盘点单.yplxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsykjhjeNull() {
                return this.IsNull(this.table药品盘点单.ykjhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetykjhjeNull() {
                this[this.table药品盘点单.ykjhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspcjhjeNull() {
                return this.IsNull(this.table药品盘点单.pcjhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpcjhjeNull() {
                this[this.table药品盘点单.pcjhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyppchNull() {
                return this.IsNull(this.table药品盘点单.yppchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyppchNull() {
                this[this.table药品盘点单.yppchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table药品盘点单.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table药品盘点单.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iszcsl2Null() {
                return this.IsNull(this.table药品盘点单.zcsl2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setzcsl2Null() {
                this[this.table药品盘点单.zcsl2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispcsl2Null() {
                return this.IsNull(this.table药品盘点单.pcsl2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpcsl2Null() {
                this[this.table药品盘点单.pcsl2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskfjkcNull() {
                return this.IsNull(this.table药品盘点单.kfjkcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkfjkcNull() {
                this[this.table药品盘点单.kfjkcColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品采购计划Row : global::System.Data.DataRow {
            
            private 药品采购计划DataTable table药品采购计划;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品采购计划Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品采购计划 = ((药品采购计划DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品采购计划.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品采购计划.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品采购计划.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal xqs {
                get {
                    try {
                        return ((decimal)(this[this.table药品采购计划.xqsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“xqs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.xqsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhs {
                get {
                    try {
                        return ((decimal)(this[this.table药品采购计划.jhsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“jhs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.jhsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ckjj {
                get {
                    try {
                        return ((decimal)(this[this.table药品采购计划.ckjjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“ckjj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.ckjjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ckkl {
                get {
                    try {
                        return ((decimal)(this[this.table药品采购计划.ckklColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“ckkl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.ckklColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ghdw {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.ghdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“ghdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.ghdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal syyl {
                get {
                    try {
                        return ((decimal)(this[this.table药品采购计划.syylColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“syyl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.syylColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jbyw {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.jbywColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“jbyw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.jbywColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hwh {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.hwhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“hwh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.hwhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bz {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.bzColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“bz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.bzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bz1 {
                get {
                    try {
                        return ((string)(this[this.table药品采购计划.bz1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品采购计划”中列“bz1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品采购计划.bz1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品采购计划.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品采购计划.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table药品采购计划.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table药品采购计划.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品采购计划.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品采购计划.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品采购计划.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品采购计划.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品采购计划.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品采购计划.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table药品采购计划.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table药品采购计划.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药品采购计划.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药品采购计划.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxqsNull() {
                return this.IsNull(this.table药品采购计划.xqsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxqsNull() {
                this[this.table药品采购计划.xqsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhsNull() {
                return this.IsNull(this.table药品采购计划.jhsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhsNull() {
                this[this.table药品采购计划.jhsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsckjjNull() {
                return this.IsNull(this.table药品采购计划.ckjjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetckjjNull() {
                this[this.table药品采购计划.ckjjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsckklNull() {
                return this.IsNull(this.table药品采购计划.ckklColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetckklNull() {
                this[this.table药品采购计划.ckklColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsghdwNull() {
                return this.IsNull(this.table药品采购计划.ghdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetghdwNull() {
                this[this.table药品采购计划.ghdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品采购计划.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品采购计划.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssyylNull() {
                return this.IsNull(this.table药品采购计划.syylColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsyylNull() {
                this[this.table药品采购计划.syylColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjbywNull() {
                return this.IsNull(this.table药品采购计划.jbywColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjbywNull() {
                this[this.table药品采购计划.jbywColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshwhNull() {
                return this.IsNull(this.table药品采购计划.hwhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethwhNull() {
                this[this.table药品采购计划.hwhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbzNull() {
                return this.IsNull(this.table药品采购计划.bzColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbzNull() {
                this[this.table药品采购计划.bzColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbz1Null() {
                return this.IsNull(this.table药品采购计划.bz1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbz1Null() {
                this[this.table药品采购计划.bz1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 进销存情况表Row : global::System.Data.DataRow {
            
            private 进销存情况表DataTable table进销存情况表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 进销存情况表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table进销存情况表 = ((进销存情况表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xmmc {
                get {
                    try {
                        return ((string)(this[this.table进销存情况表.xmmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进销存情况表”中列“xmmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进销存情况表.xmmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jhje {
                get {
                    try {
                        return ((string)(this[this.table进销存情况表.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进销存情况表”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进销存情况表.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string je {
                get {
                    try {
                        return ((string)(this[this.table进销存情况表.jeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进销存情况表”中列“je”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进销存情况表.jeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jlce {
                get {
                    try {
                        return ((string)(this[this.table进销存情况表.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进销存情况表”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进销存情况表.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jhje1 {
                get {
                    try {
                        return ((string)(this[this.table进销存情况表.jhje1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进销存情况表”中列“jhje1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进销存情况表.jhje1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string je1 {
                get {
                    try {
                        return ((string)(this[this.table进销存情况表.je1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进销存情况表”中列“je1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进销存情况表.je1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jlce1 {
                get {
                    try {
                        return ((string)(this[this.table进销存情况表.jlce1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进销存情况表”中列“jlce1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进销存情况表.jlce1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xmmc1 {
                get {
                    try {
                        return ((string)(this[this.table进销存情况表.xmmc1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进销存情况表”中列“xmmc1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进销存情况表.xmmc1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxmmcNull() {
                return this.IsNull(this.table进销存情况表.xmmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxmmcNull() {
                this[this.table进销存情况表.xmmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table进销存情况表.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table进销存情况表.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjeNull() {
                return this.IsNull(this.table进销存情况表.jeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjeNull() {
                this[this.table进销存情况表.jeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table进销存情况表.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table进销存情况表.jlceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isjhje1Null() {
                return this.IsNull(this.table进销存情况表.jhje1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setjhje1Null() {
                this[this.table进销存情况表.jhje1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isje1Null() {
                return this.IsNull(this.table进销存情况表.je1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setje1Null() {
                this[this.table进销存情况表.je1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isjlce1Null() {
                return this.IsNull(this.table进销存情况表.jlce1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setjlce1Null() {
                this[this.table进销存情况表.jlce1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isxmmc1Null() {
                return this.IsNull(this.table进销存情况表.xmmc1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setxmmc1Null() {
                this[this.table进销存情况表.xmmc1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 付款情况表Row : global::System.Data.DataRow {
            
            private 付款情况表DataTable table付款情况表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 付款情况表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table付款情况表 = ((付款情况表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table付款情况表.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djh {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.djhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“djh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.djhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djrq {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.djrqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“djrq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.djrqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djlb {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.djlbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“djlb”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.djlbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table付款情况表.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fph {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.fphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“fph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.fphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fprq {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.fprqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“fprq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.fprqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ghdw {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.ghdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“ghdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.ghdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shdh {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.shdhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“shdh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.shdhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djsj {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.djsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“djsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.djsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djy {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.djyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“djy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.djyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ywy {
                get {
                    try {
                        return ((string)(this[this.table付款情况表.ywyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表”中列“ywy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表.ywyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table付款情况表.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table付款情况表.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjhNull() {
                return this.IsNull(this.table付款情况表.djhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjhNull() {
                this[this.table付款情况表.djhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjrqNull() {
                return this.IsNull(this.table付款情况表.djrqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjrqNull() {
                this[this.table付款情况表.djrqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjlbNull() {
                return this.IsNull(this.table付款情况表.djlbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjlbNull() {
                this[this.table付款情况表.djlbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table付款情况表.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table付款情况表.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfphNull() {
                return this.IsNull(this.table付款情况表.fphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfphNull() {
                this[this.table付款情况表.fphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfprqNull() {
                return this.IsNull(this.table付款情况表.fprqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfprqNull() {
                this[this.table付款情况表.fprqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsghdwNull() {
                return this.IsNull(this.table付款情况表.ghdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetghdwNull() {
                this[this.table付款情况表.ghdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshdhNull() {
                return this.IsNull(this.table付款情况表.shdhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshdhNull() {
                this[this.table付款情况表.shdhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjsjNull() {
                return this.IsNull(this.table付款情况表.djsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjsjNull() {
                this[this.table付款情况表.djsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjyNull() {
                return this.IsNull(this.table付款情况表.djyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjyNull() {
                this[this.table付款情况表.djyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsywyNull() {
                return this.IsNull(this.table付款情况表.ywyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetywyNull() {
                this[this.table付款情况表.ywyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 保管明细帐Row : global::System.Data.DataRow {
            
            private 保管明细帐DataTable table保管明细帐;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 保管明细帐Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table保管明细帐 = ((保管明细帐DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table保管明细帐.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rq {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.rqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“rq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.rqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zy {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.zyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“zy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.zyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lsj {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jfsl {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.jfslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“jfsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.jfslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jfje {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.jfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“jfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.jfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dfsl {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.dfslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“dfsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.dfslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dfje {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.dfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“dfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.dfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jysl {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.jyslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“jysl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.jyslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jyje {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.jyjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“jyje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.jyjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhj {
                get {
                    try {
                        return ((decimal)(this[this.table保管明细帐.jhjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“jhj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.jhjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table保管明细帐.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string wldw {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.wldwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“wldw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.wldwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shdh {
                get {
                    try {
                        return ((string)(this[this.table保管明细帐.shdhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“保管明细帐”中列“shdh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table保管明细帐.shdhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table保管明细帐.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table保管明细帐.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrqNull() {
                return this.IsNull(this.table保管明细帐.rqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrqNull() {
                this[this.table保管明细帐.rqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszyNull() {
                return this.IsNull(this.table保管明细帐.zyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzyNull() {
                this[this.table保管明细帐.zyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table保管明细帐.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table保管明细帐.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjfslNull() {
                return this.IsNull(this.table保管明细帐.jfslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjfslNull() {
                this[this.table保管明细帐.jfslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjfjeNull() {
                return this.IsNull(this.table保管明细帐.jfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjfjeNull() {
                this[this.table保管明细帐.jfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdfslNull() {
                return this.IsNull(this.table保管明细帐.dfslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdfslNull() {
                this[this.table保管明细帐.dfslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdfjeNull() {
                return this.IsNull(this.table保管明细帐.dfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdfjeNull() {
                this[this.table保管明细帐.dfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyslNull() {
                return this.IsNull(this.table保管明细帐.jyslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyslNull() {
                this[this.table保管明细帐.jyslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjyjeNull() {
                return this.IsNull(this.table保管明细帐.jyjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjyjeNull() {
                this[this.table保管明细帐.jyjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table保管明细帐.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table保管明细帐.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table保管明细帐.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table保管明细帐.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table保管明细帐.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table保管明细帐.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjNull() {
                return this.IsNull(this.table保管明细帐.jhjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjNull() {
                this[this.table保管明细帐.jhjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table保管明细帐.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table保管明细帐.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswldwNull() {
                return this.IsNull(this.table保管明细帐.wldwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwldwNull() {
                this[this.table保管明细帐.wldwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshdhNull() {
                return this.IsNull(this.table保管明细帐.shdhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshdhNull() {
                this[this.table保管明细帐.shdhColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 库存情况表Row : global::System.Data.DataRow {
            
            private 库存情况表DataTable table库存情况表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 库存情况表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table库存情况表 = ((库存情况表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table库存情况表.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table库存情况表.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table库存情况表.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table库存情况表.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table库存情况表.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table库存情况表.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kcl {
                get {
                    try {
                        return ((decimal)(this[this.table库存情况表.kclColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“kcl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.kclColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table库存情况表.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table库存情况表.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table库存情况表.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table库存情况表.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hwh {
                get {
                    try {
                        return ((string)(this[this.table库存情况表.hwhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“库存情况表”中列“hwh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table库存情况表.hwhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table库存情况表.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table库存情况表.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table库存情况表.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table库存情况表.ypspmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table库存情况表.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table库存情况表.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table库存情况表.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table库存情况表.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table库存情况表.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table库存情况表.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table库存情况表.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table库存情况表.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskclNull() {
                return this.IsNull(this.table库存情况表.kclColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkclNull() {
                this[this.table库存情况表.kclColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table库存情况表.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table库存情况表.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table库存情况表.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table库存情况表.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table库存情况表.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table库存情况表.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table库存情况表.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table库存情况表.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshwhNull() {
                return this.IsNull(this.table库存情况表.hwhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethwhNull() {
                this[this.table库存情况表.hwhColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品失效报警Row : global::System.Data.DataRow {
            
            private 药品失效报警DataTable table药品失效报警;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品失效报警Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品失效报警 = ((药品失效报警DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品失效报警.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品失效报警.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品失效报警.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kcl {
                get {
                    try {
                        return ((decimal)(this[this.table药品失效报警.kclColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“kcl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.kclColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table药品失效报警.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table药品失效报警.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品失效报警.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品失效报警”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品失效报警.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品失效报警.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品失效报警.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table药品失效报警.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table药品失效报警.ypspmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品失效报警.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品失效报警.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品失效报警.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品失效报警.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table药品失效报警.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table药品失效报警.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药品失效报警.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药品失效报警.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table药品失效报警.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table药品失效报警.kwmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table药品失效报警.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table药品失效报警.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table药品失效报警.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table药品失效报警.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskclNull() {
                return this.IsNull(this.table药品失效报警.kclColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkclNull() {
                this[this.table药品失效报警.kclColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品失效报警.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品失效报警.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table药品失效报警.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table药品失效报警.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table药品失效报警.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table药品失效报警.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品失效报警.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品失效报警.shhColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品高低储报警Row : global::System.Data.DataRow {
            
            private 药品高低储报警DataTable table药品高低储报警;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品高低储报警Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品高低储报警 = ((药品高低储报警DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品高低储报警.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table药品高低储报警.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品高低储报警.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品高低储报警.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品高低储报警.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品高低储报警.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kcsxx {
                get {
                    try {
                        return ((decimal)(this[this.table药品高低储报警.kcsxxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“kcsxx”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.kcsxxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal kcl {
                get {
                    try {
                        return ((decimal)(this[this.table药品高低储报警.kclColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“kcl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.kclColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal gdc {
                get {
                    try {
                        return ((decimal)(this[this.table药品高低储报警.gdcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“gdc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.gdcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品高低储报警.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品高低储报警.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品高低储报警”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品高低储报警.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品高低储报警.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品高低储报警.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table药品高低储报警.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table药品高低储报警.ypspmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品高低储报警.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品高低储报警.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品高低储报警.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品高低储报警.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table药品高低储报警.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table药品高低储报警.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药品高低储报警.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药品高低储报警.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskcsxxNull() {
                return this.IsNull(this.table药品高低储报警.kcsxxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkcsxxNull() {
                this[this.table药品高低储报警.kcsxxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskclNull() {
                return this.IsNull(this.table药品高低储报警.kclColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkclNull() {
                this[this.table药品高低储报警.kclColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgdcNull() {
                return this.IsNull(this.table药品高低储报警.gdcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgdcNull() {
                this[this.table药品高低储报警.gdcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品高低储报警.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品高低储报警.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品高低储报警.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品高低储报警.shhColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 进出货排名统计Row : global::System.Data.DataRow {
            
            private 进出货排名统计DataTable table进出货排名统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 进出货排名统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table进出货排名统计 = ((进出货排名统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table进出货排名统计.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table进出货排名统计.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table进出货排名统计.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table进出货排名统计.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table进出货排名统计.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table进出货排名统计.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table进出货排名统计.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table进出货排名统计.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table进出货排名统计.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table进出货排名统计.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal plce {
                get {
                    try {
                        return ((decimal)(this[this.table进出货排名统计.plceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“plce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.plceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table进出货排名统计.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table进出货排名统计.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jlce {
                get {
                    try {
                        return ((decimal)(this[this.table进出货排名统计.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“进出货排名统计”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table进出货排名统计.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table进出货排名统计.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table进出货排名统计.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table进出货排名统计.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table进出货排名统计.ypspmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table进出货排名统计.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table进出货排名统计.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table进出货排名统计.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table进出货排名统计.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table进出货排名统计.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table进出货排名统计.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table进出货排名统计.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table进出货排名统计.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table进出货排名统计.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table进出货排名统计.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table进出货排名统计.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table进出货排名统计.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table进出货排名统计.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table进出货排名统计.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table进出货排名统计.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table进出货排名统计.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplceNull() {
                return this.IsNull(this.table进出货排名统计.plceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplceNull() {
                this[this.table进出货排名统计.plceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table进出货排名统计.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table进出货排名统计.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table进出货排名统计.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table进出货排名统计.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table进出货排名统计.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table进出货排名统计.jlceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药库调库单Row : global::System.Data.DataRow {
            
            private 药库调库单DataTable table药库调库单;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药库调库单Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药库调库单 = ((药库调库单DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lyyf {
                get {
                    try {
                        return ((string)(this[this.table药库调库单.lyyfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药库调库单”中列“lyyf”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药库调库单.lyyfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long djh {
                get {
                    try {
                        return ((long)(this[this.table药库调库单.djhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药库调库单”中列“djh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药库调库单.djhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yppm {
                get {
                    try {
                        return ((string)(this[this.table药库调库单.yppmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药库调库单”中列“yppm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药库调库单.yppmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table药库调库单.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药库调库单”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药库调库单.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药库调库单.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药库调库单”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药库调库单.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table药库调库单.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药库调库单”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药库调库单.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药库调库单.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药库调库单”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药库调库单.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jj {
                get {
                    try {
                        return ((decimal)(this[this.table药库调库单.jjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药库调库单”中列“jj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药库调库单.jjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table药库调库单.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药库调库单”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药库调库单.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table药库调库单.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药库调库单”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药库调库单.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table药库调库单.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药库调库单”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药库调库单.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jlce {
                get {
                    try {
                        return ((decimal)(this[this.table药库调库单.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药库调库单”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药库调库单.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药库调库单.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药库调库单”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药库调库单.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslyyfNull() {
                return this.IsNull(this.table药库调库单.lyyfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlyyfNull() {
                this[this.table药库调库单.lyyfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjhNull() {
                return this.IsNull(this.table药库调库单.djhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjhNull() {
                this[this.table药库调库单.djhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyppmNull() {
                return this.IsNull(this.table药库调库单.yppmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyppmNull() {
                this[this.table药库调库单.yppmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table药库调库单.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table药库调库单.ypspmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药库调库单.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药库调库单.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table药库调库单.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table药库调库单.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药库调库单.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药库调库单.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjjNull() {
                return this.IsNull(this.table药库调库单.jjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjjNull() {
                this[this.table药库调库单.jjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table药库调库单.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table药库调库单.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药库调库单.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药库调库单.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table药库调库单.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table药库调库单.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table药库调库单.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table药库调库单.jlceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药库调库单.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药库调库单.shhColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药理分类统计汇总Row : global::System.Data.DataRow {
            
            private 药理分类统计汇总DataTable table药理分类统计汇总;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药理分类统计汇总Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药理分类统计汇总 = ((药理分类统计汇总DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mc {
                get {
                    try {
                        return ((string)(this[this.table药理分类统计汇总.mcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药理分类统计汇总”中列“mc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药理分类统计汇总.mcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string je {
                get {
                    try {
                        return ((string)(this[this.table药理分类统计汇总.jeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药理分类统计汇总”中列“je”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药理分类统计汇总.jeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bfbl {
                get {
                    try {
                        return ((string)(this[this.table药理分类统计汇总.bfblColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药理分类统计汇总”中列“bfbl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药理分类统计汇总.bfblColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmcNull() {
                return this.IsNull(this.table药理分类统计汇总.mcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmcNull() {
                this[this.table药理分类统计汇总.mcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjeNull() {
                return this.IsNull(this.table药理分类统计汇总.jeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjeNull() {
                this[this.table药理分类统计汇总.jeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbfblNull() {
                return this.IsNull(this.table药理分类统计汇总.bfblColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbfblNull() {
                this[this.table药理分类统计汇总.bfblColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药理分类统计明细Row : global::System.Data.DataRow {
            
            private 药理分类统计明细DataTable table药理分类统计明细;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药理分类统计明细Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药理分类统计明细 = ((药理分类统计明细DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pm {
                get {
                    try {
                        return ((string)(this[this.table药理分类统计明细.pmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药理分类统计明细”中列“pm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药理分类统计明细.pmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gg {
                get {
                    try {
                        return ((string)(this[this.table药理分类统计明细.ggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药理分类统计明细”中列“gg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药理分类统计明细.ggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cj {
                get {
                    try {
                        return ((string)(this[this.table药理分类统计明细.cjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药理分类统计明细”中列“cj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药理分类统计明细.cjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lsj {
                get {
                    try {
                        return ((string)(this[this.table药理分类统计明细.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药理分类统计明细”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药理分类统计明细.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal sl {
                get {
                    try {
                        return ((decimal)(this[this.table药理分类统计明细.slColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药理分类统计明细”中列“sl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药理分类统计明细.slColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dw {
                get {
                    try {
                        return ((string)(this[this.table药理分类统计明细.dwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药理分类统计明细”中列“dw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药理分类统计明细.dwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal je {
                get {
                    try {
                        return ((decimal)(this[this.table药理分类统计明细.jeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药理分类统计明细”中列“je”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药理分类统计明细.jeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bfbl {
                get {
                    try {
                        return ((string)(this[this.table药理分类统计明细.bfblColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药理分类统计明细”中列“bfbl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药理分类统计明细.bfblColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jhj {
                get {
                    try {
                        return ((string)(this[this.table药理分类统计明细.jhjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药理分类统计明细”中列“jhj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药理分类统计明细.jhjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table药理分类统计明细.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药理分类统计明细”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药理分类统计明细.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypjx {
                get {
                    try {
                        return ((string)(this[this.table药理分类统计明细.ypjxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药理分类统计明细”中列“ypjx”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药理分类统计明细.ypjxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspmNull() {
                return this.IsNull(this.table药理分类统计明细.pmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpmNull() {
                this[this.table药理分类统计明细.pmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsggNull() {
                return this.IsNull(this.table药理分类统计明细.ggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetggNull() {
                this[this.table药理分类统计明细.ggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscjNull() {
                return this.IsNull(this.table药理分类统计明细.cjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcjNull() {
                this[this.table药理分类统计明细.cjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药理分类统计明细.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药理分类统计明细.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsslNull() {
                return this.IsNull(this.table药理分类统计明细.slColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetslNull() {
                this[this.table药理分类统计明细.slColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdwNull() {
                return this.IsNull(this.table药理分类统计明细.dwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdwNull() {
                this[this.table药理分类统计明细.dwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjeNull() {
                return this.IsNull(this.table药理分类统计明细.jeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjeNull() {
                this[this.table药理分类统计明细.jeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbfblNull() {
                return this.IsNull(this.table药理分类统计明细.bfblColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbfblNull() {
                this[this.table药理分类统计明细.bfblColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjNull() {
                return this.IsNull(this.table药理分类统计明细.jhjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjNull() {
                this[this.table药理分类统计明细.jhjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table药理分类统计明细.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table药理分类统计明细.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypjxNull() {
                return this.IsNull(this.table药理分类统计明细.ypjxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypjxNull() {
                this[this.table药理分类统计明细.ypjxColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 医生用药情况统计Row : global::System.Data.DataRow {
            
            private 医生用药情况统计DataTable table医生用药情况统计;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 医生用药情况统计Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table医生用药情况统计 = ((医生用药情况统计DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table医生用药情况统计.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医生用药情况统计”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医生用药情况统计.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypspm {
                get {
                    try {
                        return ((string)(this[this.table医生用药情况统计.ypspmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医生用药情况统计”中列“ypspm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医生用药情况统计.ypspmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table医生用药情况统计.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医生用药情况统计”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医生用药情况统计.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table医生用药情况统计.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医生用药情况统计”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医生用药情况统计.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table医生用药情况统计.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医生用药情况统计”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医生用药情况统计.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ksmc {
                get {
                    try {
                        return ((string)(this[this.table医生用药情况统计.ksmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医生用药情况统计”中列“ksmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医生用药情况统计.ksmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ysmc {
                get {
                    try {
                        return ((string)(this[this.table医生用药情况统计.ysmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医生用药情况统计”中列“ysmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医生用药情况统计.ysmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypsl {
                get {
                    try {
                        return ((decimal)(this[this.table医生用药情况统计.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医生用药情况统计”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医生用药情况统计.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table医生用药情况统计.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医生用药情况统计”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医生用药情况统计.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table医生用药情况统计.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医生用药情况统计”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医生用药情况统计.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table医生用药情况统计.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“医生用药情况统计”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table医生用药情况统计.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table医生用药情况统计.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table医生用药情况统计.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypspmNull() {
                return this.IsNull(this.table医生用药情况统计.ypspmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypspmNull() {
                this[this.table医生用药情况统计.ypspmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table医生用药情况统计.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table医生用药情况统计.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table医生用药情况统计.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table医生用药情况统计.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table医生用药情况统计.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table医生用药情况统计.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsksmcNull() {
                return this.IsNull(this.table医生用药情况统计.ksmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetksmcNull() {
                this[this.table医生用药情况统计.ksmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsysmcNull() {
                return this.IsNull(this.table医生用药情况统计.ysmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetysmcNull() {
                this[this.table医生用药情况统计.ysmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table医生用药情况统计.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table医生用药情况统计.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table医生用药情况统计.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table医生用药情况统计.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table医生用药情况统计.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table医生用药情况统计.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table医生用药情况统计.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table医生用药情况统计.xhColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 药品单据明细Row : global::System.Data.DataRow {
            
            private 药品单据明细DataTable table药品单据明细;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 药品单据明细Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table药品单据明细 = ((药品单据明细DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table药品单据明细.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypmc {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.ypmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“ypmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.ypmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypgg {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.ypggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“ypgg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.ypggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sccj {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.sccjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“sccj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.sccjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypsl {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ypkl {
                get {
                    try {
                        return ((decimal)(this[this.table药品单据明细.ypklColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“ypkl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.ypklColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhj {
                get {
                    try {
                        return ((decimal)(this[this.table药品单据明细.jhjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“jhj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.jhjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table药品单据明细.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfj {
                get {
                    try {
                        return ((decimal)(this[this.table药品单据明细.pfjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“pfj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.pfjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal pfje {
                get {
                    try {
                        return ((decimal)(this[this.table药品单据明细.pfjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“pfje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.pfjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsj {
                get {
                    try {
                        return ((decimal)(this[this.table药品单据明细.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table药品单据明细.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jlce {
                get {
                    try {
                        return ((decimal)(this[this.table药品单据明细.jlceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“jlce”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.jlceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypph {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.ypphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“ypph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.ypphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypxq {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.ypxqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“ypxq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.ypxqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shh {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.shhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“shh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.shhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kwmc {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.kwmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“kwmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.kwmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shdh {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.shdhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“shdh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.shdhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pzwh {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.pzwhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“pzwh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.pzwhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djrq {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.djrqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“djrq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.djrqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ghdw {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.ghdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“ghdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.ghdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ywy {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.ywyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“ywy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.ywyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fph {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.fphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“fph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.fphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fprq {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.fprqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“fprq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.fprqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djy {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.djyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“djy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.djyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djh {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.djhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“djh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.djhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string txm {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.txmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“txm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.txmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zbzt {
                get {
                    try {
                        return ((string)(this[this.table药品单据明细.zbztColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“药品单据明细”中列“zbzt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table药品单据明细.zbztColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table药品单据明细.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table药品单据明细.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypmcNull() {
                return this.IsNull(this.table药品单据明细.ypmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypmcNull() {
                this[this.table药品单据明细.ypmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypggNull() {
                return this.IsNull(this.table药品单据明细.ypggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypggNull() {
                this[this.table药品单据明细.ypggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssccjNull() {
                return this.IsNull(this.table药品单据明细.sccjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsccjNull() {
                this[this.table药品单据明细.sccjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table药品单据明细.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table药品单据明细.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table药品单据明细.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table药品单据明细.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypklNull() {
                return this.IsNull(this.table药品单据明细.ypklColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypklNull() {
                this[this.table药品单据明细.ypklColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjNull() {
                return this.IsNull(this.table药品单据明细.jhjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjNull() {
                this[this.table药品单据明细.jhjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table药品单据明细.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table药品单据明细.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjNull() {
                return this.IsNull(this.table药品单据明细.pfjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjNull() {
                this[this.table药品单据明细.pfjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspfjeNull() {
                return this.IsNull(this.table药品单据明细.pfjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpfjeNull() {
                this[this.table药品单据明细.pfjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table药品单据明细.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table药品单据明细.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table药品单据明细.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table药品单据明细.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjlceNull() {
                return this.IsNull(this.table药品单据明细.jlceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjlceNull() {
                this[this.table药品单据明细.jlceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypphNull() {
                return this.IsNull(this.table药品单据明细.ypphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypphNull() {
                this[this.table药品单据明细.ypphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypxqNull() {
                return this.IsNull(this.table药品单据明细.ypxqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypxqNull() {
                this[this.table药品单据明细.ypxqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshhNull() {
                return this.IsNull(this.table药品单据明细.shhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshhNull() {
                this[this.table药品单据明细.shhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskwmcNull() {
                return this.IsNull(this.table药品单据明细.kwmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkwmcNull() {
                this[this.table药品单据明细.kwmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshdhNull() {
                return this.IsNull(this.table药品单据明细.shdhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshdhNull() {
                this[this.table药品单据明细.shdhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspzwhNull() {
                return this.IsNull(this.table药品单据明细.pzwhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpzwhNull() {
                this[this.table药品单据明细.pzwhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjrqNull() {
                return this.IsNull(this.table药品单据明细.djrqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjrqNull() {
                this[this.table药品单据明细.djrqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsghdwNull() {
                return this.IsNull(this.table药品单据明细.ghdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetghdwNull() {
                this[this.table药品单据明细.ghdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsywyNull() {
                return this.IsNull(this.table药品单据明细.ywyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetywyNull() {
                this[this.table药品单据明细.ywyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfphNull() {
                return this.IsNull(this.table药品单据明细.fphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfphNull() {
                this[this.table药品单据明细.fphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfprqNull() {
                return this.IsNull(this.table药品单据明细.fprqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfprqNull() {
                this[this.table药品单据明细.fprqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjyNull() {
                return this.IsNull(this.table药品单据明细.djyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjyNull() {
                this[this.table药品单据明细.djyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjhNull() {
                return this.IsNull(this.table药品单据明细.djhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjhNull() {
                this[this.table药品单据明细.djhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstxmNull() {
                return this.IsNull(this.table药品单据明细.txmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettxmNull() {
                this[this.table药品单据明细.txmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszbztNull() {
                return this.IsNull(this.table药品单据明细.zbztColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzbztNull() {
                this[this.table药品单据明细.zbztColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 付款情况表明细Row : global::System.Data.DataRow {
            
            private 付款情况表明细DataTable table付款情况表明细;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 付款情况表明细Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table付款情况表明细 = ((付款情况表明细DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xh {
                get {
                    try {
                        return ((int)(this[this.table付款情况表明细.xhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“xh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.xhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djh {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.djhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“djh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.djhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djrq {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.djrqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“djrq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.djrqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djlb {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.djlbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“djlb”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.djlbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal jhje {
                get {
                    try {
                        return ((decimal)(this[this.table付款情况表明细.jhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“jhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.jhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fph {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.fphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“fph”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.fphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fprq {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.fprqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“fprq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.fprqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ghdw {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.ghdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“ghdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.ghdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shdh {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.shdhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“shdh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.shdhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djsj {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.djsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“djsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.djsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string djy {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.djyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“djy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.djyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ywy {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.ywyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“ywy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.ywyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pm {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.pmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“pm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.pmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gg {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.ggColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“gg”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.ggColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jhj {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.jhjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“jhj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.jhjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lsj {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.lsjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“lsj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.lsjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypsl {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.ypslColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“ypsl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.ypslColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ypdw {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.ypdwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“ypdw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.ypdwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lsje {
                get {
                    try {
                        return ((decimal)(this[this.table付款情况表明细.lsjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“lsje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.lsjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cj {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.cjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“cj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.cjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string spm {
                get {
                    try {
                        return ((string)(this[this.table付款情况表明细.spmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“付款情况表明细”中列“spm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table付款情况表明细.spmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxhNull() {
                return this.IsNull(this.table付款情况表明细.xhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxhNull() {
                this[this.table付款情况表明细.xhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjhNull() {
                return this.IsNull(this.table付款情况表明细.djhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjhNull() {
                this[this.table付款情况表明细.djhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjrqNull() {
                return this.IsNull(this.table付款情况表明细.djrqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjrqNull() {
                this[this.table付款情况表明细.djrqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjlbNull() {
                return this.IsNull(this.table付款情况表明细.djlbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjlbNull() {
                this[this.table付款情况表明细.djlbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjeNull() {
                return this.IsNull(this.table付款情况表明细.jhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjeNull() {
                this[this.table付款情况表明细.jhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfphNull() {
                return this.IsNull(this.table付款情况表明细.fphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfphNull() {
                this[this.table付款情况表明细.fphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfprqNull() {
                return this.IsNull(this.table付款情况表明细.fprqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfprqNull() {
                this[this.table付款情况表明细.fprqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsghdwNull() {
                return this.IsNull(this.table付款情况表明细.ghdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetghdwNull() {
                this[this.table付款情况表明细.ghdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshdhNull() {
                return this.IsNull(this.table付款情况表明细.shdhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshdhNull() {
                this[this.table付款情况表明细.shdhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjsjNull() {
                return this.IsNull(this.table付款情况表明细.djsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjsjNull() {
                this[this.table付款情况表明细.djsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdjyNull() {
                return this.IsNull(this.table付款情况表明细.djyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdjyNull() {
                this[this.table付款情况表明细.djyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsywyNull() {
                return this.IsNull(this.table付款情况表明细.ywyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetywyNull() {
                this[this.table付款情况表明细.ywyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspmNull() {
                return this.IsNull(this.table付款情况表明细.pmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpmNull() {
                this[this.table付款情况表明细.pmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsggNull() {
                return this.IsNull(this.table付款情况表明细.ggColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetggNull() {
                this[this.table付款情况表明细.ggColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjhjNull() {
                return this.IsNull(this.table付款情况表明细.jhjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjhjNull() {
                this[this.table付款情况表明细.jhjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjNull() {
                return this.IsNull(this.table付款情况表明细.lsjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjNull() {
                this[this.table付款情况表明细.lsjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypslNull() {
                return this.IsNull(this.table付款情况表明细.ypslColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypslNull() {
                this[this.table付款情况表明细.ypslColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsypdwNull() {
                return this.IsNull(this.table付款情况表明细.ypdwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetypdwNull() {
                this[this.table付款情况表明细.ypdwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslsjeNull() {
                return this.IsNull(this.table付款情况表明细.lsjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlsjeNull() {
                this[this.table付款情况表明细.lsjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscjNull() {
                return this.IsNull(this.table付款情况表明细.cjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcjNull() {
                this[this.table付款情况表明细.cjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsspmNull() {
                return this.IsNull(this.table付款情况表明细.spmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetspmNull() {
                this[this.table付款情况表明细.spmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 煎药标签Row : global::System.Data.DataRow {
            
            private 煎药标签DataTable table煎药标签;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 煎药标签Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table煎药标签 = ((煎药标签DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ksmc {
                get {
                    try {
                        return ((string)(this[this.table煎药标签.ksmcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“煎药标签”中列“ksmc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table煎药标签.ksmcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zyh {
                get {
                    try {
                        return ((string)(this[this.table煎药标签.zyhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“煎药标签”中列“zyh”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table煎药标签.zyhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bed_no {
                get {
                    try {
                        return ((string)(this[this.table煎药标签.bed_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“煎药标签”中列“bed_no”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table煎药标签.bed_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sex {
                get {
                    try {
                        return ((string)(this[this.table煎药标签.sexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“煎药标签”中列“sex”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table煎药标签.sexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nl {
                get {
                    try {
                        return ((string)(this[this.table煎药标签.nlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“煎药标签”中列“nl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table煎药标签.nlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.table煎药标签.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“煎药标签”中列“name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table煎药标签.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sl {
                get {
                    try {
                        return ((string)(this[this.table煎药标签.slColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“煎药标签”中列“sl”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table煎药标签.slColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dw {
                get {
                    try {
                        return ((string)(this[this.table煎药标签.dwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“煎药标签”中列“dw”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table煎药标签.dwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string je {
                get {
                    try {
                        return ((string)(this[this.table煎药标签.jeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“煎药标签”中列“je”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table煎药标签.jeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fyksrq {
                get {
                    try {
                        return ((string)(this[this.table煎药标签.fyksrqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“煎药标签”中列“fyksrq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table煎药标签.fyksrqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fyjsrq {
                get {
                    try {
                        return ((string)(this[this.table煎药标签.fyjsrqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“煎药标签”中列“fyjsrq”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table煎药标签.fyjsrqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsksmcNull() {
                return this.IsNull(this.table煎药标签.ksmcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetksmcNull() {
                this[this.table煎药标签.ksmcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszyhNull() {
                return this.IsNull(this.table煎药标签.zyhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzyhNull() {
                this[this.table煎药标签.zyhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbed_noNull() {
                return this.IsNull(this.table煎药标签.bed_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbed_noNull() {
                this[this.table煎药标签.bed_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssexNull() {
                return this.IsNull(this.table煎药标签.sexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsexNull() {
                this[this.table煎药标签.sexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnlNull() {
                return this.IsNull(this.table煎药标签.nlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnlNull() {
                this[this.table煎药标签.nlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.table煎药标签.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.table煎药标签.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsslNull() {
                return this.IsNull(this.table煎药标签.slColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetslNull() {
                this[this.table煎药标签.slColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdwNull() {
                return this.IsNull(this.table煎药标签.dwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdwNull() {
                this[this.table煎药标签.dwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjeNull() {
                return this.IsNull(this.table煎药标签.jeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjeNull() {
                this[this.table煎药标签.jeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfyksrqNull() {
                return this.IsNull(this.table煎药标签.fyksrqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfyksrqNull() {
                this[this.table煎药标签.fyksrqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfyjsrqNull() {
                return this.IsNull(this.table煎药标签.fyjsrqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfyjsrqNull() {
                this[this.table煎药标签.fyjsrqColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 采购入库单RowChangeEvent : global::System.EventArgs {
            
            private 采购入库单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 采购入库单RowChangeEvent(采购入库单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 采购入库单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 普通入库单RowChangeEvent : global::System.EventArgs {
            
            private 普通入库单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 普通入库单RowChangeEvent(普通入库单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 普通入库单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品申请单RowChangeEvent : global::System.EventArgs {
            
            private 药品申请单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品申请单RowChangeEvent(药品申请单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品申请单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品出库单RowChangeEvent : global::System.EventArgs {
            
            private 药品出库单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品出库单RowChangeEvent(药品出库单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品出库单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品调价单RowChangeEvent : global::System.EventArgs {
            
            private 药品调价单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品调价单RowChangeEvent(药品调价单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品调价单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 报损报溢单RowChangeEvent : global::System.EventArgs {
            
            private 报损报溢单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 报损报溢单RowChangeEvent(报损报溢单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 报损报溢单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品盘点单RowChangeEvent : global::System.EventArgs {
            
            private 药品盘点单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品盘点单RowChangeEvent(药品盘点单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品盘点单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品采购计划RowChangeEvent : global::System.EventArgs {
            
            private 药品采购计划Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品采购计划RowChangeEvent(药品采购计划Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品采购计划Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 进销存情况表RowChangeEvent : global::System.EventArgs {
            
            private 进销存情况表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进销存情况表RowChangeEvent(进销存情况表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进销存情况表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 付款情况表RowChangeEvent : global::System.EventArgs {
            
            private 付款情况表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表RowChangeEvent(付款情况表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 保管明细帐RowChangeEvent : global::System.EventArgs {
            
            private 保管明细帐Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 保管明细帐RowChangeEvent(保管明细帐Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 保管明细帐Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 库存情况表RowChangeEvent : global::System.EventArgs {
            
            private 库存情况表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 库存情况表RowChangeEvent(库存情况表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 库存情况表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品失效报警RowChangeEvent : global::System.EventArgs {
            
            private 药品失效报警Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品失效报警RowChangeEvent(药品失效报警Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品失效报警Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品高低储报警RowChangeEvent : global::System.EventArgs {
            
            private 药品高低储报警Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品高低储报警RowChangeEvent(药品高低储报警Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品高低储报警Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 进出货排名统计RowChangeEvent : global::System.EventArgs {
            
            private 进出货排名统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进出货排名统计RowChangeEvent(进出货排名统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 进出货排名统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药库调库单RowChangeEvent : global::System.EventArgs {
            
            private 药库调库单Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药库调库单RowChangeEvent(药库调库单Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药库调库单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药理分类统计汇总RowChangeEvent : global::System.EventArgs {
            
            private 药理分类统计汇总Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药理分类统计汇总RowChangeEvent(药理分类统计汇总Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药理分类统计汇总Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药理分类统计明细RowChangeEvent : global::System.EventArgs {
            
            private 药理分类统计明细Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药理分类统计明细RowChangeEvent(药理分类统计明细Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药理分类统计明细Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 医生用药情况统计RowChangeEvent : global::System.EventArgs {
            
            private 医生用药情况统计Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医生用药情况统计RowChangeEvent(医生用药情况统计Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 医生用药情况统计Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 药品单据明细RowChangeEvent : global::System.EventArgs {
            
            private 药品单据明细Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品单据明细RowChangeEvent(药品单据明细Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 药品单据明细Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 付款情况表明细RowChangeEvent : global::System.EventArgs {
            
            private 付款情况表明细Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表明细RowChangeEvent(付款情况表明细Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 付款情况表明细Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 煎药标签RowChangeEvent : global::System.EventArgs {
            
            private 煎药标签Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 煎药标签RowChangeEvent(煎药标签Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 煎药标签Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591