//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5466
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.5466 版自动生成。
// 
#pragma warning disable 1591

namespace ts_yf_mzkf.MZKF {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Net;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="getHisInfoToWillachSoapBinding", Namespace="http://willach.hrwms.org/")]
    public partial class getHisInfoToWillach : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TransPrescSignDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendDrguInfoWillachMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback geStockQueryToWillachOperationCompleted;
        
        private System.Threading.SendOrPostCallback hisPrescPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback drugStorageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallgetHisInfoToWillachOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransHisDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback endSendMedToWillachOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMedToWillachOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public getHisInfoToWillach() {
            this.Url = global::ts_yf_mzkf.Properties.Settings.Default.ts_yf_mzkf_WebReference_getHisInfoToWillach;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TransPrescSignDataCompletedEventHandler TransPrescSignDataCompleted;
        
        /// <remarks/>
        public event sendDrguInfoWillachMachineCompletedEventHandler sendDrguInfoWillachMachineCompleted;
        
        /// <remarks/>
        public event geStockQueryToWillachCompletedEventHandler geStockQueryToWillachCompleted;
        
        /// <remarks/>
        public event hisPrescPrintCompletedEventHandler hisPrescPrintCompleted;
        
        /// <remarks/>
        public event drugStorageCompletedEventHandler drugStorageCompleted;
        
        /// <remarks/>
        public event CallgetHisInfoToWillachCompletedEventHandler CallgetHisInfoToWillachCompleted;
        
        /// <remarks/>
        public event TransHisDataCompletedEventHandler TransHisDataCompleted;
        
        /// <remarks/>
        public event endSendMedToWillachCompletedEventHandler endSendMedToWillachCompleted;
        
        /// <remarks/>
        public event sendMedToWillachCompletedEventHandler sendMedToWillachCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.resolveXml.hrwms.org/", ResponseNamespace="http://service.resolveXml.hrwms.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TransPrescSignData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("TransPrescSignData", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransPrescSignDataAsync(string arg0) {
            this.TransPrescSignDataAsync(arg0, null);
        }
        
        /// <remarks/>
        public void TransPrescSignDataAsync(string arg0, object userState) {
            if ((this.TransPrescSignDataOperationCompleted == null)) {
                this.TransPrescSignDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransPrescSignDataOperationCompleted);
            }
            this.InvokeAsync("TransPrescSignData", new object[] {
                        arg0}, this.TransPrescSignDataOperationCompleted, userState);
        }
        
        private void OnTransPrescSignDataOperationCompleted(object arg) {
            if ((this.TransPrescSignDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransPrescSignDataCompleted(this, new TransPrescSignDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.resolveXml.hrwms.org/", ResponseNamespace="http://service.resolveXml.hrwms.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sendDrguInfoWillachMachine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("sendDrguInfoWillachMachine", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendDrguInfoWillachMachineAsync(string arg0) {
            this.sendDrguInfoWillachMachineAsync(arg0, null);
        }
        
        /// <remarks/>
        public void sendDrguInfoWillachMachineAsync(string arg0, object userState) {
            if ((this.sendDrguInfoWillachMachineOperationCompleted == null)) {
                this.sendDrguInfoWillachMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendDrguInfoWillachMachineOperationCompleted);
            }
            this.InvokeAsync("sendDrguInfoWillachMachine", new object[] {
                        arg0}, this.sendDrguInfoWillachMachineOperationCompleted, userState);
        }
        
        private void OnsendDrguInfoWillachMachineOperationCompleted(object arg) {
            if ((this.sendDrguInfoWillachMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendDrguInfoWillachMachineCompleted(this, new sendDrguInfoWillachMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.resolveXml.hrwms.org/", ResponseNamespace="http://service.resolveXml.hrwms.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string geStockQueryToWillach([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("geStockQueryToWillach", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void geStockQueryToWillachAsync(string arg0) {
            this.geStockQueryToWillachAsync(arg0, null);
        }
        
        /// <remarks/>
        public void geStockQueryToWillachAsync(string arg0, object userState) {
            if ((this.geStockQueryToWillachOperationCompleted == null)) {
                this.geStockQueryToWillachOperationCompleted = new System.Threading.SendOrPostCallback(this.OngeStockQueryToWillachOperationCompleted);
            }
            this.InvokeAsync("geStockQueryToWillach", new object[] {
                        arg0}, this.geStockQueryToWillachOperationCompleted, userState);
        }
        
        private void OngeStockQueryToWillachOperationCompleted(object arg) {
            if ((this.geStockQueryToWillachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.geStockQueryToWillachCompleted(this, new geStockQueryToWillachCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.resolveXml.hrwms.org/", ResponseNamespace="http://service.resolveXml.hrwms.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hisPrescPrint([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("hisPrescPrint", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void hisPrescPrintAsync(string arg0, string arg1) {
            this.hisPrescPrintAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void hisPrescPrintAsync(string arg0, string arg1, object userState) {
            if ((this.hisPrescPrintOperationCompleted == null)) {
                this.hisPrescPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhisPrescPrintOperationCompleted);
            }
            this.InvokeAsync("hisPrescPrint", new object[] {
                        arg0,
                        arg1}, this.hisPrescPrintOperationCompleted, userState);
        }
        
        private void OnhisPrescPrintOperationCompleted(object arg) {
            if ((this.hisPrescPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hisPrescPrintCompleted(this, new hisPrescPrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.resolveXml.hrwms.org/", ResponseNamespace="http://service.resolveXml.hrwms.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string drugStorage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("drugStorage", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void drugStorageAsync(string arg0) {
            this.drugStorageAsync(arg0, null);
        }
        
        /// <remarks/>
        public void drugStorageAsync(string arg0, object userState) {
            if ((this.drugStorageOperationCompleted == null)) {
                this.drugStorageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndrugStorageOperationCompleted);
            }
            this.InvokeAsync("drugStorage", new object[] {
                        arg0}, this.drugStorageOperationCompleted, userState);
        }
        
        private void OndrugStorageOperationCompleted(object arg) {
            if ((this.drugStorageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.drugStorageCompleted(this, new drugStorageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestElementName="getHisInfoToWillach", RequestNamespace="http://service.resolveXml.hrwms.org/", ResponseElementName="getHisInfoToWillachResponse", ResponseNamespace="http://service.resolveXml.hrwms.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CallgetHisInfoToWillach([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("CallgetHisInfoToWillach", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CallgetHisInfoToWillachAsync(string arg0) {
            this.CallgetHisInfoToWillachAsync(arg0, null);
        }
        
        /// <remarks/>
        public void CallgetHisInfoToWillachAsync(string arg0, object userState) {
            if ((this.CallgetHisInfoToWillachOperationCompleted == null)) {
                this.CallgetHisInfoToWillachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallgetHisInfoToWillachOperationCompleted);
            }
            this.InvokeAsync("CallgetHisInfoToWillach", new object[] {
                        arg0}, this.CallgetHisInfoToWillachOperationCompleted, userState);
        }
        
        private void OnCallgetHisInfoToWillachOperationCompleted(object arg) {
            if ((this.CallgetHisInfoToWillachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallgetHisInfoToWillachCompleted(this, new CallgetHisInfoToWillachCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.resolveXml.hrwms.org/", ResponseNamespace="http://service.resolveXml.hrwms.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TransHisData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("TransHisData", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransHisDataAsync(string arg0) {
            this.TransHisDataAsync(arg0, null);
        }
        
        /// <remarks/>
        public void TransHisDataAsync(string arg0, object userState) {
            if ((this.TransHisDataOperationCompleted == null)) {
                this.TransHisDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransHisDataOperationCompleted);
            }
            this.InvokeAsync("TransHisData", new object[] {
                        arg0}, this.TransHisDataOperationCompleted, userState);
        }
        
        private void OnTransHisDataOperationCompleted(object arg) {
            if ((this.TransHisDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransHisDataCompleted(this, new TransHisDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.resolveXml.hrwms.org/", ResponseNamespace="http://service.resolveXml.hrwms.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endSendMedToWillach([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("endSendMedToWillach", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void endSendMedToWillachAsync(string arg0) {
            this.endSendMedToWillachAsync(arg0, null);
        }
    
        protected override System.Net.WebRequest GetWebRequest(Uri uri)
        {
            HttpWebRequest webRequest = (HttpWebRequest)base.GetWebRequest(uri);
            webRequest.KeepAlive = false;
            webRequest.ProtocolVersion = HttpVersion.Version10;
            return webRequest;
        }
        
        /// <remarks/>
        public void endSendMedToWillachAsync(string arg0, object userState) {
            if ((this.endSendMedToWillachOperationCompleted == null)) {
                this.endSendMedToWillachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnendSendMedToWillachOperationCompleted);
            }
            this.InvokeAsync("endSendMedToWillach", new object[] {
                        arg0}, this.endSendMedToWillachOperationCompleted, userState);
        }
        
        private void OnendSendMedToWillachOperationCompleted(object arg) {
            if ((this.endSendMedToWillachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.endSendMedToWillachCompleted(this, new endSendMedToWillachCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.resolveXml.hrwms.org/", ResponseNamespace="http://service.resolveXml.hrwms.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sendMedToWillach([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("sendMedToWillach", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMedToWillachAsync(string arg0) {
            this.sendMedToWillachAsync(arg0, null);
        }
        
        /// <remarks/>
        public void sendMedToWillachAsync(string arg0, object userState) {
            if ((this.sendMedToWillachOperationCompleted == null)) {
                this.sendMedToWillachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMedToWillachOperationCompleted);
            }
            this.InvokeAsync("sendMedToWillach", new object[] {
                        arg0}, this.sendMedToWillachOperationCompleted, userState);
        }
        
        private void OnsendMedToWillachOperationCompleted(object arg) {
            if ((this.sendMedToWillachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMedToWillachCompleted(this, new sendMedToWillachCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void TransPrescSignDataCompletedEventHandler(object sender, TransPrescSignDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransPrescSignDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransPrescSignDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void sendDrguInfoWillachMachineCompletedEventHandler(object sender, sendDrguInfoWillachMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendDrguInfoWillachMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendDrguInfoWillachMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void geStockQueryToWillachCompletedEventHandler(object sender, geStockQueryToWillachCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class geStockQueryToWillachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal geStockQueryToWillachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void hisPrescPrintCompletedEventHandler(object sender, hisPrescPrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hisPrescPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal hisPrescPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void drugStorageCompletedEventHandler(object sender, drugStorageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class drugStorageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal drugStorageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CallgetHisInfoToWillachCompletedEventHandler(object sender, CallgetHisInfoToWillachCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallgetHisInfoToWillachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallgetHisInfoToWillachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void TransHisDataCompletedEventHandler(object sender, TransHisDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransHisDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransHisDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void endSendMedToWillachCompletedEventHandler(object sender, endSendMedToWillachCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class endSendMedToWillachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal endSendMedToWillachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void sendMedToWillachCompletedEventHandler(object sender, sendMedToWillachCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMedToWillachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMedToWillachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591