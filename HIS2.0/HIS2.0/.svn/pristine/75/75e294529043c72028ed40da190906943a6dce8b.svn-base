//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5477
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ts_mz_sf {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Ds_fp")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Ds_fp : global::System.Data.DataSet {
        
        private 发票明细DataTable table发票明细;
        
        private 项目明细DataTable table项目明细;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Ds_fp() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Ds_fp(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["发票明细"] != null)) {
                    base.Tables.Add(new 发票明细DataTable(ds.Tables["发票明细"]));
                }
                if ((ds.Tables["项目明细"] != null)) {
                    base.Tables.Add(new 项目明细DataTable(ds.Tables["项目明细"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 发票明细DataTable 发票明细 {
            get {
                return this.table发票明细;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 项目明细DataTable 项目明细 {
            get {
                return this.table项目明细;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Ds_fp cln = ((Ds_fp)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["发票明细"] != null)) {
                    base.Tables.Add(new 发票明细DataTable(ds.Tables["发票明细"]));
                }
                if ((ds.Tables["项目明细"] != null)) {
                    base.Tables.Add(new 项目明细DataTable(ds.Tables["项目明细"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table发票明细 = ((发票明细DataTable)(base.Tables["发票明细"]));
            if ((initTable == true)) {
                if ((this.table发票明细 != null)) {
                    this.table发票明细.InitVars();
                }
            }
            this.table项目明细 = ((项目明细DataTable)(base.Tables["项目明细"]));
            if ((initTable == true)) {
                if ((this.table项目明细 != null)) {
                    this.table项目明细.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Ds_fp";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Ds_fp.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table发票明细 = new 发票明细DataTable();
            base.Tables.Add(this.table发票明细);
            this.table项目明细 = new 项目明细DataTable();
            base.Tables.Add(this.table项目明细);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize发票明细() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize项目明细() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Ds_fp ds = new Ds_fp();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void 发票明细RowChangeEventHandler(object sender, 发票明细RowChangeEvent e);
        
        public delegate void 项目明细RowChangeEventHandler(object sender, 项目明细RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 发票明细DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnhjid;
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columnitem_name;
            
            private global::System.Data.DataColumn columnje;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发票明细DataTable() {
                this.TableName = "发票明细";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 发票明细DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 发票明细DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hjidColumn {
                get {
                    return this.columnhjid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn item_nameColumn {
                get {
                    return this.columnitem_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jeColumn {
                get {
                    return this.columnje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发票明细Row this[int index] {
                get {
                    return ((发票明细Row)(this.Rows[index]));
                }
            }
            
            public event 发票明细RowChangeEventHandler 发票明细RowChanging;
            
            public event 发票明细RowChangeEventHandler 发票明细RowChanged;
            
            public event 发票明细RowChangeEventHandler 发票明细RowDeleting;
            
            public event 发票明细RowChangeEventHandler 发票明细RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add发票明细Row(发票明细Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发票明细Row Add发票明细Row(string hjid, string code, string item_name, string je) {
                发票明细Row row发票明细Row = ((发票明细Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        hjid,
                        code,
                        item_name,
                        je};
                row发票明细Row.ItemArray = columnValuesArray;
                this.Rows.Add(row发票明细Row);
                return row发票明细Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                发票明细DataTable cln = ((发票明细DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 发票明细DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnhjid = base.Columns["hjid"];
                this.columncode = base.Columns["code"];
                this.columnitem_name = base.Columns["item_name"];
                this.columnje = base.Columns["je"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnhjid = new global::System.Data.DataColumn("hjid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhjid);
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columnitem_name = new global::System.Data.DataColumn("item_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitem_name);
                this.columnje = new global::System.Data.DataColumn("je", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnje);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发票明细Row New发票明细Row() {
                return ((发票明细Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 发票明细Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(发票明细Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.发票明细RowChanged != null)) {
                    this.发票明细RowChanged(this, new 发票明细RowChangeEvent(((发票明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.发票明细RowChanging != null)) {
                    this.发票明细RowChanging(this, new 发票明细RowChangeEvent(((发票明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.发票明细RowDeleted != null)) {
                    this.发票明细RowDeleted(this, new 发票明细RowChangeEvent(((发票明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.发票明细RowDeleting != null)) {
                    this.发票明细RowDeleting(this, new 发票明细RowChangeEvent(((发票明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove发票明细Row(发票明细Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Ds_fp ds = new Ds_fp();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "发票明细DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 项目明细DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnhjid;
            
            private global::System.Data.DataColumn columnYSDM;
            
            private global::System.Data.DataColumn columnKSDM;
            
            private global::System.Data.DataColumn columnZYKSDM;
            
            private global::System.Data.DataColumn columnZXKS;
            
            private global::System.Data.DataColumn columnTCID;
            
            private global::System.Data.DataColumn columnTJDXMDM;
            
            private global::System.Data.DataColumn columnXMID;
            
            private global::System.Data.DataColumn columnJE;
            
            private global::System.Data.DataColumn columnyhje;
            
            private global::System.Data.DataColumn columnxmly;
            
            private global::System.Data.DataColumn columnPM;
            
            private global::System.Data.DataColumn columnGG;
            
            private global::System.Data.DataColumn columnDJ;
            
            private global::System.Data.DataColumn columnSL;
            
            private global::System.Data.DataColumn columnDW;
            
            private global::System.Data.DataColumn columnJS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 项目明细DataTable() {
                this.TableName = "项目明细";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 项目明细DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 项目明细DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hjidColumn {
                get {
                    return this.columnhjid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YSDMColumn {
                get {
                    return this.columnYSDM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KSDMColumn {
                get {
                    return this.columnKSDM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZYKSDMColumn {
                get {
                    return this.columnZYKSDM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZXKSColumn {
                get {
                    return this.columnZXKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TCIDColumn {
                get {
                    return this.columnTCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TJDXMDMColumn {
                get {
                    return this.columnTJDXMDM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XMIDColumn {
                get {
                    return this.columnXMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JEColumn {
                get {
                    return this.columnJE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yhjeColumn {
                get {
                    return this.columnyhje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xmlyColumn {
                get {
                    return this.columnxmly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMColumn {
                get {
                    return this.columnPM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GGColumn {
                get {
                    return this.columnGG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DJColumn {
                get {
                    return this.columnDJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLColumn {
                get {
                    return this.columnSL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWColumn {
                get {
                    return this.columnDW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JSColumn {
                get {
                    return this.columnJS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 项目明细Row this[int index] {
                get {
                    return ((项目明细Row)(this.Rows[index]));
                }
            }
            
            public event 项目明细RowChangeEventHandler 项目明细RowChanging;
            
            public event 项目明细RowChangeEventHandler 项目明细RowChanged;
            
            public event 项目明细RowChangeEventHandler 项目明细RowDeleting;
            
            public event 项目明细RowChangeEventHandler 项目明细RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add项目明细Row(项目明细Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 项目明细Row Add项目明细Row(
                        string hjid, 
                        string YSDM, 
                        string KSDM, 
                        string ZYKSDM, 
                        string ZXKS, 
                        string TCID, 
                        string TJDXMDM, 
                        string XMID, 
                        string JE, 
                        string yhje, 
                        string xmly, 
                        string PM, 
                        string GG, 
                        string DJ, 
                        string SL, 
                        string DW, 
                        string JS) {
                项目明细Row row项目明细Row = ((项目明细Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        hjid,
                        YSDM,
                        KSDM,
                        ZYKSDM,
                        ZXKS,
                        TCID,
                        TJDXMDM,
                        XMID,
                        JE,
                        yhje,
                        xmly,
                        PM,
                        GG,
                        DJ,
                        SL,
                        DW,
                        JS};
                row项目明细Row.ItemArray = columnValuesArray;
                this.Rows.Add(row项目明细Row);
                return row项目明细Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                项目明细DataTable cln = ((项目明细DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 项目明细DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnhjid = base.Columns["hjid"];
                this.columnYSDM = base.Columns["YSDM"];
                this.columnKSDM = base.Columns["KSDM"];
                this.columnZYKSDM = base.Columns["ZYKSDM"];
                this.columnZXKS = base.Columns["ZXKS"];
                this.columnTCID = base.Columns["TCID"];
                this.columnTJDXMDM = base.Columns["TJDXMDM"];
                this.columnXMID = base.Columns["XMID"];
                this.columnJE = base.Columns["JE"];
                this.columnyhje = base.Columns["yhje"];
                this.columnxmly = base.Columns["xmly"];
                this.columnPM = base.Columns["PM"];
                this.columnGG = base.Columns["GG"];
                this.columnDJ = base.Columns["DJ"];
                this.columnSL = base.Columns["SL"];
                this.columnDW = base.Columns["DW"];
                this.columnJS = base.Columns["JS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnhjid = new global::System.Data.DataColumn("hjid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhjid);
                this.columnYSDM = new global::System.Data.DataColumn("YSDM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYSDM);
                this.columnKSDM = new global::System.Data.DataColumn("KSDM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKSDM);
                this.columnZYKSDM = new global::System.Data.DataColumn("ZYKSDM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZYKSDM);
                this.columnZXKS = new global::System.Data.DataColumn("ZXKS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZXKS);
                this.columnTCID = new global::System.Data.DataColumn("TCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCID);
                this.columnTJDXMDM = new global::System.Data.DataColumn("TJDXMDM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTJDXMDM);
                this.columnXMID = new global::System.Data.DataColumn("XMID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXMID);
                this.columnJE = new global::System.Data.DataColumn("JE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJE);
                this.columnyhje = new global::System.Data.DataColumn("yhje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyhje);
                this.columnxmly = new global::System.Data.DataColumn("xmly", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxmly);
                this.columnPM = new global::System.Data.DataColumn("PM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPM);
                this.columnGG = new global::System.Data.DataColumn("GG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGG);
                this.columnDJ = new global::System.Data.DataColumn("DJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDJ);
                this.columnSL = new global::System.Data.DataColumn("SL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSL);
                this.columnDW = new global::System.Data.DataColumn("DW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDW);
                this.columnJS = new global::System.Data.DataColumn("JS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJS);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 项目明细Row New项目明细Row() {
                return ((项目明细Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 项目明细Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(项目明细Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.项目明细RowChanged != null)) {
                    this.项目明细RowChanged(this, new 项目明细RowChangeEvent(((项目明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.项目明细RowChanging != null)) {
                    this.项目明细RowChanging(this, new 项目明细RowChangeEvent(((项目明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.项目明细RowDeleted != null)) {
                    this.项目明细RowDeleted(this, new 项目明细RowChangeEvent(((项目明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.项目明细RowDeleting != null)) {
                    this.项目明细RowDeleting(this, new 项目明细RowChangeEvent(((项目明细Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove项目明细Row(项目明细Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Ds_fp ds = new Ds_fp();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "项目明细DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 发票明细Row : global::System.Data.DataRow {
            
            private 发票明细DataTable table发票明细;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 发票明细Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table发票明细 = ((发票明细DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hjid {
                get {
                    try {
                        return ((string)(this[this.table发票明细.hjidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发票明细”中列“hjid”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发票明细.hjidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    try {
                        return ((string)(this[this.table发票明细.codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发票明细”中列“code”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发票明细.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string item_name {
                get {
                    try {
                        return ((string)(this[this.table发票明细.item_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发票明细”中列“item_name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发票明细.item_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string je {
                get {
                    try {
                        return ((string)(this[this.table发票明细.jeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“发票明细”中列“je”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发票明细.jeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshjidNull() {
                return this.IsNull(this.table发票明细.hjidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethjidNull() {
                this[this.table发票明细.hjidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodeNull() {
                return this.IsNull(this.table发票明细.codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodeNull() {
                this[this.table发票明细.codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isitem_nameNull() {
                return this.IsNull(this.table发票明细.item_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setitem_nameNull() {
                this[this.table发票明细.item_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjeNull() {
                return this.IsNull(this.table发票明细.jeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjeNull() {
                this[this.table发票明细.jeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 项目明细Row : global::System.Data.DataRow {
            
            private 项目明细DataTable table项目明细;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 项目明细Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table项目明细 = ((项目明细DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hjid {
                get {
                    try {
                        return ((string)(this[this.table项目明细.hjidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“hjid”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.hjidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YSDM {
                get {
                    try {
                        return ((string)(this[this.table项目明细.YSDMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“YSDM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.YSDMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KSDM {
                get {
                    try {
                        return ((string)(this[this.table项目明细.KSDMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“KSDM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.KSDMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZYKSDM {
                get {
                    try {
                        return ((string)(this[this.table项目明细.ZYKSDMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“ZYKSDM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.ZYKSDMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZXKS {
                get {
                    try {
                        return ((string)(this[this.table项目明细.ZXKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“ZXKS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.ZXKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TCID {
                get {
                    try {
                        return ((string)(this[this.table项目明细.TCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“TCID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.TCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TJDXMDM {
                get {
                    try {
                        return ((string)(this[this.table项目明细.TJDXMDMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“TJDXMDM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.TJDXMDMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XMID {
                get {
                    try {
                        return ((string)(this[this.table项目明细.XMIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“XMID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.XMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JE {
                get {
                    try {
                        return ((string)(this[this.table项目明细.JEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“JE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.JEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yhje {
                get {
                    try {
                        return ((string)(this[this.table项目明细.yhjeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“yhje”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.yhjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xmly {
                get {
                    try {
                        return ((string)(this[this.table项目明细.xmlyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“xmly”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.xmlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PM {
                get {
                    try {
                        return ((string)(this[this.table项目明细.PMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“PM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.PMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GG {
                get {
                    try {
                        return ((string)(this[this.table项目明细.GGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“GG”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.GGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DJ {
                get {
                    try {
                        return ((string)(this[this.table项目明细.DJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“DJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.DJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SL {
                get {
                    try {
                        return ((string)(this[this.table项目明细.SLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“SL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.SLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DW {
                get {
                    try {
                        return ((string)(this[this.table项目明细.DWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“DW”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.DWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JS {
                get {
                    try {
                        return ((string)(this[this.table项目明细.JSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“项目明细”中列“JS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table项目明细.JSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshjidNull() {
                return this.IsNull(this.table项目明细.hjidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethjidNull() {
                this[this.table项目明细.hjidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYSDMNull() {
                return this.IsNull(this.table项目明细.YSDMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYSDMNull() {
                this[this.table项目明细.YSDMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKSDMNull() {
                return this.IsNull(this.table项目明细.KSDMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKSDMNull() {
                this[this.table项目明细.KSDMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZYKSDMNull() {
                return this.IsNull(this.table项目明细.ZYKSDMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZYKSDMNull() {
                this[this.table项目明细.ZYKSDMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZXKSNull() {
                return this.IsNull(this.table项目明细.ZXKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZXKSNull() {
                this[this.table项目明细.ZXKSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTCIDNull() {
                return this.IsNull(this.table项目明细.TCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTCIDNull() {
                this[this.table项目明细.TCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTJDXMDMNull() {
                return this.IsNull(this.table项目明细.TJDXMDMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTJDXMDMNull() {
                this[this.table项目明细.TJDXMDMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXMIDNull() {
                return this.IsNull(this.table项目明细.XMIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXMIDNull() {
                this[this.table项目明细.XMIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJENull() {
                return this.IsNull(this.table项目明细.JEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJENull() {
                this[this.table项目明细.JEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyhjeNull() {
                return this.IsNull(this.table项目明细.yhjeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyhjeNull() {
                this[this.table项目明细.yhjeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxmlyNull() {
                return this.IsNull(this.table项目明细.xmlyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxmlyNull() {
                this[this.table项目明细.xmlyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPMNull() {
                return this.IsNull(this.table项目明细.PMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPMNull() {
                this[this.table项目明细.PMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGGNull() {
                return this.IsNull(this.table项目明细.GGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGGNull() {
                this[this.table项目明细.GGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDJNull() {
                return this.IsNull(this.table项目明细.DJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDJNull() {
                this[this.table项目明细.DJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLNull() {
                return this.IsNull(this.table项目明细.SLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLNull() {
                this[this.table项目明细.SLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNull() {
                return this.IsNull(this.table项目明细.DWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNull() {
                this[this.table项目明细.DWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJSNull() {
                return this.IsNull(this.table项目明细.JSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJSNull() {
                this[this.table项目明细.JSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 发票明细RowChangeEvent : global::System.EventArgs {
            
            private 发票明细Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发票明细RowChangeEvent(发票明细Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发票明细Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 项目明细RowChangeEvent : global::System.EventArgs {
            
            private 项目明细Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 项目明细RowChangeEvent(项目明细Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 项目明细Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591